

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed May 12 08:43:17 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1778
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK14,global,class=CODE,delta=2
     5                           	psect	idataBANK15,global,class=CODE,delta=2
     6                           	psect	idataBANK16,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	nvBANK14,global,class=BANK14,space=1,delta=1
    10                           	psect	nvBANK15,global,class=BANK15,space=1,delta=1
    11                           	psect	stringtext3,global,class=STRCODE,delta=2
    12                           	psect	stringtext4,global,class=STRCODE,delta=2
    13                           	psect	stringtext5,global,class=STRCODE,delta=2
    14                           	psect	stringtext6,global,class=STRCODE,delta=2
    15                           	psect	stringtext7,global,class=STRCODE,delta=2
    16                           	psect	stringtext8,global,class=STRCODE,delta=2
    17                           	psect	stringtext9,global,class=STRCODE,delta=2
    18                           	psect	stringtext10,global,class=STRCODE,delta=2
    19                           	psect	stringtext11,global,class=STRCODE,delta=2
    20                           	psect	stringtext12,global,class=STRCODE,delta=2
    21                           	psect	stringtext13,global,class=STRCODE,delta=2
    22                           	psect	stringtext14,global,class=STRCODE,delta=2
    23                           	psect	stringtext15,global,class=STRCODE,delta=2
    24                           	psect	cinit,global,class=CODE,merge=1,delta=2
    25                           	psect	bssBANK13,global,class=BANK13,space=1,delta=1
    26                           	psect	bssBANK14,global,class=BANK14,space=1,delta=1
    27                           	psect	dataBANK14,global,class=BANK14,space=1,delta=1
    28                           	psect	bssBANK15,global,class=BANK15,space=1,delta=1
    29                           	psect	dataBANK15,global,class=BANK15,space=1,delta=1
    30                           	psect	bssBANK16,global,class=BANK16,space=1,delta=1
    31                           	psect	dataBANK16,global,class=BANK16,space=1,delta=1
    32                           	psect	bssBANK17,global,class=BANK17,space=1,delta=1
    33                           	psect	inittext,global,class=CODE,delta=2
    34                           	psect	clrtext,global,class=CODE,delta=2
    35                           	psect	cstackBANK15,global,class=BANK15,space=1,delta=1
    36                           	psect	cstackBANK14,global,class=BANK14,space=1,delta=1
    37                           	psect	cstackBANK13,global,class=BANK13,space=1,delta=1
    38                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    39                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    40                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    41                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text2,local,class=CODE,merge=1,delta=2
    43                           	psect	text3,local,class=CODE,merge=1,delta=2
    44                           	psect	text4,local,class=CODE,merge=1,delta=2
    45                           	psect	text5,local,class=CODE,merge=1,delta=2
    46                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text13,local,class=CODE,merge=1,delta=2
    54                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    59                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    63                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    64                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text25,local,class=CODE,merge=1,delta=2
    66                           	psect	text26,local,class=CODE,merge=1,delta=2
    67                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    68                           	psect	text28,local,class=CODE,merge=1,delta=2
    69                           	psect	text29,local,class=CODE,merge=1,delta=2
    70                           	psect	text30,local,class=CODE,merge=1,delta=2
    71                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text32,local,class=CODE,merge=1,delta=2
    73                           	psect	text33,local,class=CODE,merge=1,delta=2
    74                           	psect	text34,local,class=CODE,merge=1,delta=2
    75                           	psect	text35,local,class=CODE,merge=1,delta=2
    76                           	psect	text36,local,class=CODE,merge=1,delta=2
    77                           	psect	text37,local,class=CODE,merge=1,delta=2
    78                           	psect	text38,local,class=CODE,merge=1,delta=2
    79                           	psect	text39,local,class=CODE,merge=1,delta=2
    80                           	psect	text40,local,class=CODE,merge=1,delta=2
    81                           	psect	text41,local,class=CODE,merge=1,delta=2
    82                           	psect	text42,local,class=CODE,merge=1,delta=2
    83                           	psect	text43,local,class=CODE,merge=1,delta=2
    84                           	psect	text44,local,class=CODE,merge=1,delta=2
    85                           	psect	text45,local,class=CODE,merge=1,delta=2
    86                           	psect	text46,local,class=CODE,merge=1,delta=2
    87                           	psect	text47,local,class=CODE,merge=1,delta=2
    88                           	psect	text48,local,class=CODE,merge=1,delta=2
    89                           	psect	text49,local,class=CODE,merge=1,delta=2
    90                           	psect	text50,local,class=CODE,merge=1,delta=2
    91                           	psect	text51,local,class=CODE,merge=1,delta=2
    92                           	psect	text52,local,class=CODE,merge=1,delta=2
    93                           	psect	text53,local,class=CODE,merge=1,delta=2
    94                           	psect	text54,local,class=CODE,merge=1,delta=2
    95                           	psect	text55,local,class=CODE,merge=1,delta=2
    96                           	psect	text56,local,class=CODE,merge=1,delta=2
    97                           	psect	text57,local,class=CODE,merge=1,delta=2
    98                           	psect	intentry,global,class=CODE,delta=2
    99                           	psect	text59,local,class=CODE,merge=1,delta=2
   100                           	psect	text60,local,class=CODE,merge=1,delta=2
   101                           	psect	text61,local,class=CODE,merge=1,delta=2
   102                           	psect	text62,local,class=CODE,merge=1,delta=2
   103                           	psect	maintext_split_1,global,class=CODE,merge=1,split=1,delta=2
   104                           	psect	maintext_split_2,global,class=CODE,merge=1,split=1,delta=2
   105                           	dabs	1,0x620,48
   106                           	dabs	1,0x5A0,80
   107                           	dabs	1,0x520,80
   108                           	dabs	1,0x4A0,80
   109                           	dabs	1,0x420,80
   110                           	dabs	1,0x3A0,80
   111                           	dabs	1,0x320,80
   112                           	dabs	1,0x2A0,80
   113                           	dabs	1,0x220,80
   114                           	dabs	1,0x1A0,80
   115                           	dabs	1,0x120,80
   116                           	dabs	1,0xA0,80
   117                           	dabs	1,0x20,80
   118                           	dabs	1,0x2000,0,_buffer
   119                           	dabs	1,0x7E,2
   120  0000                     
   121                           ; Version 2.10
   122                           ; Generated 31/07/2019 GMT
   123                           ; 
   124                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   125                           ; All rights reserved.
   126                           ; 
   127                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   128                           ; 
   129                           ; Redistribution and use in source and binary forms, with or without modification, are
   130                           ; permitted provided that the following conditions are met:
   131                           ; 
   132                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   133                           ;        conditions and the following disclaimer.
   134                           ; 
   135                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   136                           ;        of conditions and the following disclaimer in the documentation and/or other
   137                           ;        materials provided with the distribution.
   138                           ; 
   139                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   140                           ;        software without specific prior written permission.
   141                           ; 
   142                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   143                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   144                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   145                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   146                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   147                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   148                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   149                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   150                           ; 
   151                           ; 
   152                           ; Code-generator required, PIC16F1778 Definitions
   153                           ; 
   154                           ; SFR Addresses
   155  0000                     	;# 
   156  0001                     	;# 
   157  0002                     	;# 
   158  0003                     	;# 
   159  0004                     	;# 
   160  0005                     	;# 
   161  0006                     	;# 
   162  0007                     	;# 
   163  0008                     	;# 
   164  0009                     	;# 
   165  000A                     	;# 
   166  000B                     	;# 
   167  000C                     	;# 
   168  000D                     	;# 
   169  000E                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0014                     	;# 
   175  0015                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001B                     	;# 
   183  001C                     	;# 
   184  001C                     	;# 
   185  001D                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  0090                     	;# 
   192  0091                     	;# 
   193  0092                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  0111                     	;# 
   211  0112                     	;# 
   212  0113                     	;# 
   213  0114                     	;# 
   214  0115                     	;# 
   215  0116                     	;# 
   216  0117                     	;# 
   217  0118                     	;# 
   218  0119                     	;# 
   219  011A                     	;# 
   220  011B                     	;# 
   221  011C                     	;# 
   222  011D                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225  018E                     	;# 
   226  0191                     	;# 
   227  0191                     	;# 
   228  0192                     	;# 
   229  0193                     	;# 
   230  0193                     	;# 
   231  0194                     	;# 
   232  0195                     	;# 
   233  0196                     	;# 
   234  0197                     	;# 
   235  0199                     	;# 
   236  0199                     	;# 
   237  0199                     	;# 
   238  019A                     	;# 
   239  019A                     	;# 
   240  019A                     	;# 
   241  019B                     	;# 
   242  019B                     	;# 
   243  019B                     	;# 
   244  019B                     	;# 
   245  019B                     	;# 
   246  019C                     	;# 
   247  019C                     	;# 
   248  019C                     	;# 
   249  019D                     	;# 
   250  019D                     	;# 
   251  019D                     	;# 
   252  019E                     	;# 
   253  019E                     	;# 
   254  019E                     	;# 
   255  019F                     	;# 
   256  019F                     	;# 
   257  019F                     	;# 
   258  019F                     	;# 
   259  019F                     	;# 
   260  020C                     	;# 
   261  020D                     	;# 
   262  020E                     	;# 
   263  0210                     	;# 
   264  0211                     	;# 
   265  0211                     	;# 
   266  0212                     	;# 
   267  0212                     	;# 
   268  0213                     	;# 
   269  0213                     	;# 
   270  0214                     	;# 
   271  0214                     	;# 
   272  0215                     	;# 
   273  0215                     	;# 
   274  0215                     	;# 
   275  0215                     	;# 
   276  0216                     	;# 
   277  0216                     	;# 
   278  0217                     	;# 
   279  0217                     	;# 
   280  021B                     	;# 
   281  021C                     	;# 
   282  021D                     	;# 
   283  021E                     	;# 
   284  021F                     	;# 
   285  028C                     	;# 
   286  028D                     	;# 
   287  028E                     	;# 
   288  0291                     	;# 
   289  0291                     	;# 
   290  0292                     	;# 
   291  0293                     	;# 
   292  0294                     	;# 
   293  0295                     	;# 
   294  0295                     	;# 
   295  0296                     	;# 
   296  0297                     	;# 
   297  0298                     	;# 
   298  0299                     	;# 
   299  0299                     	;# 
   300  029A                     	;# 
   301  029B                     	;# 
   302  029C                     	;# 
   303  029E                     	;# 
   304  029F                     	;# 
   305  030C                     	;# 
   306  030D                     	;# 
   307  030E                     	;# 
   308  0315                     	;# 
   309  0316                     	;# 
   310  0317                     	;# 
   311  0318                     	;# 
   312  0319                     	;# 
   313  031B                     	;# 
   314  031C                     	;# 
   315  031D                     	;# 
   316  031E                     	;# 
   317  031F                     	;# 
   318  038C                     	;# 
   319  038D                     	;# 
   320  038E                     	;# 
   321  0390                     	;# 
   322  0391                     	;# 
   323  0392                     	;# 
   324  0393                     	;# 
   325  0394                     	;# 
   326  0395                     	;# 
   327  0396                     	;# 
   328  0397                     	;# 
   329  0398                     	;# 
   330  0399                     	;# 
   331  039D                     	;# 
   332  039E                     	;# 
   333  039F                     	;# 
   334  040D                     	;# 
   335  040F                     	;# 
   336  040F                     	;# 
   337  0410                     	;# 
   338  0411                     	;# 
   339  0412                     	;# 
   340  0413                     	;# 
   341  0413                     	;# 
   342  0414                     	;# 
   343  0414                     	;# 
   344  0415                     	;# 
   345  0416                     	;# 
   346  0417                     	;# 
   347  0418                     	;# 
   348  041A                     	;# 
   349  041A                     	;# 
   350  041B                     	;# 
   351  041B                     	;# 
   352  041C                     	;# 
   353  041D                     	;# 
   354  041E                     	;# 
   355  041F                     	;# 
   356  048E                     	;# 
   357  048E                     	;# 
   358  048F                     	;# 
   359  0490                     	;# 
   360  0491                     	;# 
   361  0492                     	;# 
   362  0493                     	;# 
   363  0493                     	;# 
   364  0494                     	;# 
   365  0494                     	;# 
   366  0495                     	;# 
   367  0496                     	;# 
   368  0497                     	;# 
   369  0498                     	;# 
   370  049A                     	;# 
   371  049A                     	;# 
   372  049B                     	;# 
   373  049B                     	;# 
   374  049C                     	;# 
   375  049D                     	;# 
   376  049E                     	;# 
   377  049F                     	;# 
   378  050F                     	;# 
   379  0510                     	;# 
   380  0511                     	;# 
   381  0512                     	;# 
   382  0513                     	;# 
   383  0514                     	;# 
   384  0515                     	;# 
   385  0516                     	;# 
   386  0517                     	;# 
   387  0518                     	;# 
   388  0519                     	;# 
   389  051A                     	;# 
   390  058D                     	;# 
   391  058E                     	;# 
   392  058F                     	;# 
   393  058F                     	;# 
   394  058F                     	;# 
   395  0590                     	;# 
   396  0590                     	;# 
   397  0591                     	;# 
   398  0592                     	;# 
   399  0592                     	;# 
   400  0592                     	;# 
   401  0593                     	;# 
   402  0593                     	;# 
   403  0594                     	;# 
   404  0595                     	;# 
   405  0595                     	;# 
   406  0596                     	;# 
   407  0597                     	;# 
   408  0597                     	;# 
   409  0598                     	;# 
   410  0599                     	;# 
   411  0599                     	;# 
   412  0599                     	;# 
   413  059A                     	;# 
   414  059A                     	;# 
   415  059E                     	;# 
   416  059F                     	;# 
   417  059F                     	;# 
   418  0614                     	;# 
   419  0614                     	;# 
   420  0615                     	;# 
   421  0616                     	;# 
   422  0617                     	;# 
   423  0617                     	;# 
   424  0618                     	;# 
   425  0619                     	;# 
   426  061A                     	;# 
   427  061A                     	;# 
   428  061B                     	;# 
   429  061C                     	;# 
   430  068D                     	;# 
   431  068E                     	;# 
   432  068F                     	;# 
   433  0690                     	;# 
   434  0691                     	;# 
   435  0692                     	;# 
   436  0693                     	;# 
   437  0694                     	;# 
   438  0695                     	;# 
   439  0696                     	;# 
   440  0697                     	;# 
   441  0698                     	;# 
   442  0699                     	;# 
   443  069A                     	;# 
   444  069B                     	;# 
   445  069C                     	;# 
   446  069D                     	;# 
   447  069E                     	;# 
   448  069F                     	;# 
   449  070D                     	;# 
   450  070E                     	;# 
   451  070F                     	;# 
   452  0710                     	;# 
   453  0711                     	;# 
   454  0712                     	;# 
   455  0713                     	;# 
   456  0714                     	;# 
   457  0715                     	;# 
   458  0716                     	;# 
   459  0717                     	;# 
   460  0718                     	;# 
   461  0719                     	;# 
   462  071A                     	;# 
   463  071B                     	;# 
   464  071C                     	;# 
   465  071D                     	;# 
   466  071E                     	;# 
   467  071F                     	;# 
   468  078E                     	;# 
   469  078F                     	;# 
   470  0790                     	;# 
   471  0791                     	;# 
   472  0792                     	;# 
   473  0793                     	;# 
   474  0794                     	;# 
   475  0795                     	;# 
   476  0796                     	;# 
   477  0797                     	;# 
   478  0798                     	;# 
   479  0799                     	;# 
   480  079A                     	;# 
   481  079B                     	;# 
   482  079C                     	;# 
   483  079D                     	;# 
   484  079E                     	;# 
   485  079F                     	;# 
   486  080D                     	;# 
   487  080E                     	;# 
   488  080F                     	;# 
   489  0810                     	;# 
   490  0811                     	;# 
   491  0812                     	;# 
   492  0813                     	;# 
   493  0814                     	;# 
   494  0815                     	;# 
   495  0816                     	;# 
   496  0817                     	;# 
   497  0818                     	;# 
   498  0819                     	;# 
   499  081A                     	;# 
   500  081B                     	;# 
   501  081C                     	;# 
   502  081D                     	;# 
   503  081E                     	;# 
   504  081F                     	;# 
   505  090C                     	;# 
   506  090D                     	;# 
   507  090E                     	;# 
   508  090F                     	;# 
   509  0910                     	;# 
   510  0911                     	;# 
   511  0912                     	;# 
   512  0913                     	;# 
   513  0914                     	;# 
   514  0915                     	;# 
   515  0916                     	;# 
   516  0917                     	;# 
   517  0D8E                     	;# 
   518  0D8F                     	;# 
   519  0D90                     	;# 
   520  0D91                     	;# 
   521  0D91                     	;# 
   522  0D92                     	;# 
   523  0D93                     	;# 
   524  0D93                     	;# 
   525  0D94                     	;# 
   526  0D95                     	;# 
   527  0D95                     	;# 
   528  0D96                     	;# 
   529  0D97                     	;# 
   530  0D97                     	;# 
   531  0D98                     	;# 
   532  0D99                     	;# 
   533  0D99                     	;# 
   534  0D9A                     	;# 
   535  0D9B                     	;# 
   536  0D9C                     	;# 
   537  0D9C                     	;# 
   538  0D9D                     	;# 
   539  0D9D                     	;# 
   540  0D9E                     	;# 
   541  0D9F                     	;# 
   542  0DA0                     	;# 
   543  0DA1                     	;# 
   544  0DA1                     	;# 
   545  0DA2                     	;# 
   546  0DA3                     	;# 
   547  0DA3                     	;# 
   548  0DA4                     	;# 
   549  0DA5                     	;# 
   550  0DA5                     	;# 
   551  0DA6                     	;# 
   552  0DA7                     	;# 
   553  0DA7                     	;# 
   554  0DA8                     	;# 
   555  0DA9                     	;# 
   556  0DA9                     	;# 
   557  0DAA                     	;# 
   558  0DAB                     	;# 
   559  0DAC                     	;# 
   560  0DAC                     	;# 
   561  0DAD                     	;# 
   562  0DAD                     	;# 
   563  0DAE                     	;# 
   564  0DAF                     	;# 
   565  0DB0                     	;# 
   566  0DB1                     	;# 
   567  0DB1                     	;# 
   568  0DB2                     	;# 
   569  0DB3                     	;# 
   570  0DB3                     	;# 
   571  0DB4                     	;# 
   572  0DB5                     	;# 
   573  0DB5                     	;# 
   574  0DB6                     	;# 
   575  0DB7                     	;# 
   576  0DB7                     	;# 
   577  0DB8                     	;# 
   578  0DB9                     	;# 
   579  0DB9                     	;# 
   580  0DBA                     	;# 
   581  0DBB                     	;# 
   582  0DBC                     	;# 
   583  0DBC                     	;# 
   584  0DBD                     	;# 
   585  0DBD                     	;# 
   586  0DBE                     	;# 
   587  0DBF                     	;# 
   588  0DC0                     	;# 
   589  0E0C                     	;# 
   590  0E0D                     	;# 
   591  0E0E                     	;# 
   592  0E0F                     	;# 
   593  0E10                     	;# 
   594  0E11                     	;# 
   595  0E12                     	;# 
   596  0E13                     	;# 
   597  0E14                     	;# 
   598  0E15                     	;# 
   599  0E15                     	;# 
   600  0E15                     	;# 
   601  0E16                     	;# 
   602  0E16                     	;# 
   603  0E16                     	;# 
   604  0E17                     	;# 
   605  0E17                     	;# 
   606  0E17                     	;# 
   607  0E18                     	;# 
   608  0E18                     	;# 
   609  0E18                     	;# 
   610  0E19                     	;# 
   611  0E1A                     	;# 
   612  0E1B                     	;# 
   613  0E1D                     	;# 
   614  0E1E                     	;# 
   615  0E1F                     	;# 
   616  0E21                     	;# 
   617  0E22                     	;# 
   618  0E23                     	;# 
   619  0E24                     	;# 
   620  0E25                     	;# 
   621  0E26                     	;# 
   622  0E27                     	;# 
   623  0E28                     	;# 
   624  0E29                     	;# 
   625  0E2D                     	;# 
   626  0E2E                     	;# 
   627  0E2F                     	;# 
   628  0E30                     	;# 
   629  0E31                     	;# 
   630  0E32                     	;# 
   631  0E35                     	;# 
   632  0E36                     	;# 
   633  0E37                     	;# 
   634  0E38                     	;# 
   635  0E39                     	;# 
   636  0E3A                     	;# 
   637  0E3B                     	;# 
   638  0E3C                     	;# 
   639  0E3D                     	;# 
   640  0E3E                     	;# 
   641  0E90                     	;# 
   642  0E91                     	;# 
   643  0E92                     	;# 
   644  0E93                     	;# 
   645  0E94                     	;# 
   646  0E95                     	;# 
   647  0E96                     	;# 
   648  0E97                     	;# 
   649  0E98                     	;# 
   650  0E99                     	;# 
   651  0E9A                     	;# 
   652  0E9B                     	;# 
   653  0E9C                     	;# 
   654  0E9D                     	;# 
   655  0E9E                     	;# 
   656  0E9F                     	;# 
   657  0EA0                     	;# 
   658  0EA1                     	;# 
   659  0EA2                     	;# 
   660  0EA3                     	;# 
   661  0EA4                     	;# 
   662  0EA5                     	;# 
   663  0EA6                     	;# 
   664  0EA7                     	;# 
   665  0F0F                     	;# 
   666  0F10                     	;# 
   667  0F11                     	;# 
   668  0F12                     	;# 
   669  0F13                     	;# 
   670  0F14                     	;# 
   671  0F15                     	;# 
   672  0F16                     	;# 
   673  0F17                     	;# 
   674  0F18                     	;# 
   675  0F19                     	;# 
   676  0F1A                     	;# 
   677  0F1B                     	;# 
   678  0F1C                     	;# 
   679  0F1D                     	;# 
   680  0F1E                     	;# 
   681  0F1F                     	;# 
   682  0F20                     	;# 
   683  0F21                     	;# 
   684  0F22                     	;# 
   685  0F23                     	;# 
   686  0F24                     	;# 
   687  0F25                     	;# 
   688  0F26                     	;# 
   689  0F27                     	;# 
   690  0F28                     	;# 
   691  0F29                     	;# 
   692  0F2A                     	;# 
   693  0F2B                     	;# 
   694  0F2C                     	;# 
   695  0F2D                     	;# 
   696  0F2E                     	;# 
   697  0F2F                     	;# 
   698  0F30                     	;# 
   699  0F31                     	;# 
   700  0F32                     	;# 
   701  0F33                     	;# 
   702  0F34                     	;# 
   703  0F35                     	;# 
   704  0F36                     	;# 
   705  0F37                     	;# 
   706  0FE4                     	;# 
   707  0FE5                     	;# 
   708  0FE6                     	;# 
   709  0FE7                     	;# 
   710  0FE8                     	;# 
   711  0FE9                     	;# 
   712  0FEA                     	;# 
   713  0FEB                     	;# 
   714  0FED                     	;# 
   715  0FEE                     	;# 
   716  0FEF                     	;# 
   717  0000                     	;# 
   718  0001                     	;# 
   719  0002                     	;# 
   720  0003                     	;# 
   721  0004                     	;# 
   722  0005                     	;# 
   723  0006                     	;# 
   724  0007                     	;# 
   725  0008                     	;# 
   726  0009                     	;# 
   727  000A                     	;# 
   728  000B                     	;# 
   729  000C                     	;# 
   730  000D                     	;# 
   731  000E                     	;# 
   732  0010                     	;# 
   733  0011                     	;# 
   734  0012                     	;# 
   735  0013                     	;# 
   736  0014                     	;# 
   737  0015                     	;# 
   738  0016                     	;# 
   739  0017                     	;# 
   740  0018                     	;# 
   741  0018                     	;# 
   742  0019                     	;# 
   743  001A                     	;# 
   744  001B                     	;# 
   745  001C                     	;# 
   746  001C                     	;# 
   747  001D                     	;# 
   748  001E                     	;# 
   749  001F                     	;# 
   750  008C                     	;# 
   751  008D                     	;# 
   752  008E                     	;# 
   753  0090                     	;# 
   754  0091                     	;# 
   755  0092                     	;# 
   756  0093                     	;# 
   757  0094                     	;# 
   758  0095                     	;# 
   759  0096                     	;# 
   760  0097                     	;# 
   761  0098                     	;# 
   762  0099                     	;# 
   763  009A                     	;# 
   764  009B                     	;# 
   765  009C                     	;# 
   766  009D                     	;# 
   767  009E                     	;# 
   768  009F                     	;# 
   769  010C                     	;# 
   770  010D                     	;# 
   771  010E                     	;# 
   772  0111                     	;# 
   773  0112                     	;# 
   774  0113                     	;# 
   775  0114                     	;# 
   776  0115                     	;# 
   777  0116                     	;# 
   778  0117                     	;# 
   779  0118                     	;# 
   780  0119                     	;# 
   781  011A                     	;# 
   782  011B                     	;# 
   783  011C                     	;# 
   784  011D                     	;# 
   785  018C                     	;# 
   786  018D                     	;# 
   787  018E                     	;# 
   788  0191                     	;# 
   789  0191                     	;# 
   790  0192                     	;# 
   791  0193                     	;# 
   792  0193                     	;# 
   793  0194                     	;# 
   794  0195                     	;# 
   795  0196                     	;# 
   796  0197                     	;# 
   797  0199                     	;# 
   798  0199                     	;# 
   799  0199                     	;# 
   800  019A                     	;# 
   801  019A                     	;# 
   802  019A                     	;# 
   803  019B                     	;# 
   804  019B                     	;# 
   805  019B                     	;# 
   806  019B                     	;# 
   807  019B                     	;# 
   808  019C                     	;# 
   809  019C                     	;# 
   810  019C                     	;# 
   811  019D                     	;# 
   812  019D                     	;# 
   813  019D                     	;# 
   814  019E                     	;# 
   815  019E                     	;# 
   816  019E                     	;# 
   817  019F                     	;# 
   818  019F                     	;# 
   819  019F                     	;# 
   820  019F                     	;# 
   821  019F                     	;# 
   822  020C                     	;# 
   823  020D                     	;# 
   824  020E                     	;# 
   825  0210                     	;# 
   826  0211                     	;# 
   827  0211                     	;# 
   828  0212                     	;# 
   829  0212                     	;# 
   830  0213                     	;# 
   831  0213                     	;# 
   832  0214                     	;# 
   833  0214                     	;# 
   834  0215                     	;# 
   835  0215                     	;# 
   836  0215                     	;# 
   837  0215                     	;# 
   838  0216                     	;# 
   839  0216                     	;# 
   840  0217                     	;# 
   841  0217                     	;# 
   842  021B                     	;# 
   843  021C                     	;# 
   844  021D                     	;# 
   845  021E                     	;# 
   846  021F                     	;# 
   847  028C                     	;# 
   848  028D                     	;# 
   849  028E                     	;# 
   850  0291                     	;# 
   851  0291                     	;# 
   852  0292                     	;# 
   853  0293                     	;# 
   854  0294                     	;# 
   855  0295                     	;# 
   856  0295                     	;# 
   857  0296                     	;# 
   858  0297                     	;# 
   859  0298                     	;# 
   860  0299                     	;# 
   861  0299                     	;# 
   862  029A                     	;# 
   863  029B                     	;# 
   864  029C                     	;# 
   865  029E                     	;# 
   866  029F                     	;# 
   867  030C                     	;# 
   868  030D                     	;# 
   869  030E                     	;# 
   870  0315                     	;# 
   871  0316                     	;# 
   872  0317                     	;# 
   873  0318                     	;# 
   874  0319                     	;# 
   875  031B                     	;# 
   876  031C                     	;# 
   877  031D                     	;# 
   878  031E                     	;# 
   879  031F                     	;# 
   880  038C                     	;# 
   881  038D                     	;# 
   882  038E                     	;# 
   883  0390                     	;# 
   884  0391                     	;# 
   885  0392                     	;# 
   886  0393                     	;# 
   887  0394                     	;# 
   888  0395                     	;# 
   889  0396                     	;# 
   890  0397                     	;# 
   891  0398                     	;# 
   892  0399                     	;# 
   893  039D                     	;# 
   894  039E                     	;# 
   895  039F                     	;# 
   896  040D                     	;# 
   897  040F                     	;# 
   898  040F                     	;# 
   899  0410                     	;# 
   900  0411                     	;# 
   901  0412                     	;# 
   902  0413                     	;# 
   903  0413                     	;# 
   904  0414                     	;# 
   905  0414                     	;# 
   906  0415                     	;# 
   907  0416                     	;# 
   908  0417                     	;# 
   909  0418                     	;# 
   910  041A                     	;# 
   911  041A                     	;# 
   912  041B                     	;# 
   913  041B                     	;# 
   914  041C                     	;# 
   915  041D                     	;# 
   916  041E                     	;# 
   917  041F                     	;# 
   918  048E                     	;# 
   919  048E                     	;# 
   920  048F                     	;# 
   921  0490                     	;# 
   922  0491                     	;# 
   923  0492                     	;# 
   924  0493                     	;# 
   925  0493                     	;# 
   926  0494                     	;# 
   927  0494                     	;# 
   928  0495                     	;# 
   929  0496                     	;# 
   930  0497                     	;# 
   931  0498                     	;# 
   932  049A                     	;# 
   933  049A                     	;# 
   934  049B                     	;# 
   935  049B                     	;# 
   936  049C                     	;# 
   937  049D                     	;# 
   938  049E                     	;# 
   939  049F                     	;# 
   940  050F                     	;# 
   941  0510                     	;# 
   942  0511                     	;# 
   943  0512                     	;# 
   944  0513                     	;# 
   945  0514                     	;# 
   946  0515                     	;# 
   947  0516                     	;# 
   948  0517                     	;# 
   949  0518                     	;# 
   950  0519                     	;# 
   951  051A                     	;# 
   952  058D                     	;# 
   953  058E                     	;# 
   954  058F                     	;# 
   955  058F                     	;# 
   956  058F                     	;# 
   957  0590                     	;# 
   958  0590                     	;# 
   959  0591                     	;# 
   960  0592                     	;# 
   961  0592                     	;# 
   962  0592                     	;# 
   963  0593                     	;# 
   964  0593                     	;# 
   965  0594                     	;# 
   966  0595                     	;# 
   967  0595                     	;# 
   968  0596                     	;# 
   969  0597                     	;# 
   970  0597                     	;# 
   971  0598                     	;# 
   972  0599                     	;# 
   973  0599                     	;# 
   974  0599                     	;# 
   975  059A                     	;# 
   976  059A                     	;# 
   977  059E                     	;# 
   978  059F                     	;# 
   979  059F                     	;# 
   980  0614                     	;# 
   981  0614                     	;# 
   982  0615                     	;# 
   983  0616                     	;# 
   984  0617                     	;# 
   985  0617                     	;# 
   986  0618                     	;# 
   987  0619                     	;# 
   988  061A                     	;# 
   989  061A                     	;# 
   990  061B                     	;# 
   991  061C                     	;# 
   992  068D                     	;# 
   993  068E                     	;# 
   994  068F                     	;# 
   995  0690                     	;# 
   996  0691                     	;# 
   997  0692                     	;# 
   998  0693                     	;# 
   999  0694                     	;# 
  1000  0695                     	;# 
  1001  0696                     	;# 
  1002  0697                     	;# 
  1003  0698                     	;# 
  1004  0699                     	;# 
  1005  069A                     	;# 
  1006  069B                     	;# 
  1007  069C                     	;# 
  1008  069D                     	;# 
  1009  069E                     	;# 
  1010  069F                     	;# 
  1011  070D                     	;# 
  1012  070E                     	;# 
  1013  070F                     	;# 
  1014  0710                     	;# 
  1015  0711                     	;# 
  1016  0712                     	;# 
  1017  0713                     	;# 
  1018  0714                     	;# 
  1019  0715                     	;# 
  1020  0716                     	;# 
  1021  0717                     	;# 
  1022  0718                     	;# 
  1023  0719                     	;# 
  1024  071A                     	;# 
  1025  071B                     	;# 
  1026  071C                     	;# 
  1027  071D                     	;# 
  1028  071E                     	;# 
  1029  071F                     	;# 
  1030  078E                     	;# 
  1031  078F                     	;# 
  1032  0790                     	;# 
  1033  0791                     	;# 
  1034  0792                     	;# 
  1035  0793                     	;# 
  1036  0794                     	;# 
  1037  0795                     	;# 
  1038  0796                     	;# 
  1039  0797                     	;# 
  1040  0798                     	;# 
  1041  0799                     	;# 
  1042  079A                     	;# 
  1043  079B                     	;# 
  1044  079C                     	;# 
  1045  079D                     	;# 
  1046  079E                     	;# 
  1047  079F                     	;# 
  1048  080D                     	;# 
  1049  080E                     	;# 
  1050  080F                     	;# 
  1051  0810                     	;# 
  1052  0811                     	;# 
  1053  0812                     	;# 
  1054  0813                     	;# 
  1055  0814                     	;# 
  1056  0815                     	;# 
  1057  0816                     	;# 
  1058  0817                     	;# 
  1059  0818                     	;# 
  1060  0819                     	;# 
  1061  081A                     	;# 
  1062  081B                     	;# 
  1063  081C                     	;# 
  1064  081D                     	;# 
  1065  081E                     	;# 
  1066  081F                     	;# 
  1067  090C                     	;# 
  1068  090D                     	;# 
  1069  090E                     	;# 
  1070  090F                     	;# 
  1071  0910                     	;# 
  1072  0911                     	;# 
  1073  0912                     	;# 
  1074  0913                     	;# 
  1075  0914                     	;# 
  1076  0915                     	;# 
  1077  0916                     	;# 
  1078  0917                     	;# 
  1079  0D8E                     	;# 
  1080  0D8F                     	;# 
  1081  0D90                     	;# 
  1082  0D91                     	;# 
  1083  0D91                     	;# 
  1084  0D92                     	;# 
  1085  0D93                     	;# 
  1086  0D93                     	;# 
  1087  0D94                     	;# 
  1088  0D95                     	;# 
  1089  0D95                     	;# 
  1090  0D96                     	;# 
  1091  0D97                     	;# 
  1092  0D97                     	;# 
  1093  0D98                     	;# 
  1094  0D99                     	;# 
  1095  0D99                     	;# 
  1096  0D9A                     	;# 
  1097  0D9B                     	;# 
  1098  0D9C                     	;# 
  1099  0D9C                     	;# 
  1100  0D9D                     	;# 
  1101  0D9D                     	;# 
  1102  0D9E                     	;# 
  1103  0D9F                     	;# 
  1104  0DA0                     	;# 
  1105  0DA1                     	;# 
  1106  0DA1                     	;# 
  1107  0DA2                     	;# 
  1108  0DA3                     	;# 
  1109  0DA3                     	;# 
  1110  0DA4                     	;# 
  1111  0DA5                     	;# 
  1112  0DA5                     	;# 
  1113  0DA6                     	;# 
  1114  0DA7                     	;# 
  1115  0DA7                     	;# 
  1116  0DA8                     	;# 
  1117  0DA9                     	;# 
  1118  0DA9                     	;# 
  1119  0DAA                     	;# 
  1120  0DAB                     	;# 
  1121  0DAC                     	;# 
  1122  0DAC                     	;# 
  1123  0DAD                     	;# 
  1124  0DAD                     	;# 
  1125  0DAE                     	;# 
  1126  0DAF                     	;# 
  1127  0DB0                     	;# 
  1128  0DB1                     	;# 
  1129  0DB1                     	;# 
  1130  0DB2                     	;# 
  1131  0DB3                     	;# 
  1132  0DB3                     	;# 
  1133  0DB4                     	;# 
  1134  0DB5                     	;# 
  1135  0DB5                     	;# 
  1136  0DB6                     	;# 
  1137  0DB7                     	;# 
  1138  0DB7                     	;# 
  1139  0DB8                     	;# 
  1140  0DB9                     	;# 
  1141  0DB9                     	;# 
  1142  0DBA                     	;# 
  1143  0DBB                     	;# 
  1144  0DBC                     	;# 
  1145  0DBC                     	;# 
  1146  0DBD                     	;# 
  1147  0DBD                     	;# 
  1148  0DBE                     	;# 
  1149  0DBF                     	;# 
  1150  0DC0                     	;# 
  1151  0E0C                     	;# 
  1152  0E0D                     	;# 
  1153  0E0E                     	;# 
  1154  0E0F                     	;# 
  1155  0E10                     	;# 
  1156  0E11                     	;# 
  1157  0E12                     	;# 
  1158  0E13                     	;# 
  1159  0E14                     	;# 
  1160  0E15                     	;# 
  1161  0E15                     	;# 
  1162  0E15                     	;# 
  1163  0E16                     	;# 
  1164  0E16                     	;# 
  1165  0E16                     	;# 
  1166  0E17                     	;# 
  1167  0E17                     	;# 
  1168  0E17                     	;# 
  1169  0E18                     	;# 
  1170  0E18                     	;# 
  1171  0E18                     	;# 
  1172  0E19                     	;# 
  1173  0E1A                     	;# 
  1174  0E1B                     	;# 
  1175  0E1D                     	;# 
  1176  0E1E                     	;# 
  1177  0E1F                     	;# 
  1178  0E21                     	;# 
  1179  0E22                     	;# 
  1180  0E23                     	;# 
  1181  0E24                     	;# 
  1182  0E25                     	;# 
  1183  0E26                     	;# 
  1184  0E27                     	;# 
  1185  0E28                     	;# 
  1186  0E29                     	;# 
  1187  0E2D                     	;# 
  1188  0E2E                     	;# 
  1189  0E2F                     	;# 
  1190  0E30                     	;# 
  1191  0E31                     	;# 
  1192  0E32                     	;# 
  1193  0E35                     	;# 
  1194  0E36                     	;# 
  1195  0E37                     	;# 
  1196  0E38                     	;# 
  1197  0E39                     	;# 
  1198  0E3A                     	;# 
  1199  0E3B                     	;# 
  1200  0E3C                     	;# 
  1201  0E3D                     	;# 
  1202  0E3E                     	;# 
  1203  0E90                     	;# 
  1204  0E91                     	;# 
  1205  0E92                     	;# 
  1206  0E93                     	;# 
  1207  0E94                     	;# 
  1208  0E95                     	;# 
  1209  0E96                     	;# 
  1210  0E97                     	;# 
  1211  0E98                     	;# 
  1212  0E99                     	;# 
  1213  0E9A                     	;# 
  1214  0E9B                     	;# 
  1215  0E9C                     	;# 
  1216  0E9D                     	;# 
  1217  0E9E                     	;# 
  1218  0E9F                     	;# 
  1219  0EA0                     	;# 
  1220  0EA1                     	;# 
  1221  0EA2                     	;# 
  1222  0EA3                     	;# 
  1223  0EA4                     	;# 
  1224  0EA5                     	;# 
  1225  0EA6                     	;# 
  1226  0EA7                     	;# 
  1227  0F0F                     	;# 
  1228  0F10                     	;# 
  1229  0F11                     	;# 
  1230  0F12                     	;# 
  1231  0F13                     	;# 
  1232  0F14                     	;# 
  1233  0F15                     	;# 
  1234  0F16                     	;# 
  1235  0F17                     	;# 
  1236  0F18                     	;# 
  1237  0F19                     	;# 
  1238  0F1A                     	;# 
  1239  0F1B                     	;# 
  1240  0F1C                     	;# 
  1241  0F1D                     	;# 
  1242  0F1E                     	;# 
  1243  0F1F                     	;# 
  1244  0F20                     	;# 
  1245  0F21                     	;# 
  1246  0F22                     	;# 
  1247  0F23                     	;# 
  1248  0F24                     	;# 
  1249  0F25                     	;# 
  1250  0F26                     	;# 
  1251  0F27                     	;# 
  1252  0F28                     	;# 
  1253  0F29                     	;# 
  1254  0F2A                     	;# 
  1255  0F2B                     	;# 
  1256  0F2C                     	;# 
  1257  0F2D                     	;# 
  1258  0F2E                     	;# 
  1259  0F2F                     	;# 
  1260  0F30                     	;# 
  1261  0F31                     	;# 
  1262  0F32                     	;# 
  1263  0F33                     	;# 
  1264  0F34                     	;# 
  1265  0F35                     	;# 
  1266  0F36                     	;# 
  1267  0F37                     	;# 
  1268  0FE4                     	;# 
  1269  0FE5                     	;# 
  1270  0FE6                     	;# 
  1271  0FE7                     	;# 
  1272  0FE8                     	;# 
  1273  0FE9                     	;# 
  1274  0FEA                     	;# 
  1275  0FEB                     	;# 
  1276  0FED                     	;# 
  1277  0FEE                     	;# 
  1278  0FEF                     	;# 
  1279  0000                     	;# 
  1280  0001                     	;# 
  1281  0002                     	;# 
  1282  0003                     	;# 
  1283  0004                     	;# 
  1284  0005                     	;# 
  1285  0006                     	;# 
  1286  0007                     	;# 
  1287  0008                     	;# 
  1288  0009                     	;# 
  1289  000A                     	;# 
  1290  000B                     	;# 
  1291  000C                     	;# 
  1292  000D                     	;# 
  1293  000E                     	;# 
  1294  0010                     	;# 
  1295  0011                     	;# 
  1296  0012                     	;# 
  1297  0013                     	;# 
  1298  0014                     	;# 
  1299  0015                     	;# 
  1300  0016                     	;# 
  1301  0017                     	;# 
  1302  0018                     	;# 
  1303  0018                     	;# 
  1304  0019                     	;# 
  1305  001A                     	;# 
  1306  001B                     	;# 
  1307  001C                     	;# 
  1308  001C                     	;# 
  1309  001D                     	;# 
  1310  001E                     	;# 
  1311  001F                     	;# 
  1312  008C                     	;# 
  1313  008D                     	;# 
  1314  008E                     	;# 
  1315  0090                     	;# 
  1316  0091                     	;# 
  1317  0092                     	;# 
  1318  0093                     	;# 
  1319  0094                     	;# 
  1320  0095                     	;# 
  1321  0096                     	;# 
  1322  0097                     	;# 
  1323  0098                     	;# 
  1324  0099                     	;# 
  1325  009A                     	;# 
  1326  009B                     	;# 
  1327  009C                     	;# 
  1328  009D                     	;# 
  1329  009E                     	;# 
  1330  009F                     	;# 
  1331  010C                     	;# 
  1332  010D                     	;# 
  1333  010E                     	;# 
  1334  0111                     	;# 
  1335  0112                     	;# 
  1336  0113                     	;# 
  1337  0114                     	;# 
  1338  0115                     	;# 
  1339  0116                     	;# 
  1340  0117                     	;# 
  1341  0118                     	;# 
  1342  0119                     	;# 
  1343  011A                     	;# 
  1344  011B                     	;# 
  1345  011C                     	;# 
  1346  011D                     	;# 
  1347  018C                     	;# 
  1348  018D                     	;# 
  1349  018E                     	;# 
  1350  0191                     	;# 
  1351  0191                     	;# 
  1352  0192                     	;# 
  1353  0193                     	;# 
  1354  0193                     	;# 
  1355  0194                     	;# 
  1356  0195                     	;# 
  1357  0196                     	;# 
  1358  0197                     	;# 
  1359  0199                     	;# 
  1360  0199                     	;# 
  1361  0199                     	;# 
  1362  019A                     	;# 
  1363  019A                     	;# 
  1364  019A                     	;# 
  1365  019B                     	;# 
  1366  019B                     	;# 
  1367  019B                     	;# 
  1368  019B                     	;# 
  1369  019B                     	;# 
  1370  019C                     	;# 
  1371  019C                     	;# 
  1372  019C                     	;# 
  1373  019D                     	;# 
  1374  019D                     	;# 
  1375  019D                     	;# 
  1376  019E                     	;# 
  1377  019E                     	;# 
  1378  019E                     	;# 
  1379  019F                     	;# 
  1380  019F                     	;# 
  1381  019F                     	;# 
  1382  019F                     	;# 
  1383  019F                     	;# 
  1384  020C                     	;# 
  1385  020D                     	;# 
  1386  020E                     	;# 
  1387  0210                     	;# 
  1388  0211                     	;# 
  1389  0211                     	;# 
  1390  0212                     	;# 
  1391  0212                     	;# 
  1392  0213                     	;# 
  1393  0213                     	;# 
  1394  0214                     	;# 
  1395  0214                     	;# 
  1396  0215                     	;# 
  1397  0215                     	;# 
  1398  0215                     	;# 
  1399  0215                     	;# 
  1400  0216                     	;# 
  1401  0216                     	;# 
  1402  0217                     	;# 
  1403  0217                     	;# 
  1404  021B                     	;# 
  1405  021C                     	;# 
  1406  021D                     	;# 
  1407  021E                     	;# 
  1408  021F                     	;# 
  1409  028C                     	;# 
  1410  028D                     	;# 
  1411  028E                     	;# 
  1412  0291                     	;# 
  1413  0291                     	;# 
  1414  0292                     	;# 
  1415  0293                     	;# 
  1416  0294                     	;# 
  1417  0295                     	;# 
  1418  0295                     	;# 
  1419  0296                     	;# 
  1420  0297                     	;# 
  1421  0298                     	;# 
  1422  0299                     	;# 
  1423  0299                     	;# 
  1424  029A                     	;# 
  1425  029B                     	;# 
  1426  029C                     	;# 
  1427  029E                     	;# 
  1428  029F                     	;# 
  1429  030C                     	;# 
  1430  030D                     	;# 
  1431  030E                     	;# 
  1432  0315                     	;# 
  1433  0316                     	;# 
  1434  0317                     	;# 
  1435  0318                     	;# 
  1436  0319                     	;# 
  1437  031B                     	;# 
  1438  031C                     	;# 
  1439  031D                     	;# 
  1440  031E                     	;# 
  1441  031F                     	;# 
  1442  038C                     	;# 
  1443  038D                     	;# 
  1444  038E                     	;# 
  1445  0390                     	;# 
  1446  0391                     	;# 
  1447  0392                     	;# 
  1448  0393                     	;# 
  1449  0394                     	;# 
  1450  0395                     	;# 
  1451  0396                     	;# 
  1452  0397                     	;# 
  1453  0398                     	;# 
  1454  0399                     	;# 
  1455  039D                     	;# 
  1456  039E                     	;# 
  1457  039F                     	;# 
  1458  040D                     	;# 
  1459  040F                     	;# 
  1460  040F                     	;# 
  1461  0410                     	;# 
  1462  0411                     	;# 
  1463  0412                     	;# 
  1464  0413                     	;# 
  1465  0413                     	;# 
  1466  0414                     	;# 
  1467  0414                     	;# 
  1468  0415                     	;# 
  1469  0416                     	;# 
  1470  0417                     	;# 
  1471  0418                     	;# 
  1472  041A                     	;# 
  1473  041A                     	;# 
  1474  041B                     	;# 
  1475  041B                     	;# 
  1476  041C                     	;# 
  1477  041D                     	;# 
  1478  041E                     	;# 
  1479  041F                     	;# 
  1480  048E                     	;# 
  1481  048E                     	;# 
  1482  048F                     	;# 
  1483  0490                     	;# 
  1484  0491                     	;# 
  1485  0492                     	;# 
  1486  0493                     	;# 
  1487  0493                     	;# 
  1488  0494                     	;# 
  1489  0494                     	;# 
  1490  0495                     	;# 
  1491  0496                     	;# 
  1492  0497                     	;# 
  1493  0498                     	;# 
  1494  049A                     	;# 
  1495  049A                     	;# 
  1496  049B                     	;# 
  1497  049B                     	;# 
  1498  049C                     	;# 
  1499  049D                     	;# 
  1500  049E                     	;# 
  1501  049F                     	;# 
  1502  050F                     	;# 
  1503  0510                     	;# 
  1504  0511                     	;# 
  1505  0512                     	;# 
  1506  0513                     	;# 
  1507  0514                     	;# 
  1508  0515                     	;# 
  1509  0516                     	;# 
  1510  0517                     	;# 
  1511  0518                     	;# 
  1512  0519                     	;# 
  1513  051A                     	;# 
  1514  058D                     	;# 
  1515  058E                     	;# 
  1516  058F                     	;# 
  1517  058F                     	;# 
  1518  058F                     	;# 
  1519  0590                     	;# 
  1520  0590                     	;# 
  1521  0591                     	;# 
  1522  0592                     	;# 
  1523  0592                     	;# 
  1524  0592                     	;# 
  1525  0593                     	;# 
  1526  0593                     	;# 
  1527  0594                     	;# 
  1528  0595                     	;# 
  1529  0595                     	;# 
  1530  0596                     	;# 
  1531  0597                     	;# 
  1532  0597                     	;# 
  1533  0598                     	;# 
  1534  0599                     	;# 
  1535  0599                     	;# 
  1536  0599                     	;# 
  1537  059A                     	;# 
  1538  059A                     	;# 
  1539  059E                     	;# 
  1540  059F                     	;# 
  1541  059F                     	;# 
  1542  0614                     	;# 
  1543  0614                     	;# 
  1544  0615                     	;# 
  1545  0616                     	;# 
  1546  0617                     	;# 
  1547  0617                     	;# 
  1548  0618                     	;# 
  1549  0619                     	;# 
  1550  061A                     	;# 
  1551  061A                     	;# 
  1552  061B                     	;# 
  1553  061C                     	;# 
  1554  068D                     	;# 
  1555  068E                     	;# 
  1556  068F                     	;# 
  1557  0690                     	;# 
  1558  0691                     	;# 
  1559  0692                     	;# 
  1560  0693                     	;# 
  1561  0694                     	;# 
  1562  0695                     	;# 
  1563  0696                     	;# 
  1564  0697                     	;# 
  1565  0698                     	;# 
  1566  0699                     	;# 
  1567  069A                     	;# 
  1568  069B                     	;# 
  1569  069C                     	;# 
  1570  069D                     	;# 
  1571  069E                     	;# 
  1572  069F                     	;# 
  1573  070D                     	;# 
  1574  070E                     	;# 
  1575  070F                     	;# 
  1576  0710                     	;# 
  1577  0711                     	;# 
  1578  0712                     	;# 
  1579  0713                     	;# 
  1580  0714                     	;# 
  1581  0715                     	;# 
  1582  0716                     	;# 
  1583  0717                     	;# 
  1584  0718                     	;# 
  1585  0719                     	;# 
  1586  071A                     	;# 
  1587  071B                     	;# 
  1588  071C                     	;# 
  1589  071D                     	;# 
  1590  071E                     	;# 
  1591  071F                     	;# 
  1592  078E                     	;# 
  1593  078F                     	;# 
  1594  0790                     	;# 
  1595  0791                     	;# 
  1596  0792                     	;# 
  1597  0793                     	;# 
  1598  0794                     	;# 
  1599  0795                     	;# 
  1600  0796                     	;# 
  1601  0797                     	;# 
  1602  0798                     	;# 
  1603  0799                     	;# 
  1604  079A                     	;# 
  1605  079B                     	;# 
  1606  079C                     	;# 
  1607  079D                     	;# 
  1608  079E                     	;# 
  1609  079F                     	;# 
  1610  080D                     	;# 
  1611  080E                     	;# 
  1612  080F                     	;# 
  1613  0810                     	;# 
  1614  0811                     	;# 
  1615  0812                     	;# 
  1616  0813                     	;# 
  1617  0814                     	;# 
  1618  0815                     	;# 
  1619  0816                     	;# 
  1620  0817                     	;# 
  1621  0818                     	;# 
  1622  0819                     	;# 
  1623  081A                     	;# 
  1624  081B                     	;# 
  1625  081C                     	;# 
  1626  081D                     	;# 
  1627  081E                     	;# 
  1628  081F                     	;# 
  1629  090C                     	;# 
  1630  090D                     	;# 
  1631  090E                     	;# 
  1632  090F                     	;# 
  1633  0910                     	;# 
  1634  0911                     	;# 
  1635  0912                     	;# 
  1636  0913                     	;# 
  1637  0914                     	;# 
  1638  0915                     	;# 
  1639  0916                     	;# 
  1640  0917                     	;# 
  1641  0D8E                     	;# 
  1642  0D8F                     	;# 
  1643  0D90                     	;# 
  1644  0D91                     	;# 
  1645  0D91                     	;# 
  1646  0D92                     	;# 
  1647  0D93                     	;# 
  1648  0D93                     	;# 
  1649  0D94                     	;# 
  1650  0D95                     	;# 
  1651  0D95                     	;# 
  1652  0D96                     	;# 
  1653  0D97                     	;# 
  1654  0D97                     	;# 
  1655  0D98                     	;# 
  1656  0D99                     	;# 
  1657  0D99                     	;# 
  1658  0D9A                     	;# 
  1659  0D9B                     	;# 
  1660  0D9C                     	;# 
  1661  0D9C                     	;# 
  1662  0D9D                     	;# 
  1663  0D9D                     	;# 
  1664  0D9E                     	;# 
  1665  0D9F                     	;# 
  1666  0DA0                     	;# 
  1667  0DA1                     	;# 
  1668  0DA1                     	;# 
  1669  0DA2                     	;# 
  1670  0DA3                     	;# 
  1671  0DA3                     	;# 
  1672  0DA4                     	;# 
  1673  0DA5                     	;# 
  1674  0DA5                     	;# 
  1675  0DA6                     	;# 
  1676  0DA7                     	;# 
  1677  0DA7                     	;# 
  1678  0DA8                     	;# 
  1679  0DA9                     	;# 
  1680  0DA9                     	;# 
  1681  0DAA                     	;# 
  1682  0DAB                     	;# 
  1683  0DAC                     	;# 
  1684  0DAC                     	;# 
  1685  0DAD                     	;# 
  1686  0DAD                     	;# 
  1687  0DAE                     	;# 
  1688  0DAF                     	;# 
  1689  0DB0                     	;# 
  1690  0DB1                     	;# 
  1691  0DB1                     	;# 
  1692  0DB2                     	;# 
  1693  0DB3                     	;# 
  1694  0DB3                     	;# 
  1695  0DB4                     	;# 
  1696  0DB5                     	;# 
  1697  0DB5                     	;# 
  1698  0DB6                     	;# 
  1699  0DB7                     	;# 
  1700  0DB7                     	;# 
  1701  0DB8                     	;# 
  1702  0DB9                     	;# 
  1703  0DB9                     	;# 
  1704  0DBA                     	;# 
  1705  0DBB                     	;# 
  1706  0DBC                     	;# 
  1707  0DBC                     	;# 
  1708  0DBD                     	;# 
  1709  0DBD                     	;# 
  1710  0DBE                     	;# 
  1711  0DBF                     	;# 
  1712  0DC0                     	;# 
  1713  0E0C                     	;# 
  1714  0E0D                     	;# 
  1715  0E0E                     	;# 
  1716  0E0F                     	;# 
  1717  0E10                     	;# 
  1718  0E11                     	;# 
  1719  0E12                     	;# 
  1720  0E13                     	;# 
  1721  0E14                     	;# 
  1722  0E15                     	;# 
  1723  0E15                     	;# 
  1724  0E15                     	;# 
  1725  0E16                     	;# 
  1726  0E16                     	;# 
  1727  0E16                     	;# 
  1728  0E17                     	;# 
  1729  0E17                     	;# 
  1730  0E17                     	;# 
  1731  0E18                     	;# 
  1732  0E18                     	;# 
  1733  0E18                     	;# 
  1734  0E19                     	;# 
  1735  0E1A                     	;# 
  1736  0E1B                     	;# 
  1737  0E1D                     	;# 
  1738  0E1E                     	;# 
  1739  0E1F                     	;# 
  1740  0E21                     	;# 
  1741  0E22                     	;# 
  1742  0E23                     	;# 
  1743  0E24                     	;# 
  1744  0E25                     	;# 
  1745  0E26                     	;# 
  1746  0E27                     	;# 
  1747  0E28                     	;# 
  1748  0E29                     	;# 
  1749  0E2D                     	;# 
  1750  0E2E                     	;# 
  1751  0E2F                     	;# 
  1752  0E30                     	;# 
  1753  0E31                     	;# 
  1754  0E32                     	;# 
  1755  0E35                     	;# 
  1756  0E36                     	;# 
  1757  0E37                     	;# 
  1758  0E38                     	;# 
  1759  0E39                     	;# 
  1760  0E3A                     	;# 
  1761  0E3B                     	;# 
  1762  0E3C                     	;# 
  1763  0E3D                     	;# 
  1764  0E3E                     	;# 
  1765  0E90                     	;# 
  1766  0E91                     	;# 
  1767  0E92                     	;# 
  1768  0E93                     	;# 
  1769  0E94                     	;# 
  1770  0E95                     	;# 
  1771  0E96                     	;# 
  1772  0E97                     	;# 
  1773  0E98                     	;# 
  1774  0E99                     	;# 
  1775  0E9A                     	;# 
  1776  0E9B                     	;# 
  1777  0E9C                     	;# 
  1778  0E9D                     	;# 
  1779  0E9E                     	;# 
  1780  0E9F                     	;# 
  1781  0EA0                     	;# 
  1782  0EA1                     	;# 
  1783  0EA2                     	;# 
  1784  0EA3                     	;# 
  1785  0EA4                     	;# 
  1786  0EA5                     	;# 
  1787  0EA6                     	;# 
  1788  0EA7                     	;# 
  1789  0F0F                     	;# 
  1790  0F10                     	;# 
  1791  0F11                     	;# 
  1792  0F12                     	;# 
  1793  0F13                     	;# 
  1794  0F14                     	;# 
  1795  0F15                     	;# 
  1796  0F16                     	;# 
  1797  0F17                     	;# 
  1798  0F18                     	;# 
  1799  0F19                     	;# 
  1800  0F1A                     	;# 
  1801  0F1B                     	;# 
  1802  0F1C                     	;# 
  1803  0F1D                     	;# 
  1804  0F1E                     	;# 
  1805  0F1F                     	;# 
  1806  0F20                     	;# 
  1807  0F21                     	;# 
  1808  0F22                     	;# 
  1809  0F23                     	;# 
  1810  0F24                     	;# 
  1811  0F25                     	;# 
  1812  0F26                     	;# 
  1813  0F27                     	;# 
  1814  0F28                     	;# 
  1815  0F29                     	;# 
  1816  0F2A                     	;# 
  1817  0F2B                     	;# 
  1818  0F2C                     	;# 
  1819  0F2D                     	;# 
  1820  0F2E                     	;# 
  1821  0F2F                     	;# 
  1822  0F30                     	;# 
  1823  0F31                     	;# 
  1824  0F32                     	;# 
  1825  0F33                     	;# 
  1826  0F34                     	;# 
  1827  0F35                     	;# 
  1828  0F36                     	;# 
  1829  0F37                     	;# 
  1830  0FE4                     	;# 
  1831  0FE5                     	;# 
  1832  0FE6                     	;# 
  1833  0FE7                     	;# 
  1834  0FE8                     	;# 
  1835  0FE9                     	;# 
  1836  0FEA                     	;# 
  1837  0FEB                     	;# 
  1838  0FED                     	;# 
  1839  0FEE                     	;# 
  1840  0FEF                     	;# 
  1841  0000                     	;# 
  1842  0001                     	;# 
  1843  0002                     	;# 
  1844  0003                     	;# 
  1845  0004                     	;# 
  1846  0005                     	;# 
  1847  0006                     	;# 
  1848  0007                     	;# 
  1849  0008                     	;# 
  1850  0009                     	;# 
  1851  000A                     	;# 
  1852  000B                     	;# 
  1853  000C                     	;# 
  1854  000D                     	;# 
  1855  000E                     	;# 
  1856  0010                     	;# 
  1857  0011                     	;# 
  1858  0012                     	;# 
  1859  0013                     	;# 
  1860  0014                     	;# 
  1861  0015                     	;# 
  1862  0016                     	;# 
  1863  0017                     	;# 
  1864  0018                     	;# 
  1865  0018                     	;# 
  1866  0019                     	;# 
  1867  001A                     	;# 
  1868  001B                     	;# 
  1869  001C                     	;# 
  1870  001C                     	;# 
  1871  001D                     	;# 
  1872  001E                     	;# 
  1873  001F                     	;# 
  1874  008C                     	;# 
  1875  008D                     	;# 
  1876  008E                     	;# 
  1877  0090                     	;# 
  1878  0091                     	;# 
  1879  0092                     	;# 
  1880  0093                     	;# 
  1881  0094                     	;# 
  1882  0095                     	;# 
  1883  0096                     	;# 
  1884  0097                     	;# 
  1885  0098                     	;# 
  1886  0099                     	;# 
  1887  009A                     	;# 
  1888  009B                     	;# 
  1889  009C                     	;# 
  1890  009D                     	;# 
  1891  009E                     	;# 
  1892  009F                     	;# 
  1893  010C                     	;# 
  1894  010D                     	;# 
  1895  010E                     	;# 
  1896  0111                     	;# 
  1897  0112                     	;# 
  1898  0113                     	;# 
  1899  0114                     	;# 
  1900  0115                     	;# 
  1901  0116                     	;# 
  1902  0117                     	;# 
  1903  0118                     	;# 
  1904  0119                     	;# 
  1905  011A                     	;# 
  1906  011B                     	;# 
  1907  011C                     	;# 
  1908  011D                     	;# 
  1909  018C                     	;# 
  1910  018D                     	;# 
  1911  018E                     	;# 
  1912  0191                     	;# 
  1913  0191                     	;# 
  1914  0192                     	;# 
  1915  0193                     	;# 
  1916  0193                     	;# 
  1917  0194                     	;# 
  1918  0195                     	;# 
  1919  0196                     	;# 
  1920  0197                     	;# 
  1921  0199                     	;# 
  1922  0199                     	;# 
  1923  0199                     	;# 
  1924  019A                     	;# 
  1925  019A                     	;# 
  1926  019A                     	;# 
  1927  019B                     	;# 
  1928  019B                     	;# 
  1929  019B                     	;# 
  1930  019B                     	;# 
  1931  019B                     	;# 
  1932  019C                     	;# 
  1933  019C                     	;# 
  1934  019C                     	;# 
  1935  019D                     	;# 
  1936  019D                     	;# 
  1937  019D                     	;# 
  1938  019E                     	;# 
  1939  019E                     	;# 
  1940  019E                     	;# 
  1941  019F                     	;# 
  1942  019F                     	;# 
  1943  019F                     	;# 
  1944  019F                     	;# 
  1945  019F                     	;# 
  1946  020C                     	;# 
  1947  020D                     	;# 
  1948  020E                     	;# 
  1949  0210                     	;# 
  1950  0211                     	;# 
  1951  0211                     	;# 
  1952  0212                     	;# 
  1953  0212                     	;# 
  1954  0213                     	;# 
  1955  0213                     	;# 
  1956  0214                     	;# 
  1957  0214                     	;# 
  1958  0215                     	;# 
  1959  0215                     	;# 
  1960  0215                     	;# 
  1961  0215                     	;# 
  1962  0216                     	;# 
  1963  0216                     	;# 
  1964  0217                     	;# 
  1965  0217                     	;# 
  1966  021B                     	;# 
  1967  021C                     	;# 
  1968  021D                     	;# 
  1969  021E                     	;# 
  1970  021F                     	;# 
  1971  028C                     	;# 
  1972  028D                     	;# 
  1973  028E                     	;# 
  1974  0291                     	;# 
  1975  0291                     	;# 
  1976  0292                     	;# 
  1977  0293                     	;# 
  1978  0294                     	;# 
  1979  0295                     	;# 
  1980  0295                     	;# 
  1981  0296                     	;# 
  1982  0297                     	;# 
  1983  0298                     	;# 
  1984  0299                     	;# 
  1985  0299                     	;# 
  1986  029A                     	;# 
  1987  029B                     	;# 
  1988  029C                     	;# 
  1989  029E                     	;# 
  1990  029F                     	;# 
  1991  030C                     	;# 
  1992  030D                     	;# 
  1993  030E                     	;# 
  1994  0315                     	;# 
  1995  0316                     	;# 
  1996  0317                     	;# 
  1997  0318                     	;# 
  1998  0319                     	;# 
  1999  031B                     	;# 
  2000  031C                     	;# 
  2001  031D                     	;# 
  2002  031E                     	;# 
  2003  031F                     	;# 
  2004  038C                     	;# 
  2005  038D                     	;# 
  2006  038E                     	;# 
  2007  0390                     	;# 
  2008  0391                     	;# 
  2009  0392                     	;# 
  2010  0393                     	;# 
  2011  0394                     	;# 
  2012  0395                     	;# 
  2013  0396                     	;# 
  2014  0397                     	;# 
  2015  0398                     	;# 
  2016  0399                     	;# 
  2017  039D                     	;# 
  2018  039E                     	;# 
  2019  039F                     	;# 
  2020  040D                     	;# 
  2021  040F                     	;# 
  2022  040F                     	;# 
  2023  0410                     	;# 
  2024  0411                     	;# 
  2025  0412                     	;# 
  2026  0413                     	;# 
  2027  0413                     	;# 
  2028  0414                     	;# 
  2029  0414                     	;# 
  2030  0415                     	;# 
  2031  0416                     	;# 
  2032  0417                     	;# 
  2033  0418                     	;# 
  2034  041A                     	;# 
  2035  041A                     	;# 
  2036  041B                     	;# 
  2037  041B                     	;# 
  2038  041C                     	;# 
  2039  041D                     	;# 
  2040  041E                     	;# 
  2041  041F                     	;# 
  2042  048E                     	;# 
  2043  048E                     	;# 
  2044  048F                     	;# 
  2045  0490                     	;# 
  2046  0491                     	;# 
  2047  0492                     	;# 
  2048  0493                     	;# 
  2049  0493                     	;# 
  2050  0494                     	;# 
  2051  0494                     	;# 
  2052  0495                     	;# 
  2053  0496                     	;# 
  2054  0497                     	;# 
  2055  0498                     	;# 
  2056  049A                     	;# 
  2057  049A                     	;# 
  2058  049B                     	;# 
  2059  049B                     	;# 
  2060  049C                     	;# 
  2061  049D                     	;# 
  2062  049E                     	;# 
  2063  049F                     	;# 
  2064  050F                     	;# 
  2065  0510                     	;# 
  2066  0511                     	;# 
  2067  0512                     	;# 
  2068  0513                     	;# 
  2069  0514                     	;# 
  2070  0515                     	;# 
  2071  0516                     	;# 
  2072  0517                     	;# 
  2073  0518                     	;# 
  2074  0519                     	;# 
  2075  051A                     	;# 
  2076  058D                     	;# 
  2077  058E                     	;# 
  2078  058F                     	;# 
  2079  058F                     	;# 
  2080  058F                     	;# 
  2081  0590                     	;# 
  2082  0590                     	;# 
  2083  0591                     	;# 
  2084  0592                     	;# 
  2085  0592                     	;# 
  2086  0592                     	;# 
  2087  0593                     	;# 
  2088  0593                     	;# 
  2089  0594                     	;# 
  2090  0595                     	;# 
  2091  0595                     	;# 
  2092  0596                     	;# 
  2093  0597                     	;# 
  2094  0597                     	;# 
  2095  0598                     	;# 
  2096  0599                     	;# 
  2097  0599                     	;# 
  2098  0599                     	;# 
  2099  059A                     	;# 
  2100  059A                     	;# 
  2101  059E                     	;# 
  2102  059F                     	;# 
  2103  059F                     	;# 
  2104  0614                     	;# 
  2105  0614                     	;# 
  2106  0615                     	;# 
  2107  0616                     	;# 
  2108  0617                     	;# 
  2109  0617                     	;# 
  2110  0618                     	;# 
  2111  0619                     	;# 
  2112  061A                     	;# 
  2113  061A                     	;# 
  2114  061B                     	;# 
  2115  061C                     	;# 
  2116  068D                     	;# 
  2117  068E                     	;# 
  2118  068F                     	;# 
  2119  0690                     	;# 
  2120  0691                     	;# 
  2121  0692                     	;# 
  2122  0693                     	;# 
  2123  0694                     	;# 
  2124  0695                     	;# 
  2125  0696                     	;# 
  2126  0697                     	;# 
  2127  0698                     	;# 
  2128  0699                     	;# 
  2129  069A                     	;# 
  2130  069B                     	;# 
  2131  069C                     	;# 
  2132  069D                     	;# 
  2133  069E                     	;# 
  2134  069F                     	;# 
  2135  070D                     	;# 
  2136  070E                     	;# 
  2137  070F                     	;# 
  2138  0710                     	;# 
  2139  0711                     	;# 
  2140  0712                     	;# 
  2141  0713                     	;# 
  2142  0714                     	;# 
  2143  0715                     	;# 
  2144  0716                     	;# 
  2145  0717                     	;# 
  2146  0718                     	;# 
  2147  0719                     	;# 
  2148  071A                     	;# 
  2149  071B                     	;# 
  2150  071C                     	;# 
  2151  071D                     	;# 
  2152  071E                     	;# 
  2153  071F                     	;# 
  2154  078E                     	;# 
  2155  078F                     	;# 
  2156  0790                     	;# 
  2157  0791                     	;# 
  2158  0792                     	;# 
  2159  0793                     	;# 
  2160  0794                     	;# 
  2161  0795                     	;# 
  2162  0796                     	;# 
  2163  0797                     	;# 
  2164  0798                     	;# 
  2165  0799                     	;# 
  2166  079A                     	;# 
  2167  079B                     	;# 
  2168  079C                     	;# 
  2169  079D                     	;# 
  2170  079E                     	;# 
  2171  079F                     	;# 
  2172  080D                     	;# 
  2173  080E                     	;# 
  2174  080F                     	;# 
  2175  0810                     	;# 
  2176  0811                     	;# 
  2177  0812                     	;# 
  2178  0813                     	;# 
  2179  0814                     	;# 
  2180  0815                     	;# 
  2181  0816                     	;# 
  2182  0817                     	;# 
  2183  0818                     	;# 
  2184  0819                     	;# 
  2185  081A                     	;# 
  2186  081B                     	;# 
  2187  081C                     	;# 
  2188  081D                     	;# 
  2189  081E                     	;# 
  2190  081F                     	;# 
  2191  090C                     	;# 
  2192  090D                     	;# 
  2193  090E                     	;# 
  2194  090F                     	;# 
  2195  0910                     	;# 
  2196  0911                     	;# 
  2197  0912                     	;# 
  2198  0913                     	;# 
  2199  0914                     	;# 
  2200  0915                     	;# 
  2201  0916                     	;# 
  2202  0917                     	;# 
  2203  0D8E                     	;# 
  2204  0D8F                     	;# 
  2205  0D90                     	;# 
  2206  0D91                     	;# 
  2207  0D91                     	;# 
  2208  0D92                     	;# 
  2209  0D93                     	;# 
  2210  0D93                     	;# 
  2211  0D94                     	;# 
  2212  0D95                     	;# 
  2213  0D95                     	;# 
  2214  0D96                     	;# 
  2215  0D97                     	;# 
  2216  0D97                     	;# 
  2217  0D98                     	;# 
  2218  0D99                     	;# 
  2219  0D99                     	;# 
  2220  0D9A                     	;# 
  2221  0D9B                     	;# 
  2222  0D9C                     	;# 
  2223  0D9C                     	;# 
  2224  0D9D                     	;# 
  2225  0D9D                     	;# 
  2226  0D9E                     	;# 
  2227  0D9F                     	;# 
  2228  0DA0                     	;# 
  2229  0DA1                     	;# 
  2230  0DA1                     	;# 
  2231  0DA2                     	;# 
  2232  0DA3                     	;# 
  2233  0DA3                     	;# 
  2234  0DA4                     	;# 
  2235  0DA5                     	;# 
  2236  0DA5                     	;# 
  2237  0DA6                     	;# 
  2238  0DA7                     	;# 
  2239  0DA7                     	;# 
  2240  0DA8                     	;# 
  2241  0DA9                     	;# 
  2242  0DA9                     	;# 
  2243  0DAA                     	;# 
  2244  0DAB                     	;# 
  2245  0DAC                     	;# 
  2246  0DAC                     	;# 
  2247  0DAD                     	;# 
  2248  0DAD                     	;# 
  2249  0DAE                     	;# 
  2250  0DAF                     	;# 
  2251  0DB0                     	;# 
  2252  0DB1                     	;# 
  2253  0DB1                     	;# 
  2254  0DB2                     	;# 
  2255  0DB3                     	;# 
  2256  0DB3                     	;# 
  2257  0DB4                     	;# 
  2258  0DB5                     	;# 
  2259  0DB5                     	;# 
  2260  0DB6                     	;# 
  2261  0DB7                     	;# 
  2262  0DB7                     	;# 
  2263  0DB8                     	;# 
  2264  0DB9                     	;# 
  2265  0DB9                     	;# 
  2266  0DBA                     	;# 
  2267  0DBB                     	;# 
  2268  0DBC                     	;# 
  2269  0DBC                     	;# 
  2270  0DBD                     	;# 
  2271  0DBD                     	;# 
  2272  0DBE                     	;# 
  2273  0DBF                     	;# 
  2274  0DC0                     	;# 
  2275  0E0C                     	;# 
  2276  0E0D                     	;# 
  2277  0E0E                     	;# 
  2278  0E0F                     	;# 
  2279  0E10                     	;# 
  2280  0E11                     	;# 
  2281  0E12                     	;# 
  2282  0E13                     	;# 
  2283  0E14                     	;# 
  2284  0E15                     	;# 
  2285  0E15                     	;# 
  2286  0E15                     	;# 
  2287  0E16                     	;# 
  2288  0E16                     	;# 
  2289  0E16                     	;# 
  2290  0E17                     	;# 
  2291  0E17                     	;# 
  2292  0E17                     	;# 
  2293  0E18                     	;# 
  2294  0E18                     	;# 
  2295  0E18                     	;# 
  2296  0E19                     	;# 
  2297  0E1A                     	;# 
  2298  0E1B                     	;# 
  2299  0E1D                     	;# 
  2300  0E1E                     	;# 
  2301  0E1F                     	;# 
  2302  0E21                     	;# 
  2303  0E22                     	;# 
  2304  0E23                     	;# 
  2305  0E24                     	;# 
  2306  0E25                     	;# 
  2307  0E26                     	;# 
  2308  0E27                     	;# 
  2309  0E28                     	;# 
  2310  0E29                     	;# 
  2311  0E2D                     	;# 
  2312  0E2E                     	;# 
  2313  0E2F                     	;# 
  2314  0E30                     	;# 
  2315  0E31                     	;# 
  2316  0E32                     	;# 
  2317  0E35                     	;# 
  2318  0E36                     	;# 
  2319  0E37                     	;# 
  2320  0E38                     	;# 
  2321  0E39                     	;# 
  2322  0E3A                     	;# 
  2323  0E3B                     	;# 
  2324  0E3C                     	;# 
  2325  0E3D                     	;# 
  2326  0E3E                     	;# 
  2327  0E90                     	;# 
  2328  0E91                     	;# 
  2329  0E92                     	;# 
  2330  0E93                     	;# 
  2331  0E94                     	;# 
  2332  0E95                     	;# 
  2333  0E96                     	;# 
  2334  0E97                     	;# 
  2335  0E98                     	;# 
  2336  0E99                     	;# 
  2337  0E9A                     	;# 
  2338  0E9B                     	;# 
  2339  0E9C                     	;# 
  2340  0E9D                     	;# 
  2341  0E9E                     	;# 
  2342  0E9F                     	;# 
  2343  0EA0                     	;# 
  2344  0EA1                     	;# 
  2345  0EA2                     	;# 
  2346  0EA3                     	;# 
  2347  0EA4                     	;# 
  2348  0EA5                     	;# 
  2349  0EA6                     	;# 
  2350  0EA7                     	;# 
  2351  0F0F                     	;# 
  2352  0F10                     	;# 
  2353  0F11                     	;# 
  2354  0F12                     	;# 
  2355  0F13                     	;# 
  2356  0F14                     	;# 
  2357  0F15                     	;# 
  2358  0F16                     	;# 
  2359  0F17                     	;# 
  2360  0F18                     	;# 
  2361  0F19                     	;# 
  2362  0F1A                     	;# 
  2363  0F1B                     	;# 
  2364  0F1C                     	;# 
  2365  0F1D                     	;# 
  2366  0F1E                     	;# 
  2367  0F1F                     	;# 
  2368  0F20                     	;# 
  2369  0F21                     	;# 
  2370  0F22                     	;# 
  2371  0F23                     	;# 
  2372  0F24                     	;# 
  2373  0F25                     	;# 
  2374  0F26                     	;# 
  2375  0F27                     	;# 
  2376  0F28                     	;# 
  2377  0F29                     	;# 
  2378  0F2A                     	;# 
  2379  0F2B                     	;# 
  2380  0F2C                     	;# 
  2381  0F2D                     	;# 
  2382  0F2E                     	;# 
  2383  0F2F                     	;# 
  2384  0F30                     	;# 
  2385  0F31                     	;# 
  2386  0F32                     	;# 
  2387  0F33                     	;# 
  2388  0F34                     	;# 
  2389  0F35                     	;# 
  2390  0F36                     	;# 
  2391  0F37                     	;# 
  2392  0FE4                     	;# 
  2393  0FE5                     	;# 
  2394  0FE6                     	;# 
  2395  0FE7                     	;# 
  2396  0FE8                     	;# 
  2397  0FE9                     	;# 
  2398  0FEA                     	;# 
  2399  0FEB                     	;# 
  2400  0FED                     	;# 
  2401  0FEE                     	;# 
  2402  0FEF                     	;# 
  2403  0000                     	;# 
  2404  0001                     	;# 
  2405  0002                     	;# 
  2406  0003                     	;# 
  2407  0004                     	;# 
  2408  0005                     	;# 
  2409  0006                     	;# 
  2410  0007                     	;# 
  2411  0008                     	;# 
  2412  0009                     	;# 
  2413  000A                     	;# 
  2414  000B                     	;# 
  2415  000C                     	;# 
  2416  000D                     	;# 
  2417  000E                     	;# 
  2418  0010                     	;# 
  2419  0011                     	;# 
  2420  0012                     	;# 
  2421  0013                     	;# 
  2422  0014                     	;# 
  2423  0015                     	;# 
  2424  0016                     	;# 
  2425  0017                     	;# 
  2426  0018                     	;# 
  2427  0018                     	;# 
  2428  0019                     	;# 
  2429  001A                     	;# 
  2430  001B                     	;# 
  2431  001C                     	;# 
  2432  001C                     	;# 
  2433  001D                     	;# 
  2434  001E                     	;# 
  2435  001F                     	;# 
  2436  008C                     	;# 
  2437  008D                     	;# 
  2438  008E                     	;# 
  2439  0090                     	;# 
  2440  0091                     	;# 
  2441  0092                     	;# 
  2442  0093                     	;# 
  2443  0094                     	;# 
  2444  0095                     	;# 
  2445  0096                     	;# 
  2446  0097                     	;# 
  2447  0098                     	;# 
  2448  0099                     	;# 
  2449  009A                     	;# 
  2450  009B                     	;# 
  2451  009C                     	;# 
  2452  009D                     	;# 
  2453  009E                     	;# 
  2454  009F                     	;# 
  2455  010C                     	;# 
  2456  010D                     	;# 
  2457  010E                     	;# 
  2458  0111                     	;# 
  2459  0112                     	;# 
  2460  0113                     	;# 
  2461  0114                     	;# 
  2462  0115                     	;# 
  2463  0116                     	;# 
  2464  0117                     	;# 
  2465  0118                     	;# 
  2466  0119                     	;# 
  2467  011A                     	;# 
  2468  011B                     	;# 
  2469  011C                     	;# 
  2470  011D                     	;# 
  2471  018C                     	;# 
  2472  018D                     	;# 
  2473  018E                     	;# 
  2474  0191                     	;# 
  2475  0191                     	;# 
  2476  0192                     	;# 
  2477  0193                     	;# 
  2478  0193                     	;# 
  2479  0194                     	;# 
  2480  0195                     	;# 
  2481  0196                     	;# 
  2482  0197                     	;# 
  2483  0199                     	;# 
  2484  0199                     	;# 
  2485  0199                     	;# 
  2486  019A                     	;# 
  2487  019A                     	;# 
  2488  019A                     	;# 
  2489  019B                     	;# 
  2490  019B                     	;# 
  2491  019B                     	;# 
  2492  019B                     	;# 
  2493  019B                     	;# 
  2494  019C                     	;# 
  2495  019C                     	;# 
  2496  019C                     	;# 
  2497  019D                     	;# 
  2498  019D                     	;# 
  2499  019D                     	;# 
  2500  019E                     	;# 
  2501  019E                     	;# 
  2502  019E                     	;# 
  2503  019F                     	;# 
  2504  019F                     	;# 
  2505  019F                     	;# 
  2506  019F                     	;# 
  2507  019F                     	;# 
  2508  020C                     	;# 
  2509  020D                     	;# 
  2510  020E                     	;# 
  2511  0210                     	;# 
  2512  0211                     	;# 
  2513  0211                     	;# 
  2514  0212                     	;# 
  2515  0212                     	;# 
  2516  0213                     	;# 
  2517  0213                     	;# 
  2518  0214                     	;# 
  2519  0214                     	;# 
  2520  0215                     	;# 
  2521  0215                     	;# 
  2522  0215                     	;# 
  2523  0215                     	;# 
  2524  0216                     	;# 
  2525  0216                     	;# 
  2526  0217                     	;# 
  2527  0217                     	;# 
  2528  021B                     	;# 
  2529  021C                     	;# 
  2530  021D                     	;# 
  2531  021E                     	;# 
  2532  021F                     	;# 
  2533  028C                     	;# 
  2534  028D                     	;# 
  2535  028E                     	;# 
  2536  0291                     	;# 
  2537  0291                     	;# 
  2538  0292                     	;# 
  2539  0293                     	;# 
  2540  0294                     	;# 
  2541  0295                     	;# 
  2542  0295                     	;# 
  2543  0296                     	;# 
  2544  0297                     	;# 
  2545  0298                     	;# 
  2546  0299                     	;# 
  2547  0299                     	;# 
  2548  029A                     	;# 
  2549  029B                     	;# 
  2550  029C                     	;# 
  2551  029E                     	;# 
  2552  029F                     	;# 
  2553  030C                     	;# 
  2554  030D                     	;# 
  2555  030E                     	;# 
  2556  0315                     	;# 
  2557  0316                     	;# 
  2558  0317                     	;# 
  2559  0318                     	;# 
  2560  0319                     	;# 
  2561  031B                     	;# 
  2562  031C                     	;# 
  2563  031D                     	;# 
  2564  031E                     	;# 
  2565  031F                     	;# 
  2566  038C                     	;# 
  2567  038D                     	;# 
  2568  038E                     	;# 
  2569  0390                     	;# 
  2570  0391                     	;# 
  2571  0392                     	;# 
  2572  0393                     	;# 
  2573  0394                     	;# 
  2574  0395                     	;# 
  2575  0396                     	;# 
  2576  0397                     	;# 
  2577  0398                     	;# 
  2578  0399                     	;# 
  2579  039D                     	;# 
  2580  039E                     	;# 
  2581  039F                     	;# 
  2582  040D                     	;# 
  2583  040F                     	;# 
  2584  040F                     	;# 
  2585  0410                     	;# 
  2586  0411                     	;# 
  2587  0412                     	;# 
  2588  0413                     	;# 
  2589  0413                     	;# 
  2590  0414                     	;# 
  2591  0414                     	;# 
  2592  0415                     	;# 
  2593  0416                     	;# 
  2594  0417                     	;# 
  2595  0418                     	;# 
  2596  041A                     	;# 
  2597  041A                     	;# 
  2598  041B                     	;# 
  2599  041B                     	;# 
  2600  041C                     	;# 
  2601  041D                     	;# 
  2602  041E                     	;# 
  2603  041F                     	;# 
  2604  048E                     	;# 
  2605  048E                     	;# 
  2606  048F                     	;# 
  2607  0490                     	;# 
  2608  0491                     	;# 
  2609  0492                     	;# 
  2610  0493                     	;# 
  2611  0493                     	;# 
  2612  0494                     	;# 
  2613  0494                     	;# 
  2614  0495                     	;# 
  2615  0496                     	;# 
  2616  0497                     	;# 
  2617  0498                     	;# 
  2618  049A                     	;# 
  2619  049A                     	;# 
  2620  049B                     	;# 
  2621  049B                     	;# 
  2622  049C                     	;# 
  2623  049D                     	;# 
  2624  049E                     	;# 
  2625  049F                     	;# 
  2626  050F                     	;# 
  2627  0510                     	;# 
  2628  0511                     	;# 
  2629  0512                     	;# 
  2630  0513                     	;# 
  2631  0514                     	;# 
  2632  0515                     	;# 
  2633  0516                     	;# 
  2634  0517                     	;# 
  2635  0518                     	;# 
  2636  0519                     	;# 
  2637  051A                     	;# 
  2638  058D                     	;# 
  2639  058E                     	;# 
  2640  058F                     	;# 
  2641  058F                     	;# 
  2642  058F                     	;# 
  2643  0590                     	;# 
  2644  0590                     	;# 
  2645  0591                     	;# 
  2646  0592                     	;# 
  2647  0592                     	;# 
  2648  0592                     	;# 
  2649  0593                     	;# 
  2650  0593                     	;# 
  2651  0594                     	;# 
  2652  0595                     	;# 
  2653  0595                     	;# 
  2654  0596                     	;# 
  2655  0597                     	;# 
  2656  0597                     	;# 
  2657  0598                     	;# 
  2658  0599                     	;# 
  2659  0599                     	;# 
  2660  0599                     	;# 
  2661  059A                     	;# 
  2662  059A                     	;# 
  2663  059E                     	;# 
  2664  059F                     	;# 
  2665  059F                     	;# 
  2666  0614                     	;# 
  2667  0614                     	;# 
  2668  0615                     	;# 
  2669  0616                     	;# 
  2670  0617                     	;# 
  2671  0617                     	;# 
  2672  0618                     	;# 
  2673  0619                     	;# 
  2674  061A                     	;# 
  2675  061A                     	;# 
  2676  061B                     	;# 
  2677  061C                     	;# 
  2678  068D                     	;# 
  2679  068E                     	;# 
  2680  068F                     	;# 
  2681  0690                     	;# 
  2682  0691                     	;# 
  2683  0692                     	;# 
  2684  0693                     	;# 
  2685  0694                     	;# 
  2686  0695                     	;# 
  2687  0696                     	;# 
  2688  0697                     	;# 
  2689  0698                     	;# 
  2690  0699                     	;# 
  2691  069A                     	;# 
  2692  069B                     	;# 
  2693  069C                     	;# 
  2694  069D                     	;# 
  2695  069E                     	;# 
  2696  069F                     	;# 
  2697  070D                     	;# 
  2698  070E                     	;# 
  2699  070F                     	;# 
  2700  0710                     	;# 
  2701  0711                     	;# 
  2702  0712                     	;# 
  2703  0713                     	;# 
  2704  0714                     	;# 
  2705  0715                     	;# 
  2706  0716                     	;# 
  2707  0717                     	;# 
  2708  0718                     	;# 
  2709  0719                     	;# 
  2710  071A                     	;# 
  2711  071B                     	;# 
  2712  071C                     	;# 
  2713  071D                     	;# 
  2714  071E                     	;# 
  2715  071F                     	;# 
  2716  078E                     	;# 
  2717  078F                     	;# 
  2718  0790                     	;# 
  2719  0791                     	;# 
  2720  0792                     	;# 
  2721  0793                     	;# 
  2722  0794                     	;# 
  2723  0795                     	;# 
  2724  0796                     	;# 
  2725  0797                     	;# 
  2726  0798                     	;# 
  2727  0799                     	;# 
  2728  079A                     	;# 
  2729  079B                     	;# 
  2730  079C                     	;# 
  2731  079D                     	;# 
  2732  079E                     	;# 
  2733  079F                     	;# 
  2734  080D                     	;# 
  2735  080E                     	;# 
  2736  080F                     	;# 
  2737  0810                     	;# 
  2738  0811                     	;# 
  2739  0812                     	;# 
  2740  0813                     	;# 
  2741  0814                     	;# 
  2742  0815                     	;# 
  2743  0816                     	;# 
  2744  0817                     	;# 
  2745  0818                     	;# 
  2746  0819                     	;# 
  2747  081A                     	;# 
  2748  081B                     	;# 
  2749  081C                     	;# 
  2750  081D                     	;# 
  2751  081E                     	;# 
  2752  081F                     	;# 
  2753  090C                     	;# 
  2754  090D                     	;# 
  2755  090E                     	;# 
  2756  090F                     	;# 
  2757  0910                     	;# 
  2758  0911                     	;# 
  2759  0912                     	;# 
  2760  0913                     	;# 
  2761  0914                     	;# 
  2762  0915                     	;# 
  2763  0916                     	;# 
  2764  0917                     	;# 
  2765  0D8E                     	;# 
  2766  0D8F                     	;# 
  2767  0D90                     	;# 
  2768  0D91                     	;# 
  2769  0D91                     	;# 
  2770  0D92                     	;# 
  2771  0D93                     	;# 
  2772  0D93                     	;# 
  2773  0D94                     	;# 
  2774  0D95                     	;# 
  2775  0D95                     	;# 
  2776  0D96                     	;# 
  2777  0D97                     	;# 
  2778  0D97                     	;# 
  2779  0D98                     	;# 
  2780  0D99                     	;# 
  2781  0D99                     	;# 
  2782  0D9A                     	;# 
  2783  0D9B                     	;# 
  2784  0D9C                     	;# 
  2785  0D9C                     	;# 
  2786  0D9D                     	;# 
  2787  0D9D                     	;# 
  2788  0D9E                     	;# 
  2789  0D9F                     	;# 
  2790  0DA0                     	;# 
  2791  0DA1                     	;# 
  2792  0DA1                     	;# 
  2793  0DA2                     	;# 
  2794  0DA3                     	;# 
  2795  0DA3                     	;# 
  2796  0DA4                     	;# 
  2797  0DA5                     	;# 
  2798  0DA5                     	;# 
  2799  0DA6                     	;# 
  2800  0DA7                     	;# 
  2801  0DA7                     	;# 
  2802  0DA8                     	;# 
  2803  0DA9                     	;# 
  2804  0DA9                     	;# 
  2805  0DAA                     	;# 
  2806  0DAB                     	;# 
  2807  0DAC                     	;# 
  2808  0DAC                     	;# 
  2809  0DAD                     	;# 
  2810  0DAD                     	;# 
  2811  0DAE                     	;# 
  2812  0DAF                     	;# 
  2813  0DB0                     	;# 
  2814  0DB1                     	;# 
  2815  0DB1                     	;# 
  2816  0DB2                     	;# 
  2817  0DB3                     	;# 
  2818  0DB3                     	;# 
  2819  0DB4                     	;# 
  2820  0DB5                     	;# 
  2821  0DB5                     	;# 
  2822  0DB6                     	;# 
  2823  0DB7                     	;# 
  2824  0DB7                     	;# 
  2825  0DB8                     	;# 
  2826  0DB9                     	;# 
  2827  0DB9                     	;# 
  2828  0DBA                     	;# 
  2829  0DBB                     	;# 
  2830  0DBC                     	;# 
  2831  0DBC                     	;# 
  2832  0DBD                     	;# 
  2833  0DBD                     	;# 
  2834  0DBE                     	;# 
  2835  0DBF                     	;# 
  2836  0DC0                     	;# 
  2837  0E0C                     	;# 
  2838  0E0D                     	;# 
  2839  0E0E                     	;# 
  2840  0E0F                     	;# 
  2841  0E10                     	;# 
  2842  0E11                     	;# 
  2843  0E12                     	;# 
  2844  0E13                     	;# 
  2845  0E14                     	;# 
  2846  0E15                     	;# 
  2847  0E15                     	;# 
  2848  0E15                     	;# 
  2849  0E16                     	;# 
  2850  0E16                     	;# 
  2851  0E16                     	;# 
  2852  0E17                     	;# 
  2853  0E17                     	;# 
  2854  0E17                     	;# 
  2855  0E18                     	;# 
  2856  0E18                     	;# 
  2857  0E18                     	;# 
  2858  0E19                     	;# 
  2859  0E1A                     	;# 
  2860  0E1B                     	;# 
  2861  0E1D                     	;# 
  2862  0E1E                     	;# 
  2863  0E1F                     	;# 
  2864  0E21                     	;# 
  2865  0E22                     	;# 
  2866  0E23                     	;# 
  2867  0E24                     	;# 
  2868  0E25                     	;# 
  2869  0E26                     	;# 
  2870  0E27                     	;# 
  2871  0E28                     	;# 
  2872  0E29                     	;# 
  2873  0E2D                     	;# 
  2874  0E2E                     	;# 
  2875  0E2F                     	;# 
  2876  0E30                     	;# 
  2877  0E31                     	;# 
  2878  0E32                     	;# 
  2879  0E35                     	;# 
  2880  0E36                     	;# 
  2881  0E37                     	;# 
  2882  0E38                     	;# 
  2883  0E39                     	;# 
  2884  0E3A                     	;# 
  2885  0E3B                     	;# 
  2886  0E3C                     	;# 
  2887  0E3D                     	;# 
  2888  0E3E                     	;# 
  2889  0E90                     	;# 
  2890  0E91                     	;# 
  2891  0E92                     	;# 
  2892  0E93                     	;# 
  2893  0E94                     	;# 
  2894  0E95                     	;# 
  2895  0E96                     	;# 
  2896  0E97                     	;# 
  2897  0E98                     	;# 
  2898  0E99                     	;# 
  2899  0E9A                     	;# 
  2900  0E9B                     	;# 
  2901  0E9C                     	;# 
  2902  0E9D                     	;# 
  2903  0E9E                     	;# 
  2904  0E9F                     	;# 
  2905  0EA0                     	;# 
  2906  0EA1                     	;# 
  2907  0EA2                     	;# 
  2908  0EA3                     	;# 
  2909  0EA4                     	;# 
  2910  0EA5                     	;# 
  2911  0EA6                     	;# 
  2912  0EA7                     	;# 
  2913  0F0F                     	;# 
  2914  0F10                     	;# 
  2915  0F11                     	;# 
  2916  0F12                     	;# 
  2917  0F13                     	;# 
  2918  0F14                     	;# 
  2919  0F15                     	;# 
  2920  0F16                     	;# 
  2921  0F17                     	;# 
  2922  0F18                     	;# 
  2923  0F19                     	;# 
  2924  0F1A                     	;# 
  2925  0F1B                     	;# 
  2926  0F1C                     	;# 
  2927  0F1D                     	;# 
  2928  0F1E                     	;# 
  2929  0F1F                     	;# 
  2930  0F20                     	;# 
  2931  0F21                     	;# 
  2932  0F22                     	;# 
  2933  0F23                     	;# 
  2934  0F24                     	;# 
  2935  0F25                     	;# 
  2936  0F26                     	;# 
  2937  0F27                     	;# 
  2938  0F28                     	;# 
  2939  0F29                     	;# 
  2940  0F2A                     	;# 
  2941  0F2B                     	;# 
  2942  0F2C                     	;# 
  2943  0F2D                     	;# 
  2944  0F2E                     	;# 
  2945  0F2F                     	;# 
  2946  0F30                     	;# 
  2947  0F31                     	;# 
  2948  0F32                     	;# 
  2949  0F33                     	;# 
  2950  0F34                     	;# 
  2951  0F35                     	;# 
  2952  0F36                     	;# 
  2953  0F37                     	;# 
  2954  0FE4                     	;# 
  2955  0FE5                     	;# 
  2956  0FE6                     	;# 
  2957  0FE7                     	;# 
  2958  0FE8                     	;# 
  2959  0FE9                     	;# 
  2960  0FEA                     	;# 
  2961  0FEB                     	;# 
  2962  0FED                     	;# 
  2963  0FEE                     	;# 
  2964  0FEF                     	;# 
  2965  0000                     	;# 
  2966  0001                     	;# 
  2967  0002                     	;# 
  2968  0003                     	;# 
  2969  0004                     	;# 
  2970  0005                     	;# 
  2971  0006                     	;# 
  2972  0007                     	;# 
  2973  0008                     	;# 
  2974  0009                     	;# 
  2975  000A                     	;# 
  2976  000B                     	;# 
  2977  000C                     	;# 
  2978  000D                     	;# 
  2979  000E                     	;# 
  2980  0010                     	;# 
  2981  0011                     	;# 
  2982  0012                     	;# 
  2983  0013                     	;# 
  2984  0014                     	;# 
  2985  0015                     	;# 
  2986  0016                     	;# 
  2987  0017                     	;# 
  2988  0018                     	;# 
  2989  0018                     	;# 
  2990  0019                     	;# 
  2991  001A                     	;# 
  2992  001B                     	;# 
  2993  001C                     	;# 
  2994  001C                     	;# 
  2995  001D                     	;# 
  2996  001E                     	;# 
  2997  001F                     	;# 
  2998  008C                     	;# 
  2999  008D                     	;# 
  3000  008E                     	;# 
  3001  0090                     	;# 
  3002  0091                     	;# 
  3003  0092                     	;# 
  3004  0093                     	;# 
  3005  0094                     	;# 
  3006  0095                     	;# 
  3007  0096                     	;# 
  3008  0097                     	;# 
  3009  0098                     	;# 
  3010  0099                     	;# 
  3011  009A                     	;# 
  3012  009B                     	;# 
  3013  009C                     	;# 
  3014  009D                     	;# 
  3015  009E                     	;# 
  3016  009F                     	;# 
  3017  010C                     	;# 
  3018  010D                     	;# 
  3019  010E                     	;# 
  3020  0111                     	;# 
  3021  0112                     	;# 
  3022  0113                     	;# 
  3023  0114                     	;# 
  3024  0115                     	;# 
  3025  0116                     	;# 
  3026  0117                     	;# 
  3027  0118                     	;# 
  3028  0119                     	;# 
  3029  011A                     	;# 
  3030  011B                     	;# 
  3031  011C                     	;# 
  3032  011D                     	;# 
  3033  018C                     	;# 
  3034  018D                     	;# 
  3035  018E                     	;# 
  3036  0191                     	;# 
  3037  0191                     	;# 
  3038  0192                     	;# 
  3039  0193                     	;# 
  3040  0193                     	;# 
  3041  0194                     	;# 
  3042  0195                     	;# 
  3043  0196                     	;# 
  3044  0197                     	;# 
  3045  0199                     	;# 
  3046  0199                     	;# 
  3047  0199                     	;# 
  3048  019A                     	;# 
  3049  019A                     	;# 
  3050  019A                     	;# 
  3051  019B                     	;# 
  3052  019B                     	;# 
  3053  019B                     	;# 
  3054  019B                     	;# 
  3055  019B                     	;# 
  3056  019C                     	;# 
  3057  019C                     	;# 
  3058  019C                     	;# 
  3059  019D                     	;# 
  3060  019D                     	;# 
  3061  019D                     	;# 
  3062  019E                     	;# 
  3063  019E                     	;# 
  3064  019E                     	;# 
  3065  019F                     	;# 
  3066  019F                     	;# 
  3067  019F                     	;# 
  3068  019F                     	;# 
  3069  019F                     	;# 
  3070  020C                     	;# 
  3071  020D                     	;# 
  3072  020E                     	;# 
  3073  0210                     	;# 
  3074  0211                     	;# 
  3075  0211                     	;# 
  3076  0212                     	;# 
  3077  0212                     	;# 
  3078  0213                     	;# 
  3079  0213                     	;# 
  3080  0214                     	;# 
  3081  0214                     	;# 
  3082  0215                     	;# 
  3083  0215                     	;# 
  3084  0215                     	;# 
  3085  0215                     	;# 
  3086  0216                     	;# 
  3087  0216                     	;# 
  3088  0217                     	;# 
  3089  0217                     	;# 
  3090  021B                     	;# 
  3091  021C                     	;# 
  3092  021D                     	;# 
  3093  021E                     	;# 
  3094  021F                     	;# 
  3095  028C                     	;# 
  3096  028D                     	;# 
  3097  028E                     	;# 
  3098  0291                     	;# 
  3099  0291                     	;# 
  3100  0292                     	;# 
  3101  0293                     	;# 
  3102  0294                     	;# 
  3103  0295                     	;# 
  3104  0295                     	;# 
  3105  0296                     	;# 
  3106  0297                     	;# 
  3107  0298                     	;# 
  3108  0299                     	;# 
  3109  0299                     	;# 
  3110  029A                     	;# 
  3111  029B                     	;# 
  3112  029C                     	;# 
  3113  029E                     	;# 
  3114  029F                     	;# 
  3115  030C                     	;# 
  3116  030D                     	;# 
  3117  030E                     	;# 
  3118  0315                     	;# 
  3119  0316                     	;# 
  3120  0317                     	;# 
  3121  0318                     	;# 
  3122  0319                     	;# 
  3123  031B                     	;# 
  3124  031C                     	;# 
  3125  031D                     	;# 
  3126  031E                     	;# 
  3127  031F                     	;# 
  3128  038C                     	;# 
  3129  038D                     	;# 
  3130  038E                     	;# 
  3131  0390                     	;# 
  3132  0391                     	;# 
  3133  0392                     	;# 
  3134  0393                     	;# 
  3135  0394                     	;# 
  3136  0395                     	;# 
  3137  0396                     	;# 
  3138  0397                     	;# 
  3139  0398                     	;# 
  3140  0399                     	;# 
  3141  039D                     	;# 
  3142  039E                     	;# 
  3143  039F                     	;# 
  3144  040D                     	;# 
  3145  040F                     	;# 
  3146  040F                     	;# 
  3147  0410                     	;# 
  3148  0411                     	;# 
  3149  0412                     	;# 
  3150  0413                     	;# 
  3151  0413                     	;# 
  3152  0414                     	;# 
  3153  0414                     	;# 
  3154  0415                     	;# 
  3155  0416                     	;# 
  3156  0417                     	;# 
  3157  0418                     	;# 
  3158  041A                     	;# 
  3159  041A                     	;# 
  3160  041B                     	;# 
  3161  041B                     	;# 
  3162  041C                     	;# 
  3163  041D                     	;# 
  3164  041E                     	;# 
  3165  041F                     	;# 
  3166  048E                     	;# 
  3167  048E                     	;# 
  3168  048F                     	;# 
  3169  0490                     	;# 
  3170  0491                     	;# 
  3171  0492                     	;# 
  3172  0493                     	;# 
  3173  0493                     	;# 
  3174  0494                     	;# 
  3175  0494                     	;# 
  3176  0495                     	;# 
  3177  0496                     	;# 
  3178  0497                     	;# 
  3179  0498                     	;# 
  3180  049A                     	;# 
  3181  049A                     	;# 
  3182  049B                     	;# 
  3183  049B                     	;# 
  3184  049C                     	;# 
  3185  049D                     	;# 
  3186  049E                     	;# 
  3187  049F                     	;# 
  3188  050F                     	;# 
  3189  0510                     	;# 
  3190  0511                     	;# 
  3191  0512                     	;# 
  3192  0513                     	;# 
  3193  0514                     	;# 
  3194  0515                     	;# 
  3195  0516                     	;# 
  3196  0517                     	;# 
  3197  0518                     	;# 
  3198  0519                     	;# 
  3199  051A                     	;# 
  3200  058D                     	;# 
  3201  058E                     	;# 
  3202  058F                     	;# 
  3203  058F                     	;# 
  3204  058F                     	;# 
  3205  0590                     	;# 
  3206  0590                     	;# 
  3207  0591                     	;# 
  3208  0592                     	;# 
  3209  0592                     	;# 
  3210  0592                     	;# 
  3211  0593                     	;# 
  3212  0593                     	;# 
  3213  0594                     	;# 
  3214  0595                     	;# 
  3215  0595                     	;# 
  3216  0596                     	;# 
  3217  0597                     	;# 
  3218  0597                     	;# 
  3219  0598                     	;# 
  3220  0599                     	;# 
  3221  0599                     	;# 
  3222  0599                     	;# 
  3223  059A                     	;# 
  3224  059A                     	;# 
  3225  059E                     	;# 
  3226  059F                     	;# 
  3227  059F                     	;# 
  3228  0614                     	;# 
  3229  0614                     	;# 
  3230  0615                     	;# 
  3231  0616                     	;# 
  3232  0617                     	;# 
  3233  0617                     	;# 
  3234  0618                     	;# 
  3235  0619                     	;# 
  3236  061A                     	;# 
  3237  061A                     	;# 
  3238  061B                     	;# 
  3239  061C                     	;# 
  3240  068D                     	;# 
  3241  068E                     	;# 
  3242  068F                     	;# 
  3243  0690                     	;# 
  3244  0691                     	;# 
  3245  0692                     	;# 
  3246  0693                     	;# 
  3247  0694                     	;# 
  3248  0695                     	;# 
  3249  0696                     	;# 
  3250  0697                     	;# 
  3251  0698                     	;# 
  3252  0699                     	;# 
  3253  069A                     	;# 
  3254  069B                     	;# 
  3255  069C                     	;# 
  3256  069D                     	;# 
  3257  069E                     	;# 
  3258  069F                     	;# 
  3259  070D                     	;# 
  3260  070E                     	;# 
  3261  070F                     	;# 
  3262  0710                     	;# 
  3263  0711                     	;# 
  3264  0712                     	;# 
  3265  0713                     	;# 
  3266  0714                     	;# 
  3267  0715                     	;# 
  3268  0716                     	;# 
  3269  0717                     	;# 
  3270  0718                     	;# 
  3271  0719                     	;# 
  3272  071A                     	;# 
  3273  071B                     	;# 
  3274  071C                     	;# 
  3275  071D                     	;# 
  3276  071E                     	;# 
  3277  071F                     	;# 
  3278  078E                     	;# 
  3279  078F                     	;# 
  3280  0790                     	;# 
  3281  0791                     	;# 
  3282  0792                     	;# 
  3283  0793                     	;# 
  3284  0794                     	;# 
  3285  0795                     	;# 
  3286  0796                     	;# 
  3287  0797                     	;# 
  3288  0798                     	;# 
  3289  0799                     	;# 
  3290  079A                     	;# 
  3291  079B                     	;# 
  3292  079C                     	;# 
  3293  079D                     	;# 
  3294  079E                     	;# 
  3295  079F                     	;# 
  3296  080D                     	;# 
  3297  080E                     	;# 
  3298  080F                     	;# 
  3299  0810                     	;# 
  3300  0811                     	;# 
  3301  0812                     	;# 
  3302  0813                     	;# 
  3303  0814                     	;# 
  3304  0815                     	;# 
  3305  0816                     	;# 
  3306  0817                     	;# 
  3307  0818                     	;# 
  3308  0819                     	;# 
  3309  081A                     	;# 
  3310  081B                     	;# 
  3311  081C                     	;# 
  3312  081D                     	;# 
  3313  081E                     	;# 
  3314  081F                     	;# 
  3315  090C                     	;# 
  3316  090D                     	;# 
  3317  090E                     	;# 
  3318  090F                     	;# 
  3319  0910                     	;# 
  3320  0911                     	;# 
  3321  0912                     	;# 
  3322  0913                     	;# 
  3323  0914                     	;# 
  3324  0915                     	;# 
  3325  0916                     	;# 
  3326  0917                     	;# 
  3327  0D8E                     	;# 
  3328  0D8F                     	;# 
  3329  0D90                     	;# 
  3330  0D91                     	;# 
  3331  0D91                     	;# 
  3332  0D92                     	;# 
  3333  0D93                     	;# 
  3334  0D93                     	;# 
  3335  0D94                     	;# 
  3336  0D95                     	;# 
  3337  0D95                     	;# 
  3338  0D96                     	;# 
  3339  0D97                     	;# 
  3340  0D97                     	;# 
  3341  0D98                     	;# 
  3342  0D99                     	;# 
  3343  0D99                     	;# 
  3344  0D9A                     	;# 
  3345  0D9B                     	;# 
  3346  0D9C                     	;# 
  3347  0D9C                     	;# 
  3348  0D9D                     	;# 
  3349  0D9D                     	;# 
  3350  0D9E                     	;# 
  3351  0D9F                     	;# 
  3352  0DA0                     	;# 
  3353  0DA1                     	;# 
  3354  0DA1                     	;# 
  3355  0DA2                     	;# 
  3356  0DA3                     	;# 
  3357  0DA3                     	;# 
  3358  0DA4                     	;# 
  3359  0DA5                     	;# 
  3360  0DA5                     	;# 
  3361  0DA6                     	;# 
  3362  0DA7                     	;# 
  3363  0DA7                     	;# 
  3364  0DA8                     	;# 
  3365  0DA9                     	;# 
  3366  0DA9                     	;# 
  3367  0DAA                     	;# 
  3368  0DAB                     	;# 
  3369  0DAC                     	;# 
  3370  0DAC                     	;# 
  3371  0DAD                     	;# 
  3372  0DAD                     	;# 
  3373  0DAE                     	;# 
  3374  0DAF                     	;# 
  3375  0DB0                     	;# 
  3376  0DB1                     	;# 
  3377  0DB1                     	;# 
  3378  0DB2                     	;# 
  3379  0DB3                     	;# 
  3380  0DB3                     	;# 
  3381  0DB4                     	;# 
  3382  0DB5                     	;# 
  3383  0DB5                     	;# 
  3384  0DB6                     	;# 
  3385  0DB7                     	;# 
  3386  0DB7                     	;# 
  3387  0DB8                     	;# 
  3388  0DB9                     	;# 
  3389  0DB9                     	;# 
  3390  0DBA                     	;# 
  3391  0DBB                     	;# 
  3392  0DBC                     	;# 
  3393  0DBC                     	;# 
  3394  0DBD                     	;# 
  3395  0DBD                     	;# 
  3396  0DBE                     	;# 
  3397  0DBF                     	;# 
  3398  0DC0                     	;# 
  3399  0E0C                     	;# 
  3400  0E0D                     	;# 
  3401  0E0E                     	;# 
  3402  0E0F                     	;# 
  3403  0E10                     	;# 
  3404  0E11                     	;# 
  3405  0E12                     	;# 
  3406  0E13                     	;# 
  3407  0E14                     	;# 
  3408  0E15                     	;# 
  3409  0E15                     	;# 
  3410  0E15                     	;# 
  3411  0E16                     	;# 
  3412  0E16                     	;# 
  3413  0E16                     	;# 
  3414  0E17                     	;# 
  3415  0E17                     	;# 
  3416  0E17                     	;# 
  3417  0E18                     	;# 
  3418  0E18                     	;# 
  3419  0E18                     	;# 
  3420  0E19                     	;# 
  3421  0E1A                     	;# 
  3422  0E1B                     	;# 
  3423  0E1D                     	;# 
  3424  0E1E                     	;# 
  3425  0E1F                     	;# 
  3426  0E21                     	;# 
  3427  0E22                     	;# 
  3428  0E23                     	;# 
  3429  0E24                     	;# 
  3430  0E25                     	;# 
  3431  0E26                     	;# 
  3432  0E27                     	;# 
  3433  0E28                     	;# 
  3434  0E29                     	;# 
  3435  0E2D                     	;# 
  3436  0E2E                     	;# 
  3437  0E2F                     	;# 
  3438  0E30                     	;# 
  3439  0E31                     	;# 
  3440  0E32                     	;# 
  3441  0E35                     	;# 
  3442  0E36                     	;# 
  3443  0E37                     	;# 
  3444  0E38                     	;# 
  3445  0E39                     	;# 
  3446  0E3A                     	;# 
  3447  0E3B                     	;# 
  3448  0E3C                     	;# 
  3449  0E3D                     	;# 
  3450  0E3E                     	;# 
  3451  0E90                     	;# 
  3452  0E91                     	;# 
  3453  0E92                     	;# 
  3454  0E93                     	;# 
  3455  0E94                     	;# 
  3456  0E95                     	;# 
  3457  0E96                     	;# 
  3458  0E97                     	;# 
  3459  0E98                     	;# 
  3460  0E99                     	;# 
  3461  0E9A                     	;# 
  3462  0E9B                     	;# 
  3463  0E9C                     	;# 
  3464  0E9D                     	;# 
  3465  0E9E                     	;# 
  3466  0E9F                     	;# 
  3467  0EA0                     	;# 
  3468  0EA1                     	;# 
  3469  0EA2                     	;# 
  3470  0EA3                     	;# 
  3471  0EA4                     	;# 
  3472  0EA5                     	;# 
  3473  0EA6                     	;# 
  3474  0EA7                     	;# 
  3475  0F0F                     	;# 
  3476  0F10                     	;# 
  3477  0F11                     	;# 
  3478  0F12                     	;# 
  3479  0F13                     	;# 
  3480  0F14                     	;# 
  3481  0F15                     	;# 
  3482  0F16                     	;# 
  3483  0F17                     	;# 
  3484  0F18                     	;# 
  3485  0F19                     	;# 
  3486  0F1A                     	;# 
  3487  0F1B                     	;# 
  3488  0F1C                     	;# 
  3489  0F1D                     	;# 
  3490  0F1E                     	;# 
  3491  0F1F                     	;# 
  3492  0F20                     	;# 
  3493  0F21                     	;# 
  3494  0F22                     	;# 
  3495  0F23                     	;# 
  3496  0F24                     	;# 
  3497  0F25                     	;# 
  3498  0F26                     	;# 
  3499  0F27                     	;# 
  3500  0F28                     	;# 
  3501  0F29                     	;# 
  3502  0F2A                     	;# 
  3503  0F2B                     	;# 
  3504  0F2C                     	;# 
  3505  0F2D                     	;# 
  3506  0F2E                     	;# 
  3507  0F2F                     	;# 
  3508  0F30                     	;# 
  3509  0F31                     	;# 
  3510  0F32                     	;# 
  3511  0F33                     	;# 
  3512  0F34                     	;# 
  3513  0F35                     	;# 
  3514  0F36                     	;# 
  3515  0F37                     	;# 
  3516  0FE4                     	;# 
  3517  0FE5                     	;# 
  3518  0FE6                     	;# 
  3519  0FE7                     	;# 
  3520  0FE8                     	;# 
  3521  0FE9                     	;# 
  3522  0FEA                     	;# 
  3523  0FEB                     	;# 
  3524  0FED                     	;# 
  3525  0FEE                     	;# 
  3526  0FEF                     	;# 
  3527  0000                     	;# 
  3528  0001                     	;# 
  3529  0002                     	;# 
  3530  0003                     	;# 
  3531  0004                     	;# 
  3532  0005                     	;# 
  3533  0006                     	;# 
  3534  0007                     	;# 
  3535  0008                     	;# 
  3536  0009                     	;# 
  3537  000A                     	;# 
  3538  000B                     	;# 
  3539  000C                     	;# 
  3540  000D                     	;# 
  3541  000E                     	;# 
  3542  0010                     	;# 
  3543  0011                     	;# 
  3544  0012                     	;# 
  3545  0013                     	;# 
  3546  0014                     	;# 
  3547  0015                     	;# 
  3548  0016                     	;# 
  3549  0017                     	;# 
  3550  0018                     	;# 
  3551  0018                     	;# 
  3552  0019                     	;# 
  3553  001A                     	;# 
  3554  001B                     	;# 
  3555  001C                     	;# 
  3556  001C                     	;# 
  3557  001D                     	;# 
  3558  001E                     	;# 
  3559  001F                     	;# 
  3560  008C                     	;# 
  3561  008D                     	;# 
  3562  008E                     	;# 
  3563  0090                     	;# 
  3564  0091                     	;# 
  3565  0092                     	;# 
  3566  0093                     	;# 
  3567  0094                     	;# 
  3568  0095                     	;# 
  3569  0096                     	;# 
  3570  0097                     	;# 
  3571  0098                     	;# 
  3572  0099                     	;# 
  3573  009A                     	;# 
  3574  009B                     	;# 
  3575  009C                     	;# 
  3576  009D                     	;# 
  3577  009E                     	;# 
  3578  009F                     	;# 
  3579  010C                     	;# 
  3580  010D                     	;# 
  3581  010E                     	;# 
  3582  0111                     	;# 
  3583  0112                     	;# 
  3584  0113                     	;# 
  3585  0114                     	;# 
  3586  0115                     	;# 
  3587  0116                     	;# 
  3588  0117                     	;# 
  3589  0118                     	;# 
  3590  0119                     	;# 
  3591  011A                     	;# 
  3592  011B                     	;# 
  3593  011C                     	;# 
  3594  011D                     	;# 
  3595  018C                     	;# 
  3596  018D                     	;# 
  3597  018E                     	;# 
  3598  0191                     	;# 
  3599  0191                     	;# 
  3600  0192                     	;# 
  3601  0193                     	;# 
  3602  0193                     	;# 
  3603  0194                     	;# 
  3604  0195                     	;# 
  3605  0196                     	;# 
  3606  0197                     	;# 
  3607  0199                     	;# 
  3608  0199                     	;# 
  3609  0199                     	;# 
  3610  019A                     	;# 
  3611  019A                     	;# 
  3612  019A                     	;# 
  3613  019B                     	;# 
  3614  019B                     	;# 
  3615  019B                     	;# 
  3616  019B                     	;# 
  3617  019B                     	;# 
  3618  019C                     	;# 
  3619  019C                     	;# 
  3620  019C                     	;# 
  3621  019D                     	;# 
  3622  019D                     	;# 
  3623  019D                     	;# 
  3624  019E                     	;# 
  3625  019E                     	;# 
  3626  019E                     	;# 
  3627  019F                     	;# 
  3628  019F                     	;# 
  3629  019F                     	;# 
  3630  019F                     	;# 
  3631  019F                     	;# 
  3632  020C                     	;# 
  3633  020D                     	;# 
  3634  020E                     	;# 
  3635  0210                     	;# 
  3636  0211                     	;# 
  3637  0211                     	;# 
  3638  0212                     	;# 
  3639  0212                     	;# 
  3640  0213                     	;# 
  3641  0213                     	;# 
  3642  0214                     	;# 
  3643  0214                     	;# 
  3644  0215                     	;# 
  3645  0215                     	;# 
  3646  0215                     	;# 
  3647  0215                     	;# 
  3648  0216                     	;# 
  3649  0216                     	;# 
  3650  0217                     	;# 
  3651  0217                     	;# 
  3652  021B                     	;# 
  3653  021C                     	;# 
  3654  021D                     	;# 
  3655  021E                     	;# 
  3656  021F                     	;# 
  3657  028C                     	;# 
  3658  028D                     	;# 
  3659  028E                     	;# 
  3660  0291                     	;# 
  3661  0291                     	;# 
  3662  0292                     	;# 
  3663  0293                     	;# 
  3664  0294                     	;# 
  3665  0295                     	;# 
  3666  0295                     	;# 
  3667  0296                     	;# 
  3668  0297                     	;# 
  3669  0298                     	;# 
  3670  0299                     	;# 
  3671  0299                     	;# 
  3672  029A                     	;# 
  3673  029B                     	;# 
  3674  029C                     	;# 
  3675  029E                     	;# 
  3676  029F                     	;# 
  3677  030C                     	;# 
  3678  030D                     	;# 
  3679  030E                     	;# 
  3680  0315                     	;# 
  3681  0316                     	;# 
  3682  0317                     	;# 
  3683  0318                     	;# 
  3684  0319                     	;# 
  3685  031B                     	;# 
  3686  031C                     	;# 
  3687  031D                     	;# 
  3688  031E                     	;# 
  3689  031F                     	;# 
  3690  038C                     	;# 
  3691  038D                     	;# 
  3692  038E                     	;# 
  3693  0390                     	;# 
  3694  0391                     	;# 
  3695  0392                     	;# 
  3696  0393                     	;# 
  3697  0394                     	;# 
  3698  0395                     	;# 
  3699  0396                     	;# 
  3700  0397                     	;# 
  3701  0398                     	;# 
  3702  0399                     	;# 
  3703  039D                     	;# 
  3704  039E                     	;# 
  3705  039F                     	;# 
  3706  040D                     	;# 
  3707  040F                     	;# 
  3708  040F                     	;# 
  3709  0410                     	;# 
  3710  0411                     	;# 
  3711  0412                     	;# 
  3712  0413                     	;# 
  3713  0413                     	;# 
  3714  0414                     	;# 
  3715  0414                     	;# 
  3716  0415                     	;# 
  3717  0416                     	;# 
  3718  0417                     	;# 
  3719  0418                     	;# 
  3720  041A                     	;# 
  3721  041A                     	;# 
  3722  041B                     	;# 
  3723  041B                     	;# 
  3724  041C                     	;# 
  3725  041D                     	;# 
  3726  041E                     	;# 
  3727  041F                     	;# 
  3728  048E                     	;# 
  3729  048E                     	;# 
  3730  048F                     	;# 
  3731  0490                     	;# 
  3732  0491                     	;# 
  3733  0492                     	;# 
  3734  0493                     	;# 
  3735  0493                     	;# 
  3736  0494                     	;# 
  3737  0494                     	;# 
  3738  0495                     	;# 
  3739  0496                     	;# 
  3740  0497                     	;# 
  3741  0498                     	;# 
  3742  049A                     	;# 
  3743  049A                     	;# 
  3744  049B                     	;# 
  3745  049B                     	;# 
  3746  049C                     	;# 
  3747  049D                     	;# 
  3748  049E                     	;# 
  3749  049F                     	;# 
  3750  050F                     	;# 
  3751  0510                     	;# 
  3752  0511                     	;# 
  3753  0512                     	;# 
  3754  0513                     	;# 
  3755  0514                     	;# 
  3756  0515                     	;# 
  3757  0516                     	;# 
  3758  0517                     	;# 
  3759  0518                     	;# 
  3760  0519                     	;# 
  3761  051A                     	;# 
  3762  058D                     	;# 
  3763  058E                     	;# 
  3764  058F                     	;# 
  3765  058F                     	;# 
  3766  058F                     	;# 
  3767  0590                     	;# 
  3768  0590                     	;# 
  3769  0591                     	;# 
  3770  0592                     	;# 
  3771  0592                     	;# 
  3772  0592                     	;# 
  3773  0593                     	;# 
  3774  0593                     	;# 
  3775  0594                     	;# 
  3776  0595                     	;# 
  3777  0595                     	;# 
  3778  0596                     	;# 
  3779  0597                     	;# 
  3780  0597                     	;# 
  3781  0598                     	;# 
  3782  0599                     	;# 
  3783  0599                     	;# 
  3784  0599                     	;# 
  3785  059A                     	;# 
  3786  059A                     	;# 
  3787  059E                     	;# 
  3788  059F                     	;# 
  3789  059F                     	;# 
  3790  0614                     	;# 
  3791  0614                     	;# 
  3792  0615                     	;# 
  3793  0616                     	;# 
  3794  0617                     	;# 
  3795  0617                     	;# 
  3796  0618                     	;# 
  3797  0619                     	;# 
  3798  061A                     	;# 
  3799  061A                     	;# 
  3800  061B                     	;# 
  3801  061C                     	;# 
  3802  068D                     	;# 
  3803  068E                     	;# 
  3804  068F                     	;# 
  3805  0690                     	;# 
  3806  0691                     	;# 
  3807  0692                     	;# 
  3808  0693                     	;# 
  3809  0694                     	;# 
  3810  0695                     	;# 
  3811  0696                     	;# 
  3812  0697                     	;# 
  3813  0698                     	;# 
  3814  0699                     	;# 
  3815  069A                     	;# 
  3816  069B                     	;# 
  3817  069C                     	;# 
  3818  069D                     	;# 
  3819  069E                     	;# 
  3820  069F                     	;# 
  3821  070D                     	;# 
  3822  070E                     	;# 
  3823  070F                     	;# 
  3824  0710                     	;# 
  3825  0711                     	;# 
  3826  0712                     	;# 
  3827  0713                     	;# 
  3828  0714                     	;# 
  3829  0715                     	;# 
  3830  0716                     	;# 
  3831  0717                     	;# 
  3832  0718                     	;# 
  3833  0719                     	;# 
  3834  071A                     	;# 
  3835  071B                     	;# 
  3836  071C                     	;# 
  3837  071D                     	;# 
  3838  071E                     	;# 
  3839  071F                     	;# 
  3840  078E                     	;# 
  3841  078F                     	;# 
  3842  0790                     	;# 
  3843  0791                     	;# 
  3844  0792                     	;# 
  3845  0793                     	;# 
  3846  0794                     	;# 
  3847  0795                     	;# 
  3848  0796                     	;# 
  3849  0797                     	;# 
  3850  0798                     	;# 
  3851  0799                     	;# 
  3852  079A                     	;# 
  3853  079B                     	;# 
  3854  079C                     	;# 
  3855  079D                     	;# 
  3856  079E                     	;# 
  3857  079F                     	;# 
  3858  080D                     	;# 
  3859  080E                     	;# 
  3860  080F                     	;# 
  3861  0810                     	;# 
  3862  0811                     	;# 
  3863  0812                     	;# 
  3864  0813                     	;# 
  3865  0814                     	;# 
  3866  0815                     	;# 
  3867  0816                     	;# 
  3868  0817                     	;# 
  3869  0818                     	;# 
  3870  0819                     	;# 
  3871  081A                     	;# 
  3872  081B                     	;# 
  3873  081C                     	;# 
  3874  081D                     	;# 
  3875  081E                     	;# 
  3876  081F                     	;# 
  3877  090C                     	;# 
  3878  090D                     	;# 
  3879  090E                     	;# 
  3880  090F                     	;# 
  3881  0910                     	;# 
  3882  0911                     	;# 
  3883  0912                     	;# 
  3884  0913                     	;# 
  3885  0914                     	;# 
  3886  0915                     	;# 
  3887  0916                     	;# 
  3888  0917                     	;# 
  3889  0D8E                     	;# 
  3890  0D8F                     	;# 
  3891  0D90                     	;# 
  3892  0D91                     	;# 
  3893  0D91                     	;# 
  3894  0D92                     	;# 
  3895  0D93                     	;# 
  3896  0D93                     	;# 
  3897  0D94                     	;# 
  3898  0D95                     	;# 
  3899  0D95                     	;# 
  3900  0D96                     	;# 
  3901  0D97                     	;# 
  3902  0D97                     	;# 
  3903  0D98                     	;# 
  3904  0D99                     	;# 
  3905  0D99                     	;# 
  3906  0D9A                     	;# 
  3907  0D9B                     	;# 
  3908  0D9C                     	;# 
  3909  0D9C                     	;# 
  3910  0D9D                     	;# 
  3911  0D9D                     	;# 
  3912  0D9E                     	;# 
  3913  0D9F                     	;# 
  3914  0DA0                     	;# 
  3915  0DA1                     	;# 
  3916  0DA1                     	;# 
  3917  0DA2                     	;# 
  3918  0DA3                     	;# 
  3919  0DA3                     	;# 
  3920  0DA4                     	;# 
  3921  0DA5                     	;# 
  3922  0DA5                     	;# 
  3923  0DA6                     	;# 
  3924  0DA7                     	;# 
  3925  0DA7                     	;# 
  3926  0DA8                     	;# 
  3927  0DA9                     	;# 
  3928  0DA9                     	;# 
  3929  0DAA                     	;# 
  3930  0DAB                     	;# 
  3931  0DAC                     	;# 
  3932  0DAC                     	;# 
  3933  0DAD                     	;# 
  3934  0DAD                     	;# 
  3935  0DAE                     	;# 
  3936  0DAF                     	;# 
  3937  0DB0                     	;# 
  3938  0DB1                     	;# 
  3939  0DB1                     	;# 
  3940  0DB2                     	;# 
  3941  0DB3                     	;# 
  3942  0DB3                     	;# 
  3943  0DB4                     	;# 
  3944  0DB5                     	;# 
  3945  0DB5                     	;# 
  3946  0DB6                     	;# 
  3947  0DB7                     	;# 
  3948  0DB7                     	;# 
  3949  0DB8                     	;# 
  3950  0DB9                     	;# 
  3951  0DB9                     	;# 
  3952  0DBA                     	;# 
  3953  0DBB                     	;# 
  3954  0DBC                     	;# 
  3955  0DBC                     	;# 
  3956  0DBD                     	;# 
  3957  0DBD                     	;# 
  3958  0DBE                     	;# 
  3959  0DBF                     	;# 
  3960  0DC0                     	;# 
  3961  0E0C                     	;# 
  3962  0E0D                     	;# 
  3963  0E0E                     	;# 
  3964  0E0F                     	;# 
  3965  0E10                     	;# 
  3966  0E11                     	;# 
  3967  0E12                     	;# 
  3968  0E13                     	;# 
  3969  0E14                     	;# 
  3970  0E15                     	;# 
  3971  0E15                     	;# 
  3972  0E15                     	;# 
  3973  0E16                     	;# 
  3974  0E16                     	;# 
  3975  0E16                     	;# 
  3976  0E17                     	;# 
  3977  0E17                     	;# 
  3978  0E17                     	;# 
  3979  0E18                     	;# 
  3980  0E18                     	;# 
  3981  0E18                     	;# 
  3982  0E19                     	;# 
  3983  0E1A                     	;# 
  3984  0E1B                     	;# 
  3985  0E1D                     	;# 
  3986  0E1E                     	;# 
  3987  0E1F                     	;# 
  3988  0E21                     	;# 
  3989  0E22                     	;# 
  3990  0E23                     	;# 
  3991  0E24                     	;# 
  3992  0E25                     	;# 
  3993  0E26                     	;# 
  3994  0E27                     	;# 
  3995  0E28                     	;# 
  3996  0E29                     	;# 
  3997  0E2D                     	;# 
  3998  0E2E                     	;# 
  3999  0E2F                     	;# 
  4000  0E30                     	;# 
  4001  0E31                     	;# 
  4002  0E32                     	;# 
  4003  0E35                     	;# 
  4004  0E36                     	;# 
  4005  0E37                     	;# 
  4006  0E38                     	;# 
  4007  0E39                     	;# 
  4008  0E3A                     	;# 
  4009  0E3B                     	;# 
  4010  0E3C                     	;# 
  4011  0E3D                     	;# 
  4012  0E3E                     	;# 
  4013  0E90                     	;# 
  4014  0E91                     	;# 
  4015  0E92                     	;# 
  4016  0E93                     	;# 
  4017  0E94                     	;# 
  4018  0E95                     	;# 
  4019  0E96                     	;# 
  4020  0E97                     	;# 
  4021  0E98                     	;# 
  4022  0E99                     	;# 
  4023  0E9A                     	;# 
  4024  0E9B                     	;# 
  4025  0E9C                     	;# 
  4026  0E9D                     	;# 
  4027  0E9E                     	;# 
  4028  0E9F                     	;# 
  4029  0EA0                     	;# 
  4030  0EA1                     	;# 
  4031  0EA2                     	;# 
  4032  0EA3                     	;# 
  4033  0EA4                     	;# 
  4034  0EA5                     	;# 
  4035  0EA6                     	;# 
  4036  0EA7                     	;# 
  4037  0F0F                     	;# 
  4038  0F10                     	;# 
  4039  0F11                     	;# 
  4040  0F12                     	;# 
  4041  0F13                     	;# 
  4042  0F14                     	;# 
  4043  0F15                     	;# 
  4044  0F16                     	;# 
  4045  0F17                     	;# 
  4046  0F18                     	;# 
  4047  0F19                     	;# 
  4048  0F1A                     	;# 
  4049  0F1B                     	;# 
  4050  0F1C                     	;# 
  4051  0F1D                     	;# 
  4052  0F1E                     	;# 
  4053  0F1F                     	;# 
  4054  0F20                     	;# 
  4055  0F21                     	;# 
  4056  0F22                     	;# 
  4057  0F23                     	;# 
  4058  0F24                     	;# 
  4059  0F25                     	;# 
  4060  0F26                     	;# 
  4061  0F27                     	;# 
  4062  0F28                     	;# 
  4063  0F29                     	;# 
  4064  0F2A                     	;# 
  4065  0F2B                     	;# 
  4066  0F2C                     	;# 
  4067  0F2D                     	;# 
  4068  0F2E                     	;# 
  4069  0F2F                     	;# 
  4070  0F30                     	;# 
  4071  0F31                     	;# 
  4072  0F32                     	;# 
  4073  0F33                     	;# 
  4074  0F34                     	;# 
  4075  0F35                     	;# 
  4076  0F36                     	;# 
  4077  0F37                     	;# 
  4078  0FE4                     	;# 
  4079  0FE5                     	;# 
  4080  0FE6                     	;# 
  4081  0FE7                     	;# 
  4082  0FE8                     	;# 
  4083  0FE9                     	;# 
  4084  0FEA                     	;# 
  4085  0FEB                     	;# 
  4086  0FED                     	;# 
  4087  0FEE                     	;# 
  4088  0FEF                     	;# 
  4089  0000                     	;# 
  4090  0001                     	;# 
  4091  0002                     	;# 
  4092  0003                     	;# 
  4093  0004                     	;# 
  4094  0005                     	;# 
  4095  0006                     	;# 
  4096  0007                     	;# 
  4097  0008                     	;# 
  4098  0009                     	;# 
  4099  000A                     	;# 
  4100  000B                     	;# 
  4101  000C                     	;# 
  4102  000D                     	;# 
  4103  000E                     	;# 
  4104  0010                     	;# 
  4105  0011                     	;# 
  4106  0012                     	;# 
  4107  0013                     	;# 
  4108  0014                     	;# 
  4109  0015                     	;# 
  4110  0016                     	;# 
  4111  0017                     	;# 
  4112  0018                     	;# 
  4113  0018                     	;# 
  4114  0019                     	;# 
  4115  001A                     	;# 
  4116  001B                     	;# 
  4117  001C                     	;# 
  4118  001C                     	;# 
  4119  001D                     	;# 
  4120  001E                     	;# 
  4121  001F                     	;# 
  4122  008C                     	;# 
  4123  008D                     	;# 
  4124  008E                     	;# 
  4125  0090                     	;# 
  4126  0091                     	;# 
  4127  0092                     	;# 
  4128  0093                     	;# 
  4129  0094                     	;# 
  4130  0095                     	;# 
  4131  0096                     	;# 
  4132  0097                     	;# 
  4133  0098                     	;# 
  4134  0099                     	;# 
  4135  009A                     	;# 
  4136  009B                     	;# 
  4137  009C                     	;# 
  4138  009D                     	;# 
  4139  009E                     	;# 
  4140  009F                     	;# 
  4141  010C                     	;# 
  4142  010D                     	;# 
  4143  010E                     	;# 
  4144  0111                     	;# 
  4145  0112                     	;# 
  4146  0113                     	;# 
  4147  0114                     	;# 
  4148  0115                     	;# 
  4149  0116                     	;# 
  4150  0117                     	;# 
  4151  0118                     	;# 
  4152  0119                     	;# 
  4153  011A                     	;# 
  4154  011B                     	;# 
  4155  011C                     	;# 
  4156  011D                     	;# 
  4157  018C                     	;# 
  4158  018D                     	;# 
  4159  018E                     	;# 
  4160  0191                     	;# 
  4161  0191                     	;# 
  4162  0192                     	;# 
  4163  0193                     	;# 
  4164  0193                     	;# 
  4165  0194                     	;# 
  4166  0195                     	;# 
  4167  0196                     	;# 
  4168  0197                     	;# 
  4169  0199                     	;# 
  4170  0199                     	;# 
  4171  0199                     	;# 
  4172  019A                     	;# 
  4173  019A                     	;# 
  4174  019A                     	;# 
  4175  019B                     	;# 
  4176  019B                     	;# 
  4177  019B                     	;# 
  4178  019B                     	;# 
  4179  019B                     	;# 
  4180  019C                     	;# 
  4181  019C                     	;# 
  4182  019C                     	;# 
  4183  019D                     	;# 
  4184  019D                     	;# 
  4185  019D                     	;# 
  4186  019E                     	;# 
  4187  019E                     	;# 
  4188  019E                     	;# 
  4189  019F                     	;# 
  4190  019F                     	;# 
  4191  019F                     	;# 
  4192  019F                     	;# 
  4193  019F                     	;# 
  4194  020C                     	;# 
  4195  020D                     	;# 
  4196  020E                     	;# 
  4197  0210                     	;# 
  4198  0211                     	;# 
  4199  0211                     	;# 
  4200  0212                     	;# 
  4201  0212                     	;# 
  4202  0213                     	;# 
  4203  0213                     	;# 
  4204  0214                     	;# 
  4205  0214                     	;# 
  4206  0215                     	;# 
  4207  0215                     	;# 
  4208  0215                     	;# 
  4209  0215                     	;# 
  4210  0216                     	;# 
  4211  0216                     	;# 
  4212  0217                     	;# 
  4213  0217                     	;# 
  4214  021B                     	;# 
  4215  021C                     	;# 
  4216  021D                     	;# 
  4217  021E                     	;# 
  4218  021F                     	;# 
  4219  028C                     	;# 
  4220  028D                     	;# 
  4221  028E                     	;# 
  4222  0291                     	;# 
  4223  0291                     	;# 
  4224  0292                     	;# 
  4225  0293                     	;# 
  4226  0294                     	;# 
  4227  0295                     	;# 
  4228  0295                     	;# 
  4229  0296                     	;# 
  4230  0297                     	;# 
  4231  0298                     	;# 
  4232  0299                     	;# 
  4233  0299                     	;# 
  4234  029A                     	;# 
  4235  029B                     	;# 
  4236  029C                     	;# 
  4237  029E                     	;# 
  4238  029F                     	;# 
  4239  030C                     	;# 
  4240  030D                     	;# 
  4241  030E                     	;# 
  4242  0315                     	;# 
  4243  0316                     	;# 
  4244  0317                     	;# 
  4245  0318                     	;# 
  4246  0319                     	;# 
  4247  031B                     	;# 
  4248  031C                     	;# 
  4249  031D                     	;# 
  4250  031E                     	;# 
  4251  031F                     	;# 
  4252  038C                     	;# 
  4253  038D                     	;# 
  4254  038E                     	;# 
  4255  0390                     	;# 
  4256  0391                     	;# 
  4257  0392                     	;# 
  4258  0393                     	;# 
  4259  0394                     	;# 
  4260  0395                     	;# 
  4261  0396                     	;# 
  4262  0397                     	;# 
  4263  0398                     	;# 
  4264  0399                     	;# 
  4265  039D                     	;# 
  4266  039E                     	;# 
  4267  039F                     	;# 
  4268  040D                     	;# 
  4269  040F                     	;# 
  4270  040F                     	;# 
  4271  0410                     	;# 
  4272  0411                     	;# 
  4273  0412                     	;# 
  4274  0413                     	;# 
  4275  0413                     	;# 
  4276  0414                     	;# 
  4277  0414                     	;# 
  4278  0415                     	;# 
  4279  0416                     	;# 
  4280  0417                     	;# 
  4281  0418                     	;# 
  4282  041A                     	;# 
  4283  041A                     	;# 
  4284  041B                     	;# 
  4285  041B                     	;# 
  4286  041C                     	;# 
  4287  041D                     	;# 
  4288  041E                     	;# 
  4289  041F                     	;# 
  4290  048E                     	;# 
  4291  048E                     	;# 
  4292  048F                     	;# 
  4293  0490                     	;# 
  4294  0491                     	;# 
  4295  0492                     	;# 
  4296  0493                     	;# 
  4297  0493                     	;# 
  4298  0494                     	;# 
  4299  0494                     	;# 
  4300  0495                     	;# 
  4301  0496                     	;# 
  4302  0497                     	;# 
  4303  0498                     	;# 
  4304  049A                     	;# 
  4305  049A                     	;# 
  4306  049B                     	;# 
  4307  049B                     	;# 
  4308  049C                     	;# 
  4309  049D                     	;# 
  4310  049E                     	;# 
  4311  049F                     	;# 
  4312  050F                     	;# 
  4313  0510                     	;# 
  4314  0511                     	;# 
  4315  0512                     	;# 
  4316  0513                     	;# 
  4317  0514                     	;# 
  4318  0515                     	;# 
  4319  0516                     	;# 
  4320  0517                     	;# 
  4321  0518                     	;# 
  4322  0519                     	;# 
  4323  051A                     	;# 
  4324  058D                     	;# 
  4325  058E                     	;# 
  4326  058F                     	;# 
  4327  058F                     	;# 
  4328  058F                     	;# 
  4329  0590                     	;# 
  4330  0590                     	;# 
  4331  0591                     	;# 
  4332  0592                     	;# 
  4333  0592                     	;# 
  4334  0592                     	;# 
  4335  0593                     	;# 
  4336  0593                     	;# 
  4337  0594                     	;# 
  4338  0595                     	;# 
  4339  0595                     	;# 
  4340  0596                     	;# 
  4341  0597                     	;# 
  4342  0597                     	;# 
  4343  0598                     	;# 
  4344  0599                     	;# 
  4345  0599                     	;# 
  4346  0599                     	;# 
  4347  059A                     	;# 
  4348  059A                     	;# 
  4349  059E                     	;# 
  4350  059F                     	;# 
  4351  059F                     	;# 
  4352  0614                     	;# 
  4353  0614                     	;# 
  4354  0615                     	;# 
  4355  0616                     	;# 
  4356  0617                     	;# 
  4357  0617                     	;# 
  4358  0618                     	;# 
  4359  0619                     	;# 
  4360  061A                     	;# 
  4361  061A                     	;# 
  4362  061B                     	;# 
  4363  061C                     	;# 
  4364  068D                     	;# 
  4365  068E                     	;# 
  4366  068F                     	;# 
  4367  0690                     	;# 
  4368  0691                     	;# 
  4369  0692                     	;# 
  4370  0693                     	;# 
  4371  0694                     	;# 
  4372  0695                     	;# 
  4373  0696                     	;# 
  4374  0697                     	;# 
  4375  0698                     	;# 
  4376  0699                     	;# 
  4377  069A                     	;# 
  4378  069B                     	;# 
  4379  069C                     	;# 
  4380  069D                     	;# 
  4381  069E                     	;# 
  4382  069F                     	;# 
  4383  070D                     	;# 
  4384  070E                     	;# 
  4385  070F                     	;# 
  4386  0710                     	;# 
  4387  0711                     	;# 
  4388  0712                     	;# 
  4389  0713                     	;# 
  4390  0714                     	;# 
  4391  0715                     	;# 
  4392  0716                     	;# 
  4393  0717                     	;# 
  4394  0718                     	;# 
  4395  0719                     	;# 
  4396  071A                     	;# 
  4397  071B                     	;# 
  4398  071C                     	;# 
  4399  071D                     	;# 
  4400  071E                     	;# 
  4401  071F                     	;# 
  4402  078E                     	;# 
  4403  078F                     	;# 
  4404  0790                     	;# 
  4405  0791                     	;# 
  4406  0792                     	;# 
  4407  0793                     	;# 
  4408  0794                     	;# 
  4409  0795                     	;# 
  4410  0796                     	;# 
  4411  0797                     	;# 
  4412  0798                     	;# 
  4413  0799                     	;# 
  4414  079A                     	;# 
  4415  079B                     	;# 
  4416  079C                     	;# 
  4417  079D                     	;# 
  4418  079E                     	;# 
  4419  079F                     	;# 
  4420  080D                     	;# 
  4421  080E                     	;# 
  4422  080F                     	;# 
  4423  0810                     	;# 
  4424  0811                     	;# 
  4425  0812                     	;# 
  4426  0813                     	;# 
  4427  0814                     	;# 
  4428  0815                     	;# 
  4429  0816                     	;# 
  4430  0817                     	;# 
  4431  0818                     	;# 
  4432  0819                     	;# 
  4433  081A                     	;# 
  4434  081B                     	;# 
  4435  081C                     	;# 
  4436  081D                     	;# 
  4437  081E                     	;# 
  4438  081F                     	;# 
  4439  090C                     	;# 
  4440  090D                     	;# 
  4441  090E                     	;# 
  4442  090F                     	;# 
  4443  0910                     	;# 
  4444  0911                     	;# 
  4445  0912                     	;# 
  4446  0913                     	;# 
  4447  0914                     	;# 
  4448  0915                     	;# 
  4449  0916                     	;# 
  4450  0917                     	;# 
  4451  0D8E                     	;# 
  4452  0D8F                     	;# 
  4453  0D90                     	;# 
  4454  0D91                     	;# 
  4455  0D91                     	;# 
  4456  0D92                     	;# 
  4457  0D93                     	;# 
  4458  0D93                     	;# 
  4459  0D94                     	;# 
  4460  0D95                     	;# 
  4461  0D95                     	;# 
  4462  0D96                     	;# 
  4463  0D97                     	;# 
  4464  0D97                     	;# 
  4465  0D98                     	;# 
  4466  0D99                     	;# 
  4467  0D99                     	;# 
  4468  0D9A                     	;# 
  4469  0D9B                     	;# 
  4470  0D9C                     	;# 
  4471  0D9C                     	;# 
  4472  0D9D                     	;# 
  4473  0D9D                     	;# 
  4474  0D9E                     	;# 
  4475  0D9F                     	;# 
  4476  0DA0                     	;# 
  4477  0DA1                     	;# 
  4478  0DA1                     	;# 
  4479  0DA2                     	;# 
  4480  0DA3                     	;# 
  4481  0DA3                     	;# 
  4482  0DA4                     	;# 
  4483  0DA5                     	;# 
  4484  0DA5                     	;# 
  4485  0DA6                     	;# 
  4486  0DA7                     	;# 
  4487  0DA7                     	;# 
  4488  0DA8                     	;# 
  4489  0DA9                     	;# 
  4490  0DA9                     	;# 
  4491  0DAA                     	;# 
  4492  0DAB                     	;# 
  4493  0DAC                     	;# 
  4494  0DAC                     	;# 
  4495  0DAD                     	;# 
  4496  0DAD                     	;# 
  4497  0DAE                     	;# 
  4498  0DAF                     	;# 
  4499  0DB0                     	;# 
  4500  0DB1                     	;# 
  4501  0DB1                     	;# 
  4502  0DB2                     	;# 
  4503  0DB3                     	;# 
  4504  0DB3                     	;# 
  4505  0DB4                     	;# 
  4506  0DB5                     	;# 
  4507  0DB5                     	;# 
  4508  0DB6                     	;# 
  4509  0DB7                     	;# 
  4510  0DB7                     	;# 
  4511  0DB8                     	;# 
  4512  0DB9                     	;# 
  4513  0DB9                     	;# 
  4514  0DBA                     	;# 
  4515  0DBB                     	;# 
  4516  0DBC                     	;# 
  4517  0DBC                     	;# 
  4518  0DBD                     	;# 
  4519  0DBD                     	;# 
  4520  0DBE                     	;# 
  4521  0DBF                     	;# 
  4522  0DC0                     	;# 
  4523  0E0C                     	;# 
  4524  0E0D                     	;# 
  4525  0E0E                     	;# 
  4526  0E0F                     	;# 
  4527  0E10                     	;# 
  4528  0E11                     	;# 
  4529  0E12                     	;# 
  4530  0E13                     	;# 
  4531  0E14                     	;# 
  4532  0E15                     	;# 
  4533  0E15                     	;# 
  4534  0E15                     	;# 
  4535  0E16                     	;# 
  4536  0E16                     	;# 
  4537  0E16                     	;# 
  4538  0E17                     	;# 
  4539  0E17                     	;# 
  4540  0E17                     	;# 
  4541  0E18                     	;# 
  4542  0E18                     	;# 
  4543  0E18                     	;# 
  4544  0E19                     	;# 
  4545  0E1A                     	;# 
  4546  0E1B                     	;# 
  4547  0E1D                     	;# 
  4548  0E1E                     	;# 
  4549  0E1F                     	;# 
  4550  0E21                     	;# 
  4551  0E22                     	;# 
  4552  0E23                     	;# 
  4553  0E24                     	;# 
  4554  0E25                     	;# 
  4555  0E26                     	;# 
  4556  0E27                     	;# 
  4557  0E28                     	;# 
  4558  0E29                     	;# 
  4559  0E2D                     	;# 
  4560  0E2E                     	;# 
  4561  0E2F                     	;# 
  4562  0E30                     	;# 
  4563  0E31                     	;# 
  4564  0E32                     	;# 
  4565  0E35                     	;# 
  4566  0E36                     	;# 
  4567  0E37                     	;# 
  4568  0E38                     	;# 
  4569  0E39                     	;# 
  4570  0E3A                     	;# 
  4571  0E3B                     	;# 
  4572  0E3C                     	;# 
  4573  0E3D                     	;# 
  4574  0E3E                     	;# 
  4575  0E90                     	;# 
  4576  0E91                     	;# 
  4577  0E92                     	;# 
  4578  0E93                     	;# 
  4579  0E94                     	;# 
  4580  0E95                     	;# 
  4581  0E96                     	;# 
  4582  0E97                     	;# 
  4583  0E98                     	;# 
  4584  0E99                     	;# 
  4585  0E9A                     	;# 
  4586  0E9B                     	;# 
  4587  0E9C                     	;# 
  4588  0E9D                     	;# 
  4589  0E9E                     	;# 
  4590  0E9F                     	;# 
  4591  0EA0                     	;# 
  4592  0EA1                     	;# 
  4593  0EA2                     	;# 
  4594  0EA3                     	;# 
  4595  0EA4                     	;# 
  4596  0EA5                     	;# 
  4597  0EA6                     	;# 
  4598  0EA7                     	;# 
  4599  0F0F                     	;# 
  4600  0F10                     	;# 
  4601  0F11                     	;# 
  4602  0F12                     	;# 
  4603  0F13                     	;# 
  4604  0F14                     	;# 
  4605  0F15                     	;# 
  4606  0F16                     	;# 
  4607  0F17                     	;# 
  4608  0F18                     	;# 
  4609  0F19                     	;# 
  4610  0F1A                     	;# 
  4611  0F1B                     	;# 
  4612  0F1C                     	;# 
  4613  0F1D                     	;# 
  4614  0F1E                     	;# 
  4615  0F1F                     	;# 
  4616  0F20                     	;# 
  4617  0F21                     	;# 
  4618  0F22                     	;# 
  4619  0F23                     	;# 
  4620  0F24                     	;# 
  4621  0F25                     	;# 
  4622  0F26                     	;# 
  4623  0F27                     	;# 
  4624  0F28                     	;# 
  4625  0F29                     	;# 
  4626  0F2A                     	;# 
  4627  0F2B                     	;# 
  4628  0F2C                     	;# 
  4629  0F2D                     	;# 
  4630  0F2E                     	;# 
  4631  0F2F                     	;# 
  4632  0F30                     	;# 
  4633  0F31                     	;# 
  4634  0F32                     	;# 
  4635  0F33                     	;# 
  4636  0F34                     	;# 
  4637  0F35                     	;# 
  4638  0F36                     	;# 
  4639  0F37                     	;# 
  4640  0FE4                     	;# 
  4641  0FE5                     	;# 
  4642  0FE6                     	;# 
  4643  0FE7                     	;# 
  4644  0FE8                     	;# 
  4645  0FE9                     	;# 
  4646  0FEA                     	;# 
  4647  0FEB                     	;# 
  4648  0FED                     	;# 
  4649  0FEE                     	;# 
  4650  0FEF                     	;# 
  4651  0000                     	;# 
  4652  0001                     	;# 
  4653  0002                     	;# 
  4654  0003                     	;# 
  4655  0004                     	;# 
  4656  0005                     	;# 
  4657  0006                     	;# 
  4658  0007                     	;# 
  4659  0008                     	;# 
  4660  0009                     	;# 
  4661  000A                     	;# 
  4662  000B                     	;# 
  4663  000C                     	;# 
  4664  000D                     	;# 
  4665  000E                     	;# 
  4666  0010                     	;# 
  4667  0011                     	;# 
  4668  0012                     	;# 
  4669  0013                     	;# 
  4670  0014                     	;# 
  4671  0015                     	;# 
  4672  0016                     	;# 
  4673  0017                     	;# 
  4674  0018                     	;# 
  4675  0018                     	;# 
  4676  0019                     	;# 
  4677  001A                     	;# 
  4678  001B                     	;# 
  4679  001C                     	;# 
  4680  001C                     	;# 
  4681  001D                     	;# 
  4682  001E                     	;# 
  4683  001F                     	;# 
  4684  008C                     	;# 
  4685  008D                     	;# 
  4686  008E                     	;# 
  4687  0090                     	;# 
  4688  0091                     	;# 
  4689  0092                     	;# 
  4690  0093                     	;# 
  4691  0094                     	;# 
  4692  0095                     	;# 
  4693  0096                     	;# 
  4694  0097                     	;# 
  4695  0098                     	;# 
  4696  0099                     	;# 
  4697  009A                     	;# 
  4698  009B                     	;# 
  4699  009C                     	;# 
  4700  009D                     	;# 
  4701  009E                     	;# 
  4702  009F                     	;# 
  4703  010C                     	;# 
  4704  010D                     	;# 
  4705  010E                     	;# 
  4706  0111                     	;# 
  4707  0112                     	;# 
  4708  0113                     	;# 
  4709  0114                     	;# 
  4710  0115                     	;# 
  4711  0116                     	;# 
  4712  0117                     	;# 
  4713  0118                     	;# 
  4714  0119                     	;# 
  4715  011A                     	;# 
  4716  011B                     	;# 
  4717  011C                     	;# 
  4718  011D                     	;# 
  4719  018C                     	;# 
  4720  018D                     	;# 
  4721  018E                     	;# 
  4722  0191                     	;# 
  4723  0191                     	;# 
  4724  0192                     	;# 
  4725  0193                     	;# 
  4726  0193                     	;# 
  4727  0194                     	;# 
  4728  0195                     	;# 
  4729  0196                     	;# 
  4730  0197                     	;# 
  4731  0199                     	;# 
  4732  0199                     	;# 
  4733  0199                     	;# 
  4734  019A                     	;# 
  4735  019A                     	;# 
  4736  019A                     	;# 
  4737  019B                     	;# 
  4738  019B                     	;# 
  4739  019B                     	;# 
  4740  019B                     	;# 
  4741  019B                     	;# 
  4742  019C                     	;# 
  4743  019C                     	;# 
  4744  019C                     	;# 
  4745  019D                     	;# 
  4746  019D                     	;# 
  4747  019D                     	;# 
  4748  019E                     	;# 
  4749  019E                     	;# 
  4750  019E                     	;# 
  4751  019F                     	;# 
  4752  019F                     	;# 
  4753  019F                     	;# 
  4754  019F                     	;# 
  4755  019F                     	;# 
  4756  020C                     	;# 
  4757  020D                     	;# 
  4758  020E                     	;# 
  4759  0210                     	;# 
  4760  0211                     	;# 
  4761  0211                     	;# 
  4762  0212                     	;# 
  4763  0212                     	;# 
  4764  0213                     	;# 
  4765  0213                     	;# 
  4766  0214                     	;# 
  4767  0214                     	;# 
  4768  0215                     	;# 
  4769  0215                     	;# 
  4770  0215                     	;# 
  4771  0215                     	;# 
  4772  0216                     	;# 
  4773  0216                     	;# 
  4774  0217                     	;# 
  4775  0217                     	;# 
  4776  021B                     	;# 
  4777  021C                     	;# 
  4778  021D                     	;# 
  4779  021E                     	;# 
  4780  021F                     	;# 
  4781  028C                     	;# 
  4782  028D                     	;# 
  4783  028E                     	;# 
  4784  0291                     	;# 
  4785  0291                     	;# 
  4786  0292                     	;# 
  4787  0293                     	;# 
  4788  0294                     	;# 
  4789  0295                     	;# 
  4790  0295                     	;# 
  4791  0296                     	;# 
  4792  0297                     	;# 
  4793  0298                     	;# 
  4794  0299                     	;# 
  4795  0299                     	;# 
  4796  029A                     	;# 
  4797  029B                     	;# 
  4798  029C                     	;# 
  4799  029E                     	;# 
  4800  029F                     	;# 
  4801  030C                     	;# 
  4802  030D                     	;# 
  4803  030E                     	;# 
  4804  0315                     	;# 
  4805  0316                     	;# 
  4806  0317                     	;# 
  4807  0318                     	;# 
  4808  0319                     	;# 
  4809  031B                     	;# 
  4810  031C                     	;# 
  4811  031D                     	;# 
  4812  031E                     	;# 
  4813  031F                     	;# 
  4814  038C                     	;# 
  4815  038D                     	;# 
  4816  038E                     	;# 
  4817  0390                     	;# 
  4818  0391                     	;# 
  4819  0392                     	;# 
  4820  0393                     	;# 
  4821  0394                     	;# 
  4822  0395                     	;# 
  4823  0396                     	;# 
  4824  0397                     	;# 
  4825  0398                     	;# 
  4826  0399                     	;# 
  4827  039D                     	;# 
  4828  039E                     	;# 
  4829  039F                     	;# 
  4830  040D                     	;# 
  4831  040F                     	;# 
  4832  040F                     	;# 
  4833  0410                     	;# 
  4834  0411                     	;# 
  4835  0412                     	;# 
  4836  0413                     	;# 
  4837  0413                     	;# 
  4838  0414                     	;# 
  4839  0414                     	;# 
  4840  0415                     	;# 
  4841  0416                     	;# 
  4842  0417                     	;# 
  4843  0418                     	;# 
  4844  041A                     	;# 
  4845  041A                     	;# 
  4846  041B                     	;# 
  4847  041B                     	;# 
  4848  041C                     	;# 
  4849  041D                     	;# 
  4850  041E                     	;# 
  4851  041F                     	;# 
  4852  048E                     	;# 
  4853  048E                     	;# 
  4854  048F                     	;# 
  4855  0490                     	;# 
  4856  0491                     	;# 
  4857  0492                     	;# 
  4858  0493                     	;# 
  4859  0493                     	;# 
  4860  0494                     	;# 
  4861  0494                     	;# 
  4862  0495                     	;# 
  4863  0496                     	;# 
  4864  0497                     	;# 
  4865  0498                     	;# 
  4866  049A                     	;# 
  4867  049A                     	;# 
  4868  049B                     	;# 
  4869  049B                     	;# 
  4870  049C                     	;# 
  4871  049D                     	;# 
  4872  049E                     	;# 
  4873  049F                     	;# 
  4874  050F                     	;# 
  4875  0510                     	;# 
  4876  0511                     	;# 
  4877  0512                     	;# 
  4878  0513                     	;# 
  4879  0514                     	;# 
  4880  0515                     	;# 
  4881  0516                     	;# 
  4882  0517                     	;# 
  4883  0518                     	;# 
  4884  0519                     	;# 
  4885  051A                     	;# 
  4886  058D                     	;# 
  4887  058E                     	;# 
  4888  058F                     	;# 
  4889  058F                     	;# 
  4890  058F                     	;# 
  4891  0590                     	;# 
  4892  0590                     	;# 
  4893  0591                     	;# 
  4894  0592                     	;# 
  4895  0592                     	;# 
  4896  0592                     	;# 
  4897  0593                     	;# 
  4898  0593                     	;# 
  4899  0594                     	;# 
  4900  0595                     	;# 
  4901  0595                     	;# 
  4902  0596                     	;# 
  4903  0597                     	;# 
  4904  0597                     	;# 
  4905  0598                     	;# 
  4906  0599                     	;# 
  4907  0599                     	;# 
  4908  0599                     	;# 
  4909  059A                     	;# 
  4910  059A                     	;# 
  4911  059E                     	;# 
  4912  059F                     	;# 
  4913  059F                     	;# 
  4914  0614                     	;# 
  4915  0614                     	;# 
  4916  0615                     	;# 
  4917  0616                     	;# 
  4918  0617                     	;# 
  4919  0617                     	;# 
  4920  0618                     	;# 
  4921  0619                     	;# 
  4922  061A                     	;# 
  4923  061A                     	;# 
  4924  061B                     	;# 
  4925  061C                     	;# 
  4926  068D                     	;# 
  4927  068E                     	;# 
  4928  068F                     	;# 
  4929  0690                     	;# 
  4930  0691                     	;# 
  4931  0692                     	;# 
  4932  0693                     	;# 
  4933  0694                     	;# 
  4934  0695                     	;# 
  4935  0696                     	;# 
  4936  0697                     	;# 
  4937  0698                     	;# 
  4938  0699                     	;# 
  4939  069A                     	;# 
  4940  069B                     	;# 
  4941  069C                     	;# 
  4942  069D                     	;# 
  4943  069E                     	;# 
  4944  069F                     	;# 
  4945  070D                     	;# 
  4946  070E                     	;# 
  4947  070F                     	;# 
  4948  0710                     	;# 
  4949  0711                     	;# 
  4950  0712                     	;# 
  4951  0713                     	;# 
  4952  0714                     	;# 
  4953  0715                     	;# 
  4954  0716                     	;# 
  4955  0717                     	;# 
  4956  0718                     	;# 
  4957  0719                     	;# 
  4958  071A                     	;# 
  4959  071B                     	;# 
  4960  071C                     	;# 
  4961  071D                     	;# 
  4962  071E                     	;# 
  4963  071F                     	;# 
  4964  078E                     	;# 
  4965  078F                     	;# 
  4966  0790                     	;# 
  4967  0791                     	;# 
  4968  0792                     	;# 
  4969  0793                     	;# 
  4970  0794                     	;# 
  4971  0795                     	;# 
  4972  0796                     	;# 
  4973  0797                     	;# 
  4974  0798                     	;# 
  4975  0799                     	;# 
  4976  079A                     	;# 
  4977  079B                     	;# 
  4978  079C                     	;# 
  4979  079D                     	;# 
  4980  079E                     	;# 
  4981  079F                     	;# 
  4982  080D                     	;# 
  4983  080E                     	;# 
  4984  080F                     	;# 
  4985  0810                     	;# 
  4986  0811                     	;# 
  4987  0812                     	;# 
  4988  0813                     	;# 
  4989  0814                     	;# 
  4990  0815                     	;# 
  4991  0816                     	;# 
  4992  0817                     	;# 
  4993  0818                     	;# 
  4994  0819                     	;# 
  4995  081A                     	;# 
  4996  081B                     	;# 
  4997  081C                     	;# 
  4998  081D                     	;# 
  4999  081E                     	;# 
  5000  081F                     	;# 
  5001  090C                     	;# 
  5002  090D                     	;# 
  5003  090E                     	;# 
  5004  090F                     	;# 
  5005  0910                     	;# 
  5006  0911                     	;# 
  5007  0912                     	;# 
  5008  0913                     	;# 
  5009  0914                     	;# 
  5010  0915                     	;# 
  5011  0916                     	;# 
  5012  0917                     	;# 
  5013  0D8E                     	;# 
  5014  0D8F                     	;# 
  5015  0D90                     	;# 
  5016  0D91                     	;# 
  5017  0D91                     	;# 
  5018  0D92                     	;# 
  5019  0D93                     	;# 
  5020  0D93                     	;# 
  5021  0D94                     	;# 
  5022  0D95                     	;# 
  5023  0D95                     	;# 
  5024  0D96                     	;# 
  5025  0D97                     	;# 
  5026  0D97                     	;# 
  5027  0D98                     	;# 
  5028  0D99                     	;# 
  5029  0D99                     	;# 
  5030  0D9A                     	;# 
  5031  0D9B                     	;# 
  5032  0D9C                     	;# 
  5033  0D9C                     	;# 
  5034  0D9D                     	;# 
  5035  0D9D                     	;# 
  5036  0D9E                     	;# 
  5037  0D9F                     	;# 
  5038  0DA0                     	;# 
  5039  0DA1                     	;# 
  5040  0DA1                     	;# 
  5041  0DA2                     	;# 
  5042  0DA3                     	;# 
  5043  0DA3                     	;# 
  5044  0DA4                     	;# 
  5045  0DA5                     	;# 
  5046  0DA5                     	;# 
  5047  0DA6                     	;# 
  5048  0DA7                     	;# 
  5049  0DA7                     	;# 
  5050  0DA8                     	;# 
  5051  0DA9                     	;# 
  5052  0DA9                     	;# 
  5053  0DAA                     	;# 
  5054  0DAB                     	;# 
  5055  0DAC                     	;# 
  5056  0DAC                     	;# 
  5057  0DAD                     	;# 
  5058  0DAD                     	;# 
  5059  0DAE                     	;# 
  5060  0DAF                     	;# 
  5061  0DB0                     	;# 
  5062  0DB1                     	;# 
  5063  0DB1                     	;# 
  5064  0DB2                     	;# 
  5065  0DB3                     	;# 
  5066  0DB3                     	;# 
  5067  0DB4                     	;# 
  5068  0DB5                     	;# 
  5069  0DB5                     	;# 
  5070  0DB6                     	;# 
  5071  0DB7                     	;# 
  5072  0DB7                     	;# 
  5073  0DB8                     	;# 
  5074  0DB9                     	;# 
  5075  0DB9                     	;# 
  5076  0DBA                     	;# 
  5077  0DBB                     	;# 
  5078  0DBC                     	;# 
  5079  0DBC                     	;# 
  5080  0DBD                     	;# 
  5081  0DBD                     	;# 
  5082  0DBE                     	;# 
  5083  0DBF                     	;# 
  5084  0DC0                     	;# 
  5085  0E0C                     	;# 
  5086  0E0D                     	;# 
  5087  0E0E                     	;# 
  5088  0E0F                     	;# 
  5089  0E10                     	;# 
  5090  0E11                     	;# 
  5091  0E12                     	;# 
  5092  0E13                     	;# 
  5093  0E14                     	;# 
  5094  0E15                     	;# 
  5095  0E15                     	;# 
  5096  0E15                     	;# 
  5097  0E16                     	;# 
  5098  0E16                     	;# 
  5099  0E16                     	;# 
  5100  0E17                     	;# 
  5101  0E17                     	;# 
  5102  0E17                     	;# 
  5103  0E18                     	;# 
  5104  0E18                     	;# 
  5105  0E18                     	;# 
  5106  0E19                     	;# 
  5107  0E1A                     	;# 
  5108  0E1B                     	;# 
  5109  0E1D                     	;# 
  5110  0E1E                     	;# 
  5111  0E1F                     	;# 
  5112  0E21                     	;# 
  5113  0E22                     	;# 
  5114  0E23                     	;# 
  5115  0E24                     	;# 
  5116  0E25                     	;# 
  5117  0E26                     	;# 
  5118  0E27                     	;# 
  5119  0E28                     	;# 
  5120  0E29                     	;# 
  5121  0E2D                     	;# 
  5122  0E2E                     	;# 
  5123  0E2F                     	;# 
  5124  0E30                     	;# 
  5125  0E31                     	;# 
  5126  0E32                     	;# 
  5127  0E35                     	;# 
  5128  0E36                     	;# 
  5129  0E37                     	;# 
  5130  0E38                     	;# 
  5131  0E39                     	;# 
  5132  0E3A                     	;# 
  5133  0E3B                     	;# 
  5134  0E3C                     	;# 
  5135  0E3D                     	;# 
  5136  0E3E                     	;# 
  5137  0E90                     	;# 
  5138  0E91                     	;# 
  5139  0E92                     	;# 
  5140  0E93                     	;# 
  5141  0E94                     	;# 
  5142  0E95                     	;# 
  5143  0E96                     	;# 
  5144  0E97                     	;# 
  5145  0E98                     	;# 
  5146  0E99                     	;# 
  5147  0E9A                     	;# 
  5148  0E9B                     	;# 
  5149  0E9C                     	;# 
  5150  0E9D                     	;# 
  5151  0E9E                     	;# 
  5152  0E9F                     	;# 
  5153  0EA0                     	;# 
  5154  0EA1                     	;# 
  5155  0EA2                     	;# 
  5156  0EA3                     	;# 
  5157  0EA4                     	;# 
  5158  0EA5                     	;# 
  5159  0EA6                     	;# 
  5160  0EA7                     	;# 
  5161  0F0F                     	;# 
  5162  0F10                     	;# 
  5163  0F11                     	;# 
  5164  0F12                     	;# 
  5165  0F13                     	;# 
  5166  0F14                     	;# 
  5167  0F15                     	;# 
  5168  0F16                     	;# 
  5169  0F17                     	;# 
  5170  0F18                     	;# 
  5171  0F19                     	;# 
  5172  0F1A                     	;# 
  5173  0F1B                     	;# 
  5174  0F1C                     	;# 
  5175  0F1D                     	;# 
  5176  0F1E                     	;# 
  5177  0F1F                     	;# 
  5178  0F20                     	;# 
  5179  0F21                     	;# 
  5180  0F22                     	;# 
  5181  0F23                     	;# 
  5182  0F24                     	;# 
  5183  0F25                     	;# 
  5184  0F26                     	;# 
  5185  0F27                     	;# 
  5186  0F28                     	;# 
  5187  0F29                     	;# 
  5188  0F2A                     	;# 
  5189  0F2B                     	;# 
  5190  0F2C                     	;# 
  5191  0F2D                     	;# 
  5192  0F2E                     	;# 
  5193  0F2F                     	;# 
  5194  0F30                     	;# 
  5195  0F31                     	;# 
  5196  0F32                     	;# 
  5197  0F33                     	;# 
  5198  0F34                     	;# 
  5199  0F35                     	;# 
  5200  0F36                     	;# 
  5201  0F37                     	;# 
  5202  0FE4                     	;# 
  5203  0FE5                     	;# 
  5204  0FE6                     	;# 
  5205  0FE7                     	;# 
  5206  0FE8                     	;# 
  5207  0FE9                     	;# 
  5208  0FEA                     	;# 
  5209  0FEB                     	;# 
  5210  0FED                     	;# 
  5211  0FEE                     	;# 
  5212  0FEF                     	;# 
  5213  0000                     	;# 
  5214  0001                     	;# 
  5215  0002                     	;# 
  5216  0003                     	;# 
  5217  0004                     	;# 
  5218  0005                     	;# 
  5219  0006                     	;# 
  5220  0007                     	;# 
  5221  0008                     	;# 
  5222  0009                     	;# 
  5223  000A                     	;# 
  5224  000B                     	;# 
  5225  000C                     	;# 
  5226  000D                     	;# 
  5227  000E                     	;# 
  5228  0010                     	;# 
  5229  0011                     	;# 
  5230  0012                     	;# 
  5231  0013                     	;# 
  5232  0014                     	;# 
  5233  0015                     	;# 
  5234  0016                     	;# 
  5235  0017                     	;# 
  5236  0018                     	;# 
  5237  0018                     	;# 
  5238  0019                     	;# 
  5239  001A                     	;# 
  5240  001B                     	;# 
  5241  001C                     	;# 
  5242  001C                     	;# 
  5243  001D                     	;# 
  5244  001E                     	;# 
  5245  001F                     	;# 
  5246  008C                     	;# 
  5247  008D                     	;# 
  5248  008E                     	;# 
  5249  0090                     	;# 
  5250  0091                     	;# 
  5251  0092                     	;# 
  5252  0093                     	;# 
  5253  0094                     	;# 
  5254  0095                     	;# 
  5255  0096                     	;# 
  5256  0097                     	;# 
  5257  0098                     	;# 
  5258  0099                     	;# 
  5259  009A                     	;# 
  5260  009B                     	;# 
  5261  009C                     	;# 
  5262  009D                     	;# 
  5263  009E                     	;# 
  5264  009F                     	;# 
  5265  010C                     	;# 
  5266  010D                     	;# 
  5267  010E                     	;# 
  5268  0111                     	;# 
  5269  0112                     	;# 
  5270  0113                     	;# 
  5271  0114                     	;# 
  5272  0115                     	;# 
  5273  0116                     	;# 
  5274  0117                     	;# 
  5275  0118                     	;# 
  5276  0119                     	;# 
  5277  011A                     	;# 
  5278  011B                     	;# 
  5279  011C                     	;# 
  5280  011D                     	;# 
  5281  018C                     	;# 
  5282  018D                     	;# 
  5283  018E                     	;# 
  5284  0191                     	;# 
  5285  0191                     	;# 
  5286  0192                     	;# 
  5287  0193                     	;# 
  5288  0193                     	;# 
  5289  0194                     	;# 
  5290  0195                     	;# 
  5291  0196                     	;# 
  5292  0197                     	;# 
  5293  0199                     	;# 
  5294  0199                     	;# 
  5295  0199                     	;# 
  5296  019A                     	;# 
  5297  019A                     	;# 
  5298  019A                     	;# 
  5299  019B                     	;# 
  5300  019B                     	;# 
  5301  019B                     	;# 
  5302  019B                     	;# 
  5303  019B                     	;# 
  5304  019C                     	;# 
  5305  019C                     	;# 
  5306  019C                     	;# 
  5307  019D                     	;# 
  5308  019D                     	;# 
  5309  019D                     	;# 
  5310  019E                     	;# 
  5311  019E                     	;# 
  5312  019E                     	;# 
  5313  019F                     	;# 
  5314  019F                     	;# 
  5315  019F                     	;# 
  5316  019F                     	;# 
  5317  019F                     	;# 
  5318  020C                     	;# 
  5319  020D                     	;# 
  5320  020E                     	;# 
  5321  0210                     	;# 
  5322  0211                     	;# 
  5323  0211                     	;# 
  5324  0212                     	;# 
  5325  0212                     	;# 
  5326  0213                     	;# 
  5327  0213                     	;# 
  5328  0214                     	;# 
  5329  0214                     	;# 
  5330  0215                     	;# 
  5331  0215                     	;# 
  5332  0215                     	;# 
  5333  0215                     	;# 
  5334  0216                     	;# 
  5335  0216                     	;# 
  5336  0217                     	;# 
  5337  0217                     	;# 
  5338  021B                     	;# 
  5339  021C                     	;# 
  5340  021D                     	;# 
  5341  021E                     	;# 
  5342  021F                     	;# 
  5343  028C                     	;# 
  5344  028D                     	;# 
  5345  028E                     	;# 
  5346  0291                     	;# 
  5347  0291                     	;# 
  5348  0292                     	;# 
  5349  0293                     	;# 
  5350  0294                     	;# 
  5351  0295                     	;# 
  5352  0295                     	;# 
  5353  0296                     	;# 
  5354  0297                     	;# 
  5355  0298                     	;# 
  5356  0299                     	;# 
  5357  0299                     	;# 
  5358  029A                     	;# 
  5359  029B                     	;# 
  5360  029C                     	;# 
  5361  029E                     	;# 
  5362  029F                     	;# 
  5363  030C                     	;# 
  5364  030D                     	;# 
  5365  030E                     	;# 
  5366  0315                     	;# 
  5367  0316                     	;# 
  5368  0317                     	;# 
  5369  0318                     	;# 
  5370  0319                     	;# 
  5371  031B                     	;# 
  5372  031C                     	;# 
  5373  031D                     	;# 
  5374  031E                     	;# 
  5375  031F                     	;# 
  5376  038C                     	;# 
  5377  038D                     	;# 
  5378  038E                     	;# 
  5379  0390                     	;# 
  5380  0391                     	;# 
  5381  0392                     	;# 
  5382  0393                     	;# 
  5383  0394                     	;# 
  5384  0395                     	;# 
  5385  0396                     	;# 
  5386  0397                     	;# 
  5387  0398                     	;# 
  5388  0399                     	;# 
  5389  039D                     	;# 
  5390  039E                     	;# 
  5391  039F                     	;# 
  5392  040D                     	;# 
  5393  040F                     	;# 
  5394  040F                     	;# 
  5395  0410                     	;# 
  5396  0411                     	;# 
  5397  0412                     	;# 
  5398  0413                     	;# 
  5399  0413                     	;# 
  5400  0414                     	;# 
  5401  0414                     	;# 
  5402  0415                     	;# 
  5403  0416                     	;# 
  5404  0417                     	;# 
  5405  0418                     	;# 
  5406  041A                     	;# 
  5407  041A                     	;# 
  5408  041B                     	;# 
  5409  041B                     	;# 
  5410  041C                     	;# 
  5411  041D                     	;# 
  5412  041E                     	;# 
  5413  041F                     	;# 
  5414  048E                     	;# 
  5415  048E                     	;# 
  5416  048F                     	;# 
  5417  0490                     	;# 
  5418  0491                     	;# 
  5419  0492                     	;# 
  5420  0493                     	;# 
  5421  0493                     	;# 
  5422  0494                     	;# 
  5423  0494                     	;# 
  5424  0495                     	;# 
  5425  0496                     	;# 
  5426  0497                     	;# 
  5427  0498                     	;# 
  5428  049A                     	;# 
  5429  049A                     	;# 
  5430  049B                     	;# 
  5431  049B                     	;# 
  5432  049C                     	;# 
  5433  049D                     	;# 
  5434  049E                     	;# 
  5435  049F                     	;# 
  5436  050F                     	;# 
  5437  0510                     	;# 
  5438  0511                     	;# 
  5439  0512                     	;# 
  5440  0513                     	;# 
  5441  0514                     	;# 
  5442  0515                     	;# 
  5443  0516                     	;# 
  5444  0517                     	;# 
  5445  0518                     	;# 
  5446  0519                     	;# 
  5447  051A                     	;# 
  5448  058D                     	;# 
  5449  058E                     	;# 
  5450  058F                     	;# 
  5451  058F                     	;# 
  5452  058F                     	;# 
  5453  0590                     	;# 
  5454  0590                     	;# 
  5455  0591                     	;# 
  5456  0592                     	;# 
  5457  0592                     	;# 
  5458  0592                     	;# 
  5459  0593                     	;# 
  5460  0593                     	;# 
  5461  0594                     	;# 
  5462  0595                     	;# 
  5463  0595                     	;# 
  5464  0596                     	;# 
  5465  0597                     	;# 
  5466  0597                     	;# 
  5467  0598                     	;# 
  5468  0599                     	;# 
  5469  0599                     	;# 
  5470  0599                     	;# 
  5471  059A                     	;# 
  5472  059A                     	;# 
  5473  059E                     	;# 
  5474  059F                     	;# 
  5475  059F                     	;# 
  5476  0614                     	;# 
  5477  0614                     	;# 
  5478  0615                     	;# 
  5479  0616                     	;# 
  5480  0617                     	;# 
  5481  0617                     	;# 
  5482  0618                     	;# 
  5483  0619                     	;# 
  5484  061A                     	;# 
  5485  061A                     	;# 
  5486  061B                     	;# 
  5487  061C                     	;# 
  5488  068D                     	;# 
  5489  068E                     	;# 
  5490  068F                     	;# 
  5491  0690                     	;# 
  5492  0691                     	;# 
  5493  0692                     	;# 
  5494  0693                     	;# 
  5495  0694                     	;# 
  5496  0695                     	;# 
  5497  0696                     	;# 
  5498  0697                     	;# 
  5499  0698                     	;# 
  5500  0699                     	;# 
  5501  069A                     	;# 
  5502  069B                     	;# 
  5503  069C                     	;# 
  5504  069D                     	;# 
  5505  069E                     	;# 
  5506  069F                     	;# 
  5507  070D                     	;# 
  5508  070E                     	;# 
  5509  070F                     	;# 
  5510  0710                     	;# 
  5511  0711                     	;# 
  5512  0712                     	;# 
  5513  0713                     	;# 
  5514  0714                     	;# 
  5515  0715                     	;# 
  5516  0716                     	;# 
  5517  0717                     	;# 
  5518  0718                     	;# 
  5519  0719                     	;# 
  5520  071A                     	;# 
  5521  071B                     	;# 
  5522  071C                     	;# 
  5523  071D                     	;# 
  5524  071E                     	;# 
  5525  071F                     	;# 
  5526  078E                     	;# 
  5527  078F                     	;# 
  5528  0790                     	;# 
  5529  0791                     	;# 
  5530  0792                     	;# 
  5531  0793                     	;# 
  5532  0794                     	;# 
  5533  0795                     	;# 
  5534  0796                     	;# 
  5535  0797                     	;# 
  5536  0798                     	;# 
  5537  0799                     	;# 
  5538  079A                     	;# 
  5539  079B                     	;# 
  5540  079C                     	;# 
  5541  079D                     	;# 
  5542  079E                     	;# 
  5543  079F                     	;# 
  5544  080D                     	;# 
  5545  080E                     	;# 
  5546  080F                     	;# 
  5547  0810                     	;# 
  5548  0811                     	;# 
  5549  0812                     	;# 
  5550  0813                     	;# 
  5551  0814                     	;# 
  5552  0815                     	;# 
  5553  0816                     	;# 
  5554  0817                     	;# 
  5555  0818                     	;# 
  5556  0819                     	;# 
  5557  081A                     	;# 
  5558  081B                     	;# 
  5559  081C                     	;# 
  5560  081D                     	;# 
  5561  081E                     	;# 
  5562  081F                     	;# 
  5563  090C                     	;# 
  5564  090D                     	;# 
  5565  090E                     	;# 
  5566  090F                     	;# 
  5567  0910                     	;# 
  5568  0911                     	;# 
  5569  0912                     	;# 
  5570  0913                     	;# 
  5571  0914                     	;# 
  5572  0915                     	;# 
  5573  0916                     	;# 
  5574  0917                     	;# 
  5575  0D8E                     	;# 
  5576  0D8F                     	;# 
  5577  0D90                     	;# 
  5578  0D91                     	;# 
  5579  0D91                     	;# 
  5580  0D92                     	;# 
  5581  0D93                     	;# 
  5582  0D93                     	;# 
  5583  0D94                     	;# 
  5584  0D95                     	;# 
  5585  0D95                     	;# 
  5586  0D96                     	;# 
  5587  0D97                     	;# 
  5588  0D97                     	;# 
  5589  0D98                     	;# 
  5590  0D99                     	;# 
  5591  0D99                     	;# 
  5592  0D9A                     	;# 
  5593  0D9B                     	;# 
  5594  0D9C                     	;# 
  5595  0D9C                     	;# 
  5596  0D9D                     	;# 
  5597  0D9D                     	;# 
  5598  0D9E                     	;# 
  5599  0D9F                     	;# 
  5600  0DA0                     	;# 
  5601  0DA1                     	;# 
  5602  0DA1                     	;# 
  5603  0DA2                     	;# 
  5604  0DA3                     	;# 
  5605  0DA3                     	;# 
  5606  0DA4                     	;# 
  5607  0DA5                     	;# 
  5608  0DA5                     	;# 
  5609  0DA6                     	;# 
  5610  0DA7                     	;# 
  5611  0DA7                     	;# 
  5612  0DA8                     	;# 
  5613  0DA9                     	;# 
  5614  0DA9                     	;# 
  5615  0DAA                     	;# 
  5616  0DAB                     	;# 
  5617  0DAC                     	;# 
  5618  0DAC                     	;# 
  5619  0DAD                     	;# 
  5620  0DAD                     	;# 
  5621  0DAE                     	;# 
  5622  0DAF                     	;# 
  5623  0DB0                     	;# 
  5624  0DB1                     	;# 
  5625  0DB1                     	;# 
  5626  0DB2                     	;# 
  5627  0DB3                     	;# 
  5628  0DB3                     	;# 
  5629  0DB4                     	;# 
  5630  0DB5                     	;# 
  5631  0DB5                     	;# 
  5632  0DB6                     	;# 
  5633  0DB7                     	;# 
  5634  0DB7                     	;# 
  5635  0DB8                     	;# 
  5636  0DB9                     	;# 
  5637  0DB9                     	;# 
  5638  0DBA                     	;# 
  5639  0DBB                     	;# 
  5640  0DBC                     	;# 
  5641  0DBC                     	;# 
  5642  0DBD                     	;# 
  5643  0DBD                     	;# 
  5644  0DBE                     	;# 
  5645  0DBF                     	;# 
  5646  0DC0                     	;# 
  5647  0E0C                     	;# 
  5648  0E0D                     	;# 
  5649  0E0E                     	;# 
  5650  0E0F                     	;# 
  5651  0E10                     	;# 
  5652  0E11                     	;# 
  5653  0E12                     	;# 
  5654  0E13                     	;# 
  5655  0E14                     	;# 
  5656  0E15                     	;# 
  5657  0E15                     	;# 
  5658  0E15                     	;# 
  5659  0E16                     	;# 
  5660  0E16                     	;# 
  5661  0E16                     	;# 
  5662  0E17                     	;# 
  5663  0E17                     	;# 
  5664  0E17                     	;# 
  5665  0E18                     	;# 
  5666  0E18                     	;# 
  5667  0E18                     	;# 
  5668  0E19                     	;# 
  5669  0E1A                     	;# 
  5670  0E1B                     	;# 
  5671  0E1D                     	;# 
  5672  0E1E                     	;# 
  5673  0E1F                     	;# 
  5674  0E21                     	;# 
  5675  0E22                     	;# 
  5676  0E23                     	;# 
  5677  0E24                     	;# 
  5678  0E25                     	;# 
  5679  0E26                     	;# 
  5680  0E27                     	;# 
  5681  0E28                     	;# 
  5682  0E29                     	;# 
  5683  0E2D                     	;# 
  5684  0E2E                     	;# 
  5685  0E2F                     	;# 
  5686  0E30                     	;# 
  5687  0E31                     	;# 
  5688  0E32                     	;# 
  5689  0E35                     	;# 
  5690  0E36                     	;# 
  5691  0E37                     	;# 
  5692  0E38                     	;# 
  5693  0E39                     	;# 
  5694  0E3A                     	;# 
  5695  0E3B                     	;# 
  5696  0E3C                     	;# 
  5697  0E3D                     	;# 
  5698  0E3E                     	;# 
  5699  0E90                     	;# 
  5700  0E91                     	;# 
  5701  0E92                     	;# 
  5702  0E93                     	;# 
  5703  0E94                     	;# 
  5704  0E95                     	;# 
  5705  0E96                     	;# 
  5706  0E97                     	;# 
  5707  0E98                     	;# 
  5708  0E99                     	;# 
  5709  0E9A                     	;# 
  5710  0E9B                     	;# 
  5711  0E9C                     	;# 
  5712  0E9D                     	;# 
  5713  0E9E                     	;# 
  5714  0E9F                     	;# 
  5715  0EA0                     	;# 
  5716  0EA1                     	;# 
  5717  0EA2                     	;# 
  5718  0EA3                     	;# 
  5719  0EA4                     	;# 
  5720  0EA5                     	;# 
  5721  0EA6                     	;# 
  5722  0EA7                     	;# 
  5723  0F0F                     	;# 
  5724  0F10                     	;# 
  5725  0F11                     	;# 
  5726  0F12                     	;# 
  5727  0F13                     	;# 
  5728  0F14                     	;# 
  5729  0F15                     	;# 
  5730  0F16                     	;# 
  5731  0F17                     	;# 
  5732  0F18                     	;# 
  5733  0F19                     	;# 
  5734  0F1A                     	;# 
  5735  0F1B                     	;# 
  5736  0F1C                     	;# 
  5737  0F1D                     	;# 
  5738  0F1E                     	;# 
  5739  0F1F                     	;# 
  5740  0F20                     	;# 
  5741  0F21                     	;# 
  5742  0F22                     	;# 
  5743  0F23                     	;# 
  5744  0F24                     	;# 
  5745  0F25                     	;# 
  5746  0F26                     	;# 
  5747  0F27                     	;# 
  5748  0F28                     	;# 
  5749  0F29                     	;# 
  5750  0F2A                     	;# 
  5751  0F2B                     	;# 
  5752  0F2C                     	;# 
  5753  0F2D                     	;# 
  5754  0F2E                     	;# 
  5755  0F2F                     	;# 
  5756  0F30                     	;# 
  5757  0F31                     	;# 
  5758  0F32                     	;# 
  5759  0F33                     	;# 
  5760  0F34                     	;# 
  5761  0F35                     	;# 
  5762  0F36                     	;# 
  5763  0F37                     	;# 
  5764  0FE4                     	;# 
  5765  0FE5                     	;# 
  5766  0FE6                     	;# 
  5767  0FE7                     	;# 
  5768  0FE8                     	;# 
  5769  0FE9                     	;# 
  5770  0FEA                     	;# 
  5771  0FEB                     	;# 
  5772  0FED                     	;# 
  5773  0FEE                     	;# 
  5774  0FEF                     	;# 
  5775  0000                     	;# 
  5776  0001                     	;# 
  5777  0002                     	;# 
  5778  0003                     	;# 
  5779  0004                     	;# 
  5780  0005                     	;# 
  5781  0006                     	;# 
  5782  0007                     	;# 
  5783  0008                     	;# 
  5784  0009                     	;# 
  5785  000A                     	;# 
  5786  000B                     	;# 
  5787  000C                     	;# 
  5788  000D                     	;# 
  5789  000E                     	;# 
  5790  0010                     	;# 
  5791  0011                     	;# 
  5792  0012                     	;# 
  5793  0013                     	;# 
  5794  0014                     	;# 
  5795  0015                     	;# 
  5796  0016                     	;# 
  5797  0017                     	;# 
  5798  0018                     	;# 
  5799  0018                     	;# 
  5800  0019                     	;# 
  5801  001A                     	;# 
  5802  001B                     	;# 
  5803  001C                     	;# 
  5804  001C                     	;# 
  5805  001D                     	;# 
  5806  001E                     	;# 
  5807  001F                     	;# 
  5808  008C                     	;# 
  5809  008D                     	;# 
  5810  008E                     	;# 
  5811  0090                     	;# 
  5812  0091                     	;# 
  5813  0092                     	;# 
  5814  0093                     	;# 
  5815  0094                     	;# 
  5816  0095                     	;# 
  5817  0096                     	;# 
  5818  0097                     	;# 
  5819  0098                     	;# 
  5820  0099                     	;# 
  5821  009A                     	;# 
  5822  009B                     	;# 
  5823  009C                     	;# 
  5824  009D                     	;# 
  5825  009E                     	;# 
  5826  009F                     	;# 
  5827  010C                     	;# 
  5828  010D                     	;# 
  5829  010E                     	;# 
  5830  0111                     	;# 
  5831  0112                     	;# 
  5832  0113                     	;# 
  5833  0114                     	;# 
  5834  0115                     	;# 
  5835  0116                     	;# 
  5836  0117                     	;# 
  5837  0118                     	;# 
  5838  0119                     	;# 
  5839  011A                     	;# 
  5840  011B                     	;# 
  5841  011C                     	;# 
  5842  011D                     	;# 
  5843  018C                     	;# 
  5844  018D                     	;# 
  5845  018E                     	;# 
  5846  0191                     	;# 
  5847  0191                     	;# 
  5848  0192                     	;# 
  5849  0193                     	;# 
  5850  0193                     	;# 
  5851  0194                     	;# 
  5852  0195                     	;# 
  5853  0196                     	;# 
  5854  0197                     	;# 
  5855  0199                     	;# 
  5856  0199                     	;# 
  5857  0199                     	;# 
  5858  019A                     	;# 
  5859  019A                     	;# 
  5860  019A                     	;# 
  5861  019B                     	;# 
  5862  019B                     	;# 
  5863  019B                     	;# 
  5864  019B                     	;# 
  5865  019B                     	;# 
  5866  019C                     	;# 
  5867  019C                     	;# 
  5868  019C                     	;# 
  5869  019D                     	;# 
  5870  019D                     	;# 
  5871  019D                     	;# 
  5872  019E                     	;# 
  5873  019E                     	;# 
  5874  019E                     	;# 
  5875  019F                     	;# 
  5876  019F                     	;# 
  5877  019F                     	;# 
  5878  019F                     	;# 
  5879  019F                     	;# 
  5880  020C                     	;# 
  5881  020D                     	;# 
  5882  020E                     	;# 
  5883  0210                     	;# 
  5884  0211                     	;# 
  5885  0211                     	;# 
  5886  0212                     	;# 
  5887  0212                     	;# 
  5888  0213                     	;# 
  5889  0213                     	;# 
  5890  0214                     	;# 
  5891  0214                     	;# 
  5892  0215                     	;# 
  5893  0215                     	;# 
  5894  0215                     	;# 
  5895  0215                     	;# 
  5896  0216                     	;# 
  5897  0216                     	;# 
  5898  0217                     	;# 
  5899  0217                     	;# 
  5900  021B                     	;# 
  5901  021C                     	;# 
  5902  021D                     	;# 
  5903  021E                     	;# 
  5904  021F                     	;# 
  5905  028C                     	;# 
  5906  028D                     	;# 
  5907  028E                     	;# 
  5908  0291                     	;# 
  5909  0291                     	;# 
  5910  0292                     	;# 
  5911  0293                     	;# 
  5912  0294                     	;# 
  5913  0295                     	;# 
  5914  0295                     	;# 
  5915  0296                     	;# 
  5916  0297                     	;# 
  5917  0298                     	;# 
  5918  0299                     	;# 
  5919  0299                     	;# 
  5920  029A                     	;# 
  5921  029B                     	;# 
  5922  029C                     	;# 
  5923  029E                     	;# 
  5924  029F                     	;# 
  5925  030C                     	;# 
  5926  030D                     	;# 
  5927  030E                     	;# 
  5928  0315                     	;# 
  5929  0316                     	;# 
  5930  0317                     	;# 
  5931  0318                     	;# 
  5932  0319                     	;# 
  5933  031B                     	;# 
  5934  031C                     	;# 
  5935  031D                     	;# 
  5936  031E                     	;# 
  5937  031F                     	;# 
  5938  038C                     	;# 
  5939  038D                     	;# 
  5940  038E                     	;# 
  5941  0390                     	;# 
  5942  0391                     	;# 
  5943  0392                     	;# 
  5944  0393                     	;# 
  5945  0394                     	;# 
  5946  0395                     	;# 
  5947  0396                     	;# 
  5948  0397                     	;# 
  5949  0398                     	;# 
  5950  0399                     	;# 
  5951  039D                     	;# 
  5952  039E                     	;# 
  5953  039F                     	;# 
  5954  040D                     	;# 
  5955  040F                     	;# 
  5956  040F                     	;# 
  5957  0410                     	;# 
  5958  0411                     	;# 
  5959  0412                     	;# 
  5960  0413                     	;# 
  5961  0413                     	;# 
  5962  0414                     	;# 
  5963  0414                     	;# 
  5964  0415                     	;# 
  5965  0416                     	;# 
  5966  0417                     	;# 
  5967  0418                     	;# 
  5968  041A                     	;# 
  5969  041A                     	;# 
  5970  041B                     	;# 
  5971  041B                     	;# 
  5972  041C                     	;# 
  5973  041D                     	;# 
  5974  041E                     	;# 
  5975  041F                     	;# 
  5976  048E                     	;# 
  5977  048E                     	;# 
  5978  048F                     	;# 
  5979  0490                     	;# 
  5980  0491                     	;# 
  5981  0492                     	;# 
  5982  0493                     	;# 
  5983  0493                     	;# 
  5984  0494                     	;# 
  5985  0494                     	;# 
  5986  0495                     	;# 
  5987  0496                     	;# 
  5988  0497                     	;# 
  5989  0498                     	;# 
  5990  049A                     	;# 
  5991  049A                     	;# 
  5992  049B                     	;# 
  5993  049B                     	;# 
  5994  049C                     	;# 
  5995  049D                     	;# 
  5996  049E                     	;# 
  5997  049F                     	;# 
  5998  050F                     	;# 
  5999  0510                     	;# 
  6000  0511                     	;# 
  6001  0512                     	;# 
  6002  0513                     	;# 
  6003  0514                     	;# 
  6004  0515                     	;# 
  6005  0516                     	;# 
  6006  0517                     	;# 
  6007  0518                     	;# 
  6008  0519                     	;# 
  6009  051A                     	;# 
  6010  058D                     	;# 
  6011  058E                     	;# 
  6012  058F                     	;# 
  6013  058F                     	;# 
  6014  058F                     	;# 
  6015  0590                     	;# 
  6016  0590                     	;# 
  6017  0591                     	;# 
  6018  0592                     	;# 
  6019  0592                     	;# 
  6020  0592                     	;# 
  6021  0593                     	;# 
  6022  0593                     	;# 
  6023  0594                     	;# 
  6024  0595                     	;# 
  6025  0595                     	;# 
  6026  0596                     	;# 
  6027  0597                     	;# 
  6028  0597                     	;# 
  6029  0598                     	;# 
  6030  0599                     	;# 
  6031  0599                     	;# 
  6032  0599                     	;# 
  6033  059A                     	;# 
  6034  059A                     	;# 
  6035  059E                     	;# 
  6036  059F                     	;# 
  6037  059F                     	;# 
  6038  0614                     	;# 
  6039  0614                     	;# 
  6040  0615                     	;# 
  6041  0616                     	;# 
  6042  0617                     	;# 
  6043  0617                     	;# 
  6044  0618                     	;# 
  6045  0619                     	;# 
  6046  061A                     	;# 
  6047  061A                     	;# 
  6048  061B                     	;# 
  6049  061C                     	;# 
  6050  068D                     	;# 
  6051  068E                     	;# 
  6052  068F                     	;# 
  6053  0690                     	;# 
  6054  0691                     	;# 
  6055  0692                     	;# 
  6056  0693                     	;# 
  6057  0694                     	;# 
  6058  0695                     	;# 
  6059  0696                     	;# 
  6060  0697                     	;# 
  6061  0698                     	;# 
  6062  0699                     	;# 
  6063  069A                     	;# 
  6064  069B                     	;# 
  6065  069C                     	;# 
  6066  069D                     	;# 
  6067  069E                     	;# 
  6068  069F                     	;# 
  6069  070D                     	;# 
  6070  070E                     	;# 
  6071  070F                     	;# 
  6072  0710                     	;# 
  6073  0711                     	;# 
  6074  0712                     	;# 
  6075  0713                     	;# 
  6076  0714                     	;# 
  6077  0715                     	;# 
  6078  0716                     	;# 
  6079  0717                     	;# 
  6080  0718                     	;# 
  6081  0719                     	;# 
  6082  071A                     	;# 
  6083  071B                     	;# 
  6084  071C                     	;# 
  6085  071D                     	;# 
  6086  071E                     	;# 
  6087  071F                     	;# 
  6088  078E                     	;# 
  6089  078F                     	;# 
  6090  0790                     	;# 
  6091  0791                     	;# 
  6092  0792                     	;# 
  6093  0793                     	;# 
  6094  0794                     	;# 
  6095  0795                     	;# 
  6096  0796                     	;# 
  6097  0797                     	;# 
  6098  0798                     	;# 
  6099  0799                     	;# 
  6100  079A                     	;# 
  6101  079B                     	;# 
  6102  079C                     	;# 
  6103  079D                     	;# 
  6104  079E                     	;# 
  6105  079F                     	;# 
  6106  080D                     	;# 
  6107  080E                     	;# 
  6108  080F                     	;# 
  6109  0810                     	;# 
  6110  0811                     	;# 
  6111  0812                     	;# 
  6112  0813                     	;# 
  6113  0814                     	;# 
  6114  0815                     	;# 
  6115  0816                     	;# 
  6116  0817                     	;# 
  6117  0818                     	;# 
  6118  0819                     	;# 
  6119  081A                     	;# 
  6120  081B                     	;# 
  6121  081C                     	;# 
  6122  081D                     	;# 
  6123  081E                     	;# 
  6124  081F                     	;# 
  6125  090C                     	;# 
  6126  090D                     	;# 
  6127  090E                     	;# 
  6128  090F                     	;# 
  6129  0910                     	;# 
  6130  0911                     	;# 
  6131  0912                     	;# 
  6132  0913                     	;# 
  6133  0914                     	;# 
  6134  0915                     	;# 
  6135  0916                     	;# 
  6136  0917                     	;# 
  6137  0D8E                     	;# 
  6138  0D8F                     	;# 
  6139  0D90                     	;# 
  6140  0D91                     	;# 
  6141  0D91                     	;# 
  6142  0D92                     	;# 
  6143  0D93                     	;# 
  6144  0D93                     	;# 
  6145  0D94                     	;# 
  6146  0D95                     	;# 
  6147  0D95                     	;# 
  6148  0D96                     	;# 
  6149  0D97                     	;# 
  6150  0D97                     	;# 
  6151  0D98                     	;# 
  6152  0D99                     	;# 
  6153  0D99                     	;# 
  6154  0D9A                     	;# 
  6155  0D9B                     	;# 
  6156  0D9C                     	;# 
  6157  0D9C                     	;# 
  6158  0D9D                     	;# 
  6159  0D9D                     	;# 
  6160  0D9E                     	;# 
  6161  0D9F                     	;# 
  6162  0DA0                     	;# 
  6163  0DA1                     	;# 
  6164  0DA1                     	;# 
  6165  0DA2                     	;# 
  6166  0DA3                     	;# 
  6167  0DA3                     	;# 
  6168  0DA4                     	;# 
  6169  0DA5                     	;# 
  6170  0DA5                     	;# 
  6171  0DA6                     	;# 
  6172  0DA7                     	;# 
  6173  0DA7                     	;# 
  6174  0DA8                     	;# 
  6175  0DA9                     	;# 
  6176  0DA9                     	;# 
  6177  0DAA                     	;# 
  6178  0DAB                     	;# 
  6179  0DAC                     	;# 
  6180  0DAC                     	;# 
  6181  0DAD                     	;# 
  6182  0DAD                     	;# 
  6183  0DAE                     	;# 
  6184  0DAF                     	;# 
  6185  0DB0                     	;# 
  6186  0DB1                     	;# 
  6187  0DB1                     	;# 
  6188  0DB2                     	;# 
  6189  0DB3                     	;# 
  6190  0DB3                     	;# 
  6191  0DB4                     	;# 
  6192  0DB5                     	;# 
  6193  0DB5                     	;# 
  6194  0DB6                     	;# 
  6195  0DB7                     	;# 
  6196  0DB7                     	;# 
  6197  0DB8                     	;# 
  6198  0DB9                     	;# 
  6199  0DB9                     	;# 
  6200  0DBA                     	;# 
  6201  0DBB                     	;# 
  6202  0DBC                     	;# 
  6203  0DBC                     	;# 
  6204  0DBD                     	;# 
  6205  0DBD                     	;# 
  6206  0DBE                     	;# 
  6207  0DBF                     	;# 
  6208  0DC0                     	;# 
  6209  0E0C                     	;# 
  6210  0E0D                     	;# 
  6211  0E0E                     	;# 
  6212  0E0F                     	;# 
  6213  0E10                     	;# 
  6214  0E11                     	;# 
  6215  0E12                     	;# 
  6216  0E13                     	;# 
  6217  0E14                     	;# 
  6218  0E15                     	;# 
  6219  0E15                     	;# 
  6220  0E15                     	;# 
  6221  0E16                     	;# 
  6222  0E16                     	;# 
  6223  0E16                     	;# 
  6224  0E17                     	;# 
  6225  0E17                     	;# 
  6226  0E17                     	;# 
  6227  0E18                     	;# 
  6228  0E18                     	;# 
  6229  0E18                     	;# 
  6230  0E19                     	;# 
  6231  0E1A                     	;# 
  6232  0E1B                     	;# 
  6233  0E1D                     	;# 
  6234  0E1E                     	;# 
  6235  0E1F                     	;# 
  6236  0E21                     	;# 
  6237  0E22                     	;# 
  6238  0E23                     	;# 
  6239  0E24                     	;# 
  6240  0E25                     	;# 
  6241  0E26                     	;# 
  6242  0E27                     	;# 
  6243  0E28                     	;# 
  6244  0E29                     	;# 
  6245  0E2D                     	;# 
  6246  0E2E                     	;# 
  6247  0E2F                     	;# 
  6248  0E30                     	;# 
  6249  0E31                     	;# 
  6250  0E32                     	;# 
  6251  0E35                     	;# 
  6252  0E36                     	;# 
  6253  0E37                     	;# 
  6254  0E38                     	;# 
  6255  0E39                     	;# 
  6256  0E3A                     	;# 
  6257  0E3B                     	;# 
  6258  0E3C                     	;# 
  6259  0E3D                     	;# 
  6260  0E3E                     	;# 
  6261  0E90                     	;# 
  6262  0E91                     	;# 
  6263  0E92                     	;# 
  6264  0E93                     	;# 
  6265  0E94                     	;# 
  6266  0E95                     	;# 
  6267  0E96                     	;# 
  6268  0E97                     	;# 
  6269  0E98                     	;# 
  6270  0E99                     	;# 
  6271  0E9A                     	;# 
  6272  0E9B                     	;# 
  6273  0E9C                     	;# 
  6274  0E9D                     	;# 
  6275  0E9E                     	;# 
  6276  0E9F                     	;# 
  6277  0EA0                     	;# 
  6278  0EA1                     	;# 
  6279  0EA2                     	;# 
  6280  0EA3                     	;# 
  6281  0EA4                     	;# 
  6282  0EA5                     	;# 
  6283  0EA6                     	;# 
  6284  0EA7                     	;# 
  6285  0F0F                     	;# 
  6286  0F10                     	;# 
  6287  0F11                     	;# 
  6288  0F12                     	;# 
  6289  0F13                     	;# 
  6290  0F14                     	;# 
  6291  0F15                     	;# 
  6292  0F16                     	;# 
  6293  0F17                     	;# 
  6294  0F18                     	;# 
  6295  0F19                     	;# 
  6296  0F1A                     	;# 
  6297  0F1B                     	;# 
  6298  0F1C                     	;# 
  6299  0F1D                     	;# 
  6300  0F1E                     	;# 
  6301  0F1F                     	;# 
  6302  0F20                     	;# 
  6303  0F21                     	;# 
  6304  0F22                     	;# 
  6305  0F23                     	;# 
  6306  0F24                     	;# 
  6307  0F25                     	;# 
  6308  0F26                     	;# 
  6309  0F27                     	;# 
  6310  0F28                     	;# 
  6311  0F29                     	;# 
  6312  0F2A                     	;# 
  6313  0F2B                     	;# 
  6314  0F2C                     	;# 
  6315  0F2D                     	;# 
  6316  0F2E                     	;# 
  6317  0F2F                     	;# 
  6318  0F30                     	;# 
  6319  0F31                     	;# 
  6320  0F32                     	;# 
  6321  0F33                     	;# 
  6322  0F34                     	;# 
  6323  0F35                     	;# 
  6324  0F36                     	;# 
  6325  0F37                     	;# 
  6326  0FE4                     	;# 
  6327  0FE5                     	;# 
  6328  0FE6                     	;# 
  6329  0FE7                     	;# 
  6330  0FE8                     	;# 
  6331  0FE9                     	;# 
  6332  0FEA                     	;# 
  6333  0FEB                     	;# 
  6334  0FED                     	;# 
  6335  0FEE                     	;# 
  6336  0FEF                     	;# 
  6337  0000                     	;# 
  6338  0001                     	;# 
  6339  0002                     	;# 
  6340  0003                     	;# 
  6341  0004                     	;# 
  6342  0005                     	;# 
  6343  0006                     	;# 
  6344  0007                     	;# 
  6345  0008                     	;# 
  6346  0009                     	;# 
  6347  000A                     	;# 
  6348  000B                     	;# 
  6349  000C                     	;# 
  6350  000D                     	;# 
  6351  000E                     	;# 
  6352  0010                     	;# 
  6353  0011                     	;# 
  6354  0012                     	;# 
  6355  0013                     	;# 
  6356  0014                     	;# 
  6357  0015                     	;# 
  6358  0016                     	;# 
  6359  0017                     	;# 
  6360  0018                     	;# 
  6361  0018                     	;# 
  6362  0019                     	;# 
  6363  001A                     	;# 
  6364  001B                     	;# 
  6365  001C                     	;# 
  6366  001C                     	;# 
  6367  001D                     	;# 
  6368  001E                     	;# 
  6369  001F                     	;# 
  6370  008C                     	;# 
  6371  008D                     	;# 
  6372  008E                     	;# 
  6373  0090                     	;# 
  6374  0091                     	;# 
  6375  0092                     	;# 
  6376  0093                     	;# 
  6377  0094                     	;# 
  6378  0095                     	;# 
  6379  0096                     	;# 
  6380  0097                     	;# 
  6381  0098                     	;# 
  6382  0099                     	;# 
  6383  009A                     	;# 
  6384  009B                     	;# 
  6385  009C                     	;# 
  6386  009D                     	;# 
  6387  009E                     	;# 
  6388  009F                     	;# 
  6389  010C                     	;# 
  6390  010D                     	;# 
  6391  010E                     	;# 
  6392  0111                     	;# 
  6393  0112                     	;# 
  6394  0113                     	;# 
  6395  0114                     	;# 
  6396  0115                     	;# 
  6397  0116                     	;# 
  6398  0117                     	;# 
  6399  0118                     	;# 
  6400  0119                     	;# 
  6401  011A                     	;# 
  6402  011B                     	;# 
  6403  011C                     	;# 
  6404  011D                     	;# 
  6405  018C                     	;# 
  6406  018D                     	;# 
  6407  018E                     	;# 
  6408  0191                     	;# 
  6409  0191                     	;# 
  6410  0192                     	;# 
  6411  0193                     	;# 
  6412  0193                     	;# 
  6413  0194                     	;# 
  6414  0195                     	;# 
  6415  0196                     	;# 
  6416  0197                     	;# 
  6417  0199                     	;# 
  6418  0199                     	;# 
  6419  0199                     	;# 
  6420  019A                     	;# 
  6421  019A                     	;# 
  6422  019A                     	;# 
  6423  019B                     	;# 
  6424  019B                     	;# 
  6425  019B                     	;# 
  6426  019B                     	;# 
  6427  019B                     	;# 
  6428  019C                     	;# 
  6429  019C                     	;# 
  6430  019C                     	;# 
  6431  019D                     	;# 
  6432  019D                     	;# 
  6433  019D                     	;# 
  6434  019E                     	;# 
  6435  019E                     	;# 
  6436  019E                     	;# 
  6437  019F                     	;# 
  6438  019F                     	;# 
  6439  019F                     	;# 
  6440  019F                     	;# 
  6441  019F                     	;# 
  6442  020C                     	;# 
  6443  020D                     	;# 
  6444  020E                     	;# 
  6445  0210                     	;# 
  6446  0211                     	;# 
  6447  0211                     	;# 
  6448  0212                     	;# 
  6449  0212                     	;# 
  6450  0213                     	;# 
  6451  0213                     	;# 
  6452  0214                     	;# 
  6453  0214                     	;# 
  6454  0215                     	;# 
  6455  0215                     	;# 
  6456  0215                     	;# 
  6457  0215                     	;# 
  6458  0216                     	;# 
  6459  0216                     	;# 
  6460  0217                     	;# 
  6461  0217                     	;# 
  6462  021B                     	;# 
  6463  021C                     	;# 
  6464  021D                     	;# 
  6465  021E                     	;# 
  6466  021F                     	;# 
  6467  028C                     	;# 
  6468  028D                     	;# 
  6469  028E                     	;# 
  6470  0291                     	;# 
  6471  0291                     	;# 
  6472  0292                     	;# 
  6473  0293                     	;# 
  6474  0294                     	;# 
  6475  0295                     	;# 
  6476  0295                     	;# 
  6477  0296                     	;# 
  6478  0297                     	;# 
  6479  0298                     	;# 
  6480  0299                     	;# 
  6481  0299                     	;# 
  6482  029A                     	;# 
  6483  029B                     	;# 
  6484  029C                     	;# 
  6485  029E                     	;# 
  6486  029F                     	;# 
  6487  030C                     	;# 
  6488  030D                     	;# 
  6489  030E                     	;# 
  6490  0315                     	;# 
  6491  0316                     	;# 
  6492  0317                     	;# 
  6493  0318                     	;# 
  6494  0319                     	;# 
  6495  031B                     	;# 
  6496  031C                     	;# 
  6497  031D                     	;# 
  6498  031E                     	;# 
  6499  031F                     	;# 
  6500  038C                     	;# 
  6501  038D                     	;# 
  6502  038E                     	;# 
  6503  0390                     	;# 
  6504  0391                     	;# 
  6505  0392                     	;# 
  6506  0393                     	;# 
  6507  0394                     	;# 
  6508  0395                     	;# 
  6509  0396                     	;# 
  6510  0397                     	;# 
  6511  0398                     	;# 
  6512  0399                     	;# 
  6513  039D                     	;# 
  6514  039E                     	;# 
  6515  039F                     	;# 
  6516  040D                     	;# 
  6517  040F                     	;# 
  6518  040F                     	;# 
  6519  0410                     	;# 
  6520  0411                     	;# 
  6521  0412                     	;# 
  6522  0413                     	;# 
  6523  0413                     	;# 
  6524  0414                     	;# 
  6525  0414                     	;# 
  6526  0415                     	;# 
  6527  0416                     	;# 
  6528  0417                     	;# 
  6529  0418                     	;# 
  6530  041A                     	;# 
  6531  041A                     	;# 
  6532  041B                     	;# 
  6533  041B                     	;# 
  6534  041C                     	;# 
  6535  041D                     	;# 
  6536  041E                     	;# 
  6537  041F                     	;# 
  6538  048E                     	;# 
  6539  048E                     	;# 
  6540  048F                     	;# 
  6541  0490                     	;# 
  6542  0491                     	;# 
  6543  0492                     	;# 
  6544  0493                     	;# 
  6545  0493                     	;# 
  6546  0494                     	;# 
  6547  0494                     	;# 
  6548  0495                     	;# 
  6549  0496                     	;# 
  6550  0497                     	;# 
  6551  0498                     	;# 
  6552  049A                     	;# 
  6553  049A                     	;# 
  6554  049B                     	;# 
  6555  049B                     	;# 
  6556  049C                     	;# 
  6557  049D                     	;# 
  6558  049E                     	;# 
  6559  049F                     	;# 
  6560  050F                     	;# 
  6561  0510                     	;# 
  6562  0511                     	;# 
  6563  0512                     	;# 
  6564  0513                     	;# 
  6565  0514                     	;# 
  6566  0515                     	;# 
  6567  0516                     	;# 
  6568  0517                     	;# 
  6569  0518                     	;# 
  6570  0519                     	;# 
  6571  051A                     	;# 
  6572  058D                     	;# 
  6573  058E                     	;# 
  6574  058F                     	;# 
  6575  058F                     	;# 
  6576  058F                     	;# 
  6577  0590                     	;# 
  6578  0590                     	;# 
  6579  0591                     	;# 
  6580  0592                     	;# 
  6581  0592                     	;# 
  6582  0592                     	;# 
  6583  0593                     	;# 
  6584  0593                     	;# 
  6585  0594                     	;# 
  6586  0595                     	;# 
  6587  0595                     	;# 
  6588  0596                     	;# 
  6589  0597                     	;# 
  6590  0597                     	;# 
  6591  0598                     	;# 
  6592  0599                     	;# 
  6593  0599                     	;# 
  6594  0599                     	;# 
  6595  059A                     	;# 
  6596  059A                     	;# 
  6597  059E                     	;# 
  6598  059F                     	;# 
  6599  059F                     	;# 
  6600  0614                     	;# 
  6601  0614                     	;# 
  6602  0615                     	;# 
  6603  0616                     	;# 
  6604  0617                     	;# 
  6605  0617                     	;# 
  6606  0618                     	;# 
  6607  0619                     	;# 
  6608  061A                     	;# 
  6609  061A                     	;# 
  6610  061B                     	;# 
  6611  061C                     	;# 
  6612  068D                     	;# 
  6613  068E                     	;# 
  6614  068F                     	;# 
  6615  0690                     	;# 
  6616  0691                     	;# 
  6617  0692                     	;# 
  6618  0693                     	;# 
  6619  0694                     	;# 
  6620  0695                     	;# 
  6621  0696                     	;# 
  6622  0697                     	;# 
  6623  0698                     	;# 
  6624  0699                     	;# 
  6625  069A                     	;# 
  6626  069B                     	;# 
  6627  069C                     	;# 
  6628  069D                     	;# 
  6629  069E                     	;# 
  6630  069F                     	;# 
  6631  070D                     	;# 
  6632  070E                     	;# 
  6633  070F                     	;# 
  6634  0710                     	;# 
  6635  0711                     	;# 
  6636  0712                     	;# 
  6637  0713                     	;# 
  6638  0714                     	;# 
  6639  0715                     	;# 
  6640  0716                     	;# 
  6641  0717                     	;# 
  6642  0718                     	;# 
  6643  0719                     	;# 
  6644  071A                     	;# 
  6645  071B                     	;# 
  6646  071C                     	;# 
  6647  071D                     	;# 
  6648  071E                     	;# 
  6649  071F                     	;# 
  6650  078E                     	;# 
  6651  078F                     	;# 
  6652  0790                     	;# 
  6653  0791                     	;# 
  6654  0792                     	;# 
  6655  0793                     	;# 
  6656  0794                     	;# 
  6657  0795                     	;# 
  6658  0796                     	;# 
  6659  0797                     	;# 
  6660  0798                     	;# 
  6661  0799                     	;# 
  6662  079A                     	;# 
  6663  079B                     	;# 
  6664  079C                     	;# 
  6665  079D                     	;# 
  6666  079E                     	;# 
  6667  079F                     	;# 
  6668  080D                     	;# 
  6669  080E                     	;# 
  6670  080F                     	;# 
  6671  0810                     	;# 
  6672  0811                     	;# 
  6673  0812                     	;# 
  6674  0813                     	;# 
  6675  0814                     	;# 
  6676  0815                     	;# 
  6677  0816                     	;# 
  6678  0817                     	;# 
  6679  0818                     	;# 
  6680  0819                     	;# 
  6681  081A                     	;# 
  6682  081B                     	;# 
  6683  081C                     	;# 
  6684  081D                     	;# 
  6685  081E                     	;# 
  6686  081F                     	;# 
  6687  090C                     	;# 
  6688  090D                     	;# 
  6689  090E                     	;# 
  6690  090F                     	;# 
  6691  0910                     	;# 
  6692  0911                     	;# 
  6693  0912                     	;# 
  6694  0913                     	;# 
  6695  0914                     	;# 
  6696  0915                     	;# 
  6697  0916                     	;# 
  6698  0917                     	;# 
  6699  0D8E                     	;# 
  6700  0D8F                     	;# 
  6701  0D90                     	;# 
  6702  0D91                     	;# 
  6703  0D91                     	;# 
  6704  0D92                     	;# 
  6705  0D93                     	;# 
  6706  0D93                     	;# 
  6707  0D94                     	;# 
  6708  0D95                     	;# 
  6709  0D95                     	;# 
  6710  0D96                     	;# 
  6711  0D97                     	;# 
  6712  0D97                     	;# 
  6713  0D98                     	;# 
  6714  0D99                     	;# 
  6715  0D99                     	;# 
  6716  0D9A                     	;# 
  6717  0D9B                     	;# 
  6718  0D9C                     	;# 
  6719  0D9C                     	;# 
  6720  0D9D                     	;# 
  6721  0D9D                     	;# 
  6722  0D9E                     	;# 
  6723  0D9F                     	;# 
  6724  0DA0                     	;# 
  6725  0DA1                     	;# 
  6726  0DA1                     	;# 
  6727  0DA2                     	;# 
  6728  0DA3                     	;# 
  6729  0DA3                     	;# 
  6730  0DA4                     	;# 
  6731  0DA5                     	;# 
  6732  0DA5                     	;# 
  6733  0DA6                     	;# 
  6734  0DA7                     	;# 
  6735  0DA7                     	;# 
  6736  0DA8                     	;# 
  6737  0DA9                     	;# 
  6738  0DA9                     	;# 
  6739  0DAA                     	;# 
  6740  0DAB                     	;# 
  6741  0DAC                     	;# 
  6742  0DAC                     	;# 
  6743  0DAD                     	;# 
  6744  0DAD                     	;# 
  6745  0DAE                     	;# 
  6746  0DAF                     	;# 
  6747  0DB0                     	;# 
  6748  0DB1                     	;# 
  6749  0DB1                     	;# 
  6750  0DB2                     	;# 
  6751  0DB3                     	;# 
  6752  0DB3                     	;# 
  6753  0DB4                     	;# 
  6754  0DB5                     	;# 
  6755  0DB5                     	;# 
  6756  0DB6                     	;# 
  6757  0DB7                     	;# 
  6758  0DB7                     	;# 
  6759  0DB8                     	;# 
  6760  0DB9                     	;# 
  6761  0DB9                     	;# 
  6762  0DBA                     	;# 
  6763  0DBB                     	;# 
  6764  0DBC                     	;# 
  6765  0DBC                     	;# 
  6766  0DBD                     	;# 
  6767  0DBD                     	;# 
  6768  0DBE                     	;# 
  6769  0DBF                     	;# 
  6770  0DC0                     	;# 
  6771  0E0C                     	;# 
  6772  0E0D                     	;# 
  6773  0E0E                     	;# 
  6774  0E0F                     	;# 
  6775  0E10                     	;# 
  6776  0E11                     	;# 
  6777  0E12                     	;# 
  6778  0E13                     	;# 
  6779  0E14                     	;# 
  6780  0E15                     	;# 
  6781  0E15                     	;# 
  6782  0E15                     	;# 
  6783  0E16                     	;# 
  6784  0E16                     	;# 
  6785  0E16                     	;# 
  6786  0E17                     	;# 
  6787  0E17                     	;# 
  6788  0E17                     	;# 
  6789  0E18                     	;# 
  6790  0E18                     	;# 
  6791  0E18                     	;# 
  6792  0E19                     	;# 
  6793  0E1A                     	;# 
  6794  0E1B                     	;# 
  6795  0E1D                     	;# 
  6796  0E1E                     	;# 
  6797  0E1F                     	;# 
  6798  0E21                     	;# 
  6799  0E22                     	;# 
  6800  0E23                     	;# 
  6801  0E24                     	;# 
  6802  0E25                     	;# 
  6803  0E26                     	;# 
  6804  0E27                     	;# 
  6805  0E28                     	;# 
  6806  0E29                     	;# 
  6807  0E2D                     	;# 
  6808  0E2E                     	;# 
  6809  0E2F                     	;# 
  6810  0E30                     	;# 
  6811  0E31                     	;# 
  6812  0E32                     	;# 
  6813  0E35                     	;# 
  6814  0E36                     	;# 
  6815  0E37                     	;# 
  6816  0E38                     	;# 
  6817  0E39                     	;# 
  6818  0E3A                     	;# 
  6819  0E3B                     	;# 
  6820  0E3C                     	;# 
  6821  0E3D                     	;# 
  6822  0E3E                     	;# 
  6823  0E90                     	;# 
  6824  0E91                     	;# 
  6825  0E92                     	;# 
  6826  0E93                     	;# 
  6827  0E94                     	;# 
  6828  0E95                     	;# 
  6829  0E96                     	;# 
  6830  0E97                     	;# 
  6831  0E98                     	;# 
  6832  0E99                     	;# 
  6833  0E9A                     	;# 
  6834  0E9B                     	;# 
  6835  0E9C                     	;# 
  6836  0E9D                     	;# 
  6837  0E9E                     	;# 
  6838  0E9F                     	;# 
  6839  0EA0                     	;# 
  6840  0EA1                     	;# 
  6841  0EA2                     	;# 
  6842  0EA3                     	;# 
  6843  0EA4                     	;# 
  6844  0EA5                     	;# 
  6845  0EA6                     	;# 
  6846  0EA7                     	;# 
  6847  0F0F                     	;# 
  6848  0F10                     	;# 
  6849  0F11                     	;# 
  6850  0F12                     	;# 
  6851  0F13                     	;# 
  6852  0F14                     	;# 
  6853  0F15                     	;# 
  6854  0F16                     	;# 
  6855  0F17                     	;# 
  6856  0F18                     	;# 
  6857  0F19                     	;# 
  6858  0F1A                     	;# 
  6859  0F1B                     	;# 
  6860  0F1C                     	;# 
  6861  0F1D                     	;# 
  6862  0F1E                     	;# 
  6863  0F1F                     	;# 
  6864  0F20                     	;# 
  6865  0F21                     	;# 
  6866  0F22                     	;# 
  6867  0F23                     	;# 
  6868  0F24                     	;# 
  6869  0F25                     	;# 
  6870  0F26                     	;# 
  6871  0F27                     	;# 
  6872  0F28                     	;# 
  6873  0F29                     	;# 
  6874  0F2A                     	;# 
  6875  0F2B                     	;# 
  6876  0F2C                     	;# 
  6877  0F2D                     	;# 
  6878  0F2E                     	;# 
  6879  0F2F                     	;# 
  6880  0F30                     	;# 
  6881  0F31                     	;# 
  6882  0F32                     	;# 
  6883  0F33                     	;# 
  6884  0F34                     	;# 
  6885  0F35                     	;# 
  6886  0F36                     	;# 
  6887  0F37                     	;# 
  6888  0FE4                     	;# 
  6889  0FE5                     	;# 
  6890  0FE6                     	;# 
  6891  0FE7                     	;# 
  6892  0FE8                     	;# 
  6893  0FE9                     	;# 
  6894  0FEA                     	;# 
  6895  0FEB                     	;# 
  6896  0FED                     	;# 
  6897  0FEE                     	;# 
  6898  0FEF                     	;_buffer
  6899                           
  6900 ;; Function _rd1RegCompleteHandler is unused but had its address taken
  6901  0000                     
  6902 ;; Function _rd2RegCompleteHandler is unused but had its address taken
  6903  0000                     
  6904 ;; Function _wr2RegCompleteHandler is unused but had its address taken
  6905  0000                     
  6906 ;; Function _rdBlkRegCompleteHandler is unused but had its address taken
  6907  0000                     
  6908 ;; Function i2c_master_example@rd1RegCompleteHandler is unused but had its address taken
  6909  0000                     
  6910 ;; Function i2c_master_example@rd2RegCompleteHandler is unused but had its address taken
  6911  0000                     
  6912 ;; Function _wr1RegCompleteHandler is unused but had its address taken
  6913  0000                     
  6914 ;; Function i2c_master_example@wr2RegCompleteHandler is unused but had its address taken
  6915  0000                     
  6916 ;; Function i2c_master_example@rdBlkRegCompleteHandler is unused but had its address taken
  6917  0000                     
  6918 ;; Function _TMR0_DefaultInterruptHandler is unused but had its address taken
  6919  0000                     
  6920 ;; Function _I2C_DO_IDLE is unused but had its address taken
  6921  0000                     
  6922 ;; Function _I2C_DO_SEND_ADR_READ is unused but had its address taken
  6923  0000                     
  6924 ;; Function _I2C_DO_SEND_ADR_WRITE is unused but had its address taken
  6925  0000                     
  6926 ;; Function _I2C_DO_TX is unused but had its address taken
  6927  0000                     
  6928 ;; Function _I2C_DO_RX is unused but had its address taken
  6929  0000                     
  6930 ;; Function _I2C_DO_RCEN is unused but had its address taken
  6931  0000                     
  6932 ;; Function _I2C_DO_TX_EMPTY is unused but had its address taken
  6933  0000                     
  6934 ;; Function _I2C_DO_SEND_RESTART_READ is unused but had its address taken
  6935  0000                     
  6936 ;; Function _I2C_DO_SEND_RESTART_WRITE is unused but had its address taken
  6937  0000                     
  6938 ;; Function _I2C_DO_SEND_RESTART is unused but had its address taken
  6939  0000                     
  6940 ;; Function _I2C_DO_SEND_STOP is unused but had its address taken
  6941  0000                     
  6942 ;; Function _I2C_DO_RX_ACK is unused but had its address taken
  6943  0000                     
  6944 ;; Function _I2C_DO_RX_NACK_STOP is unused but had its address taken
  6945  0000                     
  6946 ;; Function _I2C_DO_RX_NACK_RESTART is unused but had its address taken
  6947  0000                     
  6948 ;; Function _I2C_DO_RESET is unused but had its address taken
  6949  0000                     
  6950 ;; Function _I2C_DO_ADDRESS_NACK is unused but had its address taken
  6951  0000                     
  6952 ;; Function _I2C_CallbackReturnStop is unused but had its address taken
  6953  0000                     
  6954 ;; Function _I2C_CallbackReturnReset is unused but had its address taken
  6955  0000                     
  6956                           	psect	idataBANK14
  6957  2A32                     __pidataBANK14:	
  6958                           
  6959                           ;initializer for _fireman_set_debounce
  6960  2A32  34B8               	retlw	184
  6961  2A33  340B               	retlw	11
  6962                           
  6963                           ;initializer for _fireman_inc
  6964  2A34  3430               	retlw	48
  6965  2A35  3475               	retlw	117
  6966                           
  6967                           ;initializer for _factory_reset_dec
  6968  2A36  34B8               	retlw	184
  6969  2A37  340B               	retlw	11
  6970                           
  6971                           ;initializer for _mode_btn_debounce
  6972  2A38  3414               	retlw	20
  6973  2A39  3400               	retlw	0
  6974                           
  6975                           ;initializer for _decrease_btn_debounce
  6976  2A3A  3414               	retlw	20
  6977  2A3B  3400               	retlw	0
  6978                           
  6979                           ;initializer for _increase_btn_debounce
  6980  2A3C  3414               	retlw	20
  6981  2A3D  3400               	retlw	0
  6982                           
  6983                           ;initializer for _decrement
  6984  2A3E  3414               	retlw	20
  6985  2A3F  3400               	retlw	0
  6986                           
  6987                           ;initializer for _frmn_speed
  6988  2A40  3464               	retlw	100
  6989                           
  6990                           ;initializer for _speed
  6991  2A41  3432               	retlw	50
  6992                           
  6993                           	psect	idataBANK15
  6994  2B73                     __pidataBANK15:	
  6995                           
  6996                           ;initializer for _newTextLine4
  6997  2B73  342E               	retlw	46
  6998  2B74  3400               	retlw	0
  6999  2B75  3400               	retlw	0
  7000  2B76  3400               	retlw	0
  7001  2B77  3400               	retlw	0
  7002  2B78  3400               	retlw	0
  7003  2B79  3400               	retlw	0
  7004  2B7A  3400               	retlw	0
  7005  2B7B  3400               	retlw	0
  7006  2B7C  3400               	retlw	0
  7007  2B7D  3400               	retlw	0
  7008  2B7E  3400               	retlw	0
  7009  2B7F  3400               	retlw	0
  7010  2B80  3400               	retlw	0
  7011  2B81  3400               	retlw	0
  7012  2B82  3400               	retlw	0
  7013                           
  7014                           ;initializer for _newTextLine1
  7015  2B83  342E               	retlw	46
  7016  2B84  3400               	retlw	0
  7017  2B85  3400               	retlw	0
  7018  2B86  3400               	retlw	0
  7019  2B87  3400               	retlw	0
  7020  2B88  3400               	retlw	0
  7021  2B89  3400               	retlw	0
  7022  2B8A  3400               	retlw	0
  7023  2B8B  3400               	retlw	0
  7024  2B8C  3400               	retlw	0
  7025  2B8D  3400               	retlw	0
  7026  2B8E  3400               	retlw	0
  7027  2B8F  3400               	retlw	0
  7028  2B90  3400               	retlw	0
  7029  2B91  3400               	retlw	0
  7030  2B92  3400               	retlw	0
  7031                           
  7032                           	psect	idataBANK16
  7033  2B53                     __pidataBANK16:	
  7034                           
  7035                           ;initializer for _newTextLine3
  7036  2B53  342E               	retlw	46
  7037  2B54  3400               	retlw	0
  7038  2B55  3400               	retlw	0
  7039  2B56  3400               	retlw	0
  7040  2B57  3400               	retlw	0
  7041  2B58  3400               	retlw	0
  7042  2B59  3400               	retlw	0
  7043  2B5A  3400               	retlw	0
  7044  2B5B  3400               	retlw	0
  7045  2B5C  3400               	retlw	0
  7046  2B5D  3400               	retlw	0
  7047  2B5E  3400               	retlw	0
  7048  2B5F  3400               	retlw	0
  7049  2B60  3400               	retlw	0
  7050  2B61  3400               	retlw	0
  7051  2B62  3400               	retlw	0
  7052                           
  7053                           ;initializer for _newTextLine2
  7054  2B63  342E               	retlw	46
  7055  2B64  3400               	retlw	0
  7056  2B65  3400               	retlw	0
  7057  2B66  3400               	retlw	0
  7058  2B67  3400               	retlw	0
  7059  2B68  3400               	retlw	0
  7060  2B69  3400               	retlw	0
  7061  2B6A  3400               	retlw	0
  7062  2B6B  3400               	retlw	0
  7063  2B6C  3400               	retlw	0
  7064  2B6D  3400               	retlw	0
  7065  2B6E  3400               	retlw	0
  7066  2B6F  3400               	retlw	0
  7067  2B70  3400               	retlw	0
  7068  2B71  3400               	retlw	0
  7069  2B72  3400               	retlw	0
  7070                           
  7071                           	psect	stringtext1
  7072  3000                     __pstringtext1:	
  7073  3000                     _i2c_fsmStateTable:	
  7074  3000  3400               	retlw	0
  7075  3001  3400               	retlw	0
  7076  3002  3400               	retlw	0
  7077  3003  3400               	retlw	0
  7078  3004  3400               	retlw	0
  7079  3005  3400               	retlw	0
  7080  3006  3400               	retlw	0
  7081  3007  3400               	retlw	0
  7082  3008  3400               	retlw	0
  7083  3009  3400               	retlw	0
  7084  300A  3400               	retlw	0
  7085  300B  3400               	retlw	0
  7086  300C  3400               	retlw	0
  7087  300D  3400               	retlw	0
  7088  300E  3400               	retlw	0
  7089  300F  3400               	retlw	0
  7090  3010  3400               	retlw	0
  7091  3011  3400               	retlw	0
  7092  3012  3400               	retlw	0
  7093  3013  3400               	retlw	0
  7094  3014  3400               	retlw	0
  7095  3015  3400               	retlw	0
  7096  3016  3400               	retlw	0
  7097  3017  3400               	retlw	0
  7098  3018  3400               	retlw	0
  7099  3019  3400               	retlw	0
  7100  301A  3400               	retlw	0
  7101  301B  3400               	retlw	0
  7102  301C  3400               	retlw	0
  7103  301D  3400               	retlw	0
  7104  301E  3400               	retlw	0
  7105  301F  3400               	retlw	0
  7106  3020                     __end_of_i2c_fsmStateTable:	
  7107                           
  7108                           	psect	stringtext2
  7109  012A                     __pstringtext2:	
  7110  012A                     _BIG_FONTS:	
  7111  012A  3410               	retlw	16
  7112  012B  3410               	retlw	16
  7113  012C  3420               	retlw	32
  7114  012D  345F               	retlw	95
  7115  012E  3400               	retlw	0
  7116  012F  3400               	retlw	0
  7117  0130  3400               	retlw	0
  7118  0131  3400               	retlw	0
  7119  0132  3400               	retlw	0
  7120  0133  3400               	retlw	0
  7121  0134  3400               	retlw	0
  7122  0135  3400               	retlw	0
  7123  0136  3400               	retlw	0
  7124  0137  3400               	retlw	0
  7125  0138  3400               	retlw	0
  7126  0139  3400               	retlw	0
  7127  013A  3400               	retlw	0
  7128  013B  3400               	retlw	0
  7129  013C  3400               	retlw	0
  7130  013D  3400               	retlw	0
  7131  013E  3400               	retlw	0
  7132  013F  3400               	retlw	0
  7133  0140  3400               	retlw	0
  7134  0141  3400               	retlw	0
  7135  0142  3400               	retlw	0
  7136  0143  3400               	retlw	0
  7137  0144  3400               	retlw	0
  7138  0145  3400               	retlw	0
  7139  0146  3400               	retlw	0
  7140  0147  3400               	retlw	0
  7141  0148  3400               	retlw	0
  7142  0149  3400               	retlw	0
  7143  014A  3400               	retlw	0
  7144  014B  3400               	retlw	0
  7145  014C  3400               	retlw	0
  7146  014D  3400               	retlw	0
  7147  014E  3400               	retlw	0
  7148  014F  3400               	retlw	0
  7149  0150  3400               	retlw	0
  7150  0151  3400               	retlw	0
  7151  0152  34F8               	retlw	248
  7152  0153  34FC               	retlw	252
  7153  0154  34FC               	retlw	252
  7154  0155  34FC               	retlw	252
  7155  0156  34F8               	retlw	248
  7156  0157  3400               	retlw	0
  7157  0158  3400               	retlw	0
  7158  0159  3400               	retlw	0
  7159  015A  3400               	retlw	0
  7160  015B  3400               	retlw	0
  7161  015C  3400               	retlw	0
  7162  015D  3400               	retlw	0
  7163  015E  3400               	retlw	0
  7164  015F  3400               	retlw	0
  7165  0160  3400               	retlw	0
  7166  0161  3400               	retlw	0
  7167  0162  3400               	retlw	0
  7168  0163  3473               	retlw	115
  7169  0164  3473               	retlw	115
  7170  0165  3473               	retlw	115
  7171  0166  3400               	retlw	0
  7172  0167  3400               	retlw	0
  7173  0168  3400               	retlw	0
  7174  0169  3400               	retlw	0
  7175  016A  3400               	retlw	0
  7176  016B  3400               	retlw	0
  7177  016C  3400               	retlw	0
  7178  016D  3400               	retlw	0
  7179  016E  3400               	retlw	0
  7180  016F  3400               	retlw	0
  7181  0170  3400               	retlw	0
  7182  0171  3400               	retlw	0
  7183  0172  341E               	retlw	30
  7184  0173  343E               	retlw	62
  7185  0174  343E               	retlw	62
  7186  0175  3400               	retlw	0
  7187  0176  3400               	retlw	0
  7188  0177  3400               	retlw	0
  7189  0178  343E               	retlw	62
  7190  0179  343E               	retlw	62
  7191  017A  341E               	retlw	30
  7192  017B  3400               	retlw	0
  7193  017C  3400               	retlw	0
  7194  017D  3400               	retlw	0
  7195  017E  3400               	retlw	0
  7196  017F  3400               	retlw	0
  7197  0180  3400               	retlw	0
  7198  0181  3400               	retlw	0
  7199  0182  3400               	retlw	0
  7200  0183  3400               	retlw	0
  7201  0184  3400               	retlw	0
  7202  0185  3400               	retlw	0
  7203  0186  3400               	retlw	0
  7204  0187  3400               	retlw	0
  7205  0188  3400               	retlw	0
  7206  0189  3400               	retlw	0
  7207  018A  3400               	retlw	0
  7208  018B  3400               	retlw	0
  7209  018C  3400               	retlw	0
  7210  018D  3400               	retlw	0
  7211  018E  3400               	retlw	0
  7212  018F  3430               	retlw	48
  7213  0190  3430               	retlw	48
  7214  0191  3430               	retlw	48
  7215  0192  34FE               	retlw	254
  7216  0193  34FE               	retlw	254
  7217  0194  3430               	retlw	48
  7218  0195  3430               	retlw	48
  7219  0196  3430               	retlw	48
  7220  0197  3430               	retlw	48
  7221  0198  34FE               	retlw	254
  7222  0199  34FE               	retlw	254
  7223  019A  3430               	retlw	48
  7224  019B  3430               	retlw	48
  7225  019C  3430               	retlw	48
  7226  019D  3400               	retlw	0
  7227  019E  3400               	retlw	0
  7228  019F  340C               	retlw	12
  7229  01A0  340C               	retlw	12
  7230  01A1  340C               	retlw	12
  7231  01A2  347F               	retlw	127
  7232  01A3  347F               	retlw	127
  7233  01A4  340C               	retlw	12
  7234  01A5  340C               	retlw	12
  7235  01A6  340C               	retlw	12
  7236  01A7  340C               	retlw	12
  7237  01A8  347F               	retlw	127
  7238  01A9  347F               	retlw	127
  7239  01AA  340C               	retlw	12
  7240  01AB  340C               	retlw	12
  7241  01AC  340C               	retlw	12
  7242  01AD  3400               	retlw	0
  7243  01AE  3400               	retlw	0
  7244  01AF  3400               	retlw	0
  7245  01B0  3400               	retlw	0
  7246  01B1  34F0               	retlw	240
  7247  01B2  34F8               	retlw	248
  7248  01B3  3498               	retlw	152
  7249  01B4  34FE               	retlw	254
  7250  01B5  3498               	retlw	152
  7251  01B6  3498               	retlw	152
  7252  01B7  34FE               	retlw	254
  7253  01B8  3498               	retlw	152
  7254  01B9  3498               	retlw	152
  7255  01BA  3418               	retlw	24
  7256  01BB  3400               	retlw	0
  7257  01BC  3400               	retlw	0
  7258  01BD  3400               	retlw	0
  7259  01BE  3400               	retlw	0
  7260  01BF  3400               	retlw	0
  7261  01C0  3400               	retlw	0
  7262  01C1  3418               	retlw	24
  7263  01C2  3419               	retlw	25
  7264  01C3  3419               	retlw	25
  7265  01C4  347F               	retlw	127
  7266  01C5  3419               	retlw	25
  7267  01C6  3419               	retlw	25
  7268  01C7  347F               	retlw	127
  7269  01C8  3419               	retlw	25
  7270  01C9  341F               	retlw	31
  7271  01CA  340F               	retlw	15
  7272  01CB  3400               	retlw	0
  7273  01CC  3400               	retlw	0
  7274  01CD  3400               	retlw	0
  7275  01CE  3400               	retlw	0
  7276  01CF  3400               	retlw	0
  7277  01D0  3400               	retlw	0
  7278  01D1  3400               	retlw	0
  7279  01D2  3438               	retlw	56
  7280  01D3  3438               	retlw	56
  7281  01D4  3438               	retlw	56
  7282  01D5  3480               	retlw	128
  7283  01D6  34C0               	retlw	192
  7284  01D7  34E0               	retlw	224
  7285  01D8  3470               	retlw	112
  7286  01D9  3438               	retlw	56
  7287  01DA  3400               	retlw	0
  7288  01DB  3400               	retlw	0
  7289  01DC  3400               	retlw	0
  7290  01DD  3400               	retlw	0
  7291  01DE  3400               	retlw	0
  7292  01DF  3400               	retlw	0
  7293  01E0  3400               	retlw	0
  7294  01E1  3400               	retlw	0
  7295  01E2  341C               	retlw	28
  7296  01E3  340E               	retlw	14
  7297  01E4  3407               	retlw	7
  7298  01E5  3403               	retlw	3
  7299  01E6  3401               	retlw	1
  7300  01E7  341C               	retlw	28
  7301  01E8  341C               	retlw	28
  7302  01E9  341C               	retlw	28
  7303  01EA  3400               	retlw	0
  7304  01EB  3400               	retlw	0
  7305  01EC  3400               	retlw	0
  7306  01ED  3400               	retlw	0
  7307  01EE  3400               	retlw	0
  7308  01EF  3400               	retlw	0
  7309  01F0  3400               	retlw	0
  7310  01F1  3438               	retlw	56
  7311  01F2  34FC               	retlw	252
  7312  01F3  34C4               	retlw	196
  7313  01F4  34C4               	retlw	196
  7314  01F5  34FC               	retlw	252
  7315  01F6  3438               	retlw	56
  7316  01F7  3400               	retlw	0
  7317  01F8  3400               	retlw	0
  7318  01F9  3400               	retlw	0
  7319  01FA  3480               	retlw	128
  7320  01FB  3400               	retlw	0
  7321  01FC  3400               	retlw	0
  7322  01FD  3400               	retlw	0
  7323  01FE  3400               	retlw	0
  7324  01FF  3400               	retlw	0
  7325  0200  3400               	retlw	0
  7326  0201  341E               	retlw	30
  7327  0202  343F               	retlw	63
  7328  0203  3421               	retlw	33
  7329  0204  3421               	retlw	33
  7330  0205  3433               	retlw	51
  7331  0206  343F               	retlw	63
  7332  0207  341E               	retlw	30
  7333  0208  341E               	retlw	30
  7334  0209  3437               	retlw	55
  7335  020A  3423               	retlw	35
  7336  020B  3400               	retlw	0
  7337  020C  3400               	retlw	0
  7338  020D  3400               	retlw	0
  7339  020E  3400               	retlw	0
  7340  020F  3400               	retlw	0
  7341  0210  3400               	retlw	0
  7342  0211  3400               	retlw	0
  7343  0212  3420               	retlw	32
  7344  0213  343C               	retlw	60
  7345  0214  343C               	retlw	60
  7346  0215  341C               	retlw	28
  7347  0216  3400               	retlw	0
  7348  0217  3400               	retlw	0
  7349  0218  3400               	retlw	0
  7350  0219  3400               	retlw	0
  7351  021A  3400               	retlw	0
  7352  021B  3400               	retlw	0
  7353  021C  3400               	retlw	0
  7354  021D  3400               	retlw	0
  7355  021E  3400               	retlw	0
  7356  021F  3400               	retlw	0
  7357  0220  3400               	retlw	0
  7358  0221  3400               	retlw	0
  7359  0222  3400               	retlw	0
  7360  0223  3400               	retlw	0
  7361  0224  3400               	retlw	0
  7362  0225  3400               	retlw	0
  7363  0226  3400               	retlw	0
  7364  0227  3400               	retlw	0
  7365  0228  3400               	retlw	0
  7366  0229  3400               	retlw	0
  7367  022A  3400               	retlw	0
  7368  022B  3400               	retlw	0
  7369  022C  3400               	retlw	0
  7370  022D  3400               	retlw	0
  7371  022E  3400               	retlw	0
  7372  022F  3400               	retlw	0
  7373  0230  3400               	retlw	0
  7374  0231  3400               	retlw	0
  7375  0232  34C0               	retlw	192
  7376  0233  34E0               	retlw	224
  7377  0234  34F0               	retlw	240
  7378  0235  3438               	retlw	56
  7379  0236  341C               	retlw	28
  7380  0237  340C               	retlw	12
  7381  0238  3404               	retlw	4
  7382  0239  3404               	retlw	4
  7383  023A  3400               	retlw	0
  7384  023B  3400               	retlw	0
  7385  023C  3400               	retlw	0
  7386  023D  3400               	retlw	0
  7387  023E  3400               	retlw	0
  7388  023F  3400               	retlw	0
  7389  0240  3400               	retlw	0
  7390  0241  3400               	retlw	0
  7391  0242  3403               	retlw	3
  7392  0243  3407               	retlw	7
  7393  0244  340F               	retlw	15
  7394  0245  341C               	retlw	28
  7395  0246  3438               	retlw	56
  7396  0247  3430               	retlw	48
  7397  0248  3420               	retlw	32
  7398  0249  3420               	retlw	32
  7399  024A  3400               	retlw	0
  7400  024B  3400               	retlw	0
  7401  024C  3400               	retlw	0
  7402  024D  3400               	retlw	0
  7403  024E  3400               	retlw	0
  7404  024F  3400               	retlw	0
  7405  0250  3400               	retlw	0
  7406  0251  3400               	retlw	0
  7407  0252  3404               	retlw	4
  7408  0253  3404               	retlw	4
  7409  0254  340C               	retlw	12
  7410  0255  341C               	retlw	28
  7411  0256  3438               	retlw	56
  7412  0257  34F0               	retlw	240
  7413  0258  34E0               	retlw	224
  7414  0259  34C0               	retlw	192
  7415  025A  3400               	retlw	0
  7416  025B  3400               	retlw	0
  7417  025C  3400               	retlw	0
  7418  025D  3400               	retlw	0
  7419  025E  3400               	retlw	0
  7420  025F  3400               	retlw	0
  7421  0260  3400               	retlw	0
  7422  0261  3400               	retlw	0
  7423  0262  3420               	retlw	32
  7424  0263  3420               	retlw	32
  7425  0264  3430               	retlw	48
  7426  0265  3438               	retlw	56
  7427  0266  341C               	retlw	28
  7428  0267  340F               	retlw	15
  7429  0268  3407               	retlw	7
  7430  0269  3403               	retlw	3
  7431  026A  3400               	retlw	0
  7432  026B  3400               	retlw	0
  7433  026C  3400               	retlw	0
  7434  026D  3400               	retlw	0
  7435  026E  3400               	retlw	0
  7436  026F  3400               	retlw	0
  7437  0270  3480               	retlw	128
  7438  0271  3488               	retlw	136
  7439  0272  3490               	retlw	144
  7440  0273  34E0               	retlw	224
  7441  0274  34E0               	retlw	224
  7442  0275  34FC               	retlw	252
  7443  0276  34FC               	retlw	252
  7444  0277  34E0               	retlw	224
  7445  0278  34E0               	retlw	224
  7446  0279  3490               	retlw	144
  7447  027A  3488               	retlw	136
  7448  027B  3480               	retlw	128
  7449  027C  3400               	retlw	0
  7450  027D  3400               	retlw	0
  7451  027E  3400               	retlw	0
  7452  027F  3400               	retlw	0
  7453  0280  3401               	retlw	1
  7454  0281  3411               	retlw	17
  7455  0282  3409               	retlw	9
  7456  0283  3407               	retlw	7
  7457  0284  3407               	retlw	7
  7458  0285  343F               	retlw	63
  7459  0286  343F               	retlw	63
  7460  0287  3407               	retlw	7
  7461  0288  3407               	retlw	7
  7462  0289  3409               	retlw	9
  7463  028A  3411               	retlw	17
  7464  028B  3401               	retlw	1
  7465  028C  3400               	retlw	0
  7466  028D  3400               	retlw	0
  7467  028E  3400               	retlw	0
  7468  028F  3400               	retlw	0
  7469  0290  3400               	retlw	0
  7470  0291  3400               	retlw	0
  7471  0292  3480               	retlw	128
  7472  0293  3480               	retlw	128
  7473  0294  3480               	retlw	128
  7474  0295  34F0               	retlw	240
  7475  0296  34F0               	retlw	240
  7476  0297  3480               	retlw	128
  7477  0298  3480               	retlw	128
  7478  0299  3480               	retlw	128
  7479  029A  3400               	retlw	0
  7480  029B  3400               	retlw	0
  7481  029C  3400               	retlw	0
  7482  029D  3400               	retlw	0
  7483  029E  3400               	retlw	0
  7484  029F  3400               	retlw	0
  7485  02A0  3400               	retlw	0
  7486  02A1  3400               	retlw	0
  7487  02A2  3401               	retlw	1
  7488  02A3  3401               	retlw	1
  7489  02A4  3401               	retlw	1
  7490  02A5  340F               	retlw	15
  7491  02A6  340F               	retlw	15
  7492  02A7  3401               	retlw	1
  7493  02A8  3401               	retlw	1
  7494  02A9  3401               	retlw	1
  7495  02AA  3400               	retlw	0
  7496  02AB  3400               	retlw	0
  7497  02AC  3400               	retlw	0
  7498  02AD  3400               	retlw	0
  7499  02AE  3400               	retlw	0
  7500  02AF  3400               	retlw	0
  7501  02B0  3400               	retlw	0
  7502  02B1  3400               	retlw	0
  7503  02B2  3400               	retlw	0
  7504  02B3  3400               	retlw	0
  7505  02B4  3400               	retlw	0
  7506  02B5  3400               	retlw	0
  7507  02B6  3400               	retlw	0
  7508  02B7  3400               	retlw	0
  7509  02B8  3400               	retlw	0
  7510  02B9  3400               	retlw	0
  7511  02BA  3400               	retlw	0
  7512  02BB  3400               	retlw	0
  7513  02BC  3400               	retlw	0
  7514  02BD  3400               	retlw	0
  7515  02BE  3400               	retlw	0
  7516  02BF  3400               	retlw	0
  7517  02C0  3400               	retlw	0
  7518  02C1  3400               	retlw	0
  7519  02C2  3440               	retlw	64
  7520  02C3  3478               	retlw	120
  7521  02C4  3478               	retlw	120
  7522  02C5  3438               	retlw	56
  7523  02C6  3400               	retlw	0
  7524  02C7  3400               	retlw	0
  7525  02C8  3400               	retlw	0
  7526  02C9  3400               	retlw	0
  7527  02CA  3400               	retlw	0
  7528  02CB  3400               	retlw	0
  7529  02CC  3400               	retlw	0
  7530  02CD  3400               	retlw	0
  7531  02CE  3400               	retlw	0
  7532  02CF  3400               	retlw	0
  7533  02D0  3400               	retlw	0
  7534  02D1  3480               	retlw	128
  7535  02D2  3480               	retlw	128
  7536  02D3  3480               	retlw	128
  7537  02D4  3480               	retlw	128
  7538  02D5  3480               	retlw	128
  7539  02D6  3480               	retlw	128
  7540  02D7  3480               	retlw	128
  7541  02D8  3480               	retlw	128
  7542  02D9  3480               	retlw	128
  7543  02DA  3480               	retlw	128
  7544  02DB  3400               	retlw	0
  7545  02DC  3400               	retlw	0
  7546  02DD  3400               	retlw	0
  7547  02DE  3400               	retlw	0
  7548  02DF  3400               	retlw	0
  7549  02E0  3400               	retlw	0
  7550  02E1  3401               	retlw	1
  7551  02E2  3401               	retlw	1
  7552  02E3  3401               	retlw	1
  7553  02E4  3401               	retlw	1
  7554  02E5  3401               	retlw	1
  7555  02E6  3401               	retlw	1
  7556  02E7  3401               	retlw	1
  7557  02E8  3401               	retlw	1
  7558  02E9  3401               	retlw	1
  7559  02EA  3401               	retlw	1
  7560  02EB  3400               	retlw	0
  7561  02EC  3400               	retlw	0
  7562  02ED  3400               	retlw	0
  7563  02EE  3400               	retlw	0
  7564  02EF  3400               	retlw	0
  7565  02F0  3400               	retlw	0
  7566  02F1  3400               	retlw	0
  7567  02F2  3400               	retlw	0
  7568  02F3  3400               	retlw	0
  7569  02F4  3400               	retlw	0
  7570  02F5  3400               	retlw	0
  7571  02F6  3400               	retlw	0
  7572  02F7  3400               	retlw	0
  7573  02F8  3400               	retlw	0
  7574  02F9  3400               	retlw	0
  7575  02FA  3400               	retlw	0
  7576  02FB  3400               	retlw	0
  7577  02FC  3400               	retlw	0
  7578  02FD  3400               	retlw	0
  7579  02FE  3400               	retlw	0
  7580  02FF  3400               	retlw	0
  7581  0300  3400               	retlw	0
  7582  0301  3400               	retlw	0
  7583  0302  3400               	retlw	0
  7584  0303  3438               	retlw	56
  7585  0304  3438               	retlw	56
  7586  0305  3438               	retlw	56
  7587  0306  3400               	retlw	0
  7588  0307  3400               	retlw	0
  7589  0308  3400               	retlw	0
  7590  0309  3400               	retlw	0
  7591  030A  3400               	retlw	0
  7592  030B  3400               	retlw	0
  7593  030C  3400               	retlw	0
  7594  030D  3400               	retlw	0
  7595  030E  3400               	retlw	0
  7596  030F  3400               	retlw	0
  7597  0310  3400               	retlw	0
  7598  0311  3400               	retlw	0
  7599  0312  3400               	retlw	0
  7600  0313  3400               	retlw	0
  7601  0314  3400               	retlw	0
  7602  0315  3400               	retlw	0
  7603  0316  3400               	retlw	0
  7604  0317  3480               	retlw	128
  7605  0318  34C0               	retlw	192
  7606  0319  34E0               	retlw	224
  7607  031A  3470               	retlw	112
  7608  031B  3438               	retlw	56
  7609  031C  341C               	retlw	28
  7610  031D  3400               	retlw	0
  7611  031E  3400               	retlw	0
  7612  031F  3400               	retlw	0
  7613  0320  3400               	retlw	0
  7614  0321  3420               	retlw	32
  7615  0322  3430               	retlw	48
  7616  0323  3438               	retlw	56
  7617  0324  341C               	retlw	28
  7618  0325  340E               	retlw	14
  7619  0326  3407               	retlw	7
  7620  0327  3403               	retlw	3
  7621  0328  3401               	retlw	1
  7622  0329  3400               	retlw	0
  7623  032A  3400               	retlw	0
  7624  032B  3400               	retlw	0
  7625  032C  3400               	retlw	0
  7626  032D  3400               	retlw	0
  7627  032E  3400               	retlw	0
  7628  032F  3400               	retlw	0
  7629  0330  3400               	retlw	0
  7630  0331  34F8               	retlw	248
  7631  0332  34FC               	retlw	252
  7632  0333  34FC               	retlw	252
  7633  0334  3404               	retlw	4
  7634  0335  3484               	retlw	132
  7635  0336  34E4               	retlw	228
  7636  0337  3474               	retlw	116
  7637  0338  34FC               	retlw	252
  7638  0339  34FC               	retlw	252
  7639  033A  34F8               	retlw	248
  7640  033B  3400               	retlw	0
  7641  033C  3400               	retlw	0
  7642  033D  3400               	retlw	0
  7643  033E  3400               	retlw	0
  7644  033F  3400               	retlw	0
  7645  0340  3400               	retlw	0
  7646  0341  341F               	retlw	31
  7647  0342  343F               	retlw	63
  7648  0343  343F               	retlw	63
  7649  0344  342E               	retlw	46
  7650  0345  3427               	retlw	39
  7651  0346  3421               	retlw	33
  7652  0347  3420               	retlw	32
  7653  0348  343F               	retlw	63
  7654  0349  343F               	retlw	63
  7655  034A  341F               	retlw	31
  7656  034B  3400               	retlw	0
  7657  034C  3400               	retlw	0
  7658  034D  3400               	retlw	0
  7659  034E  3400               	retlw	0
  7660  034F  3400               	retlw	0
  7661  0350  3400               	retlw	0
  7662  0351  3460               	retlw	96
  7663  0352  3460               	retlw	96
  7664  0353  3460               	retlw	96
  7665  0354  34F0               	retlw	240
  7666  0355  34FC               	retlw	252
  7667  0356  34FC               	retlw	252
  7668  0357  3400               	retlw	0
  7669  0358  3400               	retlw	0
  7670  0359  3400               	retlw	0
  7671  035A  3400               	retlw	0
  7672  035B  3400               	retlw	0
  7673  035C  3400               	retlw	0
  7674  035D  3400               	retlw	0
  7675  035E  3400               	retlw	0
  7676  035F  3400               	retlw	0
  7677  0360  3400               	retlw	0
  7678  0361  3420               	retlw	32
  7679  0362  3420               	retlw	32
  7680  0363  3420               	retlw	32
  7681  0364  343F               	retlw	63
  7682  0365  343F               	retlw	63
  7683  0366  343F               	retlw	63
  7684  0367  3420               	retlw	32
  7685  0368  3420               	retlw	32
  7686  0369  3420               	retlw	32
  7687  036A  3400               	retlw	0
  7688  036B  3400               	retlw	0
  7689  036C  3400               	retlw	0
  7690  036D  3400               	retlw	0
  7691  036E  3400               	retlw	0
  7692  036F  3400               	retlw	0
  7693  0370  3400               	retlw	0
  7694  0371  3418               	retlw	24
  7695  0372  341C               	retlw	28
  7696  0373  341C               	retlw	28
  7697  0374  3404               	retlw	4
  7698  0375  3404               	retlw	4
  7699  0376  3484               	retlw	132
  7700  0377  34CC               	retlw	204
  7701  0378  34FC               	retlw	252
  7702  0379  3478               	retlw	120
  7703  037A  3430               	retlw	48
  7704  037B  3400               	retlw	0
  7705  037C  3400               	retlw	0
  7706  037D  3400               	retlw	0
  7707  037E  3400               	retlw	0
  7708  037F  3400               	retlw	0
  7709  0380  3400               	retlw	0
  7710  0381  3430               	retlw	48
  7711  0382  3438               	retlw	56
  7712  0383  343C               	retlw	60
  7713  0384  342E               	retlw	46
  7714  0385  3427               	retlw	39
  7715  0386  3423               	retlw	35
  7716  0387  3421               	retlw	33
  7717  0388  3438               	retlw	56
  7718  0389  3438               	retlw	56
  7719  038A  3438               	retlw	56
  7720  038B  3400               	retlw	0
  7721  038C  3400               	retlw	0
  7722  038D  3400               	retlw	0
  7723  038E  3400               	retlw	0
  7724  038F  3400               	retlw	0
  7725  0390  3400               	retlw	0
  7726  0391  3418               	retlw	24
  7727  0392  341C               	retlw	28
  7728  0393  341C               	retlw	28
  7729  0394  3484               	retlw	132
  7730  0395  3484               	retlw	132
  7731  0396  3484               	retlw	132
  7732  0397  34CC               	retlw	204
  7733  0398  347C               	retlw	124
  7734  0399  3478               	retlw	120
  7735  039A  3430               	retlw	48
  7736  039B  3400               	retlw	0
  7737  039C  3400               	retlw	0
  7738  039D  3400               	retlw	0
  7739  039E  3400               	retlw	0
  7740  039F  3400               	retlw	0
  7741  03A0  3400               	retlw	0
  7742  03A1  3418               	retlw	24
  7743  03A2  3438               	retlw	56
  7744  03A3  3438               	retlw	56
  7745  03A4  3421               	retlw	33
  7746  03A5  3421               	retlw	33
  7747  03A6  3421               	retlw	33
  7748  03A7  3433               	retlw	51
  7749  03A8  343E               	retlw	62
  7750  03A9  341E               	retlw	30
  7751  03AA  340C               	retlw	12
  7752  03AB  3400               	retlw	0
  7753  03AC  3400               	retlw	0
  7754  03AD  3400               	retlw	0
  7755  03AE  3400               	retlw	0
  7756  03AF  3400               	retlw	0
  7757  03B0  3400               	retlw	0
  7758  03B1  3480               	retlw	128
  7759  03B2  34C0               	retlw	192
  7760  03B3  3460               	retlw	96
  7761  03B4  3430               	retlw	48
  7762  03B5  3418               	retlw	24
  7763  03B6  34FC               	retlw	252
  7764  03B7  34FC               	retlw	252
  7765  03B8  34FC               	retlw	252
  7766  03B9  3400               	retlw	0
  7767  03BA  3400               	retlw	0
  7768  03BB  3400               	retlw	0
  7769  03BC  3400               	retlw	0
  7770  03BD  3400               	retlw	0
  7771  03BE  3400               	retlw	0
  7772  03BF  3400               	retlw	0
  7773  03C0  3400               	retlw	0
  7774  03C1  3403               	retlw	3
  7775  03C2  3403               	retlw	3
  7776  03C3  3403               	retlw	3
  7777  03C4  3423               	retlw	35
  7778  03C5  3423               	retlw	35
  7779  03C6  343F               	retlw	63
  7780  03C7  343F               	retlw	63
  7781  03C8  343F               	retlw	63
  7782  03C9  3423               	retlw	35
  7783  03CA  3423               	retlw	35
  7784  03CB  3400               	retlw	0
  7785  03CC  3400               	retlw	0
  7786  03CD  3400               	retlw	0
  7787  03CE  3400               	retlw	0
  7788  03CF  3400               	retlw	0
  7789  03D0  3400               	retlw	0
  7790  03D1  34FC               	retlw	252
  7791  03D2  34FC               	retlw	252
  7792  03D3  34FC               	retlw	252
  7793  03D4  3484               	retlw	132
  7794  03D5  3484               	retlw	132
  7795  03D6  3484               	retlw	132
  7796  03D7  3484               	retlw	132
  7797  03D8  3484               	retlw	132
  7798  03D9  3404               	retlw	4
  7799  03DA  3404               	retlw	4
  7800  03DB  3400               	retlw	0
  7801  03DC  3400               	retlw	0
  7802  03DD  3400               	retlw	0
  7803  03DE  3400               	retlw	0
  7804  03DF  3400               	retlw	0
  7805  03E0  3400               	retlw	0
  7806  03E1  3419               	retlw	25
  7807  03E2  3439               	retlw	57
  7808  03E3  3439               	retlw	57
  7809  03E4  3421               	retlw	33
  7810  03E5  3421               	retlw	33
  7811  03E6  3421               	retlw	33
  7812  03E7  3433               	retlw	51
  7813  03E8  343F               	retlw	63
  7814  03E9  341F               	retlw	31
  7815  03EA  340E               	retlw	14
  7816  03EB  3400               	retlw	0
  7817  03EC  3400               	retlw	0
  7818  03ED  3400               	retlw	0
  7819  03EE  3400               	retlw	0
  7820  03EF  3400               	retlw	0
  7821  03F0  3400               	retlw	0
  7822  03F1  34E0               	retlw	224
  7823  03F2  34F0               	retlw	240
  7824  03F3  34F8               	retlw	248
  7825  03F4  349C               	retlw	156
  7826  03F5  348C               	retlw	140
  7827  03F6  3484               	retlw	132
  7828  03F7  3484               	retlw	132
  7829  03F8  3484               	retlw	132
  7830  03F9  3480               	retlw	128
  7831  03FA  3400               	retlw	0
  7832  03FB  3400               	retlw	0
  7833  03FC  3400               	retlw	0
  7834  03FD  3400               	retlw	0
  7835  03FE  3400               	retlw	0
  7836  03FF  3400               	retlw	0
  7837  0400  3400               	retlw	0
  7838  0401  341F               	retlw	31
  7839  0402  343F               	retlw	63
  7840  0403  343F               	retlw	63
  7841  0404  3421               	retlw	33
  7842  0405  3421               	retlw	33
  7843  0406  3421               	retlw	33
  7844  0407  3421               	retlw	33
  7845  0408  343F               	retlw	63
  7846  0409  343F               	retlw	63
  7847  040A  341F               	retlw	31
  7848  040B  3400               	retlw	0
  7849  040C  3400               	retlw	0
  7850  040D  3400               	retlw	0
  7851  040E  3400               	retlw	0
  7852  040F  3400               	retlw	0
  7853  0410  3400               	retlw	0
  7854  0411  343C               	retlw	60
  7855  0412  343C               	retlw	60
  7856  0413  343C               	retlw	60
  7857  0414  3404               	retlw	4
  7858  0415  3404               	retlw	4
  7859  0416  3404               	retlw	4
  7860  0417  3404               	retlw	4
  7861  0418  3484               	retlw	132
  7862  0419  34FC               	retlw	252
  7863  041A  34FC               	retlw	252
  7864  041B  347C               	retlw	124
  7865  041C  3400               	retlw	0
  7866  041D  3400               	retlw	0
  7867  041E  3400               	retlw	0
  7868  041F  3400               	retlw	0
  7869  0420  3400               	retlw	0
  7870  0421  3400               	retlw	0
  7871  0422  3400               	retlw	0
  7872  0423  3400               	retlw	0
  7873  0424  3438               	retlw	56
  7874  0425  343C               	retlw	60
  7875  0426  343E               	retlw	62
  7876  0427  3407               	retlw	7
  7877  0428  3403               	retlw	3
  7878  0429  3401               	retlw	1
  7879  042A  3400               	retlw	0
  7880  042B  3400               	retlw	0
  7881  042C  3400               	retlw	0
  7882  042D  3400               	retlw	0
  7883  042E  3400               	retlw	0
  7884  042F  3400               	retlw	0
  7885  0430  3400               	retlw	0
  7886  0431  3478               	retlw	120
  7887  0432  347C               	retlw	124
  7888  0433  34FC               	retlw	252
  7889  0434  34C4               	retlw	196
  7890  0435  34C4               	retlw	196
  7891  0436  3484               	retlw	132
  7892  0437  3484               	retlw	132
  7893  0438  34FC               	retlw	252
  7894  0439  347C               	retlw	124
  7895  043A  3478               	retlw	120
  7896  043B  3400               	retlw	0
  7897  043C  3400               	retlw	0
  7898  043D  3400               	retlw	0
  7899  043E  3400               	retlw	0
  7900  043F  3400               	retlw	0
  7901  0440  3400               	retlw	0
  7902  0441  341E               	retlw	30
  7903  0442  343E               	retlw	62
  7904  0443  343F               	retlw	63
  7905  0444  3421               	retlw	33
  7906  0445  3421               	retlw	33
  7907  0446  3423               	retlw	35
  7908  0447  3423               	retlw	35
  7909  0448  343F               	retlw	63
  7910  0449  343E               	retlw	62
  7911  044A  341E               	retlw	30
  7912  044B  3400               	retlw	0
  7913  044C  3400               	retlw	0
  7914  044D  3400               	retlw	0
  7915  044E  3400               	retlw	0
  7916  044F  3400               	retlw	0
  7917  0450  3400               	retlw	0
  7918  0451  34F8               	retlw	248
  7919  0452  34FC               	retlw	252
  7920  0453  34FC               	retlw	252
  7921  0454  3484               	retlw	132
  7922  0455  3484               	retlw	132
  7923  0456  3484               	retlw	132
  7924  0457  3484               	retlw	132
  7925  0458  34FC               	retlw	252
  7926  0459  34FC               	retlw	252
  7927  045A  34F8               	retlw	248
  7928  045B  3400               	retlw	0
  7929  045C  3400               	retlw	0
  7930  045D  3400               	retlw	0
  7931  045E  3400               	retlw	0
  7932  045F  3400               	retlw	0
  7933  0460  3400               	retlw	0
  7934  0461  3400               	retlw	0
  7935  0462  3401               	retlw	1
  7936  0463  3421               	retlw	33
  7937  0464  3421               	retlw	33
  7938  0465  3421               	retlw	33
  7939  0466  3431               	retlw	49
  7940  0467  3439               	retlw	57
  7941  0468  341F               	retlw	31
  7942  0469  340F               	retlw	15
  7943  046A  3407               	retlw	7
  7944  046B  3400               	retlw	0
  7945  046C  3400               	retlw	0
  7946  046D  3400               	retlw	0
  7947  046E  3400               	retlw	0
  7948  046F  3400               	retlw	0
  7949  0470  3400               	retlw	0
  7950  0471  3400               	retlw	0
  7951  0472  3400               	retlw	0
  7952  0473  3400               	retlw	0
  7953  0474  3470               	retlw	112
  7954  0475  3470               	retlw	112
  7955  0476  3470               	retlw	112
  7956  0477  3400               	retlw	0
  7957  0478  3400               	retlw	0
  7958  0479  3400               	retlw	0
  7959  047A  3400               	retlw	0
  7960  047B  3400               	retlw	0
  7961  047C  3400               	retlw	0
  7962  047D  3400               	retlw	0
  7963  047E  3400               	retlw	0
  7964  047F  3400               	retlw	0
  7965  0480  3400               	retlw	0
  7966  0481  3400               	retlw	0
  7967  0482  3400               	retlw	0
  7968  0483  3400               	retlw	0
  7969  0484  340E               	retlw	14
  7970  0485  340E               	retlw	14
  7971  0486  340E               	retlw	14
  7972  0487  3400               	retlw	0
  7973  0488  3400               	retlw	0
  7974  0489  3400               	retlw	0
  7975  048A  3400               	retlw	0
  7976  048B  3400               	retlw	0
  7977  048C  3400               	retlw	0
  7978  048D  3400               	retlw	0
  7979  048E  3400               	retlw	0
  7980  048F  3400               	retlw	0
  7981  0490  3400               	retlw	0
  7982  0491  3400               	retlw	0
  7983  0492  3400               	retlw	0
  7984  0493  3400               	retlw	0
  7985  0494  3470               	retlw	112
  7986  0495  3470               	retlw	112
  7987  0496  3470               	retlw	112
  7988  0497  3400               	retlw	0
  7989  0498  3400               	retlw	0
  7990  0499  3400               	retlw	0
  7991  049A  3400               	retlw	0
  7992  049B  3400               	retlw	0
  7993  049C  3400               	retlw	0
  7994  049D  3400               	retlw	0
  7995  049E  3400               	retlw	0
  7996  049F  3400               	retlw	0
  7997  04A0  3400               	retlw	0
  7998  04A1  3400               	retlw	0
  7999  04A2  3400               	retlw	0
  8000  04A3  3410               	retlw	16
  8001  04A4  341E               	retlw	30
  8002  04A5  341E               	retlw	30
  8003  04A6  340E               	retlw	14
  8004  04A7  3400               	retlw	0
  8005  04A8  3400               	retlw	0
  8006  04A9  3400               	retlw	0
  8007  04AA  3400               	retlw	0
  8008  04AB  3400               	retlw	0
  8009  04AC  3400               	retlw	0
  8010  04AD  3400               	retlw	0
  8011  04AE  3400               	retlw	0
  8012  04AF  3400               	retlw	0
  8013  04B0  3400               	retlw	0
  8014  04B1  3480               	retlw	128
  8015  04B2  34C0               	retlw	192
  8016  04B3  34E0               	retlw	224
  8017  04B4  3470               	retlw	112
  8018  04B5  3438               	retlw	56
  8019  04B6  341C               	retlw	28
  8020  04B7  340E               	retlw	14
  8021  04B8  3406               	retlw	6
  8022  04B9  3402               	retlw	2
  8023  04BA  3400               	retlw	0
  8024  04BB  3400               	retlw	0
  8025  04BC  3400               	retlw	0
  8026  04BD  3400               	retlw	0
  8027  04BE  3400               	retlw	0
  8028  04BF  3400               	retlw	0
  8029  04C0  3400               	retlw	0
  8030  04C1  3401               	retlw	1
  8031  04C2  3403               	retlw	3
  8032  04C3  3407               	retlw	7
  8033  04C4  340E               	retlw	14
  8034  04C5  341C               	retlw	28
  8035  04C6  3438               	retlw	56
  8036  04C7  3470               	retlw	112
  8037  04C8  3460               	retlw	96
  8038  04C9  3440               	retlw	64
  8039  04CA  3400               	retlw	0
  8040  04CB  3400               	retlw	0
  8041  04CC  3400               	retlw	0
  8042  04CD  3400               	retlw	0
  8043  04CE  3400               	retlw	0
  8044  04CF  3400               	retlw	0
  8045  04D0  3460               	retlw	96
  8046  04D1  3460               	retlw	96
  8047  04D2  3460               	retlw	96
  8048  04D3  3460               	retlw	96
  8049  04D4  3460               	retlw	96
  8050  04D5  3460               	retlw	96
  8051  04D6  3460               	retlw	96
  8052  04D7  3460               	retlw	96
  8053  04D8  3460               	retlw	96
  8054  04D9  3460               	retlw	96
  8055  04DA  3460               	retlw	96
  8056  04DB  3460               	retlw	96
  8057  04DC  3400               	retlw	0
  8058  04DD  3400               	retlw	0
  8059  04DE  3400               	retlw	0
  8060  04DF  3400               	retlw	0
  8061  04E0  3406               	retlw	6
  8062  04E1  3406               	retlw	6
  8063  04E2  3406               	retlw	6
  8064  04E3  3406               	retlw	6
  8065  04E4  3406               	retlw	6
  8066  04E5  3406               	retlw	6
  8067  04E6  3406               	retlw	6
  8068  04E7  3406               	retlw	6
  8069  04E8  3406               	retlw	6
  8070  04E9  3406               	retlw	6
  8071  04EA  3406               	retlw	6
  8072  04EB  3406               	retlw	6
  8073  04EC  3400               	retlw	0
  8074  04ED  3400               	retlw	0
  8075  04EE  3400               	retlw	0
  8076  04EF  3400               	retlw	0
  8077  04F0  3400               	retlw	0
  8078  04F1  3402               	retlw	2
  8079  04F2  3406               	retlw	6
  8080  04F3  340E               	retlw	14
  8081  04F4  341C               	retlw	28
  8082  04F5  3438               	retlw	56
  8083  04F6  3470               	retlw	112
  8084  04F7  34E0               	retlw	224
  8085  04F8  34C0               	retlw	192
  8086  04F9  3480               	retlw	128
  8087  04FA  3400               	retlw	0
  8088  04FB  3400               	retlw	0
  8089  04FC  3400               	retlw	0
  8090  04FD  3400               	retlw	0
  8091  04FE  3400               	retlw	0
  8092  04FF  3400               	retlw	0
  8093  0500  3400               	retlw	0
  8094  0501  3440               	retlw	64
  8095  0502  3460               	retlw	96
  8096  0503  3470               	retlw	112
  8097  0504  3438               	retlw	56
  8098  0505  341C               	retlw	28
  8099  0506  340E               	retlw	14
  8100  0507  3407               	retlw	7
  8101  0508  3403               	retlw	3
  8102  0509  3401               	retlw	1
  8103  050A  3400               	retlw	0
  8104  050B  3400               	retlw	0
  8105  050C  3400               	retlw	0
  8106  050D  3400               	retlw	0
  8107  050E  3400               	retlw	0
  8108  050F  3400               	retlw	0
  8109  0510  3400               	retlw	0
  8110  0511  3418               	retlw	24
  8111  0512  341C               	retlw	28
  8112  0513  340C               	retlw	12
  8113  0514  340E               	retlw	14
  8114  0515  3406               	retlw	6
  8115  0516  3486               	retlw	134
  8116  0517  34CE               	retlw	206
  8117  0518  34FC               	retlw	252
  8118  0519  347C               	retlw	124
  8119  051A  3438               	retlw	56
  8120  051B  3400               	retlw	0
  8121  051C  3400               	retlw	0
  8122  051D  3400               	retlw	0
  8123  051E  3400               	retlw	0
  8124  051F  3400               	retlw	0
  8125  0520  3400               	retlw	0
  8126  0521  3400               	retlw	0
  8127  0522  3400               	retlw	0
  8128  0523  3400               	retlw	0
  8129  0524  3400               	retlw	0
  8130  0525  3473               	retlw	115
  8131  0526  3473               	retlw	115
  8132  0527  3473               	retlw	115
  8133  0528  3400               	retlw	0
  8134  0529  3400               	retlw	0
  8135  052A  3400               	retlw	0
  8136  052B  3400               	retlw	0
  8137  052C  3400               	retlw	0
  8138  052D  3400               	retlw	0
  8139  052E  3400               	retlw	0
  8140  052F  3400               	retlw	0
  8141  0530  3400               	retlw	0
  8142  0531  34FC               	retlw	252
  8143  0532  34FE               	retlw	254
  8144  0533  34FE               	retlw	254
  8145  0534  3402               	retlw	2
  8146  0535  3402               	retlw	2
  8147  0536  34C2               	retlw	194
  8148  0537  34C2               	retlw	194
  8149  0538  34C2               	retlw	194
  8150  0539  34FE               	retlw	254
  8151  053A  34FE               	retlw	254
  8152  053B  34FC               	retlw	252
  8153  053C  3400               	retlw	0
  8154  053D  3400               	retlw	0
  8155  053E  3400               	retlw	0
  8156  053F  3400               	retlw	0
  8157  0540  3400               	retlw	0
  8158  0541  343F               	retlw	63
  8159  0542  343F               	retlw	63
  8160  0543  347F               	retlw	127
  8161  0544  3460               	retlw	96
  8162  0545  3460               	retlw	96
  8163  0546  3463               	retlw	99
  8164  0547  3463               	retlw	99
  8165  0548  3463               	retlw	99
  8166  0549  3463               	retlw	99
  8167  054A  3443               	retlw	67
  8168  054B  3403               	retlw	3
  8169  054C  3400               	retlw	0
  8170  054D  3400               	retlw	0
  8171  054E  3400               	retlw	0
  8172  054F  3400               	retlw	0
  8173  0550  3400               	retlw	0
  8174  0551  34E0               	retlw	224
  8175  0552  34F0               	retlw	240
  8176  0553  34F8               	retlw	248
  8177  0554  341C               	retlw	28
  8178  0555  340C               	retlw	12
  8179  0556  340C               	retlw	12
  8180  0557  341C               	retlw	28
  8181  0558  34F8               	retlw	248
  8182  0559  34F0               	retlw	240
  8183  055A  34E0               	retlw	224
  8184  055B  3400               	retlw	0
  8185  055C  3400               	retlw	0
  8186  055D  3400               	retlw	0
  8187  055E  3400               	retlw	0
  8188  055F  3400               	retlw	0
  8189  0560  3400               	retlw	0
  8190  0561  343F               	retlw	63
  8191  0562  343F               	retlw	63
  8192  0563  343F               	retlw	63
  8193  0564  3402               	retlw	2
  8194  0565  3402               	retlw	2
  8195  0566  3402               	retlw	2
  8196  0567  3402               	retlw	2
  8197  0568  343F               	retlw	63
  8198  0569  343F               	retlw	63
  8199  056A  343F               	retlw	63
  8200  056B  3400               	retlw	0
  8201  056C  3400               	retlw	0
  8202  056D  3400               	retlw	0
  8203  056E  3400               	retlw	0
  8204  056F  3400               	retlw	0
  8205  0570  3400               	retlw	0
  8206  0571  3404               	retlw	4
  8207  0572  34FC               	retlw	252
  8208  0573  34FC               	retlw	252
  8209  0574  34FC               	retlw	252
  8210  0575  3484               	retlw	132
  8211  0576  3484               	retlw	132
  8212  0577  3484               	retlw	132
  8213  0578  34FC               	retlw	252
  8214  0579  34FC               	retlw	252
  8215  057A  3478               	retlw	120
  8216  057B  3400               	retlw	0
  8217  057C  3400               	retlw	0
  8218  057D  3400               	retlw	0
  8219  057E  3400               	retlw	0
  8220  057F  3400               	retlw	0
  8221  0580  3400               	retlw	0
  8222  0581  3420               	retlw	32
  8223  0582  343F               	retlw	63
  8224  0583  343F               	retlw	63
  8225  0584  343F               	retlw	63
  8226  0585  3421               	retlw	33
  8227  0586  3421               	retlw	33
  8228  0587  3421               	retlw	33
  8229  0588  343F               	retlw	63
  8230  0589  343F               	retlw	63
  8231  058A  341E               	retlw	30
  8232  058B  3400               	retlw	0
  8233  058C  3400               	retlw	0
  8234  058D  3400               	retlw	0
  8235  058E  3400               	retlw	0
  8236  058F  3400               	retlw	0
  8237  0590  3400               	retlw	0
  8238  0591  34F0               	retlw	240
  8239  0592  34F8               	retlw	248
  8240  0593  34FC               	retlw	252
  8241  0594  340C               	retlw	12
  8242  0595  3404               	retlw	4
  8243  0596  3404               	retlw	4
  8244  0597  3404               	retlw	4
  8245  0598  341C               	retlw	28
  8246  0599  341C               	retlw	28
  8247  059A  3418               	retlw	24
  8248  059B  3400               	retlw	0
  8249  059C  3400               	retlw	0
  8250  059D  3400               	retlw	0
  8251  059E  3400               	retlw	0
  8252  059F  3400               	retlw	0
  8253  05A0  3400               	retlw	0
  8254  05A1  340F               	retlw	15
  8255  05A2  341F               	retlw	31
  8256  05A3  343F               	retlw	63
  8257  05A4  3430               	retlw	48
  8258  05A5  3420               	retlw	32
  8259  05A6  3420               	retlw	32
  8260  05A7  3420               	retlw	32
  8261  05A8  3438               	retlw	56
  8262  05A9  3438               	retlw	56
  8263  05AA  3418               	retlw	24
  8264  05AB  3400               	retlw	0
  8265  05AC  3400               	retlw	0
  8266  05AD  3400               	retlw	0
  8267  05AE  3400               	retlw	0
  8268  05AF  3400               	retlw	0
  8269  05B0  3400               	retlw	0
  8270  05B1  3404               	retlw	4
  8271  05B2  34FC               	retlw	252
  8272  05B3  34FC               	retlw	252
  8273  05B4  34FC               	retlw	252
  8274  05B5  3404               	retlw	4
  8275  05B6  3404               	retlw	4
  8276  05B7  340C               	retlw	12
  8277  05B8  34FC               	retlw	252
  8278  05B9  34F8               	retlw	248
  8279  05BA  34F0               	retlw	240
  8280  05BB  3400               	retlw	0
  8281  05BC  3400               	retlw	0
  8282  05BD  3400               	retlw	0
  8283  05BE  3400               	retlw	0
  8284  05BF  3400               	retlw	0
  8285  05C0  3400               	retlw	0
  8286  05C1  3420               	retlw	32
  8287  05C2  343F               	retlw	63
  8288  05C3  343F               	retlw	63
  8289  05C4  343F               	retlw	63
  8290  05C5  3420               	retlw	32
  8291  05C6  3420               	retlw	32
  8292  05C7  3430               	retlw	48
  8293  05C8  343F               	retlw	63
  8294  05C9  341F               	retlw	31
  8295  05CA  340F               	retlw	15
  8296  05CB  3400               	retlw	0
  8297  05CC  3400               	retlw	0
  8298  05CD  3400               	retlw	0
  8299  05CE  3400               	retlw	0
  8300  05CF  3400               	retlw	0
  8301  05D0  3400               	retlw	0
  8302  05D1  3404               	retlw	4
  8303  05D2  34FC               	retlw	252
  8304  05D3  34FC               	retlw	252
  8305  05D4  34FC               	retlw	252
  8306  05D5  3484               	retlw	132
  8307  05D6  3484               	retlw	132
  8308  05D7  3484               	retlw	132
  8309  05D8  34C4               	retlw	196
  8310  05D9  34CC               	retlw	204
  8311  05DA  341C               	retlw	28
  8312  05DB  3400               	retlw	0
  8313  05DC  3400               	retlw	0
  8314  05DD  3400               	retlw	0
  8315  05DE  3400               	retlw	0
  8316  05DF  3400               	retlw	0
  8317  05E0  3400               	retlw	0
  8318  05E1  3420               	retlw	32
  8319  05E2  343F               	retlw	63
  8320  05E3  343F               	retlw	63
  8321  05E4  343F               	retlw	63
  8322  05E5  3421               	retlw	33
  8323  05E6  3421               	retlw	33
  8324  05E7  3421               	retlw	33
  8325  05E8  3423               	retlw	35
  8326  05E9  3433               	retlw	51
  8327  05EA  3438               	retlw	56
  8328  05EB  3400               	retlw	0
  8329  05EC  3400               	retlw	0
  8330  05ED  3400               	retlw	0
  8331  05EE  3400               	retlw	0
  8332  05EF  3400               	retlw	0
  8333  05F0  3400               	retlw	0
  8334  05F1  3404               	retlw	4
  8335  05F2  34FC               	retlw	252
  8336  05F3  34FC               	retlw	252
  8337  05F4  34FC               	retlw	252
  8338  05F5  3484               	retlw	132
  8339  05F6  3484               	retlw	132
  8340  05F7  3484               	retlw	132
  8341  05F8  34C4               	retlw	196
  8342  05F9  34CC               	retlw	204
  8343  05FA  341C               	retlw	28
  8344  05FB  3400               	retlw	0
  8345  05FC  3400               	retlw	0
  8346  05FD  3400               	retlw	0
  8347  05FE  3400               	retlw	0
  8348  05FF  3400               	retlw	0
  8349  0600  3400               	retlw	0
  8350  0601  3420               	retlw	32
  8351  0602  343F               	retlw	63
  8352  0603  343F               	retlw	63
  8353  0604  343F               	retlw	63
  8354  0605  3421               	retlw	33
  8355  0606  3401               	retlw	1
  8356  0607  3401               	retlw	1
  8357  0608  3403               	retlw	3
  8358  0609  3403               	retlw	3
  8359  060A  3400               	retlw	0
  8360  060B  3400               	retlw	0
  8361  060C  3400               	retlw	0
  8362  060D  3400               	retlw	0
  8363  060E  3400               	retlw	0
  8364  060F  3400               	retlw	0
  8365  0610  3400               	retlw	0
  8366  0611  34F0               	retlw	240
  8367  0612  34F8               	retlw	248
  8368  0613  34FC               	retlw	252
  8369  0614  340C               	retlw	12
  8370  0615  3404               	retlw	4
  8371  0616  3404               	retlw	4
  8372  0617  3404               	retlw	4
  8373  0618  343C               	retlw	60
  8374  0619  343C               	retlw	60
  8375  061A  3438               	retlw	56
  8376  061B  3400               	retlw	0
  8377  061C  3400               	retlw	0
  8378  061D  3400               	retlw	0
  8379  061E  3400               	retlw	0
  8380  061F  3400               	retlw	0
  8381  0620  3400               	retlw	0
  8382  0621  340F               	retlw	15
  8383  0622  341F               	retlw	31
  8384  0623  343F               	retlw	63
  8385  0624  3430               	retlw	48
  8386  0625  3420               	retlw	32
  8387  0626  3422               	retlw	34
  8388  0627  3422               	retlw	34
  8389  0628  343E               	retlw	62
  8390  0629  343E               	retlw	62
  8391  062A  343E               	retlw	62
  8392  062B  3400               	retlw	0
  8393  062C  3400               	retlw	0
  8394  062D  3400               	retlw	0
  8395  062E  3400               	retlw	0
  8396  062F  3400               	retlw	0
  8397  0630  3400               	retlw	0
  8398  0631  34FC               	retlw	252
  8399  0632  34FC               	retlw	252
  8400  0633  34FC               	retlw	252
  8401  0634  3480               	retlw	128
  8402  0635  3480               	retlw	128
  8403  0636  3480               	retlw	128
  8404  0637  34FC               	retlw	252
  8405  0638  34FC               	retlw	252
  8406  0639  34FC               	retlw	252
  8407  063A  3400               	retlw	0
  8408  063B  3400               	retlw	0
  8409  063C  3400               	retlw	0
  8410  063D  3400               	retlw	0
  8411  063E  3400               	retlw	0
  8412  063F  3400               	retlw	0
  8413  0640  3400               	retlw	0
  8414  0641  343F               	retlw	63
  8415  0642  343F               	retlw	63
  8416  0643  343F               	retlw	63
  8417  0644  3401               	retlw	1
  8418  0645  3401               	retlw	1
  8419  0646  3401               	retlw	1
  8420  0647  343F               	retlw	63
  8421  0648  343F               	retlw	63
  8422  0649  343F               	retlw	63
  8423  064A  3400               	retlw	0
  8424  064B  3400               	retlw	0
  8425  064C  3400               	retlw	0
  8426  064D  3400               	retlw	0
  8427  064E  3400               	retlw	0
  8428  064F  3400               	retlw	0
  8429  0650  3400               	retlw	0
  8430  0651  3400               	retlw	0
  8431  0652  3404               	retlw	4
  8432  0653  3404               	retlw	4
  8433  0654  34FC               	retlw	252
  8434  0655  34FC               	retlw	252
  8435  0656  34FC               	retlw	252
  8436  0657  3404               	retlw	4
  8437  0658  3404               	retlw	4
  8438  0659  3400               	retlw	0
  8439  065A  3400               	retlw	0
  8440  065B  3400               	retlw	0
  8441  065C  3400               	retlw	0
  8442  065D  3400               	retlw	0
  8443  065E  3400               	retlw	0
  8444  065F  3400               	retlw	0
  8445  0660  3400               	retlw	0
  8446  0661  3400               	retlw	0
  8447  0662  3420               	retlw	32
  8448  0663  3420               	retlw	32
  8449  0664  343F               	retlw	63
  8450  0665  343F               	retlw	63
  8451  0666  343F               	retlw	63
  8452  0667  3420               	retlw	32
  8453  0668  3420               	retlw	32
  8454  0669  3400               	retlw	0
  8455  066A  3400               	retlw	0
  8456  066B  3400               	retlw	0
  8457  066C  3400               	retlw	0
  8458  066D  3400               	retlw	0
  8459  066E  3400               	retlw	0
  8460  066F  3400               	retlw	0
  8461  0670  3400               	retlw	0
  8462  0671  3400               	retlw	0
  8463  0672  3400               	retlw	0
  8464  0673  3400               	retlw	0
  8465  0674  3400               	retlw	0
  8466  0675  3404               	retlw	4
  8467  0676  3404               	retlw	4
  8468  0677  34FC               	retlw	252
  8469  0678  34FC               	retlw	252
  8470  0679  34FC               	retlw	252
  8471  067A  3404               	retlw	4
  8472  067B  3404               	retlw	4
  8473  067C  3400               	retlw	0
  8474  067D  3400               	retlw	0
  8475  067E  3400               	retlw	0
  8476  067F  3400               	retlw	0
  8477  0680  341E               	retlw	30
  8478  0681  341E               	retlw	30
  8479  0682  343E               	retlw	62
  8480  0683  3420               	retlw	32
  8481  0684  3420               	retlw	32
  8482  0685  3420               	retlw	32
  8483  0686  3420               	retlw	32
  8484  0687  343F               	retlw	63
  8485  0688  343F               	retlw	63
  8486  0689  341F               	retlw	31
  8487  068A  3400               	retlw	0
  8488  068B  3400               	retlw	0
  8489  068C  3400               	retlw	0
  8490  068D  3400               	retlw	0
  8491  068E  3400               	retlw	0
  8492  068F  3400               	retlw	0
  8493  0690  3400               	retlw	0
  8494  0691  3404               	retlw	4
  8495  0692  34FC               	retlw	252
  8496  0693  34FC               	retlw	252
  8497  0694  34FC               	retlw	252
  8498  0695  34C0               	retlw	192
  8499  0696  34E0               	retlw	224
  8500  0697  3470               	retlw	112
  8501  0698  343C               	retlw	60
  8502  0699  341C               	retlw	28
  8503  069A  340C               	retlw	12
  8504  069B  3400               	retlw	0
  8505  069C  3400               	retlw	0
  8506  069D  3400               	retlw	0
  8507  069E  3400               	retlw	0
  8508  069F  3400               	retlw	0
  8509  06A0  3400               	retlw	0
  8510  06A1  3420               	retlw	32
  8511  06A2  343F               	retlw	63
  8512  06A3  343F               	retlw	63
  8513  06A4  343F               	retlw	63
  8514  06A5  3403               	retlw	3
  8515  06A6  3407               	retlw	7
  8516  06A7  340E               	retlw	14
  8517  06A8  343C               	retlw	60
  8518  06A9  3438               	retlw	56
  8519  06AA  3430               	retlw	48
  8520  06AB  3400               	retlw	0
  8521  06AC  3400               	retlw	0
  8522  06AD  3400               	retlw	0
  8523  06AE  3400               	retlw	0
  8524  06AF  3400               	retlw	0
  8525  06B0  3400               	retlw	0
  8526  06B1  3404               	retlw	4
  8527  06B2  34FC               	retlw	252
  8528  06B3  34FC               	retlw	252
  8529  06B4  34FC               	retlw	252
  8530  06B5  3404               	retlw	4
  8531  06B6  3400               	retlw	0
  8532  06B7  3400               	retlw	0
  8533  06B8  3400               	retlw	0
  8534  06B9  3400               	retlw	0
  8535  06BA  3400               	retlw	0
  8536  06BB  3400               	retlw	0
  8537  06BC  3400               	retlw	0
  8538  06BD  3400               	retlw	0
  8539  06BE  3400               	retlw	0
  8540  06BF  3400               	retlw	0
  8541  06C0  3400               	retlw	0
  8542  06C1  3420               	retlw	32
  8543  06C2  343F               	retlw	63
  8544  06C3  343F               	retlw	63
  8545  06C4  343F               	retlw	63
  8546  06C5  3420               	retlw	32
  8547  06C6  3420               	retlw	32
  8548  06C7  3420               	retlw	32
  8549  06C8  3430               	retlw	48
  8550  06C9  3438               	retlw	56
  8551  06CA  343C               	retlw	60
  8552  06CB  3400               	retlw	0
  8553  06CC  3400               	retlw	0
  8554  06CD  3400               	retlw	0
  8555  06CE  3400               	retlw	0
  8556  06CF  3400               	retlw	0
  8557  06D0  3400               	retlw	0
  8558  06D1  34FC               	retlw	252
  8559  06D2  34FC               	retlw	252
  8560  06D3  34FC               	retlw	252
  8561  06D4  3478               	retlw	120
  8562  06D5  34F0               	retlw	240
  8563  06D6  34E0               	retlw	224
  8564  06D7  34F0               	retlw	240
  8565  06D8  3478               	retlw	120
  8566  06D9  34FC               	retlw	252
  8567  06DA  34FC               	retlw	252
  8568  06DB  34FC               	retlw	252
  8569  06DC  3400               	retlw	0
  8570  06DD  3400               	retlw	0
  8571  06DE  3400               	retlw	0
  8572  06DF  3400               	retlw	0
  8573  06E0  3400               	retlw	0
  8574  06E1  343F               	retlw	63
  8575  06E2  343F               	retlw	63
  8576  06E3  343F               	retlw	63
  8577  06E4  3400               	retlw	0
  8578  06E5  3400               	retlw	0
  8579  06E6  3401               	retlw	1
  8580  06E7  3400               	retlw	0
  8581  06E8  3400               	retlw	0
  8582  06E9  343F               	retlw	63
  8583  06EA  343F               	retlw	63
  8584  06EB  343F               	retlw	63
  8585  06EC  3400               	retlw	0
  8586  06ED  3400               	retlw	0
  8587  06EE  3400               	retlw	0
  8588  06EF  3400               	retlw	0
  8589  06F0  3400               	retlw	0
  8590  06F1  34FC               	retlw	252
  8591  06F2  34FC               	retlw	252
  8592  06F3  34FC               	retlw	252
  8593  06F4  3470               	retlw	112
  8594  06F5  34E0               	retlw	224
  8595  06F6  34C0               	retlw	192
  8596  06F7  3480               	retlw	128
  8597  06F8  3400               	retlw	0
  8598  06F9  34FC               	retlw	252
  8599  06FA  34FC               	retlw	252
  8600  06FB  34FC               	retlw	252
  8601  06FC  3400               	retlw	0
  8602  06FD  3400               	retlw	0
  8603  06FE  3400               	retlw	0
  8604  06FF  3400               	retlw	0
  8605  0700  3400               	retlw	0
  8606  0701  343F               	retlw	63
  8607  0702  343F               	retlw	63
  8608  0703  343F               	retlw	63
  8609  0704  3400               	retlw	0
  8610  0705  3400               	retlw	0
  8611  0706  3401               	retlw	1
  8612  0707  3403               	retlw	3
  8613  0708  3407               	retlw	7
  8614  0709  343F               	retlw	63
  8615  070A  343F               	retlw	63
  8616  070B  343F               	retlw	63
  8617  070C  3400               	retlw	0
  8618  070D  3400               	retlw	0
  8619  070E  3400               	retlw	0
  8620  070F  3400               	retlw	0
  8621  0710  3400               	retlw	0
  8622  0711  34E0               	retlw	224
  8623  0712  34F0               	retlw	240
  8624  0713  34F8               	retlw	248
  8625  0714  341C               	retlw	28
  8626  0715  340C               	retlw	12
  8627  0716  340C               	retlw	12
  8628  0717  340C               	retlw	12
  8629  0718  341C               	retlw	28
  8630  0719  34F8               	retlw	248
  8631  071A  34F0               	retlw	240
  8632  071B  34E0               	retlw	224
  8633  071C  3400               	retlw	0
  8634  071D  3400               	retlw	0
  8635  071E  3400               	retlw	0
  8636  071F  3400               	retlw	0
  8637  0720  3400               	retlw	0
  8638  0721  3407               	retlw	7
  8639  0722  340F               	retlw	15
  8640  0723  341F               	retlw	31
  8641  0724  3438               	retlw	56
  8642  0725  3430               	retlw	48
  8643  0726  3430               	retlw	48
  8644  0727  3430               	retlw	48
  8645  0728  3438               	retlw	56
  8646  0729  341F               	retlw	31
  8647  072A  340F               	retlw	15
  8648  072B  3407               	retlw	7
  8649  072C  3400               	retlw	0
  8650  072D  3400               	retlw	0
  8651  072E  3400               	retlw	0
  8652  072F  3400               	retlw	0
  8653  0730  3400               	retlw	0
  8654  0731  3404               	retlw	4
  8655  0732  34FC               	retlw	252
  8656  0733  34FC               	retlw	252
  8657  0734  34FC               	retlw	252
  8658  0735  3484               	retlw	132
  8659  0736  3484               	retlw	132
  8660  0737  3484               	retlw	132
  8661  0738  34FC               	retlw	252
  8662  0739  34FC               	retlw	252
  8663  073A  3478               	retlw	120
  8664  073B  3400               	retlw	0
  8665  073C  3400               	retlw	0
  8666  073D  3400               	retlw	0
  8667  073E  3400               	retlw	0
  8668  073F  3400               	retlw	0
  8669  0740  3400               	retlw	0
  8670  0741  3420               	retlw	32
  8671  0742  343F               	retlw	63
  8672  0743  343F               	retlw	63
  8673  0744  343F               	retlw	63
  8674  0745  3421               	retlw	33
  8675  0746  3401               	retlw	1
  8676  0747  3401               	retlw	1
  8677  0748  3401               	retlw	1
  8678  0749  3401               	retlw	1
  8679  074A  3400               	retlw	0
  8680  074B  3400               	retlw	0
  8681  074C  3400               	retlw	0
  8682  074D  3400               	retlw	0
  8683  074E  3400               	retlw	0
  8684  074F  3400               	retlw	0
  8685  0750  3400               	retlw	0
  8686  0751  34E0               	retlw	224
  8687  0752  34F8               	retlw	248
  8688  0753  34F8               	retlw	248
  8689  0754  341C               	retlw	28
  8690  0755  340C               	retlw	12
  8691  0756  3404               	retlw	4
  8692  0757  340C               	retlw	12
  8693  0758  341C               	retlw	28
  8694  0759  34F8               	retlw	248
  8695  075A  34F8               	retlw	248
  8696  075B  34E0               	retlw	224
  8697  075C  3400               	retlw	0
  8698  075D  3400               	retlw	0
  8699  075E  3400               	retlw	0
  8700  075F  3400               	retlw	0
  8701  0760  3400               	retlw	0
  8702  0761  3407               	retlw	7
  8703  0762  341F               	retlw	31
  8704  0763  341F               	retlw	31
  8705  0764  3418               	retlw	24
  8706  0765  3418               	retlw	24
  8707  0766  345C               	retlw	92
  8708  0767  345E               	retlw	94
  8709  0768  347E               	retlw	126
  8710  0769  347F               	retlw	127
  8711  076A  347F               	retlw	127
  8712  076B  3447               	retlw	71
  8713  076C  3400               	retlw	0
  8714  076D  3400               	retlw	0
  8715  076E  3400               	retlw	0
  8716  076F  3400               	retlw	0
  8717  0770  3400               	retlw	0
  8718  0771  3404               	retlw	4
  8719  0772  34FC               	retlw	252
  8720  0773  34FC               	retlw	252
  8721  0774  34FC               	retlw	252
  8722  0775  3484               	retlw	132
  8723  0776  3484               	retlw	132
  8724  0777  3484               	retlw	132
  8725  0778  34FC               	retlw	252
  8726  0779  34FC               	retlw	252
  8727  077A  3478               	retlw	120
  8728  077B  3400               	retlw	0
  8729  077C  3400               	retlw	0
  8730  077D  3400               	retlw	0
  8731  077E  3400               	retlw	0
  8732  077F  3400               	retlw	0
  8733  0780  3400               	retlw	0
  8734  0781  3420               	retlw	32
  8735  0782  343F               	retlw	63
  8736  0783  343F               	retlw	63
  8737  0784  343F               	retlw	63
  8738  0785  3401               	retlw	1
  8739  0786  3401               	retlw	1
  8740  0787  3403               	retlw	3
  8741  0788  343F               	retlw	63
  8742  0789  343F               	retlw	63
  8743  078A  343C               	retlw	60
  8744  078B  3400               	retlw	0
  8745  078C  3400               	retlw	0
  8746  078D  3400               	retlw	0
  8747  078E  3400               	retlw	0
  8748  078F  3400               	retlw	0
  8749  0790  3400               	retlw	0
  8750  0791  3478               	retlw	120
  8751  0792  34FC               	retlw	252
  8752  0793  34FC               	retlw	252
  8753  0794  3484               	retlw	132
  8754  0795  3484               	retlw	132
  8755  0796  3484               	retlw	132
  8756  0797  3484               	retlw	132
  8757  0798  34BC               	retlw	188
  8758  0799  343C               	retlw	60
  8759  079A  3438               	retlw	56
  8760  079B  3400               	retlw	0
  8761  079C  3400               	retlw	0
  8762  079D  3400               	retlw	0
  8763  079E  3400               	retlw	0
  8764  079F  3400               	retlw	0
  8765  07A0  3400               	retlw	0
  8766  07A1  341C               	retlw	28
  8767  07A2  343C               	retlw	60
  8768  07A3  343D               	retlw	61
  8769  07A4  3421               	retlw	33
  8770  07A5  3421               	retlw	33
  8771  07A6  3421               	retlw	33
  8772  07A7  3421               	retlw	33
  8773  07A8  343F               	retlw	63
  8774  07A9  343F               	retlw	63
  8775  07AA  341E               	retlw	30
  8776  07AB  3400               	retlw	0
  8777  07AC  3400               	retlw	0
  8778  07AD  3400               	retlw	0
  8779  07AE  3400               	retlw	0
  8780  07AF  3400               	retlw	0
  8781  07B0  3400               	retlw	0
  8782  07B1  341C               	retlw	28
  8783  07B2  340C               	retlw	12
  8784  07B3  3404               	retlw	4
  8785  07B4  3404               	retlw	4
  8786  07B5  34FC               	retlw	252
  8787  07B6  34FC               	retlw	252
  8788  07B7  34FC               	retlw	252
  8789  07B8  3404               	retlw	4
  8790  07B9  3404               	retlw	4
  8791  07BA  340C               	retlw	12
  8792  07BB  341C               	retlw	28
  8793  07BC  3400               	retlw	0
  8794  07BD  3400               	retlw	0
  8795  07BE  3400               	retlw	0
  8796  07BF  3400               	retlw	0
  8797  07C0  3400               	retlw	0
  8798  07C1  3400               	retlw	0
  8799  07C2  3400               	retlw	0
  8800  07C3  3420               	retlw	32
  8801  07C4  3420               	retlw	32
  8802  07C5  343F               	retlw	63
  8803  07C6  343F               	retlw	63
  8804  07C7  343F               	retlw	63
  8805  07C8  3420               	retlw	32
  8806  07C9  3420               	retlw	32
  8807  07CA  3400               	retlw	0
  8808  07CB  3400               	retlw	0
  8809  07CC  3400               	retlw	0
  8810  07CD  3400               	retlw	0
  8811  07CE  3400               	retlw	0
  8812  07CF  3400               	retlw	0
  8813  07D0  3400               	retlw	0
  8814  07D1  34FC               	retlw	252
  8815  07D2  34FC               	retlw	252
  8816  07D3  34FC               	retlw	252
  8817  07D4  3400               	retlw	0
  8818  07D5  3400               	retlw	0
  8819  07D6  3400               	retlw	0
  8820  07D7  34FC               	retlw	252
  8821  07D8  34FC               	retlw	252
  8822  07D9  34FC               	retlw	252
  8823  07DA  3400               	retlw	0
  8824  07DB  3400               	retlw	0
  8825  07DC  3400               	retlw	0
  8826  07DD  3400               	retlw	0
  8827  07DE  3400               	retlw	0
  8828  07DF  3400               	retlw	0
  8829  07E0  3400               	retlw	0
  8830  07E1  341F               	retlw	31
  8831  07E2  343F               	retlw	63
  8832  07E3  343F               	retlw	63
  8833  07E4  3420               	retlw	32
  8834  07E5  3420               	retlw	32
  8835  07E6  3420               	retlw	32
  8836  07E7  343F               	retlw	63
  8837  07E8  343F               	retlw	63
  8838  07E9  341F               	retlw	31
  8839  07EA  3400               	retlw	0
  8840  07EB  3400               	retlw	0
  8841  07EC  3400               	retlw	0
  8842  07ED  3400               	retlw	0
  8843  07EE  3400               	retlw	0
  8844  07EF  3400               	retlw	0
  8845  07F0  3400               	retlw	0
  8846  07F1  34FC               	retlw	252
  8847  07F2  34FC               	retlw	252
  8848  07F3  34FC               	retlw	252
  8849  07F4  3400               	retlw	0
  8850  07F5  3400               	retlw	0
  8851  07F6  3400               	retlw	0
  8852  07F7  34FC               	retlw	252
  8853  07F8  34FC               	retlw	252
  8854  07F9  34FC               	retlw	252
  8855  07FA  3400               	retlw	0
  8856  07FB  3400               	retlw	0
  8857  07FC  3400               	retlw	0
  8858  07FD  3400               	retlw	0
  8859  07FE  3400               	retlw	0
  8860  07FF  3400               	retlw	0
  8861  0800  3400               	retlw	0
  8862  0801  3407               	retlw	7
  8863  0802  340F               	retlw	15
  8864  0803  341F               	retlw	31
  8865  0804  3438               	retlw	56
  8866  0805  3430               	retlw	48
  8867  0806  3438               	retlw	56
  8868  0807  341F               	retlw	31
  8869  0808  340F               	retlw	15
  8870  0809  3407               	retlw	7
  8871  080A  3400               	retlw	0
  8872  080B  3400               	retlw	0
  8873  080C  3400               	retlw	0
  8874  080D  3400               	retlw	0
  8875  080E  3400               	retlw	0
  8876  080F  3400               	retlw	0
  8877  0810  3400               	retlw	0
  8878  0811  34FC               	retlw	252
  8879  0812  34FC               	retlw	252
  8880  0813  34FC               	retlw	252
  8881  0814  3400               	retlw	0
  8882  0815  3400               	retlw	0
  8883  0816  3480               	retlw	128
  8884  0817  3400               	retlw	0
  8885  0818  3400               	retlw	0
  8886  0819  34FC               	retlw	252
  8887  081A  34FC               	retlw	252
  8888  081B  34FC               	retlw	252
  8889  081C  3400               	retlw	0
  8890  081D  3400               	retlw	0
  8891  081E  3400               	retlw	0
  8892  081F  3400               	retlw	0
  8893  0820  3400               	retlw	0
  8894  0821  3403               	retlw	3
  8895  0822  340F               	retlw	15
  8896  0823  343F               	retlw	63
  8897  0824  343C               	retlw	60
  8898  0825  343C               	retlw	60
  8899  0826  340F               	retlw	15
  8900  0827  343C               	retlw	60
  8901  0828  343C               	retlw	60
  8902  0829  343F               	retlw	63
  8903  082A  340F               	retlw	15
  8904  082B  3403               	retlw	3
  8905  082C  3400               	retlw	0
  8906  082D  3400               	retlw	0
  8907  082E  3400               	retlw	0
  8908  082F  3400               	retlw	0
  8909  0830  3400               	retlw	0
  8910  0831  341C               	retlw	28
  8911  0832  343C               	retlw	60
  8912  0833  347C               	retlw	124
  8913  0834  34E0               	retlw	224
  8914  0835  34C0               	retlw	192
  8915  0836  34E0               	retlw	224
  8916  0837  347C               	retlw	124
  8917  0838  343C               	retlw	60
  8918  0839  341C               	retlw	28
  8919  083A  3400               	retlw	0
  8920  083B  3400               	retlw	0
  8921  083C  3400               	retlw	0
  8922  083D  3400               	retlw	0
  8923  083E  3400               	retlw	0
  8924  083F  3400               	retlw	0
  8925  0840  3400               	retlw	0
  8926  0841  3438               	retlw	56
  8927  0842  343C               	retlw	60
  8928  0843  343E               	retlw	62
  8929  0844  3407               	retlw	7
  8930  0845  3403               	retlw	3
  8931  0846  3407               	retlw	7
  8932  0847  343E               	retlw	62
  8933  0848  343C               	retlw	60
  8934  0849  3438               	retlw	56
  8935  084A  3400               	retlw	0
  8936  084B  3400               	retlw	0
  8937  084C  3400               	retlw	0
  8938  084D  3400               	retlw	0
  8939  084E  3400               	retlw	0
  8940  084F  3400               	retlw	0
  8941  0850  3400               	retlw	0
  8942  0851  347C               	retlw	124
  8943  0852  34FC               	retlw	252
  8944  0853  34FC               	retlw	252
  8945  0854  3480               	retlw	128
  8946  0855  3400               	retlw	0
  8947  0856  3480               	retlw	128
  8948  0857  34FC               	retlw	252
  8949  0858  34FC               	retlw	252
  8950  0859  347C               	retlw	124
  8951  085A  3400               	retlw	0
  8952  085B  3400               	retlw	0
  8953  085C  3400               	retlw	0
  8954  085D  3400               	retlw	0
  8955  085E  3400               	retlw	0
  8956  085F  3400               	retlw	0
  8957  0860  3400               	retlw	0
  8958  0861  3400               	retlw	0
  8959  0862  3420               	retlw	32
  8960  0863  3421               	retlw	33
  8961  0864  343F               	retlw	63
  8962  0865  343F               	retlw	63
  8963  0866  343F               	retlw	63
  8964  0867  3421               	retlw	33
  8965  0868  3420               	retlw	32
  8966  0869  3400               	retlw	0
  8967  086A  3400               	retlw	0
  8968  086B  3400               	retlw	0
  8969  086C  3400               	retlw	0
  8970  086D  3400               	retlw	0
  8971  086E  3400               	retlw	0
  8972  086F  3400               	retlw	0
  8973  0870  3400               	retlw	0
  8974  0871  343C               	retlw	60
  8975  0872  341C               	retlw	28
  8976  0873  340C               	retlw	12
  8977  0874  3404               	retlw	4
  8978  0875  3484               	retlw	132
  8979  0876  34C4               	retlw	196
  8980  0877  34E4               	retlw	228
  8981  0878  347C               	retlw	124
  8982  0879  343C               	retlw	60
  8983  087A  341C               	retlw	28
  8984  087B  3400               	retlw	0
  8985  087C  3400               	retlw	0
  8986  087D  3400               	retlw	0
  8987  087E  3400               	retlw	0
  8988  087F  3400               	retlw	0
  8989  0880  3400               	retlw	0
  8990  0881  3438               	retlw	56
  8991  0882  343C               	retlw	60
  8992  0883  343E               	retlw	62
  8993  0884  3427               	retlw	39
  8994  0885  3423               	retlw	35
  8995  0886  3421               	retlw	33
  8996  0887  3420               	retlw	32
  8997  0888  3430               	retlw	48
  8998  0889  3438               	retlw	56
  8999  088A  343C               	retlw	60
  9000  088B  3400               	retlw	0
  9001  088C  3400               	retlw	0
  9002  088D  3400               	retlw	0
  9003  088E  3400               	retlw	0
  9004  088F  3400               	retlw	0
  9005  0890  3400               	retlw	0
  9006  0891  3400               	retlw	0
  9007  0892  3400               	retlw	0
  9008  0893  34FC               	retlw	252
  9009  0894  34FC               	retlw	252
  9010  0895  34FC               	retlw	252
  9011  0896  3404               	retlw	4
  9012  0897  3404               	retlw	4
  9013  0898  3404               	retlw	4
  9014  0899  3404               	retlw	4
  9015  089A  3400               	retlw	0
  9016  089B  3400               	retlw	0
  9017  089C  3400               	retlw	0
  9018  089D  3400               	retlw	0
  9019  089E  3400               	retlw	0
  9020  089F  3400               	retlw	0
  9021  08A0  3400               	retlw	0
  9022  08A1  3400               	retlw	0
  9023  08A2  3400               	retlw	0
  9024  08A3  343F               	retlw	63
  9025  08A4  343F               	retlw	63
  9026  08A5  343F               	retlw	63
  9027  08A6  3420               	retlw	32
  9028  08A7  3420               	retlw	32
  9029  08A8  3420               	retlw	32
  9030  08A9  3420               	retlw	32
  9031  08AA  3400               	retlw	0
  9032  08AB  3400               	retlw	0
  9033  08AC  3400               	retlw	0
  9034  08AD  3400               	retlw	0
  9035  08AE  3400               	retlw	0
  9036  08AF  3400               	retlw	0
  9037  08B0  3400               	retlw	0
  9038  08B1  341C               	retlw	28
  9039  08B2  3438               	retlw	56
  9040  08B3  3470               	retlw	112
  9041  08B4  34E0               	retlw	224
  9042  08B5  34C0               	retlw	192
  9043  08B6  3480               	retlw	128
  9044  08B7  3400               	retlw	0
  9045  08B8  3400               	retlw	0
  9046  08B9  3400               	retlw	0
  9047  08BA  3400               	retlw	0
  9048  08BB  3400               	retlw	0
  9049  08BC  3400               	retlw	0
  9050  08BD  3400               	retlw	0
  9051  08BE  3400               	retlw	0
  9052  08BF  3400               	retlw	0
  9053  08C0  3400               	retlw	0
  9054  08C1  3400               	retlw	0
  9055  08C2  3400               	retlw	0
  9056  08C3  3400               	retlw	0
  9057  08C4  3400               	retlw	0
  9058  08C5  3401               	retlw	1
  9059  08C6  3403               	retlw	3
  9060  08C7  3407               	retlw	7
  9061  08C8  340E               	retlw	14
  9062  08C9  341C               	retlw	28
  9063  08CA  3418               	retlw	24
  9064  08CB  3430               	retlw	48
  9065  08CC  3420               	retlw	32
  9066  08CD  3420               	retlw	32
  9067  08CE  3400               	retlw	0
  9068  08CF  3400               	retlw	0
  9069  08D0  3400               	retlw	0
  9070  08D1  3400               	retlw	0
  9071  08D2  3400               	retlw	0
  9072  08D3  3404               	retlw	4
  9073  08D4  3404               	retlw	4
  9074  08D5  3404               	retlw	4
  9075  08D6  3404               	retlw	4
  9076  08D7  34FC               	retlw	252
  9077  08D8  34FC               	retlw	252
  9078  08D9  34FC               	retlw	252
  9079  08DA  3400               	retlw	0
  9080  08DB  3400               	retlw	0
  9081  08DC  3400               	retlw	0
  9082  08DD  3400               	retlw	0
  9083  08DE  3400               	retlw	0
  9084  08DF  3400               	retlw	0
  9085  08E0  3400               	retlw	0
  9086  08E1  3400               	retlw	0
  9087  08E2  3400               	retlw	0
  9088  08E3  3420               	retlw	32
  9089  08E4  3420               	retlw	32
  9090  08E5  3420               	retlw	32
  9091  08E6  3420               	retlw	32
  9092  08E7  343F               	retlw	63
  9093  08E8  343F               	retlw	63
  9094  08E9  343F               	retlw	63
  9095  08EA  3400               	retlw	0
  9096  08EB  3400               	retlw	0
  9097  08EC  3400               	retlw	0
  9098  08ED  3400               	retlw	0
  9099  08EE  3400               	retlw	0
  9100  08EF  3400               	retlw	0
  9101  08F0  3400               	retlw	0
  9102  08F1  3420               	retlw	32
  9103  08F2  3430               	retlw	48
  9104  08F3  3438               	retlw	56
  9105  08F4  341C               	retlw	28
  9106  08F5  340E               	retlw	14
  9107  08F6  340E               	retlw	14
  9108  08F7  341C               	retlw	28
  9109  08F8  3438               	retlw	56
  9110  08F9  3430               	retlw	48
  9111  08FA  3420               	retlw	32
  9112  08FB  3400               	retlw	0
  9113  08FC  3400               	retlw	0
  9114  08FD  3400               	retlw	0
  9115  08FE  3400               	retlw	0
  9116  08FF  3400               	retlw	0
  9117  0900  3400               	retlw	0
  9118  0901  3400               	retlw	0
  9119  0902  3400               	retlw	0
  9120  0903  3400               	retlw	0
  9121  0904  3400               	retlw	0
  9122  0905  3400               	retlw	0
  9123  0906  3400               	retlw	0
  9124  0907  3400               	retlw	0
  9125  0908  3400               	retlw	0
  9126  0909  3400               	retlw	0
  9127  090A  3400               	retlw	0
  9128  090B  3400               	retlw	0
  9129  090C  3400               	retlw	0
  9130  090D  3400               	retlw	0
  9131  090E  3400               	retlw	0
  9132  090F  3400               	retlw	0
  9133  0910  3400               	retlw	0
  9134  0911  3400               	retlw	0
  9135  0912  3400               	retlw	0
  9136  0913  3400               	retlw	0
  9137  0914  3400               	retlw	0
  9138  0915  3400               	retlw	0
  9139  0916  3400               	retlw	0
  9140  0917  3400               	retlw	0
  9141  0918  3400               	retlw	0
  9142  0919  3400               	retlw	0
  9143  091A  3400               	retlw	0
  9144  091B  3400               	retlw	0
  9145  091C  3400               	retlw	0
  9146  091D  3400               	retlw	0
  9147  091E  3400               	retlw	0
  9148  091F  34C0               	retlw	192
  9149  0920  34C0               	retlw	192
  9150  0921  34C0               	retlw	192
  9151  0922  34C0               	retlw	192
  9152  0923  34C0               	retlw	192
  9153  0924  34C0               	retlw	192
  9154  0925  34C0               	retlw	192
  9155  0926  34C0               	retlw	192
  9156  0927  34C0               	retlw	192
  9157  0928  34C0               	retlw	192
  9158  0929  34C0               	retlw	192
  9159  092A  34C0               	retlw	192
  9160  092B  34C0               	retlw	192
  9161  092C  34C0               	retlw	192
  9162  092D  34C0               	retlw	192
  9163  092E  3400               	retlw	0
  9164  092F  3400               	retlw	0
  9165  0930  3400               	retlw	0
  9166  0931  340C               	retlw	12
  9167  0932  340C               	retlw	12
  9168  0933  343C               	retlw	60
  9169  0934  3430               	retlw	48
  9170  0935  3430               	retlw	48
  9171  0936  3400               	retlw	0
  9172  0937  3400               	retlw	0
  9173  0938  3400               	retlw	0
  9174  0939  3400               	retlw	0
  9175  093A  3400               	retlw	0
  9176  093B  3400               	retlw	0
  9177  093C  3400               	retlw	0
  9178  093D  3400               	retlw	0
  9179  093E  3400               	retlw	0
  9180  093F  3400               	retlw	0
  9181  0940  3400               	retlw	0
  9182  0941  3400               	retlw	0
  9183  0942  3400               	retlw	0
  9184  0943  3400               	retlw	0
  9185  0944  3400               	retlw	0
  9186  0945  3400               	retlw	0
  9187  0946  3400               	retlw	0
  9188  0947  3400               	retlw	0
  9189  0948  3400               	retlw	0
  9190  0949  3400               	retlw	0
  9191  094A  3400               	retlw	0
  9192  094B  3400               	retlw	0
  9193  094C  3400               	retlw	0
  9194  094D  3400               	retlw	0
  9195  094E  3400               	retlw	0
  9196  094F  3400               	retlw	0
  9197  0950  3400               	retlw	0
  9198  0951  3400               	retlw	0
  9199  0952  3440               	retlw	64
  9200  0953  3440               	retlw	64
  9201  0954  3440               	retlw	64
  9202  0955  3440               	retlw	64
  9203  0956  3440               	retlw	64
  9204  0957  34C0               	retlw	192
  9205  0958  34C0               	retlw	192
  9206  0959  3480               	retlw	128
  9207  095A  3400               	retlw	0
  9208  095B  3400               	retlw	0
  9209  095C  3400               	retlw	0
  9210  095D  3400               	retlw	0
  9211  095E  3400               	retlw	0
  9212  095F  3400               	retlw	0
  9213  0960  3400               	retlw	0
  9214  0961  341C               	retlw	28
  9215  0962  343E               	retlw	62
  9216  0963  343E               	retlw	62
  9217  0964  3422               	retlw	34
  9218  0965  3422               	retlw	34
  9219  0966  3422               	retlw	34
  9220  0967  343F               	retlw	63
  9221  0968  341F               	retlw	31
  9222  0969  343F               	retlw	63
  9223  096A  3420               	retlw	32
  9224  096B  3400               	retlw	0
  9225  096C  3400               	retlw	0
  9226  096D  3400               	retlw	0
  9227  096E  3400               	retlw	0
  9228  096F  3400               	retlw	0
  9229  0970  3400               	retlw	0
  9230  0971  3404               	retlw	4
  9231  0972  34FC               	retlw	252
  9232  0973  34FC               	retlw	252
  9233  0974  34FC               	retlw	252
  9234  0975  3440               	retlw	64
  9235  0976  3440               	retlw	64
  9236  0977  3440               	retlw	64
  9237  0978  34C0               	retlw	192
  9238  0979  34C0               	retlw	192
  9239  097A  3480               	retlw	128
  9240  097B  3400               	retlw	0
  9241  097C  3400               	retlw	0
  9242  097D  3400               	retlw	0
  9243  097E  3400               	retlw	0
  9244  097F  3400               	retlw	0
  9245  0980  3400               	retlw	0
  9246  0981  3420               	retlw	32
  9247  0982  343F               	retlw	63
  9248  0983  341F               	retlw	31
  9249  0984  343F               	retlw	63
  9250  0985  3420               	retlw	32
  9251  0986  3420               	retlw	32
  9252  0987  3420               	retlw	32
  9253  0988  343F               	retlw	63
  9254  0989  343F               	retlw	63
  9255  098A  341F               	retlw	31
  9256  098B  3400               	retlw	0
  9257  098C  3400               	retlw	0
  9258  098D  3400               	retlw	0
  9259  098E  3400               	retlw	0
  9260  098F  3400               	retlw	0
  9261  0990  3400               	retlw	0
  9262  0991  3480               	retlw	128
  9263  0992  34C0               	retlw	192
  9264  0993  34C0               	retlw	192
  9265  0994  3440               	retlw	64
  9266  0995  3440               	retlw	64
  9267  0996  3440               	retlw	64
  9268  0997  34C0               	retlw	192
  9269  0998  34C0               	retlw	192
  9270  0999  3480               	retlw	128
  9271  099A  3400               	retlw	0
  9272  099B  3400               	retlw	0
  9273  099C  3400               	retlw	0
  9274  099D  3400               	retlw	0
  9275  099E  3400               	retlw	0
  9276  099F  3400               	retlw	0
  9277  09A0  3400               	retlw	0
  9278  09A1  341F               	retlw	31
  9279  09A2  343F               	retlw	63
  9280  09A3  343F               	retlw	63
  9281  09A4  3420               	retlw	32
  9282  09A5  3420               	retlw	32
  9283  09A6  3420               	retlw	32
  9284  09A7  3439               	retlw	57
  9285  09A8  3439               	retlw	57
  9286  09A9  3419               	retlw	25
  9287  09AA  3400               	retlw	0
  9288  09AB  3400               	retlw	0
  9289  09AC  3400               	retlw	0
  9290  09AD  3400               	retlw	0
  9291  09AE  3400               	retlw	0
  9292  09AF  3400               	retlw	0
  9293  09B0  3400               	retlw	0
  9294  09B1  3480               	retlw	128
  9295  09B2  34C0               	retlw	192
  9296  09B3  34C0               	retlw	192
  9297  09B4  3440               	retlw	64
  9298  09B5  3440               	retlw	64
  9299  09B6  3444               	retlw	68
  9300  09B7  34FC               	retlw	252
  9301  09B8  34FC               	retlw	252
  9302  09B9  34FC               	retlw	252
  9303  09BA  3404               	retlw	4
  9304  09BB  3400               	retlw	0
  9305  09BC  3400               	retlw	0
  9306  09BD  3400               	retlw	0
  9307  09BE  3400               	retlw	0
  9308  09BF  3400               	retlw	0
  9309  09C0  3400               	retlw	0
  9310  09C1  341F               	retlw	31
  9311  09C2  343F               	retlw	63
  9312  09C3  343F               	retlw	63
  9313  09C4  3420               	retlw	32
  9314  09C5  3420               	retlw	32
  9315  09C6  3420               	retlw	32
  9316  09C7  343F               	retlw	63
  9317  09C8  341F               	retlw	31
  9318  09C9  343F               	retlw	63
  9319  09CA  3420               	retlw	32
  9320  09CB  3400               	retlw	0
  9321  09CC  3400               	retlw	0
  9322  09CD  3400               	retlw	0
  9323  09CE  3400               	retlw	0
  9324  09CF  3400               	retlw	0
  9325  09D0  3400               	retlw	0
  9326  09D1  3480               	retlw	128
  9327  09D2  34C0               	retlw	192
  9328  09D3  34C0               	retlw	192
  9329  09D4  3440               	retlw	64
  9330  09D5  3440               	retlw	64
  9331  09D6  3440               	retlw	64
  9332  09D7  34C0               	retlw	192
  9333  09D8  34C0               	retlw	192
  9334  09D9  3480               	retlw	128
  9335  09DA  3400               	retlw	0
  9336  09DB  3400               	retlw	0
  9337  09DC  3400               	retlw	0
  9338  09DD  3400               	retlw	0
  9339  09DE  3400               	retlw	0
  9340  09DF  3400               	retlw	0
  9341  09E0  3400               	retlw	0
  9342  09E1  341F               	retlw	31
  9343  09E2  343F               	retlw	63
  9344  09E3  343F               	retlw	63
  9345  09E4  3422               	retlw	34
  9346  09E5  3422               	retlw	34
  9347  09E6  3422               	retlw	34
  9348  09E7  343B               	retlw	59
  9349  09E8  343B               	retlw	59
  9350  09E9  341B               	retlw	27
  9351  09EA  3400               	retlw	0
  9352  09EB  3400               	retlw	0
  9353  09EC  3400               	retlw	0
  9354  09ED  3400               	retlw	0
  9355  09EE  3400               	retlw	0
  9356  09EF  3400               	retlw	0
  9357  09F0  3400               	retlw	0
  9358  09F1  3480               	retlw	128
  9359  09F2  3480               	retlw	128
  9360  09F3  34F8               	retlw	248
  9361  09F4  34FC               	retlw	252
  9362  09F5  34FC               	retlw	252
  9363  09F6  3484               	retlw	132
  9364  09F7  349C               	retlw	156
  9365  09F8  349C               	retlw	156
  9366  09F9  3418               	retlw	24
  9367  09FA  3400               	retlw	0
  9368  09FB  3400               	retlw	0
  9369  09FC  3400               	retlw	0
  9370  09FD  3400               	retlw	0
  9371  09FE  3400               	retlw	0
  9372  09FF  3400               	retlw	0
  9373  0A00  3400               	retlw	0
  9374  0A01  3421               	retlw	33
  9375  0A02  3421               	retlw	33
  9376  0A03  343F               	retlw	63
  9377  0A04  343F               	retlw	63
  9378  0A05  343F               	retlw	63
  9379  0A06  3421               	retlw	33
  9380  0A07  3421               	retlw	33
  9381  0A08  3401               	retlw	1
  9382  0A09  3400               	retlw	0
  9383  0A0A  3400               	retlw	0
  9384  0A0B  3400               	retlw	0
  9385  0A0C  3400               	retlw	0
  9386  0A0D  3400               	retlw	0
  9387  0A0E  3400               	retlw	0
  9388  0A0F  3400               	retlw	0
  9389  0A10  3400               	retlw	0
  9390  0A11  3480               	retlw	128
  9391  0A12  34C0               	retlw	192
  9392  0A13  34C0               	retlw	192
  9393  0A14  3440               	retlw	64
  9394  0A15  3440               	retlw	64
  9395  0A16  3440               	retlw	64
  9396  0A17  34C0               	retlw	192
  9397  0A18  3480               	retlw	128
  9398  0A19  34C0               	retlw	192
  9399  0A1A  3440               	retlw	64
  9400  0A1B  3400               	retlw	0
  9401  0A1C  3400               	retlw	0
  9402  0A1D  3400               	retlw	0
  9403  0A1E  3400               	retlw	0
  9404  0A1F  3400               	retlw	0
  9405  0A20  3400               	retlw	0
  9406  0A21  3447               	retlw	71
  9407  0A22  34CF               	retlw	207
  9408  0A23  34DF               	retlw	223
  9409  0A24  3498               	retlw	152
  9410  0A25  3498               	retlw	152
  9411  0A26  3498               	retlw	152
  9412  0A27  34FF               	retlw	255
  9413  0A28  34FF               	retlw	255
  9414  0A29  347F               	retlw	127
  9415  0A2A  3400               	retlw	0
  9416  0A2B  3400               	retlw	0
  9417  0A2C  3400               	retlw	0
  9418  0A2D  3400               	retlw	0
  9419  0A2E  3400               	retlw	0
  9420  0A2F  3400               	retlw	0
  9421  0A30  3400               	retlw	0
  9422  0A31  3404               	retlw	4
  9423  0A32  34FC               	retlw	252
  9424  0A33  34FC               	retlw	252
  9425  0A34  34FC               	retlw	252
  9426  0A35  3480               	retlw	128
  9427  0A36  3440               	retlw	64
  9428  0A37  3440               	retlw	64
  9429  0A38  34C0               	retlw	192
  9430  0A39  34C0               	retlw	192
  9431  0A3A  3480               	retlw	128
  9432  0A3B  3400               	retlw	0
  9433  0A3C  3400               	retlw	0
  9434  0A3D  3400               	retlw	0
  9435  0A3E  3400               	retlw	0
  9436  0A3F  3400               	retlw	0
  9437  0A40  3400               	retlw	0
  9438  0A41  3420               	retlw	32
  9439  0A42  343F               	retlw	63
  9440  0A43  343F               	retlw	63
  9441  0A44  343F               	retlw	63
  9442  0A45  3401               	retlw	1
  9443  0A46  3400               	retlw	0
  9444  0A47  3400               	retlw	0
  9445  0A48  343F               	retlw	63
  9446  0A49  343F               	retlw	63
  9447  0A4A  343F               	retlw	63
  9448  0A4B  3400               	retlw	0
  9449  0A4C  3400               	retlw	0
  9450  0A4D  3400               	retlw	0
  9451  0A4E  3400               	retlw	0
  9452  0A4F  3400               	retlw	0
  9453  0A50  3400               	retlw	0
  9454  0A51  3400               	retlw	0
  9455  0A52  3440               	retlw	64
  9456  0A53  3440               	retlw	64
  9457  0A54  3440               	retlw	64
  9458  0A55  34DC               	retlw	220
  9459  0A56  34DC               	retlw	220
  9460  0A57  34DC               	retlw	220
  9461  0A58  3400               	retlw	0
  9462  0A59  3400               	retlw	0
  9463  0A5A  3400               	retlw	0
  9464  0A5B  3400               	retlw	0
  9465  0A5C  3400               	retlw	0
  9466  0A5D  3400               	retlw	0
  9467  0A5E  3400               	retlw	0
  9468  0A5F  3400               	retlw	0
  9469  0A60  3400               	retlw	0
  9470  0A61  3400               	retlw	0
  9471  0A62  3420               	retlw	32
  9472  0A63  3420               	retlw	32
  9473  0A64  3420               	retlw	32
  9474  0A65  343F               	retlw	63
  9475  0A66  343F               	retlw	63
  9476  0A67  343F               	retlw	63
  9477  0A68  3420               	retlw	32
  9478  0A69  3420               	retlw	32
  9479  0A6A  3420               	retlw	32
  9480  0A6B  3400               	retlw	0
  9481  0A6C  3400               	retlw	0
  9482  0A6D  3400               	retlw	0
  9483  0A6E  3400               	retlw	0
  9484  0A6F  3400               	retlw	0
  9485  0A70  3400               	retlw	0
  9486  0A71  3400               	retlw	0
  9487  0A72  3400               	retlw	0
  9488  0A73  3400               	retlw	0
  9489  0A74  3440               	retlw	64
  9490  0A75  3440               	retlw	64
  9491  0A76  3440               	retlw	64
  9492  0A77  34DC               	retlw	220
  9493  0A78  34DC               	retlw	220
  9494  0A79  34DC               	retlw	220
  9495  0A7A  3400               	retlw	0
  9496  0A7B  3400               	retlw	0
  9497  0A7C  3400               	retlw	0
  9498  0A7D  3400               	retlw	0
  9499  0A7E  3400               	retlw	0
  9500  0A7F  3400               	retlw	0
  9501  0A80  3400               	retlw	0
  9502  0A81  3420               	retlw	32
  9503  0A82  3460               	retlw	96
  9504  0A83  34E0               	retlw	224
  9505  0A84  3480               	retlw	128
  9506  0A85  3480               	retlw	128
  9507  0A86  34C0               	retlw	192
  9508  0A87  34FF               	retlw	255
  9509  0A88  34FF               	retlw	255
  9510  0A89  347F               	retlw	127
  9511  0A8A  3400               	retlw	0
  9512  0A8B  3400               	retlw	0
  9513  0A8C  3400               	retlw	0
  9514  0A8D  3400               	retlw	0
  9515  0A8E  3400               	retlw	0
  9516  0A8F  3400               	retlw	0
  9517  0A90  3400               	retlw	0
  9518  0A91  3404               	retlw	4
  9519  0A92  34FC               	retlw	252
  9520  0A93  34FC               	retlw	252
  9521  0A94  34FC               	retlw	252
  9522  0A95  3400               	retlw	0
  9523  0A96  3400               	retlw	0
  9524  0A97  3480               	retlw	128
  9525  0A98  34C0               	retlw	192
  9526  0A99  34C0               	retlw	192
  9527  0A9A  3440               	retlw	64
  9528  0A9B  3400               	retlw	0
  9529  0A9C  3400               	retlw	0
  9530  0A9D  3400               	retlw	0
  9531  0A9E  3400               	retlw	0
  9532  0A9F  3400               	retlw	0
  9533  0AA0  3400               	retlw	0
  9534  0AA1  3420               	retlw	32
  9535  0AA2  343F               	retlw	63
  9536  0AA3  343F               	retlw	63
  9537  0AA4  343F               	retlw	63
  9538  0AA5  3402               	retlw	2
  9539  0AA6  3407               	retlw	7
  9540  0AA7  340F               	retlw	15
  9541  0AA8  343D               	retlw	61
  9542  0AA9  3438               	retlw	56
  9543  0AAA  3430               	retlw	48
  9544  0AAB  3400               	retlw	0
  9545  0AAC  3400               	retlw	0
  9546  0AAD  3400               	retlw	0
  9547  0AAE  3400               	retlw	0
  9548  0AAF  3400               	retlw	0
  9549  0AB0  3400               	retlw	0
  9550  0AB1  3400               	retlw	0
  9551  0AB2  3404               	retlw	4
  9552  0AB3  3404               	retlw	4
  9553  0AB4  3404               	retlw	4
  9554  0AB5  34FC               	retlw	252
  9555  0AB6  34FC               	retlw	252
  9556  0AB7  34FC               	retlw	252
  9557  0AB8  3400               	retlw	0
  9558  0AB9  3400               	retlw	0
  9559  0ABA  3400               	retlw	0
  9560  0ABB  3400               	retlw	0
  9561  0ABC  3400               	retlw	0
  9562  0ABD  3400               	retlw	0
  9563  0ABE  3400               	retlw	0
  9564  0ABF  3400               	retlw	0
  9565  0AC0  3400               	retlw	0
  9566  0AC1  3400               	retlw	0
  9567  0AC2  3420               	retlw	32
  9568  0AC3  3420               	retlw	32
  9569  0AC4  3420               	retlw	32
  9570  0AC5  343F               	retlw	63
  9571  0AC6  343F               	retlw	63
  9572  0AC7  343F               	retlw	63
  9573  0AC8  3420               	retlw	32
  9574  0AC9  3420               	retlw	32
  9575  0ACA  3420               	retlw	32
  9576  0ACB  3400               	retlw	0
  9577  0ACC  3400               	retlw	0
  9578  0ACD  3400               	retlw	0
  9579  0ACE  3400               	retlw	0
  9580  0ACF  3400               	retlw	0
  9581  0AD0  3400               	retlw	0
  9582  0AD1  34C0               	retlw	192
  9583  0AD2  34C0               	retlw	192
  9584  0AD3  34C0               	retlw	192
  9585  0AD4  3440               	retlw	64
  9586  0AD5  3440               	retlw	64
  9587  0AD6  34C0               	retlw	192
  9588  0AD7  3440               	retlw	64
  9589  0AD8  3440               	retlw	64
  9590  0AD9  34C0               	retlw	192
  9591  0ADA  34C0               	retlw	192
  9592  0ADB  3480               	retlw	128
  9593  0ADC  3400               	retlw	0
  9594  0ADD  3400               	retlw	0
  9595  0ADE  3400               	retlw	0
  9596  0ADF  3400               	retlw	0
  9597  0AE0  3400               	retlw	0
  9598  0AE1  343F               	retlw	63
  9599  0AE2  343F               	retlw	63
  9600  0AE3  343F               	retlw	63
  9601  0AE4  3400               	retlw	0
  9602  0AE5  3400               	retlw	0
  9603  0AE6  343F               	retlw	63
  9604  0AE7  3400               	retlw	0
  9605  0AE8  3400               	retlw	0
  9606  0AE9  343F               	retlw	63
  9607  0AEA  343F               	retlw	63
  9608  0AEB  343F               	retlw	63
  9609  0AEC  3400               	retlw	0
  9610  0AED  3400               	retlw	0
  9611  0AEE  3400               	retlw	0
  9612  0AEF  3400               	retlw	0
  9613  0AF0  3400               	retlw	0
  9614  0AF1  34C0               	retlw	192
  9615  0AF2  34C0               	retlw	192
  9616  0AF3  34C0               	retlw	192
  9617  0AF4  3440               	retlw	64
  9618  0AF5  3440               	retlw	64
  9619  0AF6  3440               	retlw	64
  9620  0AF7  34C0               	retlw	192
  9621  0AF8  34C0               	retlw	192
  9622  0AF9  3480               	retlw	128
  9623  0AFA  3400               	retlw	0
  9624  0AFB  3400               	retlw	0
  9625  0AFC  3400               	retlw	0
  9626  0AFD  3400               	retlw	0
  9627  0AFE  3400               	retlw	0
  9628  0AFF  3400               	retlw	0
  9629  0B00  3400               	retlw	0
  9630  0B01  343F               	retlw	63
  9631  0B02  343F               	retlw	63
  9632  0B03  343F               	retlw	63
  9633  0B04  3400               	retlw	0
  9634  0B05  3400               	retlw	0
  9635  0B06  3400               	retlw	0
  9636  0B07  343F               	retlw	63
  9637  0B08  343F               	retlw	63
  9638  0B09  343F               	retlw	63
  9639  0B0A  3400               	retlw	0
  9640  0B0B  3400               	retlw	0
  9641  0B0C  3400               	retlw	0
  9642  0B0D  3400               	retlw	0
  9643  0B0E  3400               	retlw	0
  9644  0B0F  3400               	retlw	0
  9645  0B10  3400               	retlw	0
  9646  0B11  3480               	retlw	128
  9647  0B12  34C0               	retlw	192
  9648  0B13  34C0               	retlw	192
  9649  0B14  3440               	retlw	64
  9650  0B15  3440               	retlw	64
  9651  0B16  3440               	retlw	64
  9652  0B17  34C0               	retlw	192
  9653  0B18  34C0               	retlw	192
  9654  0B19  3480               	retlw	128
  9655  0B1A  3400               	retlw	0
  9656  0B1B  3400               	retlw	0
  9657  0B1C  3400               	retlw	0
  9658  0B1D  3400               	retlw	0
  9659  0B1E  3400               	retlw	0
  9660  0B1F  3400               	retlw	0
  9661  0B20  3400               	retlw	0
  9662  0B21  341F               	retlw	31
  9663  0B22  343F               	retlw	63
  9664  0B23  343F               	retlw	63
  9665  0B24  3420               	retlw	32
  9666  0B25  3420               	retlw	32
  9667  0B26  3420               	retlw	32
  9668  0B27  343F               	retlw	63
  9669  0B28  343F               	retlw	63
  9670  0B29  341F               	retlw	31
  9671  0B2A  3400               	retlw	0
  9672  0B2B  3400               	retlw	0
  9673  0B2C  3400               	retlw	0
  9674  0B2D  3400               	retlw	0
  9675  0B2E  3400               	retlw	0
  9676  0B2F  3400               	retlw	0
  9677  0B30  3400               	retlw	0
  9678  0B31  3440               	retlw	64
  9679  0B32  34C0               	retlw	192
  9680  0B33  3480               	retlw	128
  9681  0B34  34C0               	retlw	192
  9682  0B35  3440               	retlw	64
  9683  0B36  3440               	retlw	64
  9684  0B37  3440               	retlw	64
  9685  0B38  34C0               	retlw	192
  9686  0B39  34C0               	retlw	192
  9687  0B3A  3480               	retlw	128
  9688  0B3B  3400               	retlw	0
  9689  0B3C  3400               	retlw	0
  9690  0B3D  3400               	retlw	0
  9691  0B3E  3400               	retlw	0
  9692  0B3F  3400               	retlw	0
  9693  0B40  3400               	retlw	0
  9694  0B41  3480               	retlw	128
  9695  0B42  34FF               	retlw	255
  9696  0B43  34FF               	retlw	255
  9697  0B44  34FF               	retlw	255
  9698  0B45  3490               	retlw	144
  9699  0B46  3410               	retlw	16
  9700  0B47  3410               	retlw	16
  9701  0B48  341F               	retlw	31
  9702  0B49  341F               	retlw	31
  9703  0B4A  340F               	retlw	15
  9704  0B4B  3400               	retlw	0
  9705  0B4C  3400               	retlw	0
  9706  0B4D  3400               	retlw	0
  9707  0B4E  3400               	retlw	0
  9708  0B4F  3400               	retlw	0
  9709  0B50  3480               	retlw	128
  9710  0B51  34C0               	retlw	192
  9711  0B52  34C0               	retlw	192
  9712  0B53  3440               	retlw	64
  9713  0B54  3440               	retlw	64
  9714  0B55  3440               	retlw	64
  9715  0B56  34C0               	retlw	192
  9716  0B57  3480               	retlw	128
  9717  0B58  34C0               	retlw	192
  9718  0B59  3440               	retlw	64
  9719  0B5A  3400               	retlw	0
  9720  0B5B  3400               	retlw	0
  9721  0B5C  3400               	retlw	0
  9722  0B5D  3400               	retlw	0
  9723  0B5E  3400               	retlw	0
  9724  0B5F  3400               	retlw	0
  9725  0B60  340F               	retlw	15
  9726  0B61  341F               	retlw	31
  9727  0B62  341F               	retlw	31
  9728  0B63  3410               	retlw	16
  9729  0B64  3410               	retlw	16
  9730  0B65  3490               	retlw	144
  9731  0B66  34FF               	retlw	255
  9732  0B67  34FF               	retlw	255
  9733  0B68  34FF               	retlw	255
  9734  0B69  3480               	retlw	128
  9735  0B6A  3400               	retlw	0
  9736  0B6B  3400               	retlw	0
  9737  0B6C  3400               	retlw	0
  9738  0B6D  3400               	retlw	0
  9739  0B6E  3400               	retlw	0
  9740  0B6F  3400               	retlw	0
  9741  0B70  3400               	retlw	0
  9742  0B71  3440               	retlw	64
  9743  0B72  34C0               	retlw	192
  9744  0B73  34C0               	retlw	192
  9745  0B74  34C0               	retlw	192
  9746  0B75  3480               	retlw	128
  9747  0B76  34C0               	retlw	192
  9748  0B77  34C0               	retlw	192
  9749  0B78  34C0               	retlw	192
  9750  0B79  34C0               	retlw	192
  9751  0B7A  3480               	retlw	128
  9752  0B7B  3400               	retlw	0
  9753  0B7C  3400               	retlw	0
  9754  0B7D  3400               	retlw	0
  9755  0B7E  3400               	retlw	0
  9756  0B7F  3400               	retlw	0
  9757  0B80  3400               	retlw	0
  9758  0B81  3420               	retlw	32
  9759  0B82  343F               	retlw	63
  9760  0B83  343F               	retlw	63
  9761  0B84  343F               	retlw	63
  9762  0B85  3421               	retlw	33
  9763  0B86  3400               	retlw	0
  9764  0B87  3400               	retlw	0
  9765  0B88  3401               	retlw	1
  9766  0B89  3401               	retlw	1
  9767  0B8A  3401               	retlw	1
  9768  0B8B  3400               	retlw	0
  9769  0B8C  3400               	retlw	0
  9770  0B8D  3400               	retlw	0
  9771  0B8E  3400               	retlw	0
  9772  0B8F  3400               	retlw	0
  9773  0B90  3400               	retlw	0
  9774  0B91  3480               	retlw	128
  9775  0B92  34C0               	retlw	192
  9776  0B93  34C0               	retlw	192
  9777  0B94  3440               	retlw	64
  9778  0B95  3440               	retlw	64
  9779  0B96  3440               	retlw	64
  9780  0B97  3440               	retlw	64
  9781  0B98  34C0               	retlw	192
  9782  0B99  3480               	retlw	128
  9783  0B9A  3400               	retlw	0
  9784  0B9B  3400               	retlw	0
  9785  0B9C  3400               	retlw	0
  9786  0B9D  3400               	retlw	0
  9787  0B9E  3400               	retlw	0
  9788  0B9F  3400               	retlw	0
  9789  0BA0  3400               	retlw	0
  9790  0BA1  3419               	retlw	25
  9791  0BA2  343B               	retlw	59
  9792  0BA3  3423               	retlw	35
  9793  0BA4  3426               	retlw	38
  9794  0BA5  3426               	retlw	38
  9795  0BA6  3426               	retlw	38
  9796  0BA7  343C               	retlw	60
  9797  0BA8  343D               	retlw	61
  9798  0BA9  3419               	retlw	25
  9799  0BAA  3400               	retlw	0
  9800  0BAB  3400               	retlw	0
  9801  0BAC  3400               	retlw	0
  9802  0BAD  3400               	retlw	0
  9803  0BAE  3400               	retlw	0
  9804  0BAF  3400               	retlw	0
  9805  0BB0  3400               	retlw	0
  9806  0BB1  3440               	retlw	64
  9807  0BB2  3440               	retlw	64
  9808  0BB3  34E0               	retlw	224
  9809  0BB4  34F0               	retlw	240
  9810  0BB5  34F8               	retlw	248
  9811  0BB6  3440               	retlw	64
  9812  0BB7  3440               	retlw	64
  9813  0BB8  3440               	retlw	64
  9814  0BB9  3440               	retlw	64
  9815  0BBA  3400               	retlw	0
  9816  0BBB  3400               	retlw	0
  9817  0BBC  3400               	retlw	0
  9818  0BBD  3400               	retlw	0
  9819  0BBE  3400               	retlw	0
  9820  0BBF  3400               	retlw	0
  9821  0BC0  3400               	retlw	0
  9822  0BC1  3400               	retlw	0
  9823  0BC2  3400               	retlw	0
  9824  0BC3  341F               	retlw	31
  9825  0BC4  343F               	retlw	63
  9826  0BC5  343F               	retlw	63
  9827  0BC6  3420               	retlw	32
  9828  0BC7  3438               	retlw	56
  9829  0BC8  3438               	retlw	56
  9830  0BC9  3418               	retlw	24
  9831  0BCA  3400               	retlw	0
  9832  0BCB  3400               	retlw	0
  9833  0BCC  3400               	retlw	0
  9834  0BCD  3400               	retlw	0
  9835  0BCE  3400               	retlw	0
  9836  0BCF  3400               	retlw	0
  9837  0BD0  3400               	retlw	0
  9838  0BD1  34C0               	retlw	192
  9839  0BD2  34C0               	retlw	192
  9840  0BD3  34C0               	retlw	192
  9841  0BD4  3400               	retlw	0
  9842  0BD5  3400               	retlw	0
  9843  0BD6  3400               	retlw	0
  9844  0BD7  34C0               	retlw	192
  9845  0BD8  34C0               	retlw	192
  9846  0BD9  34C0               	retlw	192
  9847  0BDA  3400               	retlw	0
  9848  0BDB  3400               	retlw	0
  9849  0BDC  3400               	retlw	0
  9850  0BDD  3400               	retlw	0
  9851  0BDE  3400               	retlw	0
  9852  0BDF  3400               	retlw	0
  9853  0BE0  3400               	retlw	0
  9854  0BE1  341F               	retlw	31
  9855  0BE2  343F               	retlw	63
  9856  0BE3  343F               	retlw	63
  9857  0BE4  3420               	retlw	32
  9858  0BE5  3420               	retlw	32
  9859  0BE6  3420               	retlw	32
  9860  0BE7  343F               	retlw	63
  9861  0BE8  341F               	retlw	31
  9862  0BE9  343F               	retlw	63
  9863  0BEA  3420               	retlw	32
  9864  0BEB  3400               	retlw	0
  9865  0BEC  3400               	retlw	0
  9866  0BED  3400               	retlw	0
  9867  0BEE  3400               	retlw	0
  9868  0BEF  3400               	retlw	0
  9869  0BF0  3400               	retlw	0
  9870  0BF1  34C0               	retlw	192
  9871  0BF2  34C0               	retlw	192
  9872  0BF3  34C0               	retlw	192
  9873  0BF4  3400               	retlw	0
  9874  0BF5  3400               	retlw	0
  9875  0BF6  3400               	retlw	0
  9876  0BF7  34C0               	retlw	192
  9877  0BF8  34C0               	retlw	192
  9878  0BF9  34C0               	retlw	192
  9879  0BFA  3400               	retlw	0
  9880  0BFB  3400               	retlw	0
  9881  0BFC  3400               	retlw	0
  9882  0BFD  3400               	retlw	0
  9883  0BFE  3400               	retlw	0
  9884  0BFF  3400               	retlw	0
  9885  0C00  3400               	retlw	0
  9886  0C01  3407               	retlw	7
  9887  0C02  340F               	retlw	15
  9888  0C03  341F               	retlw	31
  9889  0C04  3438               	retlw	56
  9890  0C05  3430               	retlw	48
  9891  0C06  3438               	retlw	56
  9892  0C07  341F               	retlw	31
  9893  0C08  340F               	retlw	15
  9894  0C09  3407               	retlw	7
  9895  0C0A  3400               	retlw	0
  9896  0C0B  3400               	retlw	0
  9897  0C0C  3400               	retlw	0
  9898  0C0D  3400               	retlw	0
  9899  0C0E  3400               	retlw	0
  9900  0C0F  3400               	retlw	0
  9901  0C10  3400               	retlw	0
  9902  0C11  34C0               	retlw	192
  9903  0C12  34C0               	retlw	192
  9904  0C13  34C0               	retlw	192
  9905  0C14  3400               	retlw	0
  9906  0C15  3400               	retlw	0
  9907  0C16  3400               	retlw	0
  9908  0C17  3400               	retlw	0
  9909  0C18  3400               	retlw	0
  9910  0C19  34C0               	retlw	192
  9911  0C1A  34C0               	retlw	192
  9912  0C1B  34C0               	retlw	192
  9913  0C1C  3400               	retlw	0
  9914  0C1D  3400               	retlw	0
  9915  0C1E  3400               	retlw	0
  9916  0C1F  3400               	retlw	0
  9917  0C20  3400               	retlw	0
  9918  0C21  3407               	retlw	7
  9919  0C22  340F               	retlw	15
  9920  0C23  343F               	retlw	63
  9921  0C24  3438               	retlw	56
  9922  0C25  3438               	retlw	56
  9923  0C26  340E               	retlw	14
  9924  0C27  3438               	retlw	56
  9925  0C28  3438               	retlw	56
  9926  0C29  343F               	retlw	63
  9927  0C2A  340F               	retlw	15
  9928  0C2B  3407               	retlw	7
  9929  0C2C  3400               	retlw	0
  9930  0C2D  3400               	retlw	0
  9931  0C2E  3400               	retlw	0
  9932  0C2F  3400               	retlw	0
  9933  0C30  3400               	retlw	0
  9934  0C31  34C0               	retlw	192
  9935  0C32  34C0               	retlw	192
  9936  0C33  34C0               	retlw	192
  9937  0C34  3400               	retlw	0
  9938  0C35  3400               	retlw	0
  9939  0C36  34C0               	retlw	192
  9940  0C37  34C0               	retlw	192
  9941  0C38  34C0               	retlw	192
  9942  0C39  3400               	retlw	0
  9943  0C3A  3400               	retlw	0
  9944  0C3B  3400               	retlw	0
  9945  0C3C  3400               	retlw	0
  9946  0C3D  3400               	retlw	0
  9947  0C3E  3400               	retlw	0
  9948  0C3F  3400               	retlw	0
  9949  0C40  3400               	retlw	0
  9950  0C41  3430               	retlw	48
  9951  0C42  3439               	retlw	57
  9952  0C43  343F               	retlw	63
  9953  0C44  340F               	retlw	15
  9954  0C45  340F               	retlw	15
  9955  0C46  343F               	retlw	63
  9956  0C47  3439               	retlw	57
  9957  0C48  3430               	retlw	48
  9958  0C49  3400               	retlw	0
  9959  0C4A  3400               	retlw	0
  9960  0C4B  3400               	retlw	0
  9961  0C4C  3400               	retlw	0
  9962  0C4D  3400               	retlw	0
  9963  0C4E  3400               	retlw	0
  9964  0C4F  3400               	retlw	0
  9965  0C50  3400               	retlw	0
  9966  0C51  3400               	retlw	0
  9967  0C52  34C0               	retlw	192
  9968  0C53  34C0               	retlw	192
  9969  0C54  34C0               	retlw	192
  9970  0C55  3400               	retlw	0
  9971  0C56  3400               	retlw	0
  9972  0C57  3400               	retlw	0
  9973  0C58  34C0               	retlw	192
  9974  0C59  34C0               	retlw	192
  9975  0C5A  34C0               	retlw	192
  9976  0C5B  3400               	retlw	0
  9977  0C5C  3400               	retlw	0
  9978  0C5D  3400               	retlw	0
  9979  0C5E  3400               	retlw	0
  9980  0C5F  3400               	retlw	0
  9981  0C60  3400               	retlw	0
  9982  0C61  3480               	retlw	128
  9983  0C62  3487               	retlw	135
  9984  0C63  348F               	retlw	143
  9985  0C64  349F               	retlw	159
  9986  0C65  34D8               	retlw	216
  9987  0C66  34F8               	retlw	248
  9988  0C67  3478               	retlw	120
  9989  0C68  343F               	retlw	63
  9990  0C69  340F               	retlw	15
  9991  0C6A  3407               	retlw	7
  9992  0C6B  3400               	retlw	0
  9993  0C6C  3400               	retlw	0
  9994  0C6D  3400               	retlw	0
  9995  0C6E  3400               	retlw	0
  9996  0C6F  3400               	retlw	0
  9997  0C70  3400               	retlw	0
  9998  0C71  34C0               	retlw	192
  9999  0C72  34C0               	retlw	192
 10000  0C73  3440               	retlw	64
 10001  0C74  3440               	retlw	64
 10002  0C75  3440               	retlw	64
 10003  0C76  34C0               	retlw	192
 10004  0C77  34C0               	retlw	192
 10005  0C78  34C0               	retlw	192
 10006  0C79  3400               	retlw	0
 10007  0C7A  3400               	retlw	0
 10008  0C7B  3400               	retlw	0
 10009  0C7C  3400               	retlw	0
 10010  0C7D  3400               	retlw	0
 10011  0C7E  3400               	retlw	0
 10012  0C7F  3400               	retlw	0
 10013  0C80  3400               	retlw	0
 10014  0C81  3431               	retlw	49
 10015  0C82  3438               	retlw	56
 10016  0C83  343C               	retlw	60
 10017  0C84  342E               	retlw	46
 10018  0C85  3427               	retlw	39
 10019  0C86  3423               	retlw	35
 10020  0C87  3431               	retlw	49
 10021  0C88  3438               	retlw	56
 10022  0C89  3400               	retlw	0
 10023  0C8A  3400               	retlw	0
 10024  0C8B  3400               	retlw	0
 10025  0C8C  3400               	retlw	0
 10026  0C8D  3400               	retlw	0
 10027  0C8E  3400               	retlw	0
 10028  0C8F  3400               	retlw	0
 10029  0C90  3400               	retlw	0
 10030  0C91  3480               	retlw	128
 10031  0C92  3480               	retlw	128
 10032  0C93  34C0               	retlw	192
 10033  0C94  3478               	retlw	120
 10034  0C95  347C               	retlw	124
 10035  0C96  343C               	retlw	60
 10036  0C97  3404               	retlw	4
 10037  0C98  3404               	retlw	4
 10038  0C99  3404               	retlw	4
 10039  0C9A  3404               	retlw	4
 10040  0C9B  3400               	retlw	0
 10041  0C9C  3400               	retlw	0
 10042  0C9D  3400               	retlw	0
 10043  0C9E  3400               	retlw	0
 10044  0C9F  3400               	retlw	0
 10045  0CA0  3400               	retlw	0
 10046  0CA1  3401               	retlw	1
 10047  0CA2  3401               	retlw	1
 10048  0CA3  3403               	retlw	3
 10049  0CA4  341E               	retlw	30
 10050  0CA5  343E               	retlw	62
 10051  0CA6  343C               	retlw	60
 10052  0CA7  3420               	retlw	32
 10053  0CA8  3420               	retlw	32
 10054  0CA9  3420               	retlw	32
 10055  0CAA  3420               	retlw	32
 10056  0CAB  3400               	retlw	0
 10057  0CAC  3400               	retlw	0
 10058  0CAD  3400               	retlw	0
 10059  0CAE  3400               	retlw	0
 10060  0CAF  3400               	retlw	0
 10061  0CB0  3400               	retlw	0
 10062  0CB1  3400               	retlw	0
 10063  0CB2  3400               	retlw	0
 10064  0CB3  3400               	retlw	0
 10065  0CB4  3400               	retlw	0
 10066  0CB5  34FE               	retlw	254
 10067  0CB6  34FE               	retlw	254
 10068  0CB7  34FE               	retlw	254
 10069  0CB8  3400               	retlw	0
 10070  0CB9  3400               	retlw	0
 10071  0CBA  3400               	retlw	0
 10072  0CBB  3400               	retlw	0
 10073  0CBC  3400               	retlw	0
 10074  0CBD  3400               	retlw	0
 10075  0CBE  3400               	retlw	0
 10076  0CBF  3400               	retlw	0
 10077  0CC0  3400               	retlw	0
 10078  0CC1  3400               	retlw	0
 10079  0CC2  3400               	retlw	0
 10080  0CC3  3400               	retlw	0
 10081  0CC4  3400               	retlw	0
 10082  0CC5  347F               	retlw	127
 10083  0CC6  347F               	retlw	127
 10084  0CC7  347F               	retlw	127
 10085  0CC8  3400               	retlw	0
 10086  0CC9  3400               	retlw	0
 10087  0CCA  3400               	retlw	0
 10088  0CCB  3400               	retlw	0
 10089  0CCC  3400               	retlw	0
 10090  0CCD  3400               	retlw	0
 10091  0CCE  3400               	retlw	0
 10092  0CCF  3400               	retlw	0
 10093  0CD0  3400               	retlw	0
 10094  0CD1  3404               	retlw	4
 10095  0CD2  3404               	retlw	4
 10096  0CD3  3404               	retlw	4
 10097  0CD4  3404               	retlw	4
 10098  0CD5  343C               	retlw	60
 10099  0CD6  347C               	retlw	124
 10100  0CD7  3478               	retlw	120
 10101  0CD8  34C0               	retlw	192
 10102  0CD9  3480               	retlw	128
 10103  0CDA  3480               	retlw	128
 10104  0CDB  3400               	retlw	0
 10105  0CDC  3400               	retlw	0
 10106  0CDD  3400               	retlw	0
 10107  0CDE  3400               	retlw	0
 10108  0CDF  3400               	retlw	0
 10109  0CE0  3400               	retlw	0
 10110  0CE1  3420               	retlw	32
 10111  0CE2  3420               	retlw	32
 10112  0CE3  3420               	retlw	32
 10113  0CE4  3420               	retlw	32
 10114  0CE5  343C               	retlw	60
 10115  0CE6  343E               	retlw	62
 10116  0CE7  341E               	retlw	30
 10117  0CE8  3403               	retlw	3
 10118  0CE9  3401               	retlw	1
 10119  0CEA  3401               	retlw	1
 10120  0CEB  3400               	retlw	0
 10121  0CEC  3400               	retlw	0
 10122  0CED  3400               	retlw	0
 10123  0CEE  3400               	retlw	0
 10124  0CEF  3400               	retlw	0
 10125  0CF0  3438               	retlw	56
 10126  0CF1  343C               	retlw	60
 10127  0CF2  343C               	retlw	60
 10128  0CF3  3404               	retlw	4
 10129  0CF4  340C               	retlw	12
 10130  0CF5  341C               	retlw	28
 10131  0CF6  3438               	retlw	56
 10132  0CF7  3430               	retlw	48
 10133  0CF8  3420               	retlw	32
 10134  0CF9  343C               	retlw	60
 10135  0CFA  343C               	retlw	60
 10136  0CFB  341C               	retlw	28
 10137  0CFC  3400               	retlw	0
 10138  0CFD  3400               	retlw	0
 10139  0CFE  3400               	retlw	0
 10140  0CFF  3400               	retlw	0
 10141  0D00  3400               	retlw	0
 10142  0D01  3400               	retlw	0
 10143  0D02  3400               	retlw	0
 10144  0D03  3400               	retlw	0
 10145  0D04  3400               	retlw	0
 10146  0D05  3400               	retlw	0
 10147  0D06  3400               	retlw	0
 10148  0D07  3400               	retlw	0
 10149  0D08  3400               	retlw	0
 10150  0D09  3400               	retlw	0
 10151  0D0A  3400               	retlw	0
 10152  0D0B  3400               	retlw	0
 10153  0D0C  3400               	retlw	0
 10154  0D0D  3400               	retlw	0
 10155  0D0E                     __end_of_BIG_FONTS:	
 10156                           
 10157                           	psect	nvBANK14
 10158  0769                     __pnvBANK14:	
 10159  0769                     _timer0ReloadVal:	
 10160  0769                     	ds	1
 10161                           
 10162                           	psect	nvBANK15
 10163  07EB                     __pnvBANK15:	
 10164  07EB                     _TMR0_InterruptHandler:	
 10165  07EB                     	ds	2
 10166  0011                     _PIR1bits	set	17
 10167  0012                     _PIR2bits	set	18
 10168  000B                     _INTCONbits	set	11
 10169  0017                     _TMR0	set	23
 10170  0068                     _RB0	set	104
 10171  006A                     _RB2	set	106
 10172  0069                     _RB1	set	105
 10173  0063                     _RA3	set	99
 10174  006C                     _RB4	set	108
 10175  0066                     _RA6	set	102
 10176  0061                     _RA1	set	97
 10177  0060                     _RA0	set	96
 10178  006D                     _RB5	set	109
 10179  0097                     _OPTION_REGbits	set	151
 10180  008E                     _TRISC	set	142
 10181  008D                     _TRISB	set	141
 10182  008C                     _TRISA	set	140
 10183  0090                     _TRISE	set	144
 10184  0091                     _PIE1bits	set	145
 10185  009E                     _FVRCON	set	158
 10186  0097                     _OPTION_REG	set	151
 10187  0099                     _WDTCON	set	153
 10188  009D                     _BORCON	set	157
 10189  009A                     _OSCTUNE	set	154
 10190  009C                     _OSCSTAT	set	156
 10191  009B                     _OSCCON	set	155
 10192  010E                     _LATC	set	270
 10193  010D                     _LATB	set	269
 10194  010C                     _LATA	set	268
 10195  0193                     _PMDAT	set	403
 10196  0191                     _PMADR	set	401
 10197  0195                     _PMCON1bits	set	405
 10198  018C                     _ANSELA	set	396
 10199  018D                     _ANSELB	set	397
 10200  018E                     _ANSELC	set	398
 10201  0217                     _SSP1CON3	set	535
 10202  020E                     _WPUC	set	526
 10203  020C                     _WPUA	set	524
 10204  020D                     _WPUB	set	525
 10205  0210                     _WPUE	set	528
 10206  0214                     _SSP1STATbits	set	532
 10207  0216                     _SSP1CON2bits	set	534
 10208  0211                     _SSP1BUF	set	529
 10209  0215                     _SSP1CON1bits	set	533
 10210  0212                     _SSP1ADD	set	530
 10211  0216                     _SSP1CON2	set	534
 10212  0215                     _SSP1CON1	set	533
 10213  0214                     _SSP1STAT	set	532
 10214  028E                     _ODCONC	set	654
 10215  028D                     _ODCONB	set	653
 10216  028C                     _ODCONA	set	652
 10217  030E                     _SLRCONC	set	782
 10218  030D                     _SLRCONB	set	781
 10219  030C                     _SLRCONA	set	780
 10220  038E                     _INLVLC	set	910
 10221  038D                     _INLVLB	set	909
 10222  038C                     _INLVLA	set	908
 10223  0490                     _ADCON0bits	set	1168
 10224  0490                     _ADCON0	set	1168
 10225  048F                     _ADRESH	set	1167
 10226  048E                     _ADRESL	set	1166
 10227  0492                     _ADCON2	set	1170
 10228  0491                     _ADCON1	set	1169
 10229  058E                     _DAC1CON0bits	set	1422
 10230  058D                     _DACLDbits	set	1421
 10231  058F                     _DAC1REFL	set	1423
 10232  0590                     _DAC1REFH	set	1424
 10233  058E                     _DAC1CON0	set	1422
 10234  0E3A                     _SSPCLKPPS	set	3642
 10235  0E3B                     _SSPDATPPS	set	3643
 10236  0EA4                     _RC4PPS	set	3748
 10237  0EA3                     _RC3PPS	set	3747
 10238                           
 10239                           	psect	stringtext3
 10240  3020                     __pstringtext3:	
 10241  3020                     STR_10:	
 10242  3020  3441               	retlw	65	;'A'
 10243  3021  3455               	retlw	85	;'U'
 10244  3022  3454               	retlw	84	;'T'
 10245  3023  344F               	retlw	79	;'O'
 10246  3024  3420               	retlw	32	;' '
 10247  3025  3452               	retlw	82	;'R'
 10248  3026  3445               	retlw	69	;'E'
 10249  3027  344D               	retlw	77	;'M'
 10250  3028  344F               	retlw	79	;'O'
 10251  3029  3454               	retlw	84	;'T'
 10252  302A  3445               	retlw	69	;'E'
 10253  302B  3400               	retlw	0
 10254                           
 10255                           	psect	stringtext4
 10256  302C                     __pstringtext4:	
 10257  302C                     STR_12:	
 10258  302C  3452               	retlw	82	;'R'
 10259  302D  3445               	retlw	69	;'E'
 10260  302E  3441               	retlw	65	;'A'
 10261  302F  3444               	retlw	68	;'D'
 10262  3030  343A               	retlw	58	;':'
 10263  3031  3425               	retlw	37	;'%'
 10264  3032  3464               	retlw	100	;'d'
 10265  3033  342E               	retlw	46	;'.'
 10266  3034  3425               	retlw	37	;'%'
 10267  3035  3464               	retlw	100	;'d'
 10268  3036  3456               	retlw	86	;'V'
 10269  3037  3400               	retlw	0
 10270                           
 10271                           	psect	stringtext5
 10272  3038                     __pstringtext5:	
 10273  3038                     STR_6:	
 10274  3038  3441               	retlw	65	;'A'
 10275  3039  3455               	retlw	85	;'U'
 10276  303A  3454               	retlw	84	;'T'
 10277  303B  344F               	retlw	79	;'O'
 10278  303C  3420               	retlw	32	;' '
 10279  303D  344C               	retlw	76	;'L'
 10280  303E  344F               	retlw	79	;'O'
 10281  303F  3443               	retlw	67	;'C'
 10282  3040  3441               	retlw	65	;'A'
 10283  3041  344C               	retlw	76	;'L'
 10284  3042  3400               	retlw	0
 10285                           
 10286                           	psect	stringtext6
 10287  3043                     __pstringtext6:	
 10288  3043                     STR_15:	
 10289  3043  3446               	retlw	70	;'F'
 10290  3044  3449               	retlw	73	;'I'
 10291  3045  3452               	retlw	82	;'R'
 10292  3046  3445               	retlw	69	;'E'
 10293  3047  344D               	retlw	77	;'M'
 10294  3048  3441               	retlw	65	;'A'
 10295  3049  344E               	retlw	78	;'N'
 10296  304A  3453               	retlw	83	;'S'
 10297  304B  3445               	retlw	69	;'E'
 10298  304C  3454               	retlw	84	;'T'
 10299  304D  3400               	retlw	0
 10300                           
 10301                           	psect	stringtext7
 10302  304E                     __pstringtext7:	
 10303  304E                     STR_2:	
 10304  304E  3453               	retlw	83	;'S'
 10305  304F  3445               	retlw	69	;'E'
 10306  3050  3454               	retlw	84	;'T'
 10307  3051  343A               	retlw	58	;':'
 10308  3052  3425               	retlw	37	;'%'
 10309  3053  3464               	retlw	100	;'d'
 10310  3054  342E               	retlw	46	;'.'
 10311  3055  3425               	retlw	37	;'%'
 10312  3056  3464               	retlw	100	;'d'
 10313  3057  3456               	retlw	86	;'V'
 10314  3058  3400               	retlw	0
 10315                           
 10316                           	psect	stringtext8
 10317  3059                     __pstringtext8:	
 10318  3059                     STR_17:	
 10319  3059  3450               	retlw	80	;'P'
 10320  305A  3472               	retlw	114	;'r'
 10321  305B  3465               	retlw	101	;'e'
 10322  305C  3473               	retlw	115	;'s'
 10323  305D  3473               	retlw	115	;'s'
 10324  305E  3420               	retlw	32	;' '
 10325  305F  344D               	retlw	77	;'M'
 10326  3060  346F               	retlw	111	;'o'
 10327  3061  3464               	retlw	100	;'d'
 10328  3062  3465               	retlw	101	;'e'
 10329  3063  3400               	retlw	0
 10330                           
 10331                           	psect	stringtext9
 10332  3064                     __pstringtext9:	
 10333  3064                     STR_9:	
 10334  3064  3444               	retlw	68	;'D'
 10335  3065  3469               	retlw	105	;'i'
 10336  3066  3473               	retlw	115	;'s'
 10337  3067  3461               	retlw	97	;'a'
 10338  3068  3462               	retlw	98	;'b'
 10339  3069  346C               	retlw	108	;'l'
 10340  306A  3465               	retlw	101	;'e'
 10341  306B  3464               	retlw	100	;'d'
 10342  306C  3400               	retlw	0
 10343                           
 10344                           	psect	stringtext10
 10345  306D                     __pstringtext10:	
 10346  306D                     STR_1:	
 10347  306D  3446               	retlw	70	;'F'
 10348  306E  3449               	retlw	73	;'I'
 10349  306F  3452               	retlw	82	;'R'
 10350  3070  3445               	retlw	69	;'E'
 10351  3071  344D               	retlw	77	;'M'
 10352  3072  3441               	retlw	65	;'A'
 10353  3073  344E               	retlw	78	;'N'
 10354  3074  3400               	retlw	0
 10355                           
 10356                           	psect	stringtext11
 10357  3075                     __pstringtext11:	
 10358  3075                     STR_8:	
 10359  3075  3445               	retlw	69	;'E'
 10360  3076  346E               	retlw	110	;'n'
 10361  3077  3461               	retlw	97	;'a'
 10362  3078  3462               	retlw	98	;'b'
 10363  3079  346C               	retlw	108	;'l'
 10364  307A  3465               	retlw	101	;'e'
 10365  307B  3464               	retlw	100	;'d'
 10366  307C  3400               	retlw	0
 10367                           
 10368                           	psect	stringtext12
 10369  307D                     __pstringtext12:	
 10370  307D                     STR_4:	
 10371  307D  3448               	retlw	72	;'H'
 10372  307E  3441               	retlw	65	;'A'
 10373  307F  344E               	retlw	78	;'N'
 10374  3080  3444               	retlw	68	;'D'
 10375  3081  3400               	retlw	0
 10376                           
 10377                           	psect	stringtext13
 10378  3082                     __pstringtext13:	
 10379  3082                     STR_3:	
 10380  3082  344F               	retlw	79	;'O'
 10381  3083  3446               	retlw	70	;'F'
 10382  3084  3446               	retlw	70	;'F'
 10383  3085  3400               	retlw	0
 10384                           
 10385                           	psect	stringtext14
 10386  3086                     __pstringtext14:	
 10387  3086                     STR_11:	
 10388  3086  3420               	retlw	32	;' '
 10389  3087  3400               	retlw	0
 10390                           
 10391                           	psect	stringtext15
 10392  0000                     __pstringtext15:	
 10393  304E                     
 10394                           ; #config settings
 10395  0000                     
 10396                           	psect	cinit
 10397  00C3                     start_initialization:	
 10398  00C3                     __initialization:		;BIGRAM
 10399                           
 10400                           ; Initialize objects allocated to BANK14
 10401  00C3  3032               	movlw	low __pidataBANK14
 10402  00C4  0084               	movwf	4
 10403  00C5  30AA               	movlw	(high __pidataBANK14)| (0+128)
 10404  00C6  0085               	movwf	5
 10405  00C7  3059               	movlw	low __pdataBANK14
 10406  00C8  0086               	movwf	6
 10407  00C9  3007               	movlw	high __pdataBANK14
 10408  00CA  0087               	movwf	7
 10409  00CB  3000               	movlw	0
 10410  00CC  00FF               	movwf	btemp+1
 10411  00CD  3010               	movlw	16
 10412  00CE  31A9  21FF  3180   	fcall	init_ram
 10413                           
 10414                           ; Initialize objects allocated to BANK15
 10415  00D1  3073               	movlw	low __pidataBANK15
 10416  00D2  0084               	movwf	4
 10417  00D3  30AB               	movlw	(high __pidataBANK15)| (0+128)
 10418  00D4  0085               	movwf	5
 10419  00D5  30C3               	movlw	low __pdataBANK15
 10420  00D6  0086               	movwf	6
 10421  00D7  3007               	movlw	high __pdataBANK15
 10422  00D8  0087               	movwf	7
 10423  00D9  3000               	movlw	0
 10424  00DA  00FF               	movwf	btemp+1
 10425  00DB  3020               	movlw	32
 10426  00DC  31A9  21FF  3180   	fcall	init_ram
 10427                           
 10428                           ; Initialize objects allocated to BANK16
 10429  00DF  3053               	movlw	low __pidataBANK16
 10430  00E0  0084               	movwf	4
 10431  00E1  30AB               	movlw	(high __pidataBANK16)| (0+128)
 10432  00E2  0085               	movwf	5
 10433  00E3  3050               	movlw	low __pdataBANK16
 10434  00E4  0086               	movwf	6
 10435  00E5  3008               	movlw	high __pdataBANK16
 10436  00E6  0087               	movwf	7
 10437  00E7  3000               	movlw	0
 10438  00E8  00FF               	movwf	btemp+1
 10439  00E9  3020               	movlw	32
 10440  00EA  31A9  21FF  3180   	fcall	init_ram
 10441                           
 10442                           ; Clear objects allocated to BIGRAM
 10443  00ED  3000               	movlw	low (0+8192)
 10444  00EE  0084               	movwf	4
 10445  00EF  3020               	movlw	high (0+8192)
 10446  00F0  0085               	movwf	5
 10447  00F1  30F0               	movlw	240
 10448  00F2  00FE               	movwf	btemp
 10449  00F3  3003               	movlw	3
 10450  00F4  00FF               	movwf	btemp+1
 10451  00F5  31A9  21F3  3180   	fcall	clear_ram0
 10452                           
 10453                           ; Clear objects allocated to BANK13
 10454  00F8  002D               	movlb	13	; select bank13
 10455  00F9  01EF               	clrf	__pbssBANK13& (0+127)
 10456                           
 10457                           ; Clear objects allocated to BANK14
 10458  00FA  3020               	movlw	low __pbssBANK14
 10459  00FB  0084               	movwf	4
 10460  00FC  3007               	movlw	high __pbssBANK14
 10461  00FD  0085               	movwf	5
 10462  00FE  3021               	movlw	33
 10463  00FF  00FE               	movwf	btemp
 10464  0100  3000               	movlw	0
 10465  0101  00FF               	movwf	btemp+1
 10466  0102  31A9  21F3  3180   	fcall	clear_ram0
 10467                           
 10468                           ; Clear objects allocated to BANK15
 10469  0105  30A0               	movlw	low __pbssBANK15
 10470  0106  0084               	movwf	4
 10471  0107  3007               	movlw	high __pbssBANK15
 10472  0108  0085               	movwf	5
 10473  0109  3023               	movlw	35
 10474  010A  00FE               	movwf	btemp
 10475  010B  3000               	movlw	0
 10476  010C  00FF               	movwf	btemp+1
 10477  010D  31A9  21F3  3180   	fcall	clear_ram0
 10478                           
 10479                           ; Clear objects allocated to BANK16
 10480  0110  3020               	movlw	low __pbssBANK16
 10481  0111  0084               	movwf	4
 10482  0112  3008               	movlw	high __pbssBANK16
 10483  0113  0085               	movwf	5
 10484  0114  3030               	movlw	48
 10485  0115  00FE               	movwf	btemp
 10486  0116  3000               	movlw	0
 10487  0117  00FF               	movwf	btemp+1
 10488  0118  31A9  21F3  3180   	fcall	clear_ram0
 10489                           
 10490                           ; Clear objects allocated to BANK17
 10491  011B  30A0               	movlw	low __pbssBANK17
 10492  011C  0084               	movwf	4
 10493  011D  3008               	movlw	high __pbssBANK17
 10494  011E  0085               	movwf	5
 10495  011F  3030               	movlw	48
 10496  0120  00FE               	movwf	btemp
 10497  0121  3000               	movlw	0
 10498  0122  00FF               	movwf	btemp+1
 10499  0123  31A9  21F3  3180   	fcall	clear_ram0
 10500  0126                     end_of_initialization:	
 10501                           ;End of C runtime variable initialization code
 10502                           
 10503  0126                     __end_of__initialization:	
 10504  0126  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10505  0127  0020               	movlb	0
 10506  0128  319C  2C10         	ljmp	_main	;jump to C main() function
 10507                           
 10508                           	psect	bssBANK13
 10509  06EF                     __pbssBANK13:	
 10510  06EF                     _line_1_update_flag:	
 10511  06EF                     	ds	1
 10512                           
 10513                           	psect	bssBANK14
 10514  0720                     __pbssBANK14:	
 10515  0720                     _cfont:	
 10516  0720                     	ds	7
 10517  0727                     _prec:	
 10518  0727                     	ds	2
 10519  0729                     _flags:	
 10520  0729                     	ds	2
 10521  072B                     _speedChangeTimer:	
 10522  072B                     	ds	2
 10523  072D                     _ext_speed:	
 10524  072D                     	ds	2
 10525  072F                     _speedChangeState:	
 10526  072F                     	ds	1
 10527  0730                     _updateAutoRemoteDelay:	
 10528  0730                     	ds	1
 10529  0731                     _btn_count:	
 10530  0731                     	ds	1
 10531  0732                     _last_buttons:	
 10532  0732                     	ds	1
 10533  0733                     _buttons:	
 10534  0733                     	ds	1
 10535  0734                     _press:	
 10536  0734                     	ds	1
 10537  0735                     _freeze_mode:	
 10538  0735                     	ds	1
 10539  0736                     _factory_reset_enable:	
 10540  0736                     	ds	1
 10541  0737                     _wet_state:	
 10542  0737                     	ds	1
 10543  0738                     _dry_state:	
 10544  0738                     	ds	1
 10545  0739                     _ext_ref_flag:	
 10546  0739                     	ds	1
 10547  073A                     _fireman_out:	
 10548  073A                     	ds	1
 10549  073B                     _fireman_set:	
 10550  073B                     	ds	1
 10551  073C                     _mode_change_flag:	
 10552  073C                     	ds	1
 10553  073D                     _line_4_update_flag:	
 10554  073D                     	ds	1
 10555  073E                     _line_3_update_flag:	
 10556  073E                     	ds	1
 10557  073F                     _line_2_update_flag:	
 10558  073F                     	ds	1
 10559  0740                     _mode:	
 10560  0740                     	ds	1
 10561                           
 10562                           	psect	dataBANK14
 10563  0759                     __pdataBANK14:	
 10564  0759                     _fireman_set_debounce:	
 10565  0759                     	ds	2
 10566  075B                     _fireman_inc:	
 10567  075B                     	ds	2
 10568  075D                     _factory_reset_dec:	
 10569  075D                     	ds	2
 10570  075F                     _mode_btn_debounce:	
 10571  075F                     	ds	2
 10572  0761                     _decrease_btn_debounce:	
 10573  0761                     	ds	2
 10574  0763                     _increase_btn_debounce:	
 10575  0763                     	ds	2
 10576  0765                     _decrement:	
 10577  0765                     	ds	2
 10578  0767                     _frmn_speed:	
 10579  0767                     	ds	1
 10580  0768                     _speed:	
 10581  0768                     	ds	1
 10582                           
 10583                           	psect	bssBANK15
 10584  07A0                     __pbssBANK15:	
 10585  07A0                     _I2C_Status:	
 10586  07A0                     	ds	29
 10587  07BD                     _nout:	
 10588  07BD                     	ds	2
 10589  07BF                     doprnt@width:	
 10590  07BF                     	ds	2
 10591  07C1                     _ADC_InterruptHandler:	
 10592  07C1                     	ds	2
 10593                           
 10594                           	psect	dataBANK15
 10595  07C3                     __pdataBANK15:	
 10596  07C3                     _newTextLine4:	
 10597  07C3                     	ds	16
 10598  07D3                     _newTextLine1:	
 10599  07D3                     	ds	16
 10600                           
 10601                           	psect	bssBANK16
 10602  0820                     __pbssBANK16:	
 10603  0820                     _textLine4:	
 10604  0820                     	ds	16
 10605  0830                     _textLine2:	
 10606  0830                     	ds	16
 10607  0840                     _textLine1:	
 10608  0840                     	ds	16
 10609                           
 10610                           	psect	dataBANK16
 10611  0850                     __pdataBANK16:	
 10612  0850                     _newTextLine3:	
 10613  0850                     	ds	16
 10614  0860                     _newTextLine2:	
 10615  0860                     	ds	16
 10616                           
 10617                           	psect	bssBANK17
 10618  08A0                     __pbssBANK17:	
 10619  08A0                     _textLine3:	
 10620  08A0                     	ds	16
 10621  08B0                     _dbuf:	
 10622  08B0                     	ds	32
 10623                           
 10624                           	psect	inittext
 10625  29FF                     init_ram:	
 10626  29FF  00FE               	movwf	btemp
 10627  2A00                     initloop:	
 10628  2A00  0012               	moviw fsr0++
 10629  2A01  001E               	movwi fsr1++
 10630  2A02  3001               	movlw	1
 10631  2A03  02FE               	subwf	btemp,f
 10632  2A04  3000               	movlw	0
 10633  2A05  3BFF               	subwfb	btemp+1,f
 10634  2A06  087F               	movf	btemp+1,w
 10635  2A07  047E               	iorwf	btemp,w
 10636  2A08  1D03               	skipz
 10637  2A09  2A00               	goto	initloop
 10638  2A0A  3400               	retlw	0
 10639                           
 10640                           	psect	clrtext
 10641  29F3                     clear_ram0:	
 10642                           ;	Called with FSR0 containing the base address, and
 10643                           ;	btemp/btemp+1 has the size to clear
 10644                           
 10645  29F3  0064               	clrwdt	;clear the watchdog before getting into this loop
 10646  29F4                     clrloop0:	
 10647  29F4  0180               	clrf	0	;clear RAM location pointed to by FSR
 10648  29F5  3101               	addfsr 0,1
 10649  29F6  3001               	movlw	1
 10650  29F7  02FE               	subwf	btemp,f
 10651  29F8  3000               	movlw	0
 10652  29F9  3BFF               	subwfb	btemp+1,f
 10653  29FA  087F               	movf	btemp+1,w
 10654  29FB  047E               	iorwf	btemp,w
 10655  29FC  1D03               	skipz
 10656  29FD  29F4               	goto	clrloop0	;have we reached the end yet?
 10657  29FE  3400               	retlw	0	;all done for this memory range, return
 10658                           
 10659                           	psect	cstackBANK15
 10660  07E3                     __pcstackBANK15:	
 10661  07E3                     main@integer:	
 10662                           
 10663                           ; 2 bytes @ 0x0
 10664  07E3                     	ds	2
 10665  07E5                     main@decimal:	
 10666                           
 10667                           ; 2 bytes @ 0x2
 10668  07E5                     	ds	2
 10669  07E7                     main@power_led_flash_counter:	
 10670                           
 10671                           ; 2 bytes @ 0x4
 10672  07E7                     	ds	2
 10673  07E9                     main@i:	
 10674                           
 10675                           ; 2 bytes @ 0x6
 10676  07E9                     	ds	2
 10677                           
 10678                           	psect	cstackBANK14
 10679  0741                     __pcstackBANK14:	
 10680  0741                     vfprintf@fp:	
 10681                           
 10682                           ; 1 bytes @ 0x0
 10683  0741                     	ds	1
 10684  0742                     vfprintf@cfmt:	
 10685                           
 10686                           ; 2 bytes @ 0x1
 10687  0742                     	ds	2
 10688  0744                     ?_sprintf:	
 10689  0744                     sprintf@s:	
 10690                           ; 2 bytes @ 0x3
 10691                           
 10692                           
 10693                           ; 2 bytes @ 0x3
 10694  0744                     	ds	2
 10695  0746                     sprintf@fmt:	
 10696                           
 10697                           ; 2 bytes @ 0x5
 10698  0746                     	ds	8
 10699  074E                     sprintf@ap:	
 10700                           
 10701                           ; 1 bytes @ 0xD
 10702  074E                     	ds	1
 10703  074F                     sprintf@f:	
 10704                           
 10705                           ; 6 bytes @ 0xE
 10706  074F                     	ds	6
 10707  0755                     ??_main:	
 10708                           
 10709                           ; 1 bytes @ 0x14
 10710  0755                     	ds	4
 10711                           
 10712                           	psect	cstackBANK13
 10713  06A0                     __pcstackBANK13:	
 10714  06A0                     ?_TMR0_SetInterruptHandler:	
 10715  06A0                     ?_OLED_SetFont:	
 10716                           ; 1 bytes @ 0x0
 10717                           
 10718  06A0                     ?_FLASH_write:	
 10719                           ; 1 bytes @ 0x0
 10720                           
 10721  06A0                     ?_FLASH_erase:	
 10722                           ; 1 bytes @ 0x0
 10723                           
 10724  06A0                     ?_clearText:	
 10725                           ; 1 bytes @ 0x0
 10726                           
 10727  06A0                     ??_I2C_Init:	
 10728                           ; 1 bytes @ 0x0
 10729                           
 10730  06A0                     ?_strlen:	
 10731                           ; 1 bytes @ 0x0
 10732                           
 10733  06A0                     ?_fputc:	
 10734                           ; 2 bytes @ 0x0
 10735                           
 10736  06A0                     ?__Umul8_16:	
 10737                           ; 2 bytes @ 0x0
 10738                           
 10739  06A0                     ?_FLASH_read:	
 10740                           ; 2 bytes @ 0x0
 10741                           
 10742  06A0                     ?___awdiv:	
 10743                           ; 2 bytes @ 0x0
 10744                           
 10745  06A0                     ?___awmod:	
 10746                           ; 2 bytes @ 0x0
 10747                           
 10748  06A0                     ?___lmul:	
 10749                           ; 2 bytes @ 0x0
 10750                           
 10751  06A0                     ?___aodiv:	
 10752                           ; 4 bytes @ 0x0
 10753                           
 10754  06A0                     ?___aomod:	
 10755                           ; 8 bytes @ 0x0
 10756                           
 10757  06A0                     I2C_Send@data:	
 10758                           ; 8 bytes @ 0x0
 10759                           
 10760  06A0                     __Umul8_16@multiplicand:	
 10761                           ; 1 bytes @ 0x0
 10762                           
 10763  06A0                     TMR0_SetInterruptHandler@InterruptHandler:	
 10764                           ; 1 bytes @ 0x0
 10765                           
 10766  06A0                     FLASH_read@address:	
 10767                           ; 2 bytes @ 0x0
 10768                           
 10769  06A0                     FLASH_write@address:	
 10770                           ; 2 bytes @ 0x0
 10771                           
 10772  06A0                     FLASH_erase@address:	
 10773                           ; 2 bytes @ 0x0
 10774                           
 10775  06A0                     clearText@textToClear:	
 10776                           ; 2 bytes @ 0x0
 10777                           
 10778  06A0                     OLED_SetFont@font:	
 10779                           ; 2 bytes @ 0x0
 10780                           
 10781  06A0                     ___awdiv@divisor:	
 10782                           ; 2 bytes @ 0x0
 10783                           
 10784  06A0                     ___awmod@divisor:	
 10785                           ; 2 bytes @ 0x0
 10786                           
 10787  06A0                     fputc@c:	
 10788                           ; 2 bytes @ 0x0
 10789                           
 10790  06A0                     ___lmul@multiplier:	
 10791                           ; 2 bytes @ 0x0
 10792                           
 10793  06A0                     ___aodiv@divisor:	
 10794                           ; 4 bytes @ 0x0
 10795                           
 10796  06A0                     ___aomod@divisor:	
 10797                           ; 8 bytes @ 0x0
 10798                           
 10799                           
 10800                           ; 8 bytes @ 0x0
 10801  06A0                     	ds	1
 10802  06A1                     I2C_Init@speed:	
 10803  06A1                     ssd1306_command@command:	
 10804                           ; 1 bytes @ 0x1
 10805                           
 10806                           
 10807                           ; 1 bytes @ 0x1
 10808  06A1                     	ds	1
 10809  06A2                     ??_TMR0_Initialize:	
 10810  06A2                     ??_OLED_SetFont:	
 10811                           ; 1 bytes @ 0x2
 10812                           
 10813  06A2                     ??_strlen:	
 10814                           ; 1 bytes @ 0x2
 10815                           
 10816  06A2                     ??__Umul8_16:	
 10817                           ; 1 bytes @ 0x2
 10818                           
 10819  06A2                     ?_HEFLASH_readBlock:	
 10820                           ; 1 bytes @ 0x2
 10821                           
 10822  06A2                     ??_clearText:	
 10823                           ; 1 bytes @ 0x2
 10824                           
 10825  06A2                     FLASH_erase@temp:	
 10826                           ; 1 bytes @ 0x2
 10827                           
 10828  06A2                     HEFLASH_readBlock@radd:	
 10829                           ; 1 bytes @ 0x2
 10830                           
 10831  06A2                     fputc@fp:	
 10832                           ; 1 bytes @ 0x2
 10833                           
 10834  06A2                     FLASH_write@data:	
 10835                           ; 1 bytes @ 0x2
 10836                           
 10837  06A2                     ___awdiv@dividend:	
 10838                           ; 2 bytes @ 0x2
 10839                           
 10840  06A2                     ___awmod@dividend:	
 10841                           ; 2 bytes @ 0x2
 10842                           
 10843                           
 10844                           ; 2 bytes @ 0x2
 10845  06A2                     	ds	1
 10846  06A3                     ??_OLED_Update:	
 10847  06A3                     ??_fputc:	
 10848                           ; 1 bytes @ 0x3
 10849                           
 10850  06A3                     ??_OLED_Update_Partial:	
 10851                           ; 1 bytes @ 0x3
 10852                           
 10853  06A3                     HEFLASH_readBlock@count:	
 10854                           ; 1 bytes @ 0x3
 10855                           
 10856  06A3                     strlen@a:	
 10857                           ; 1 bytes @ 0x3
 10858                           
 10859                           
 10860                           ; 1 bytes @ 0x3
 10861  06A3                     	ds	1
 10862  06A4                     ??_HEFLASH_readBlock:	
 10863  06A4                     ??___awdiv:	
 10864                           ; 1 bytes @ 0x4
 10865                           
 10866  06A4                     ??___awmod:	
 10867                           ; 1 bytes @ 0x4
 10868                           
 10869  06A4                     FLASH_write@latch:	
 10870                           ; 1 bytes @ 0x4
 10871                           
 10872  06A4                     strlen@s:	
 10873                           ; 1 bytes @ 0x4
 10874                           
 10875  06A4                     clearText@i:	
 10876                           ; 1 bytes @ 0x4
 10877                           
 10878  06A4                     __Umul8_16@product:	
 10879                           ; 2 bytes @ 0x4
 10880                           
 10881  06A4                     ___lmul@multiplicand:	
 10882                           ; 2 bytes @ 0x4
 10883                           
 10884                           
 10885                           ; 4 bytes @ 0x4
 10886  06A4                     	ds	1
 10887  06A5                     FLASH_write@temp:	
 10888  06A5                     OLED_Update@x:	
 10889                           ; 1 bytes @ 0x5
 10890                           
 10891  06A5                     ___awdiv@counter:	
 10892                           ; 1 bytes @ 0x5
 10893                           
 10894  06A5                     ___awmod@counter:	
 10895                           ; 1 bytes @ 0x5
 10896                           
 10897                           
 10898                           ; 1 bytes @ 0x5
 10899  06A5                     	ds	1
 10900  06A6                     ?_HEFLASH_writeBlock:	
 10901  06A6                     HEFLASH_writeBlock@data:	
 10902                           ; 1 bytes @ 0x6
 10903                           
 10904  06A6                     ___awdiv@sign:	
 10905                           ; 1 bytes @ 0x6
 10906                           
 10907  06A6                     ___awmod@sign:	
 10908                           ; 1 bytes @ 0x6
 10909                           
 10910  06A6                     HEFLASH_readBlock@add:	
 10911                           ; 1 bytes @ 0x6
 10912                           
 10913  06A6                     OLED_Update@i:	
 10914                           ; 2 bytes @ 0x6
 10915                           
 10916  06A6                     __Umul8_16@word_mpld:	
 10917                           ; 2 bytes @ 0x6
 10918                           
 10919                           
 10920                           ; 2 bytes @ 0x6
 10921  06A6                     	ds	1
 10922  06A7                     HEFLASH_writeBlock@count:	
 10923  06A7                     OLED_Update_Partial@i:	
 10924                           ; 1 bytes @ 0x7
 10925                           
 10926  06A7                     ___awdiv@quotient:	
 10927                           ; 2 bytes @ 0x7
 10928                           
 10929                           
 10930                           ; 2 bytes @ 0x7
 10931  06A7                     	ds	1
 10932  06A8                     ??_OLED_Init:	
 10933  06A8                     ??_HEFLASH_writeBlock:	
 10934                           ; 1 bytes @ 0x8
 10935                           
 10936  06A8                     ?_fputs:	
 10937                           ; 1 bytes @ 0x8
 10938                           
 10939  06A8                     HEFLASH_readBlock@buffer:	
 10940                           ; 2 bytes @ 0x8
 10941                           
 10942  06A8                     fputs@fp:	
 10943                           ; 1 bytes @ 0x8
 10944                           
 10945  06A8                     __Umul8_16@multiplier:	
 10946                           ; 1 bytes @ 0x8
 10947                           
 10948  06A8                     ___lmul@product:	
 10949                           ; 1 bytes @ 0x8
 10950                           
 10951  06A8                     ___aodiv@dividend:	
 10952                           ; 4 bytes @ 0x8
 10953                           
 10954  06A8                     ___aomod@dividend:	
 10955                           ; 8 bytes @ 0x8
 10956                           
 10957                           
 10958                           ; 8 bytes @ 0x8
 10959  06A8                     	ds	1
 10960  06A9                     ??_fputs:	
 10961  06A9                     ?_OLED_DrawPixel:	
 10962                           ; 1 bytes @ 0x9
 10963                           
 10964  06A9                     ?___wmul:	
 10965                           ; 1 bytes @ 0x9
 10966                           
 10967  06A9                     ?___xxtofl:	
 10968                           ; 2 bytes @ 0x9
 10969                           
 10970  06A9                     OLED_Update_Partial@x:	
 10971                           ; 4 bytes @ 0x9
 10972                           
 10973  06A9                     OLED_DrawPixel@x:	
 10974                           ; 1 bytes @ 0x9
 10975                           
 10976  06A9                     ___wmul@multiplier:	
 10977                           ; 2 bytes @ 0x9
 10978                           
 10979  06A9                     ___xxtofl@val:	
 10980                           ; 2 bytes @ 0x9
 10981                           
 10982                           
 10983                           ; 4 bytes @ 0x9
 10984  06A9                     	ds	1
 10985  06AA                     HEFLASH_writeBlock@radd:	
 10986  06AA                     OLED_Update_Partial@page:	
 10987                           ; 1 bytes @ 0xA
 10988                           
 10989                           
 10990                           ; 1 bytes @ 0xA
 10991  06AA                     	ds	1
 10992  06AB                     HEFLASH_writeBlock@add:	
 10993  06AB                     OLED_DrawPixel@y:	
 10994                           ; 2 bytes @ 0xB
 10995                           
 10996  06AB                     ___wmul@multiplicand:	
 10997                           ; 2 bytes @ 0xB
 10998                           
 10999                           
 11000                           ; 2 bytes @ 0xB
 11001  06AB                     	ds	1
 11002  06AC                     ?___lldiv:	
 11003  06AC                     fputs@c:	
 11004                           ; 4 bytes @ 0xC
 11005                           
 11006  06AC                     ___lldiv@divisor:	
 11007                           ; 1 bytes @ 0xC
 11008                           
 11009                           
 11010                           ; 4 bytes @ 0xC
 11011  06AC                     	ds	1
 11012  06AD                     ??___xxtofl:	
 11013  06AD                     OLED_DrawPixel@color:	
 11014                           ; 1 bytes @ 0xD
 11015                           
 11016  06AD                     ___wmul@product:	
 11017                           ; 1 bytes @ 0xD
 11018                           
 11019  06AD                     fputs@i:	
 11020                           ; 2 bytes @ 0xD
 11021                           
 11022                           
 11023                           ; 2 bytes @ 0xD
 11024  06AD                     	ds	1
 11025  06AE                     ??_OLED_DrawPixel:	
 11026                           
 11027                           ; 1 bytes @ 0xE
 11028  06AE                     	ds	1
 11029  06AF                     ?___lwdiv:	
 11030  06AF                     fputs@s:	
 11031                           ; 2 bytes @ 0xF
 11032                           
 11033  06AF                     ___lwdiv@divisor:	
 11034                           ; 1 bytes @ 0xF
 11035                           
 11036                           
 11037                           ; 2 bytes @ 0xF
 11038  06AF                     	ds	1
 11039  06B0                     ??___aodiv:	
 11040  06B0                     ??___aomod:	
 11041                           ; 1 bytes @ 0x10
 11042                           
 11043  06B0                     ?_pad:	
 11044                           ; 1 bytes @ 0x10
 11045                           
 11046  06B0                     pad@buf:	
 11047                           ; 2 bytes @ 0x10
 11048                           
 11049  06B0                     ___lldiv@dividend:	
 11050                           ; 1 bytes @ 0x10
 11051                           
 11052                           
 11053                           ; 4 bytes @ 0x10
 11054  06B0                     	ds	1
 11055  06B1                     ___aodiv@counter:	
 11056  06B1                     ___aomod@counter:	
 11057                           ; 1 bytes @ 0x11
 11058                           
 11059  06B1                     ___xxtofl@sign:	
 11060                           ; 1 bytes @ 0x11
 11061                           
 11062  06B1                     pad@p:	
 11063                           ; 1 bytes @ 0x11
 11064                           
 11065  06B1                     ___lwdiv@dividend:	
 11066                           ; 2 bytes @ 0x11
 11067                           
 11068                           
 11069                           ; 2 bytes @ 0x11
 11070  06B1                     	ds	1
 11071  06B2                     ___aodiv@sign:	
 11072  06B2                     ___aomod@sign:	
 11073                           ; 1 bytes @ 0x12
 11074                           
 11075  06B2                     ___xxtofl@exp:	
 11076                           ; 1 bytes @ 0x12
 11077                           
 11078                           
 11079                           ; 1 bytes @ 0x12
 11080  06B2                     	ds	1
 11081  06B3                     ??_pad:	
 11082  06B3                     ??___lwdiv:	
 11083                           ; 1 bytes @ 0x13
 11084                           
 11085  06B3                     ?_abs:	
 11086                           ; 1 bytes @ 0x13
 11087                           
 11088  06B3                     abs@a:	
 11089                           ; 2 bytes @ 0x13
 11090                           
 11091  06B3                     ___xxtofl@arg:	
 11092                           ; 2 bytes @ 0x13
 11093                           
 11094  06B3                     ___aodiv@quotient:	
 11095                           ; 4 bytes @ 0x13
 11096                           
 11097                           
 11098                           ; 8 bytes @ 0x13
 11099  06B3                     	ds	1
 11100  06B4                     ??___lldiv:	
 11101  06B4                     ___lwdiv@counter:	
 11102                           ; 1 bytes @ 0x14
 11103                           
 11104  06B4                     pad@i:	
 11105                           ; 1 bytes @ 0x14
 11106                           
 11107                           
 11108                           ; 2 bytes @ 0x14
 11109  06B4                     	ds	1
 11110  06B5                     ??_abs:	
 11111  06B5                     ___lwdiv@quotient:	
 11112                           ; 1 bytes @ 0x15
 11113                           
 11114  06B5                     ___lldiv@quotient:	
 11115                           ; 2 bytes @ 0x15
 11116                           
 11117                           
 11118                           ; 4 bytes @ 0x15
 11119  06B5                     	ds	1
 11120  06B6                     ?_OLED_Write:	
 11121  06B6                     OLED_Write@x:	
 11122                           ; 1 bytes @ 0x16
 11123                           
 11124  06B6                     pad@w:	
 11125                           ; 2 bytes @ 0x16
 11126                           
 11127                           
 11128                           ; 2 bytes @ 0x16
 11129  06B6                     	ds	1
 11130  06B7                     ?___fldiv:	
 11131  06B7                     ?___flmul:	
 11132                           ; 4 bytes @ 0x17
 11133                           
 11134  06B7                     ___fldiv@a:	
 11135                           ; 4 bytes @ 0x17
 11136                           
 11137  06B7                     ___flmul@b:	
 11138                           ; 4 bytes @ 0x17
 11139                           
 11140                           
 11141                           ; 4 bytes @ 0x17
 11142  06B7                     	ds	1
 11143  06B8                     pad@fp:	
 11144  06B8                     OLED_Write@y:	
 11145                           ; 1 bytes @ 0x18
 11146                           
 11147                           
 11148                           ; 2 bytes @ 0x18
 11149  06B8                     	ds	1
 11150  06B9                     ___lldiv@counter:	
 11151                           
 11152                           ; 1 bytes @ 0x19
 11153  06B9                     	ds	1
 11154  06BA                     ?___llmod:	
 11155  06BA                     OLED_Write@value:	
 11156                           ; 4 bytes @ 0x1A
 11157                           
 11158  06BA                     ___llmod@divisor:	
 11159                           ; 1 bytes @ 0x1A
 11160                           
 11161                           
 11162                           ; 4 bytes @ 0x1A
 11163  06BA                     	ds	1
 11164  06BB                     ??_OLED_Write:	
 11165  06BB                     ?_dtoa:	
 11166                           ; 1 bytes @ 0x1B
 11167                           
 11168  06BB                     ___fldiv@b:	
 11169                           ; 2 bytes @ 0x1B
 11170                           
 11171  06BB                     ___flmul@a:	
 11172                           ; 4 bytes @ 0x1B
 11173                           
 11174  06BB                     dtoa@d:	
 11175                           ; 4 bytes @ 0x1B
 11176                           
 11177                           
 11178                           ; 8 bytes @ 0x1B
 11179  06BB                     	ds	3
 11180  06BE                     ___llmod@dividend:	
 11181                           
 11182                           ; 4 bytes @ 0x1E
 11183  06BE                     	ds	1
 11184  06BF                     ??___fldiv:	
 11185  06BF                     ??___flmul:	
 11186                           ; 1 bytes @ 0x1F
 11187                           
 11188                           
 11189                           ; 1 bytes @ 0x1F
 11190  06BF                     	ds	3
 11191  06C2                     ??___llmod:	
 11192                           
 11193                           ; 1 bytes @ 0x22
 11194  06C2                     	ds	1
 11195  06C3                     ??_dtoa:	
 11196  06C3                     ___llmod@counter:	
 11197                           ; 1 bytes @ 0x23
 11198                           
 11199  06C3                     OLED_Write@temp:	
 11200                           ; 1 bytes @ 0x23
 11201                           
 11202                           
 11203                           ; 2 bytes @ 0x23
 11204  06C3                     	ds	1
 11205  06C4                     ___flmul@sign:	
 11206  06C4                     ___fldiv@rem:	
 11207                           ; 1 bytes @ 0x24
 11208                           
 11209                           
 11210                           ; 4 bytes @ 0x24
 11211  06C4                     	ds	1
 11212  06C5                     ___flmul@aexp:	
 11213  06C5                     OLED_Write@cbyte:	
 11214                           ; 1 bytes @ 0x25
 11215                           
 11216                           
 11217                           ; 2 bytes @ 0x25
 11218  06C5                     	ds	1
 11219  06C6                     dtoa@fp:	
 11220  06C6                     ___flmul@grs:	
 11221                           ; 1 bytes @ 0x26
 11222                           
 11223                           
 11224                           ; 4 bytes @ 0x26
 11225  06C6                     	ds	1
 11226  06C7                     _dtoa$1635:	
 11227  06C7                     _OLED_Write$2307:	
 11228                           ; 2 bytes @ 0x27
 11229                           
 11230                           
 11231                           ; 2 bytes @ 0x27
 11232  06C7                     	ds	1
 11233  06C8                     ___fldiv@sign:	
 11234                           
 11235                           ; 1 bytes @ 0x28
 11236  06C8                     	ds	1
 11237  06C9                     OLED_Write@cbit:	
 11238  06C9                     dtoa@p:	
 11239                           ; 2 bytes @ 0x29
 11240                           
 11241  06C9                     ___fldiv@new_exp:	
 11242                           ; 2 bytes @ 0x29
 11243                           
 11244                           
 11245                           ; 2 bytes @ 0x29
 11246  06C9                     	ds	1
 11247  06CA                     ___flmul@bexp:	
 11248                           
 11249                           ; 1 bytes @ 0x2A
 11250  06CA                     	ds	1
 11251  06CB                     OLED_Write@font_idx:	
 11252  06CB                     dtoa@w:	
 11253                           ; 2 bytes @ 0x2B
 11254                           
 11255  06CB                     ___fldiv@grs:	
 11256                           ; 2 bytes @ 0x2B
 11257                           
 11258  06CB                     ___flmul@prod:	
 11259                           ; 4 bytes @ 0x2B
 11260                           
 11261                           
 11262                           ; 4 bytes @ 0x2B
 11263  06CB                     	ds	2
 11264  06CD                     OLED_Write@cx:	
 11265  06CD                     dtoa@s:	
 11266                           ; 2 bytes @ 0x2D
 11267                           
 11268                           
 11269                           ; 2 bytes @ 0x2D
 11270  06CD                     	ds	2
 11271  06CF                     ___fldiv@bexp:	
 11272  06CF                     OLED_Write@cy:	
 11273                           ; 1 bytes @ 0x2F
 11274                           
 11275  06CF                     ___flmul@temp:	
 11276                           ; 2 bytes @ 0x2F
 11277                           
 11278  06CF                     dtoa@n:	
 11279                           ; 2 bytes @ 0x2F
 11280                           
 11281                           
 11282                           ; 8 bytes @ 0x2F
 11283  06CF                     	ds	1
 11284  06D0                     ___fldiv@aexp:	
 11285                           
 11286                           ; 1 bytes @ 0x30
 11287  06D0                     	ds	1
 11288  06D1                     ?___flge:	
 11289  06D1                     ?___fltol:	
 11290                           ; 1 bit 
 11291                           
 11292  06D1                     OLED_Write@rowcnt:	
 11293                           ; 4 bytes @ 0x31
 11294                           
 11295  06D1                     ___flge@ff1:	
 11296                           ; 2 bytes @ 0x31
 11297                           
 11298  06D1                     ___fltol@f1:	
 11299                           ; 4 bytes @ 0x31
 11300                           
 11301                           
 11302                           ; 4 bytes @ 0x31
 11303  06D1                     	ds	2
 11304  06D3                     OLED_Write@cnt:	
 11305                           
 11306                           ; 2 bytes @ 0x33
 11307  06D3                     	ds	2
 11308  06D5                     ??___fltol:	
 11309  06D5                     OLED_Write@b:	
 11310                           ; 1 bytes @ 0x35
 11311                           
 11312  06D5                     ___flge@ff2:	
 11313                           ; 1 bytes @ 0x35
 11314                           
 11315                           
 11316                           ; 4 bytes @ 0x35
 11317  06D5                     	ds	1
 11318  06D6                     ??_UpdateScreen:	
 11319                           
 11320                           ; 1 bytes @ 0x36
 11321  06D6                     	ds	1
 11322  06D7                     dtoa@i:	
 11323  06D7                     _UpdateScreen$2310:	
 11324                           ; 2 bytes @ 0x37
 11325                           
 11326                           
 11327                           ; 2 bytes @ 0x37
 11328  06D7                     	ds	2
 11329  06D9                     ??___flge:	
 11330  06D9                     ?_vfpfcnvrt:	
 11331                           ; 1 bytes @ 0x39
 11332                           
 11333  06D9                     vfpfcnvrt@fmt:	
 11334                           ; 2 bytes @ 0x39
 11335                           
 11336  06D9                     UpdateScreen@i:	
 11337                           ; 1 bytes @ 0x39
 11338                           
 11339                           
 11340                           ; 2 bytes @ 0x39
 11341  06D9                     	ds	1
 11342  06DA                     vfpfcnvrt@ap:	
 11343  06DA                     ___fltol@sign1:	
 11344                           ; 1 bytes @ 0x3A
 11345                           
 11346                           
 11347                           ; 1 bytes @ 0x3A
 11348  06DA                     	ds	1
 11349  06DB                     ??_vfpfcnvrt:	
 11350  06DB                     ___fltol@exp1:	
 11351                           ; 1 bytes @ 0x3B
 11352                           
 11353  06DB                     UpdateScreen@i_1557:	
 11354                           ; 1 bytes @ 0x3B
 11355                           
 11356                           
 11357                           ; 2 bytes @ 0x3B
 11358  06DB                     	ds	1
 11359  06DC                     ?_DAC1_Load10bitInputData:	
 11360  06DC                     DAC1_Load10bitInputData@input10BitData:	
 11361                           ; 1 bytes @ 0x3C
 11362                           
 11363                           
 11364                           ; 2 bytes @ 0x3C
 11365  06DC                     	ds	1
 11366  06DD                     UpdateScreen@i_1558:	
 11367                           
 11368                           ; 2 bytes @ 0x3D
 11369  06DD                     	ds	2
 11370  06DF                     UpdateScreen@i_1559:	
 11371                           
 11372                           ; 2 bytes @ 0x3F
 11373  06DF                     	ds	1
 11374  06E0                     vfpfcnvrt@ll:	
 11375                           
 11376                           ; 8 bytes @ 0x40
 11377  06E0                     	ds	8
 11378  06E8                     vfpfcnvrt@fp:	
 11379                           
 11380                           ; 1 bytes @ 0x48
 11381  06E8                     	ds	1
 11382  06E9                     ?_vfprintf:	
 11383  06E9                     vfprintf@fmt:	
 11384                           ; 2 bytes @ 0x49
 11385                           
 11386                           
 11387                           ; 2 bytes @ 0x49
 11388  06E9                     	ds	2
 11389  06EB                     vfprintf@ap:	
 11390                           
 11391                           ; 1 bytes @ 0x4B
 11392  06EB                     	ds	1
 11393  06EC                     ??_vfprintf:	
 11394                           
 11395                           ; 1 bytes @ 0x4C
 11396  06EC                     	ds	2
 11397  06EE                     ??_sprintf:	
 11398                           
 11399                           ; 1 bytes @ 0x4E
 11400  06EE                     	ds	1
 11401                           
 11402                           	psect	cstackCOMMON
 11403  0070                     __pcstackCOMMON:	
 11404  0070                     ?_I2C_Initialize:	
 11405  0070                     ?_PIN_MANAGER_Initialize:	
 11406                           ; 1 bytes @ 0x0
 11407                           
 11408  0070                     ?_OSCILLATOR_Initialize:	
 11409                           ; 1 bytes @ 0x0
 11410                           
 11411  0070                     ?_WDT_Initialize:	
 11412                           ; 1 bytes @ 0x0
 11413                           
 11414  0070                     ?_ADC_Initialize:	
 11415                           ; 1 bytes @ 0x0
 11416                           
 11417  0070                     ?_DAC1_Initialize:	
 11418                           ; 1 bytes @ 0x0
 11419                           
 11420  0070                     ?_TMR0_Initialize:	
 11421                           ; 1 bytes @ 0x0
 11422                           
 11423  0070                     ?_OLED_Init:	
 11424                           ; 1 bytes @ 0x0
 11425                           
 11426  0070                     ?_UpdateScreen:	
 11427                           ; 1 bytes @ 0x0
 11428                           
 11429  0070                     ?_ssd1306_command:	
 11430                           ; 1 bytes @ 0x0
 11431                           
 11432  0070                     ?_OLED_Update:	
 11433                           ; 1 bytes @ 0x0
 11434                           
 11435  0070                     ?_width:	
 11436                           ; 1 bytes @ 0x0
 11437                           
 11438  0070                     ?_height:	
 11439                           ; 1 bytes @ 0x0
 11440                           
 11441  0070                     ?_putch:	
 11442                           ; 1 bytes @ 0x0
 11443                           
 11444  0070                     ?_SYSTEM_Initialize:	
 11445                           ; 1 bytes @ 0x0
 11446                           
 11447  0070                     ?__unlock:	
 11448                           ; 1 bytes @ 0x0
 11449                           
 11450  0070                     ?_main:	
 11451                           ; 1 bytes @ 0x0
 11452                           
 11453  0070                     ?___ISR:	
 11454                           ; 1 bytes @ 0x0
 11455                           
 11456  0070                     ?_I2C_Init:	
 11457                           ; 1 bytes @ 0x0
 11458                           
 11459  0070                     ?_I2C_Start:	
 11460                           ; 1 bytes @ 0x0
 11461                           
 11462  0070                     ?_I2C_Stop:	
 11463                           ; 1 bytes @ 0x0
 11464                           
 11465  0070                     ?_I2C_Wait:	
 11466                           ; 1 bytes @ 0x0
 11467                           
 11468  0070                     ?_I2C_Send:	
 11469                           ; 1 bytes @ 0x0
 11470                           
 11471  0070                     ?_OLED_Update_Partial:	
 11472                           ; 1 bytes @ 0x0
 11473                           
 11474  0070                     ?i1__unlock:	
 11475                           ; 1 bytes @ 0x0
 11476                           
 11477  0070                     ??i1__unlock:	
 11478                           ; 1 bytes @ 0x0
 11479                           
 11480  0070                     ?i1_FLASH_write:	
 11481                           ; 1 bytes @ 0x0
 11482                           
 11483  0070                     ?i1_FLASH_erase:	
 11484                           ; 1 bytes @ 0x0
 11485                           
 11486  0070                     putch@c:	
 11487                           ; 1 bytes @ 0x0
 11488                           
 11489  0070                     i1FLASH_write@address:	
 11490                           ; 1 bytes @ 0x0
 11491                           
 11492  0070                     i1FLASH_erase@address:	
 11493                           ; 2 bytes @ 0x0
 11494                           
 11495                           
 11496                           ; 2 bytes @ 0x0
 11497  0070                     	ds	2
 11498  0072                     ??i1_FLASH_erase:	
 11499  0072                     i1FLASH_erase@temp:	
 11500                           ; 1 bytes @ 0x2
 11501                           
 11502  0072                     i1FLASH_write@data:	
 11503                           ; 1 bytes @ 0x2
 11504                           
 11505                           
 11506                           ; 2 bytes @ 0x2
 11507  0072                     	ds	2
 11508  0074                     i1FLASH_write@latch:	
 11509                           
 11510                           ; 1 bytes @ 0x4
 11511  0074                     	ds	1
 11512  0075                     ??i1_FLASH_write:	
 11513  0075                     i1FLASH_write@temp:	
 11514                           ; 1 bytes @ 0x5
 11515                           
 11516                           
 11517                           ; 1 bytes @ 0x5
 11518  0075                     	ds	1
 11519  0076                     ?i1_HEFLASH_writeBlock:	
 11520  0076                     i1HEFLASH_writeBlock@data:	
 11521                           ; 1 bytes @ 0x6
 11522                           
 11523                           
 11524                           ; 1 bytes @ 0x6
 11525  0076                     	ds	1
 11526  0077                     i1HEFLASH_writeBlock@count:	
 11527                           
 11528                           ; 1 bytes @ 0x7
 11529  0077                     	ds	1
 11530  0078                     ??i1_HEFLASH_writeBlock:	
 11531                           
 11532                           ; 1 bytes @ 0x8
 11533  0078                     	ds	2
 11534  007A                     i1HEFLASH_writeBlock@radd:	
 11535                           
 11536                           ; 1 bytes @ 0xA
 11537  007A                     	ds	1
 11538  007B                     i1HEFLASH_writeBlock@add:	
 11539                           
 11540                           ; 2 bytes @ 0xB
 11541  007B                     	ds	2
 11542  007D                     ??___ISR:	
 11543                           
 11544                           ; 1 bytes @ 0xD
 11545  007D                     	ds	1
 11546                           
 11547                           	psect	cstackBANK0
 11548  0000                     __pcstackBANK0:	
 11549  0000                     ??_I2C_Initialize:	
 11550  0000                     ??_PIN_MANAGER_Initialize:	
 11551                           ; 1 bytes @ 0x0
 11552                           
 11553  0000                     ??_OSCILLATOR_Initialize:	
 11554                           ; 1 bytes @ 0x0
 11555                           
 11556  0000                     ??_WDT_Initialize:	
 11557                           ; 1 bytes @ 0x0
 11558                           
 11559  0000                     ??_ADC_Initialize:	
 11560                           ; 1 bytes @ 0x0
 11561                           
 11562  0000                     ??_DAC1_Initialize:	
 11563                           ; 1 bytes @ 0x0
 11564                           
 11565  0000                     ??_TMR0_SetInterruptHandler:	
 11566                           ; 1 bytes @ 0x0
 11567                           
 11568  0000                     ??_ssd1306_command:	
 11569                           ; 1 bytes @ 0x0
 11570                           
 11571  0000                     ??_width:	
 11572                           ; 1 bytes @ 0x0
 11573                           
 11574  0000                     ??_height:	
 11575                           ; 1 bytes @ 0x0
 11576                           
 11577  0000                     ??_putch:	
 11578                           ; 1 bytes @ 0x0
 11579                           
 11580  0000                     ??_SYSTEM_Initialize:	
 11581                           ; 1 bytes @ 0x0
 11582                           
 11583  0000                     ??_DAC1_Load10bitInputData:	
 11584                           ; 1 bytes @ 0x0
 11585                           
 11586  0000                     ??_FLASH_read:	
 11587                           ; 1 bytes @ 0x0
 11588                           
 11589  0000                     ??__unlock:	
 11590                           ; 1 bytes @ 0x0
 11591                           
 11592  0000                     ??_FLASH_write:	
 11593                           ; 1 bytes @ 0x0
 11594                           
 11595  0000                     ??_FLASH_erase:	
 11596                           ; 1 bytes @ 0x0
 11597                           
 11598  0000                     ??_I2C_Start:	
 11599                           ; 1 bytes @ 0x0
 11600                           
 11601  0000                     ??_I2C_Stop:	
 11602                           ; 1 bytes @ 0x0
 11603                           
 11604  0000                     ??_I2C_Wait:	
 11605                           ; 1 bytes @ 0x0
 11606                           
 11607  0000                     ??_I2C_Send:	
 11608                           ; 1 bytes @ 0x0
 11609                           
 11610  0000                     ??___wmul:	
 11611                           ; 1 bytes @ 0x0
 11612                           
 11613  0000                     ??___lmul:	
 11614                           ; 1 bytes @ 0x0
 11615                           
 11616                           
 11617                           	psect	maintext
 11618  1C10                     __pmaintext:	
 11619                           ; 1 bytes @ 0x0
 11620 ;;
 11621 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
 11622 ;;
 11623 ;; *************** function _main *****************
 11624 ;; Defined at:
 11625 ;;		line 148 in file "main.c"
 11626 ;; Parameters:    Size  Location     Type
 11627 ;;		None
 11628 ;; Auto vars:     Size  Location     Type
 11629 ;;  i               2    6[BANK15] int 
 11630 ;;  decimal         2    2[BANK15] unsigned int 
 11631 ;;  integer         2    0[BANK15] unsigned int 
 11632 ;;  power_led_fl    2    4[BANK15] unsigned int 
 11633 ;; Return value:  Size  Location     Type
 11634 ;;                  1    wreg      void 
 11635 ;; Registers used:
 11636 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11637 ;; Tracked objects:
 11638 ;;		On entry : B1F/0
 11639 ;;		On exit  : 0/0
 11640 ;;		Unchanged: 0/0
 11641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       8       0       0       0       0       0       0       0       0       0       0
 11644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       4       0       0       0       0       0       0       0       0       0       0       0
 11645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       4       8       0       0       0       0       0       0       0       0       0       0
 11646 ;;Total ram usage:       12 bytes
 11647 ;; Hardware stack levels required when called:   12
 11648 ;; This function calls:
 11649 ;;		_DAC1_Load10bitInputData
 11650 ;;		_HEFLASH_readBlock
 11651 ;;		_HEFLASH_writeBlock
 11652 ;;		_OLED_Init
 11653 ;;		_SYSTEM_Initialize
 11654 ;;		_UpdateScreen
 11655 ;;		___awdiv
 11656 ;;		___awmod
 11657 ;;		___fldiv
 11658 ;;		___flge
 11659 ;;		___flmul
 11660 ;;		___fltol
 11661 ;;		___lldiv
 11662 ;;		___llmod
 11663 ;;		___lmul
 11664 ;;		___lwdiv
 11665 ;;		___wmul
 11666 ;;		___xxtofl
 11667 ;;		_clearText
 11668 ;;		_sprintf
 11669 ;; This function is called by:
 11670 ;;		Startup code after reset
 11671 ;; This function uses a non-reentrant model
 11672 ;;
 11673                           
 11674                           
 11675                           ;psect for function _main
 11676  1C10                     _main:	
 11677  1C10                     l8872:	
 11678                           ;incstack = 0
 11679                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11680                           
 11681                           
 11682                           ;main.c: 151:     SYSTEM_Initialize();
 11683  1C10  3198  2002  319C   	fcall	_SYSTEM_Initialize
 11684  1C13                     l8874:	
 11685                           
 11686                           ;main.c: 157:     (INTCONbits.GIE = 1);
 11687  1C13  178B               	bsf	11,7	;volatile
 11688  1C14                     l8876:	
 11689                           
 11690                           ;main.c: 160:     (INTCONbits.PEIE = 1);
 11691  1C14  170B               	bsf	11,6	;volatile
 11692  1C15                     l8878:	
 11693                           
 11694                           ;main.c: 168:     _delay((unsigned long)((100)*(16000000/4000.0)));
 11695  1C15  3003               	movlw	3
 11696  1C16  002E               	movlb	14	; select bank14
 11697  1C17  00D6               	movwf	(??_main^(0+1792)+1)
 11698  1C18  3008               	movlw	8
 11699  1C19  00D5               	movwf	??_main^(0+1792)
 11700  1C1A  3077               	movlw	119
 11701  1C1B                     u10897:	
 11702  1C1B  0B89               	decfsz	9,f
 11703  1C1C  2C1B               	goto	u10897
 11704  1C1D  0BD5               	decfsz	??_main^(0+1792),f
 11705  1C1E  2C1B               	goto	u10897
 11706  1C1F  0BD6               	decfsz	(??_main^(0+1792)+1),f
 11707  1C20  2C1B               	goto	u10897
 11708  1C21                     l8880:	
 11709                           
 11710                           ;main.c: 169:     HEFLASH_readBlock(&mode, 0, sizeof(mode));
 11711  1C21  002D               	movlb	13	; select bank13
 11712  1C22  01A2               	clrf	HEFLASH_readBlock@radd^(0+1664)
 11713  1C23  01A3               	clrf	HEFLASH_readBlock@count^(0+1664)
 11714  1C24  0AA3               	incf	HEFLASH_readBlock@count^(0+1664),f
 11715  1C25  3040               	movlw	(low (_mode| (0+1792)))& (0+255)
 11716  1C26  31AC  24CF  319C   	fcall	_HEFLASH_readBlock
 11717  1C29                     l8882:	
 11718                           
 11719                           ;main.c: 170:     HEFLASH_readBlock(&speed, 1, sizeof(speed));
 11720  1C29  002D               	movlb	13	; select bank13
 11721  1C2A  01A2               	clrf	HEFLASH_readBlock@radd^(0+1664)
 11722  1C2B  0AA2               	incf	HEFLASH_readBlock@radd^(0+1664),f
 11723  1C2C  01A3               	clrf	HEFLASH_readBlock@count^(0+1664)
 11724  1C2D  0AA3               	incf	HEFLASH_readBlock@count^(0+1664),f
 11725  1C2E  3068               	movlw	(low (_speed| (0+1792)))& (0+255)
 11726  1C2F  31AC  24CF  319C   	fcall	_HEFLASH_readBlock
 11727  1C32                     l8884:	
 11728                           
 11729                           ;main.c: 171:     HEFLASH_readBlock(&frmn_speed, 2, sizeof(frmn_speed));
 11730  1C32  3002               	movlw	2
 11731  1C33  002E               	movlb	14	; select bank14
 11732  1C34  00D5               	movwf	??_main^(0+1792)
 11733  1C35  0855               	movf	??_main^(0+1792),w
 11734  1C36  002D               	movlb	13	; select bank13
 11735  1C37  00A2               	movwf	HEFLASH_readBlock@radd^(0+1664)
 11736  1C38  01A3               	clrf	HEFLASH_readBlock@count^(0+1664)
 11737  1C39  0AA3               	incf	HEFLASH_readBlock@count^(0+1664),f
 11738  1C3A  3067               	movlw	(low (_frmn_speed| (0+1792)))& (0+255)
 11739  1C3B  31AC  24CF  319C   	fcall	_HEFLASH_readBlock
 11740  1C3E                     l8886:	
 11741                           
 11742                           ;main.c: 172:     if(speed > 100){
 11743  1C3E  3065               	movlw	101
 11744  1C3F  002E               	movlb	14	; select bank14
 11745  1C40  0268               	subwf	_speed^(0+1792),w
 11746  1C41  1C03               	skipc
 11747  1C42  2C44               	goto	u10221
 11748  1C43  2C45               	goto	u10220
 11749  1C44                     u10221:	
 11750  1C44  2C60               	goto	l908
 11751  1C45                     u10220:	
 11752  1C45                     l8888:	
 11753                           
 11754                           ;main.c: 173:         speed = 50;
 11755  1C45  3032               	movlw	50
 11756  1C46  00D5               	movwf	??_main^(0+1792)
 11757  1C47  0855               	movf	??_main^(0+1792),w
 11758  1C48  00E8               	movwf	_speed^(0+1792)
 11759  1C49                     l8890:	
 11760                           
 11761                           ;main.c: 174:         HEFLASH_writeBlock(1, &speed, sizeof(speed));
 11762  1C49  3068               	movlw	(low (_speed| (0+1792)))& (0+255)
 11763  1C4A  00D5               	movwf	??_main^(0+1792)
 11764  1C4B  0855               	movf	??_main^(0+1792),w
 11765  1C4C  002D               	movlb	13	; select bank13
 11766  1C4D  00A6               	movwf	HEFLASH_writeBlock@data^(0+1664)
 11767  1C4E  01A7               	clrf	HEFLASH_writeBlock@count^(0+1664)
 11768  1C4F  0AA7               	incf	HEFLASH_writeBlock@count^(0+1664),f
 11769  1C50  3001               	movlw	1
 11770  1C51  31A0  2059  319C   	fcall	_HEFLASH_writeBlock
 11771  1C54                     l8892:	
 11772                           
 11773                           ;main.c: 175:         HEFLASH_writeBlock(3, &speed, sizeof(speed));
 11774  1C54  3068               	movlw	(low (_speed| (0+1792)))& (0+255)
 11775  1C55  002E               	movlb	14	; select bank14
 11776  1C56  00D5               	movwf	??_main^(0+1792)
 11777  1C57  0855               	movf	??_main^(0+1792),w
 11778  1C58  002D               	movlb	13	; select bank13
 11779  1C59  00A6               	movwf	HEFLASH_writeBlock@data^(0+1664)
 11780  1C5A  01A7               	clrf	HEFLASH_writeBlock@count^(0+1664)
 11781  1C5B  0AA7               	incf	HEFLASH_writeBlock@count^(0+1664),f
 11782  1C5C  3003               	movlw	3
 11783  1C5D  31A0  2059  319C   	fcall	_HEFLASH_writeBlock
 11784  1C60                     l908:	
 11785                           ;main.c: 176:     }
 11786                           
 11787                           
 11788                           ;main.c: 177:     if(frmn_speed > 100){
 11789  1C60  3065               	movlw	101
 11790  1C61  002E               	movlb	14	; select bank14
 11791  1C62  0267               	subwf	_frmn_speed^(0+1792),w
 11792  1C63  1C03               	skipc
 11793  1C64  2C66               	goto	u10231
 11794  1C65  2C67               	goto	u10230
 11795  1C66                     u10231:	
 11796  1C66  2C76               	goto	l8898
 11797  1C67                     u10230:	
 11798  1C67                     l8894:	
 11799                           
 11800                           ;main.c: 178:         frmn_speed = 100;
 11801  1C67  3064               	movlw	100
 11802  1C68  00D5               	movwf	??_main^(0+1792)
 11803  1C69  0855               	movf	??_main^(0+1792),w
 11804  1C6A  00E7               	movwf	_frmn_speed^(0+1792)
 11805  1C6B                     l8896:	
 11806                           
 11807                           ;main.c: 179:         HEFLASH_writeBlock(2, &frmn_speed, sizeof(frmn_speed));
 11808  1C6B  3067               	movlw	(low (_frmn_speed| (0+1792)))& (0+255)
 11809  1C6C  00D5               	movwf	??_main^(0+1792)
 11810  1C6D  0855               	movf	??_main^(0+1792),w
 11811  1C6E  002D               	movlb	13	; select bank13
 11812  1C6F  00A6               	movwf	HEFLASH_writeBlock@data^(0+1664)
 11813  1C70  01A7               	clrf	HEFLASH_writeBlock@count^(0+1664)
 11814  1C71  0AA7               	incf	HEFLASH_writeBlock@count^(0+1664),f
 11815  1C72  3002               	movlw	2
 11816  1C73  31A0  2059  319C   	fcall	_HEFLASH_writeBlock
 11817  1C76                     l8898:	
 11818                           
 11819                           ;main.c: 182:     OLED_Init();
 11820  1C76  3198  2018  319C   	fcall	_OLED_Init
 11821  1C79                     l8900:	
 11822                           
 11823                           ;main.c: 183:     _delay((unsigned long)((100)*(16000000/4000.0)));
 11824  1C79  3003               	movlw	3
 11825  1C7A  002E               	movlb	14	; select bank14
 11826  1C7B  00D6               	movwf	(??_main^(0+1792)+1)
 11827  1C7C  3008               	movlw	8
 11828  1C7D  00D5               	movwf	??_main^(0+1792)
 11829  1C7E  3077               	movlw	119
 11830  1C7F                     u10907:	
 11831  1C7F  0B89               	decfsz	9,f
 11832  1C80  2C7F               	goto	u10907
 11833  1C81  0BD5               	decfsz	??_main^(0+1792),f
 11834  1C82  2C7F               	goto	u10907
 11835  1C83  0BD6               	decfsz	(??_main^(0+1792)+1),f
 11836  1C84  2C7F               	goto	u10907
 11837  1C85                     l8902:	
 11838                           
 11839                           ;main.c: 187:     {;main.c: 189:         if(RB5 == 0)
 11840  1C85  0020               	movlb	0	; select bank0
 11841  1C86  1A8D               	btfsc	13,5	;volatile
 11842  1C87  2C89               	goto	u10241
 11843  1C88  2C8B               	goto	u10240
 11844  1C89                     u10241:	
 11845  1C89  318D  2D65         	goto	l911
 11846  1C8B                     u10240:	
 11847  1C8B                     l8904:	
 11848                           
 11849                           ;main.c: 190:         {;main.c: 191:             fireman_out = 1;
 11850  1C8B  002E               	movlb	14	; select bank14
 11851  1C8C  01BA               	clrf	_fireman_out^(0+1792)
 11852  1C8D  0ABA               	incf	_fireman_out^(0+1792),f
 11853  1C8E                     l8906:	
 11854                           
 11855                           ;main.c: 193:             HEFLASH_readBlock(&frmn_speed, 2, sizeof(frmn_speed));
 11856  1C8E  3002               	movlw	2
 11857  1C8F  00D5               	movwf	??_main^(0+1792)
 11858  1C90  0855               	movf	??_main^(0+1792),w
 11859  1C91  002D               	movlb	13	; select bank13
 11860  1C92  00A2               	movwf	HEFLASH_readBlock@radd^(0+1664)
 11861  1C93  01A3               	clrf	HEFLASH_readBlock@count^(0+1664)
 11862  1C94  0AA3               	incf	HEFLASH_readBlock@count^(0+1664),f
 11863  1C95  3067               	movlw	(low (_frmn_speed| (0+1792)))& (0+255)
 11864  1C96  31AC  24CF  319C   	fcall	_HEFLASH_readBlock
 11865                           
 11866                           ;main.c: 196:             clearText(newTextLine1);
 11867  1C99  30D3               	movlw	low _newTextLine1
 11868  1C9A  002D               	movlb	13	; select bank13
 11869  1C9B  00A0               	movwf	clearText@textToClear^(0+1664)
 11870  1C9C  3007               	movlw	high _newTextLine1
 11871  1C9D  00A1               	movwf	(clearText@textToClear+1)^(0+1664)
 11872  1C9E  31AB  2393  319C   	fcall	_clearText
 11873  1CA1                     l8908:	
 11874                           
 11875                           ;main.c: 197:             sprintf(newTextLine1,"FIREMAN");
 11876  1CA1  30D3               	movlw	low _newTextLine1
 11877  1CA2  002E               	movlb	14	; select bank14
 11878  1CA3  00C4               	movwf	sprintf@s^(0+1792)
 11879  1CA4  3007               	movlw	high _newTextLine1
 11880  1CA5  00C5               	movwf	(sprintf@s+1)^(0+1792)
 11881  1CA6  306D               	movlw	low (STR_1| (0+32768))
 11882  1CA7  00C6               	movwf	sprintf@fmt^(0+1792)
 11883  1CA8  30B0               	movlw	high (STR_1| (0+32768))
 11884  1CA9  00C7               	movwf	(sprintf@fmt^(0+1792)+1)
 11885  1CAA  318D  250E  319C   	fcall	_sprintf
 11886  1CAD                     l8910:	
 11887                           
 11888                           ;main.c: 199:             clearText(newTextLine2);
 11889  1CAD  3060               	movlw	low _newTextLine2
 11890  1CAE  002D               	movlb	13	; select bank13
 11891  1CAF  00A0               	movwf	clearText@textToClear^(0+1664)
 11892  1CB0  3008               	movlw	high _newTextLine2
 11893  1CB1  00A1               	movwf	(clearText@textToClear+1)^(0+1664)
 11894  1CB2  31AB  2393  319C   	fcall	_clearText
 11895  1CB5                     l8912:	
 11896                           
 11897                           ;main.c: 201:             clearText(newTextLine3);
 11898  1CB5  3050               	movlw	low _newTextLine3
 11899  1CB6  002D               	movlb	13	; select bank13
 11900  1CB7  00A0               	movwf	clearText@textToClear^(0+1664)
 11901  1CB8  3008               	movlw	high _newTextLine3
 11902  1CB9  00A1               	movwf	(clearText@textToClear+1)^(0+1664)
 11903  1CBA  31AB  2393  319C   	fcall	_clearText
 11904  1CBD                     l8914:	
 11905                           
 11906                           ;main.c: 203:             clearText(newTextLine4);
 11907  1CBD  30C3               	movlw	low _newTextLine4
 11908  1CBE  002D               	movlb	13	; select bank13
 11909  1CBF  00A0               	movwf	clearText@textToClear^(0+1664)
 11910  1CC0  3007               	movlw	high _newTextLine4
 11911  1CC1  00A1               	movwf	(clearText@textToClear+1)^(0+1664)
 11912  1CC2  31AB  2393  319C   	fcall	_clearText
 11913                           
 11914                           ;main.c: 204:             sprintf(newTextLine4,"SET:%d.%dV", frmn_speed/10, (frmn_speed%
      +                          10));
 11915  1CC5  30C3               	movlw	low _newTextLine4
 11916  1CC6  002E               	movlb	14	; select bank14
 11917  1CC7  00C4               	movwf	sprintf@s^(0+1792)
 11918  1CC8  3007               	movlw	high _newTextLine4
 11919  1CC9  00C5               	movwf	(sprintf@s+1)^(0+1792)
 11920  1CCA  304E               	movlw	low (STR_2| (0+32768))
 11921  1CCB  00C6               	movwf	sprintf@fmt^(0+1792)
 11922  1CCC  30B0               	movlw	high (STR_2| (0+32768))
 11923  1CCD  00C7               	movwf	(sprintf@fmt^(0+1792)+1)
 11924  1CCE  300A               	movlw	10
 11925  1CCF  002D               	movlb	13	; select bank13
 11926  1CD0  00A0               	movwf	___awdiv@divisor^(0+1664)
 11927  1CD1  3000               	movlw	0
 11928  1CD2  00A1               	movwf	(___awdiv@divisor^(0+1664)+1)
 11929  1CD3  002E               	movlb	14	; select bank14
 11930  1CD4  0867               	movf	_frmn_speed^(0+1792),w
 11931  1CD5  00D5               	movwf	??_main^(0+1792)
 11932  1CD6  01D6               	clrf	(??_main^(0+1792)+1)
 11933  1CD7  0855               	movf	??_main^(0+1792),w
 11934  1CD8  002D               	movlb	13	; select bank13
 11935  1CD9  00A2               	movwf	___awdiv@dividend^(0+1664)
 11936  1CDA  002E               	movlb	14	; select bank14
 11937  1CDB  0856               	movf	(??_main+1)^(0+1792),w
 11938  1CDC  002D               	movlb	13	; select bank13
 11939  1CDD  00A3               	movwf	(___awdiv@dividend+1)^(0+1664)
 11940  1CDE  31AF  27A0  319C   	fcall	___awdiv
 11941  1CE1  002D               	movlb	13	; select bank13
 11942  1CE2  0821               	movf	(?___awdiv+1)^(0+1664),w
 11943  1CE3  002E               	movlb	14	; select bank14
 11944  1CE4  00C9               	movwf	((?_sprintf+1)^(0+1792)+4)
 11945  1CE5  002D               	movlb	13	; select bank13
 11946  1CE6  0820               	movf	?___awdiv^(0+1664),w
 11947  1CE7  002E               	movlb	14	; select bank14
 11948  1CE8  00C8               	movwf	(?_sprintf^(0+1792)+4)
 11949  1CE9  300A               	movlw	10
 11950  1CEA  002D               	movlb	13	; select bank13
 11951  1CEB  00A0               	movwf	___awmod@divisor^(0+1664)
 11952  1CEC  3000               	movlw	0
 11953  1CED  00A1               	movwf	(___awmod@divisor^(0+1664)+1)
 11954  1CEE  002E               	movlb	14	; select bank14
 11955  1CEF  0867               	movf	_frmn_speed^(0+1792),w
 11956  1CF0  00D7               	movwf	(??_main+2)^(0+1792)
 11957  1CF1  01D8               	clrf	((??_main+2)^(0+1792)+1)
 11958  1CF2  0857               	movf	(??_main+2)^(0+1792),w
 11959  1CF3  002D               	movlb	13	; select bank13
 11960  1CF4  00A2               	movwf	___awmod@dividend^(0+1664)
 11961  1CF5  002E               	movlb	14	; select bank14
 11962  1CF6  0858               	movf	(??_main+3)^(0+1792),w
 11963  1CF7  002D               	movlb	13	; select bank13
 11964  1CF8  00A3               	movwf	(___awmod@dividend+1)^(0+1664)
 11965  1CF9  31AD  25DB  319C   	fcall	___awmod
 11966  1CFC  002D               	movlb	13	; select bank13
 11967  1CFD  0821               	movf	(?___awmod+1)^(0+1664),w
 11968  1CFE  002E               	movlb	14	; select bank14
 11969  1CFF  00CB               	movwf	((?_sprintf+1)^(0+1792)+6)
 11970  1D00  002D               	movlb	13	; select bank13
 11971  1D01  0820               	movf	?___awmod^(0+1664),w
 11972  1D02  002E               	movlb	14	; select bank14
 11973  1D03  00CA               	movwf	(?_sprintf^(0+1792)+6)
 11974  1D04  318D  250E  319C   	fcall	_sprintf
 11975  1D07                     l8916:	
 11976                           
 11977                           ;main.c: 207:             DAC1_Load10bitInputData((float)frmn_speed *((float)1000/104));
 11978  1D07  002E               	movlb	14	; select bank14
 11979  1D08  0867               	movf	_frmn_speed^(0+1792),w
 11980  1D09  00D5               	movwf	??_main^(0+1792)
 11981  1D0A  01D6               	clrf	(??_main^(0+1792)+1)
 11982  1D0B  01D7               	clrf	(??_main^(0+1792)+2)
 11983  1D0C  01D8               	clrf	(??_main^(0+1792)+3)
 11984  1D0D  0858               	movf	(??_main+3)^(0+1792),w
 11985  1D0E  002D               	movlb	13	; select bank13
 11986  1D0F  00AC               	movwf	(___xxtofl@val+3)^(0+1664)
 11987  1D10  002E               	movlb	14	; select bank14
 11988  1D11  0857               	movf	(??_main+2)^(0+1792),w
 11989  1D12  002D               	movlb	13	; select bank13
 11990  1D13  00AB               	movwf	(___xxtofl@val+2)^(0+1664)
 11991  1D14  002E               	movlb	14	; select bank14
 11992  1D15  0856               	movf	(??_main+1)^(0+1792),w
 11993  1D16  002D               	movlb	13	; select bank13
 11994  1D17  00AA               	movwf	(___xxtofl@val+1)^(0+1664)
 11995  1D18  002E               	movlb	14	; select bank14
 11996  1D19  0855               	movf	??_main^(0+1792),w
 11997  1D1A  002D               	movlb	13	; select bank13
 11998  1D1B  00A9               	movwf	___xxtofl@val^(0+1664)
 11999  1D1C  3000               	movlw	0
 12000  1D1D  31A2  222B  319C   	fcall	___xxtofl
 12001  1D20  002D               	movlb	13	; select bank13
 12002  1D21  082C               	movf	(?___xxtofl+3)^(0+1664),w
 12003  1D22  00BE               	movwf	(___flmul@a+3)^(0+1664)
 12004  1D23  082B               	movf	(?___xxtofl+2)^(0+1664),w
 12005  1D24  00BD               	movwf	(___flmul@a+2)^(0+1664)
 12006  1D25  082A               	movf	(?___xxtofl+1)^(0+1664),w
 12007  1D26  00BC               	movwf	(___flmul@a+1)^(0+1664)
 12008  1D27  0829               	movf	?___xxtofl^(0+1664),w
 12009  1D28  00BB               	movwf	___flmul@a^(0+1664)
 12010  1D29  3041               	movlw	65
 12011  1D2A  00BA               	movwf	(___flmul@b+3)^(0+1664)
 12012  1D2B  3019               	movlw	25
 12013  1D2C  00B9               	movwf	(___flmul@b+2)^(0+1664)
 12014  1D2D  30D8               	movlw	216
 12015  1D2E  00B8               	movwf	(___flmul@b+1)^(0+1664)
 12016  1D2F  309E               	movlw	158
 12017  1D30  00B7               	movwf	___flmul@b^(0+1664)
 12018  1D31  3190  200A  319C   	fcall	___flmul
 12019  1D34  002D               	movlb	13	; select bank13
 12020  1D35  083A               	movf	(?___flmul+3)^(0+1664),w
 12021  1D36  00D4               	movwf	(___fltol@f1+3)^(0+1664)
 12022  1D37  0839               	movf	(?___flmul+2)^(0+1664),w
 12023  1D38  00D3               	movwf	(___fltol@f1+2)^(0+1664)
 12024  1D39  0838               	movf	(?___flmul+1)^(0+1664),w
 12025  1D3A  00D2               	movwf	(___fltol@f1+1)^(0+1664)
 12026  1D3B  0837               	movf	?___flmul^(0+1664),w
 12027  1D3C  00D1               	movwf	___fltol@f1^(0+1664)
 12028  1D3D  31A1  212B  319C   	fcall	___fltol
 12029  1D40  002D               	movlb	13	; select bank13
 12030  1D41  0852               	movf	(?___fltol+1)^(0+1664),w
 12031  1D42  00DD               	movwf	(DAC1_Load10bitInputData@input10BitData+1)^(0+1664)
 12032  1D43  0851               	movf	?___fltol^(0+1664),w
 12033  1D44  00DC               	movwf	DAC1_Load10bitInputData@input10BitData^(0+1664)
 12034  1D45  31A9  21E7  319C   	fcall	_DAC1_Load10bitInputData
 12035  1D48                     l8918:	
 12036                           
 12037                           ;main.c: 209:             if((float)frmn_speed/10 > 1.85)
 12038  1D48  303F               	movlw	63
 12039  1D49  002D               	movlb	13	; select bank13
 12040  1D4A  00D4               	movwf	(___flge@ff1+3)^(0+1664)
 12041  1D4B  30EC               	movlw	236
 12042  1D4C  00D3               	movwf	(___flge@ff1+2)^(0+1664)
 12043  1D4D  30CC               	movlw	204
 12044  1D4E  00D2               	movwf	(___flge@ff1+1)^(0+1664)
 12045  1D4F  30CD               	movlw	205
 12046  1D50  00D1               	movwf	___flge@ff1^(0+1664)
 12047  1D51  3041               	movlw	65
 12048  1D52  00BA               	movwf	(___fldiv@a+3)^(0+1664)
 12049  1D53  3020               	movlw	32
 12050  1D54  00B9               	movwf	(___fldiv@a+2)^(0+1664)
 12051  1D55  3000               	movlw	0
 12052  1D56  00B8               	movwf	(___fldiv@a+1)^(0+1664)
 12053  1D57  3000               	movlw	0
 12054  1D58  00B7               	movwf	___fldiv@a^(0+1664)
 12055  1D59  002E               	movlb	14	; select bank14
 12056  1D5A  0867               	movf	_frmn_speed^(0+1792),w
 12057  1D5B  00D5               	movwf	??_main^(0+1792)
 12058  1D5C  01D6               	clrf	(??_main^(0+1792)+1)
 12059  1D5D  01D7               	clrf	(??_main^(0+1792)+2)
 12060  1D5E  01D8               	clrf	(??_main^(0+1792)+3)
 12061  1D5F  0858               	movf	(??_main+3)^(0+1792),w
 12062  1D60  002D               	movlb	13	; select bank13
 12063  1D61  00AC               	movwf	(___xxtofl@val+3)^(0+1664)
 12064  1D62  002E               	movlb	14	; select bank14
 12065  1D63  0857               	movf	(??_main+2)^(0+1792),w
 12066  1D64  002D               	movlb	13	; select bank13
 12067  1D65  00AB               	movwf	(___xxtofl@val+2)^(0+1664)
 12068  1D66  002E               	movlb	14	; select bank14
 12069  1D67  0856               	movf	(??_main+1)^(0+1792),w
 12070  1D68  002D               	movlb	13	; select bank13
 12071  1D69  00AA               	movwf	(___xxtofl@val+1)^(0+1664)
 12072  1D6A  002E               	movlb	14	; select bank14
 12073  1D6B  0855               	movf	??_main^(0+1792),w
 12074  1D6C  002D               	movlb	13	; select bank13
 12075  1D6D  00A9               	movwf	___xxtofl@val^(0+1664)
 12076  1D6E  3000               	movlw	0
 12077  1D6F  31A2  222B  319C   	fcall	___xxtofl
 12078  1D72  002D               	movlb	13	; select bank13
 12079  1D73  082C               	movf	(?___xxtofl+3)^(0+1664),w
 12080  1D74  00BE               	movwf	(___fldiv@b+3)^(0+1664)
 12081  1D75  082B               	movf	(?___xxtofl+2)^(0+1664),w
 12082  1D76  00BD               	movwf	(___fldiv@b+2)^(0+1664)
 12083  1D77  082A               	movf	(?___xxtofl+1)^(0+1664),w
 12084  1D78  00BC               	movwf	(___fldiv@b+1)^(0+1664)
 12085  1D79  0829               	movf	?___xxtofl^(0+1664),w
 12086  1D7A  00BB               	movwf	___fldiv@b^(0+1664)
 12087  1D7B  319A  225C  319C   	fcall	___fldiv
 12088  1D7E  002D               	movlb	13	; select bank13
 12089  1D7F  083A               	movf	(?___fldiv+3)^(0+1664),w
 12090  1D80  00D8               	movwf	(___flge@ff2+3)^(0+1664)
 12091  1D81  0839               	movf	(?___fldiv+2)^(0+1664),w
 12092  1D82  00D7               	movwf	(___flge@ff2+2)^(0+1664)
 12093  1D83  0838               	movf	(?___fldiv+1)^(0+1664),w
 12094  1D84  00D6               	movwf	(___flge@ff2+1)^(0+1664)
 12095  1D85  0837               	movf	?___fldiv^(0+1664),w
 12096  1D86  00D5               	movwf	___flge@ff2^(0+1664)
 12097  1D87  31A1  21A0  319C   	fcall	___flge
 12098  1D8A  1803               	btfsc	3,0
 12099  1D8B  2D8D               	goto	u10251
 12100  1D8C  2D8E               	goto	u10250
 12101  1D8D                     u10251:	
 12102  1D8D  2D91               	goto	l912
 12103  1D8E                     u10250:	
 12104  1D8E                     l8920:	
 12105                           
 12106                           ;main.c: 210:             {;main.c: 212:                 RA0 = 1;
 12107  1D8E  0020               	movlb	0	; select bank0
 12108  1D8F  140C               	bsf	12,0	;volatile
 12109                           
 12110                           ;main.c: 213:             }
 12111  1D90  2D93               	goto	l8922
 12112  1D91                     l912:	
 12113                           ;main.c: 214:             else
 12114                           
 12115                           
 12116                           ;main.c: 215:             {;main.c: 217:                 RA0 = 0;
 12117  1D91  0020               	movlb	0	; select bank0
 12118  1D92  100C               	bcf	12,0	;volatile
 12119  1D93                     l8922:	
 12120                           
 12121                           ;main.c: 219:             if(frmn_speed/10 >= 2.0)
 12122  1D93  002E               	movlb	14	; select bank14
 12123  1D94  0867               	movf	_frmn_speed^(0+1792),w
 12124  1D95  00D5               	movwf	??_main^(0+1792)
 12125  1D96  01D6               	clrf	(??_main^(0+1792)+1)
 12126  1D97  0855               	movf	??_main^(0+1792),w
 12127  1D98  002D               	movlb	13	; select bank13
 12128  1D99  00A2               	movwf	___awdiv@dividend^(0+1664)
 12129  1D9A  002E               	movlb	14	; select bank14
 12130  1D9B  0856               	movf	(??_main+1)^(0+1792),w
 12131  1D9C  002D               	movlb	13	; select bank13
 12132  1D9D  00A3               	movwf	(___awdiv@dividend+1)^(0+1664)
 12133  1D9E  300A               	movlw	10
 12134  1D9F  00A0               	movwf	___awdiv@divisor^(0+1664)
 12135  1DA0  3000               	movlw	0
 12136  1DA1  00A1               	movwf	(___awdiv@divisor^(0+1664)+1)
 12137  1DA2  31AF  27A0  319C   	fcall	___awdiv
 12138  1DA5  002D               	movlb	13	; select bank13
 12139  1DA6  0820               	movf	?___awdiv^(0+1664),w
 12140  1DA7  00A9               	movwf	___xxtofl@val^(0+1664)
 12141  1DA8  0821               	movf	(?___awdiv+1)^(0+1664),w
 12142  1DA9  00AA               	movwf	(___xxtofl@val+1)^(0+1664)
 12143  1DAA  0D89               	rlf	9,f
 12144  1DAB  3B89               	subwfb	9,f
 12145  1DAC  0989               	comf	9,f
 12146  1DAD  00AB               	movwf	(___xxtofl@val+2)^(0+1664)
 12147  1DAE  00AC               	movwf	(___xxtofl@val+3)^(0+1664)
 12148  1DAF  3001               	movlw	1
 12149  1DB0  31A2  222B  319C   	fcall	___xxtofl
 12150  1DB3  002D               	movlb	13	; select bank13
 12151  1DB4  082C               	movf	(?___xxtofl+3)^(0+1664),w
 12152  1DB5  00D4               	movwf	(___flge@ff1+3)^(0+1664)
 12153  1DB6  082B               	movf	(?___xxtofl+2)^(0+1664),w
 12154  1DB7  00D3               	movwf	(___flge@ff1+2)^(0+1664)
 12155  1DB8  082A               	movf	(?___xxtofl+1)^(0+1664),w
 12156  1DB9  00D2               	movwf	(___flge@ff1+1)^(0+1664)
 12157  1DBA  0829               	movf	?___xxtofl^(0+1664),w
 12158  1DBB  00D1               	movwf	___flge@ff1^(0+1664)
 12159  1DBC  3040               	movlw	64
 12160  1DBD  00D8               	movwf	(___flge@ff2+3)^(0+1664)
 12161  1DBE  3000               	movlw	0
 12162  1DBF  00D7               	movwf	(___flge@ff2+2)^(0+1664)
 12163  1DC0  3000               	movlw	0
 12164  1DC1  00D6               	movwf	(___flge@ff2+1)^(0+1664)
 12165  1DC2  3000               	movlw	0
 12166  1DC3  00D5               	movwf	___flge@ff2^(0+1664)
 12167  1DC4  31A1  21A0  319C   	fcall	___flge
 12168  1DC7  1C03               	btfss	3,0
 12169  1DC8  2DCA               	goto	u10261
 12170  1DC9  2DCB               	goto	u10260
 12171  1DCA                     u10261:	
 12172  1DCA  2DCE               	goto	l914
 12173  1DCB                     u10260:	
 12174  1DCB                     l8924:	
 12175                           
 12176                           ;main.c: 220:             {;main.c: 222:                 RA1 = 1;
 12177  1DCB  0020               	movlb	0	; select bank0
 12178  1DCC  148C               	bsf	12,1	;volatile
 12179                           
 12180                           ;main.c: 223:             }
 12181  1DCD  2DD0               	goto	l8926
 12182  1DCE                     l914:	
 12183                           ;main.c: 224:             else
 12184                           
 12185                           
 12186                           ;main.c: 225:             {;main.c: 227:                 RA1 = 0;
 12187  1DCE  0020               	movlb	0	; select bank0
 12188  1DCF  108C               	bcf	12,1	;volatile
 12189  1DD0                     l8926:	
 12190                           
 12191                           ;main.c: 230:             UpdateScreen();
 12192  1DD0  3198  20AB  319C   	fcall	_UpdateScreen
 12193  1DD3                     l8928:	
 12194                           
 12195                           ;main.c: 231:             unsigned int power_led_flash_counter = 0;
 12196  1DD3  002F               	movlb	15	; select bank15
 12197  1DD4  01E7               	clrf	main@power_led_flash_counter^(0+1920)
 12198  1DD5  01E8               	clrf	(main@power_led_flash_counter+1)^(0+1920)
 12199                           
 12200                           ;main.c: 232:             while(RB5 == 0){
 12201  1DD6  318D  2D60         	goto	l8940
 12202                           
 12203                           	psect	text1
 12204  0D0E                     __ptext1:	
 12205 ;; *************** function _sprintf *****************
 12206 ;; Defined at:
 12207 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
 12208 ;; Parameters:    Size  Location     Type
 12209 ;;  s               2    3[BANK14] PTR unsigned char 
 12210 ;;		 -> newTextLine4(16), newTextLine3(16), newTextLine2(16), newTextLine1(16), 
 12211 ;;  fmt             2    5[BANK14] PTR const unsigned char 
 12212 ;;		 -> STR_17(11), STR_16(11), STR_15(11), STR_14(9), 
 12213 ;;		 -> STR_13(8), STR_12(12), STR_11(2), STR_10(12), 
 12214 ;;		 -> STR_9(9), STR_8(8), STR_7(11), STR_6(11), 
 12215 ;;		 -> STR_5(11), STR_4(5), STR_3(4), STR_2(11), 
 12216 ;;		 -> STR_1(8), 
 12217 ;; Auto vars:     Size  Location     Type
 12218 ;;  f               6   14[BANK14] struct _IO_FILE
 12219 ;;  ret             2    0        int 
 12220 ;;  ap              1   13[BANK14] PTR void [1]
 12221 ;;		 -> ?_sprintf(2), 
 12222 ;; Return value:  Size  Location     Type
 12223 ;;                  2    3[BANK14] int 
 12224 ;; Registers used:
 12225 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12226 ;; Tracked objects:
 12227 ;;		On entry : 0/0
 12228 ;;		On exit  : 0/0
 12229 ;;		Unchanged: 0/0
 12230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       8       0       0       0       0       0       0       0       0       0       0       0
 12232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       9       0       0       0       0       0       0       0       0       0       0       0
 12233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       1       0       0       0       0       0       0       0       0       0       0       0       0
 12234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       1      17       0       0       0       0       0       0       0       0       0       0       0
 12235 ;;Total ram usage:       18 bytes
 12236 ;; Hardware stack levels used:    1
 12237 ;; Hardware stack levels required when called:   11
 12238 ;; This function calls:
 12239 ;;		_vfprintf
 12240 ;; This function is called by:
 12241 ;;		_main
 12242 ;; This function uses a non-reentrant model
 12243 ;;
 12244                           
 12245                           
 12246                           ;psect for function _sprintf
 12247  0D0E                     _sprintf:	
 12248  0D0E                     l8236:	
 12249                           ;incstack = 0
 12250                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12251                           
 12252  0D0E  3048               	movlw	(low ((?_sprintf| (0+1792)+4)))& (0+255)
 12253  0D0F  002D               	movlb	13	; select bank13
 12254  0D10  00EE               	movwf	??_sprintf^(0+1664)
 12255  0D11  086E               	movf	??_sprintf^(0+1664),w
 12256  0D12  002E               	movlb	14	; select bank14
 12257  0D13  00CE               	movwf	sprintf@ap^(0+1792)
 12258  0D14  0845               	movf	(sprintf@s+1)^(0+1792),w
 12259  0D15  00D0               	movwf	(sprintf@f+1)^(0+1792)
 12260  0D16  0844               	movf	sprintf@s^(0+1792),w
 12261  0D17  00CF               	movwf	sprintf@f^(0+1792)
 12262  0D18                     l8238:	
 12263  0D18  01D1               	clrf	(sprintf@f^(0+1792)+2)
 12264  0D19  01D2               	clrf	((sprintf@f+1)^(0+1792)+2)
 12265  0D1A                     l8240:	
 12266  0D1A  01D3               	clrf	(sprintf@f^(0+1792)+4)
 12267  0D1B  01D4               	clrf	((sprintf@f+1)^(0+1792)+4)
 12268  0D1C                     l8242:	
 12269  0D1C  0847               	movf	(sprintf@fmt+1)^(0+1792),w
 12270  0D1D  002D               	movlb	13	; select bank13
 12271  0D1E  00EA               	movwf	(vfprintf@fmt+1)^(0+1664)
 12272  0D1F  002E               	movlb	14	; select bank14
 12273  0D20  0846               	movf	sprintf@fmt^(0+1792),w
 12274  0D21  002D               	movlb	13	; select bank13
 12275  0D22  00E9               	movwf	vfprintf@fmt^(0+1664)
 12276  0D23  304E               	movlw	(low (sprintf@ap| (0+1792)))& (0+255)
 12277  0D24  00EE               	movwf	??_sprintf^(0+1664)
 12278  0D25  086E               	movf	??_sprintf^(0+1664),w
 12279  0D26  00EB               	movwf	vfprintf@ap^(0+1664)
 12280  0D27  304F               	movlw	(low (sprintf@f| (0+1792)))& (0+255)
 12281  0D28  31AC  2460  318D   	fcall	_vfprintf
 12282  0D2B                     l8244:	
 12283  0D2B  3002               	movlw	2
 12284  0D2C  3E4F               	addlw	(low (sprintf@f| (0+1792)))& (0+255)
 12285  0D2D  0086               	movwf	6
 12286  0D2E  3007               	movlw	7	; select bank14/15
 12287  0D2F  0087               	movwf	7
 12288  0D30  3F40               	moviw [0]fsr1
 12289  0D31  002E               	movlb	14	; select bank14
 12290  0D32  0744               	addwf	sprintf@s^(0+1792),w
 12291  0D33  0084               	movwf	4
 12292  0D34  3F41               	moviw [1]fsr1
 12293  0D35  3D45               	addwfc	(sprintf@s+1)^(0+1792),w
 12294  0D36  0085               	movwf	5
 12295  0D37  0180               	clrf	0
 12296  0D38                     l1887:	
 12297  0D38  0008               	return
 12298  0D39                     __end_of_sprintf:	
 12299                           
 12300                           	psect	text2
 12301  2C60                     __ptext2:	
 12302 ;; *************** function _vfprintf *****************
 12303 ;; Defined at:
 12304 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 12305 ;; Parameters:    Size  Location     Type
 12306 ;;  fp              1    wreg     PTR struct _IO_FILE
 12307 ;;		 -> sprintf@f(6), 
 12308 ;;  fmt             2   73[BANK13] PTR const unsigned char 
 12309 ;;		 -> STR_17(11), STR_16(11), STR_15(11), STR_14(9), 
 12310 ;;		 -> STR_13(8), STR_12(12), STR_11(2), STR_10(12), 
 12311 ;;		 -> STR_9(9), STR_8(8), STR_7(11), STR_6(11), 
 12312 ;;		 -> STR_5(11), STR_4(5), STR_3(4), STR_2(11), 
 12313 ;;		 -> STR_1(8), 
 12314 ;;  ap              1   75[BANK13] PTR PTR void 
 12315 ;;		 -> sprintf@ap(1), 
 12316 ;; Auto vars:     Size  Location     Type
 12317 ;;  fp              1    0[BANK14] PTR struct _IO_FILE
 12318 ;;		 -> sprintf@f(6), 
 12319 ;;  cfmt            2    1[BANK14] PTR unsigned char 
 12320 ;;		 -> STR_17(11), STR_16(11), STR_15(11), STR_14(9), 
 12321 ;;		 -> STR_13(8), STR_12(12), STR_11(2), STR_10(12), 
 12322 ;;		 -> STR_9(9), STR_8(8), STR_7(11), STR_6(11), 
 12323 ;;		 -> STR_5(11), STR_4(5), STR_3(4), STR_2(11), 
 12324 ;;		 -> STR_1(8), 
 12325 ;; Return value:  Size  Location     Type
 12326 ;;                  2   73[BANK13] int 
 12327 ;; Registers used:
 12328 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12329 ;; Tracked objects:
 12330 ;;		On entry : 0/0
 12331 ;;		On exit  : 0/0
 12332 ;;		Unchanged: 0/0
 12333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       3       0       0       0       0       0       0       0       0       0       0       0       0
 12335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       3       0       0       0       0       0       0       0       0       0       0       0
 12336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 12337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       5       3       0       0       0       0       0       0       0       0       0       0       0
 12338 ;;Total ram usage:        8 bytes
 12339 ;; Hardware stack levels used:    1
 12340 ;; Hardware stack levels required when called:   10
 12341 ;; This function calls:
 12342 ;;		_vfpfcnvrt
 12343 ;; This function is called by:
 12344 ;;		_sprintf
 12345 ;; This function uses a non-reentrant model
 12346 ;;
 12347                           
 12348                           
 12349                           ;psect for function _vfprintf
 12350  2C60                     _vfprintf:	
 12351                           
 12352                           ;incstack = 0
 12353                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12354                           ;vfprintf@fp stored from wreg
 12355  2C60  002E               	movlb	14	; select bank14
 12356  2C61  00C1               	movwf	vfprintf@fp^(0+1792)
 12357  2C62                     l8086:	
 12358                           
 12359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 12360  2C62  002D               	movlb	13	; select bank13
 12361  2C63  086A               	movf	(vfprintf@fmt+1)^(0+1664),w
 12362  2C64  002E               	movlb	14	; select bank14
 12363  2C65  00C3               	movwf	(vfprintf@cfmt+1)^(0+1792)
 12364  2C66  002D               	movlb	13	; select bank13
 12365  2C67  0869               	movf	vfprintf@fmt^(0+1664),w
 12366  2C68  002E               	movlb	14	; select bank14
 12367  2C69  00C2               	movwf	vfprintf@cfmt^(0+1792)
 12368  2C6A                     l8088:	
 12369                           
 12370                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 12371  2C6A  002F               	movlb	15	; select bank15
 12372  2C6B  01BD               	clrf	_nout^(0+1920)
 12373  2C6C  01BE               	clrf	(_nout+1)^(0+1920)
 12374                           
 12375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 12376  2C6D  2C84               	goto	l8092
 12377  2C6E                     l8090:	
 12378                           
 12379                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 12380  2C6E  3042               	movlw	(low (vfprintf@cfmt| (0+1792)))& (0+255)
 12381  2C6F  002D               	movlb	13	; select bank13
 12382  2C70  00EC               	movwf	??_vfprintf^(0+1664)
 12383  2C71  086C               	movf	??_vfprintf^(0+1664),w
 12384  2C72  00D9               	movwf	vfpfcnvrt@fmt^(0+1664)
 12385  2C73  086B               	movf	vfprintf@ap^(0+1664),w
 12386  2C74  00ED               	movwf	(??_vfprintf+1)^(0+1664)
 12387  2C75  086D               	movf	(??_vfprintf+1)^(0+1664),w
 12388  2C76  00DA               	movwf	vfpfcnvrt@ap^(0+1664)
 12389  2C77  002E               	movlb	14	; select bank14
 12390  2C78  0841               	movf	vfprintf@fp^(0+1792),w
 12391  2C79  31A3  23B6  31AC   	fcall	_vfpfcnvrt
 12392  2C7C  002D               	movlb	13	; select bank13
 12393  2C7D  0859               	movf	?_vfpfcnvrt^(0+1664),w
 12394  2C7E  002F               	movlb	15	; select bank15
 12395  2C7F  07BD               	addwf	_nout^(0+1920),f
 12396  2C80  002D               	movlb	13	; select bank13
 12397  2C81  085A               	movf	(?_vfpfcnvrt+1)^(0+1664),w
 12398  2C82  002F               	movlb	15	; select bank15
 12399  2C83  3DBE               	addwfc	(_nout+1)^(0+1920),f
 12400  2C84                     l8092:	
 12401                           
 12402                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 12403  2C84  002E               	movlb	14	; select bank14
 12404  2C85  0842               	movf	vfprintf@cfmt^(0+1792),w
 12405  2C86  0084               	movwf	4
 12406  2C87  0843               	movf	(vfprintf@cfmt+1)^(0+1792),w
 12407  2C88  0085               	movwf	5
 12408  2C89  0012               	moviw fsr0++
 12409  2C8A  1D03               	btfss	3,2
 12410  2C8B  2C8D               	goto	u8781
 12411  2C8C  2C8E               	goto	u8780
 12412  2C8D                     u8781:	
 12413  2C8D  2C6E               	goto	l8090
 12414  2C8E                     u8780:	
 12415  2C8E                     l8094:	
 12416                           
 12417                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 12418  2C8E  002F               	movlb	15	; select bank15
 12419  2C8F  083E               	movf	(_nout+1)^(0+1920),w
 12420  2C90  002D               	movlb	13	; select bank13
 12421  2C91  00EA               	movwf	(?_vfprintf+1)^(0+1664)
 12422  2C92  002F               	movlb	15	; select bank15
 12423  2C93  083D               	movf	_nout^(0+1920),w
 12424  2C94  002D               	movlb	13	; select bank13
 12425  2C95  00E9               	movwf	?_vfprintf^(0+1664)
 12426  2C96                     l1389:	
 12427  2C96  0008               	return
 12428  2C97                     __end_of_vfprintf:	
 12429                           
 12430                           	psect	text3
 12431  23B6                     __ptext3:	
 12432 ;; *************** function _vfpfcnvrt *****************
 12433 ;; Defined at:
 12434 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 12435 ;; Parameters:    Size  Location     Type
 12436 ;;  fp              1    wreg     PTR struct _IO_FILE
 12437 ;;		 -> sprintf@f(6), 
 12438 ;;  fmt             1   57[BANK13] PTR PTR unsigned char 
 12439 ;;		 -> vfprintf@cfmt(2), 
 12440 ;;  ap              1   58[BANK13] PTR PTR void 
 12441 ;;		 -> sprintf@ap(1), 
 12442 ;; Auto vars:     Size  Location     Type
 12443 ;;  fp              1   72[BANK13] PTR struct _IO_FILE
 12444 ;;		 -> sprintf@f(6), 
 12445 ;;  ll              8   64[BANK13] long long 
 12446 ;;  llu             8    0        unsigned long long 
 12447 ;;  f               4    0        unsigned long long 
 12448 ;;  ct              3    0        unsigned char [3]
 12449 ;;  vp              2    0        PTR void 
 12450 ;;  i               2    0        int 
 12451 ;;  done            2    0        int 
 12452 ;;  cp              2    0        PTR unsigned char 
 12453 ;;  c               1    0        unsigned char 
 12454 ;; Return value:  Size  Location     Type
 12455 ;;                  2   57[BANK13] int 
 12456 ;; Registers used:
 12457 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12458 ;; Tracked objects:
 12459 ;;		On entry : 0/0
 12460 ;;		On exit  : 0/0
 12461 ;;		Unchanged: 0/0
 12462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 12464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       9       0       0       0       0       0       0       0       0       0       0       0       0
 12465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       5       0       0       0       0       0       0       0       0       0       0       0       0
 12466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0      16       0       0       0       0       0       0       0       0       0       0       0       0
 12467 ;;Total ram usage:       16 bytes
 12468 ;; Hardware stack levels used:    1
 12469 ;; Hardware stack levels required when called:    9
 12470 ;; This function calls:
 12471 ;;		_dtoa
 12472 ;;		_fputc
 12473 ;; This function is called by:
 12474 ;;		_vfprintf
 12475 ;; This function uses a non-reentrant model
 12476 ;;
 12477                           
 12478                           
 12479                           ;psect for function _vfpfcnvrt
 12480  23B6                     _vfpfcnvrt:	
 12481                           
 12482                           ;incstack = 0
 12483                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12484                           ;vfpfcnvrt@fp stored from wreg
 12485  23B6  002D               	movlb	13	; select bank13
 12486  23B7  00E8               	movwf	vfpfcnvrt@fp^(0+1664)
 12487  23B8                     l7714:	
 12488                           
 12489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 12490  23B8  0859               	movf	vfpfcnvrt@fmt^(0+1664),w
 12491  23B9  0086               	movwf	6
 12492  23BA  3007               	movlw	7	; select bank14/15
 12493  23BB  0087               	movwf	7
 12494  23BC  3F40               	moviw [0]fsr1
 12495  23BD  00DB               	movwf	??_vfpfcnvrt^(0+1664)
 12496  23BE  3F41               	moviw [1]fsr1
 12497  23BF  00DC               	movwf	(??_vfpfcnvrt^(0+1664)+1)
 12498  23C0  085B               	movf	??_vfpfcnvrt^(0+1664),w
 12499  23C1  0084               	movwf	4
 12500  23C2  085C               	movf	(??_vfpfcnvrt+1)^(0+1664),w
 12501  23C3  0085               	movwf	5
 12502  23C4  0012               	moviw fsr0++
 12503  23C5  3A25               	xorlw	37
 12504  23C6  1D03               	btfss	3,2
 12505  23C7  2BC9               	goto	u8461
 12506  23C8  2BCA               	goto	u8460
 12507  23C9                     u8461:	
 12508  23C9  2C78               	goto	l7750
 12509  23CA                     u8460:	
 12510  23CA                     l7716:	
 12511                           
 12512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 12513  23CA  0859               	movf	vfpfcnvrt@fmt^(0+1664),w
 12514  23CB  0086               	movwf	6
 12515  23CC  3007               	movlw	7	; select bank14/15
 12516  23CD  0087               	movwf	7
 12517  23CE  3001               	movlw	1
 12518  23CF  0781               	addwf	1,f
 12519  23D0  3141               	addfsr 1,1
 12520  23D1  1803               	skipnc
 12521  23D2  0A81               	incf	1,f
 12522  23D3                     l7718:	
 12523                           
 12524                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 12525  23D3  002F               	movlb	15	; select bank15
 12526  23D4  01BF               	clrf	doprnt@width^(0+1920)
 12527  23D5  01C0               	clrf	(doprnt@width+1)^(0+1920)
 12528  23D6  002E               	movlb	14	; select bank14
 12529  23D7  01A9               	clrf	_flags^(0+1792)
 12530  23D8  01AA               	clrf	(_flags+1)^(0+1792)
 12531  23D9                     l7720:	
 12532                           
 12533                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 12534  23D9  30FF               	movlw	255
 12535  23DA  00A7               	movwf	_prec^(0+1792)
 12536  23DB  30FF               	movlw	255
 12537  23DC  00A8               	movwf	(_prec^(0+1792)+1)
 12538  23DD                     l7722:	
 12539                           
 12540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 12541  23DD  002D               	movlb	13	; select bank13
 12542  23DE  0859               	movf	vfpfcnvrt@fmt^(0+1664),w
 12543  23DF  0086               	movwf	6
 12544  23E0  3007               	movlw	7	; select bank14/15
 12545  23E1  0087               	movwf	7
 12546  23E2  3F40               	moviw [0]fsr1
 12547  23E3  00DB               	movwf	??_vfpfcnvrt^(0+1664)
 12548  23E4  3F41               	moviw [1]fsr1
 12549  23E5  00DC               	movwf	(??_vfpfcnvrt^(0+1664)+1)
 12550  23E6  085B               	movf	??_vfpfcnvrt^(0+1664),w
 12551  23E7  0084               	movwf	4
 12552  23E8  085C               	movf	(??_vfpfcnvrt+1)^(0+1664),w
 12553  23E9  0085               	movwf	5
 12554  23EA  0012               	moviw fsr0++
 12555  23EB  3A64               	xorlw	100
 12556  23EC  1903               	btfsc	3,2
 12557  23ED  2BEF               	goto	u8471
 12558  23EE  2BF0               	goto	u8470
 12559  23EF                     u8471:	
 12560  23EF  2C02               	goto	l7726
 12561  23F0                     u8470:	
 12562  23F0                     l7724:	
 12563  23F0  0859               	movf	vfpfcnvrt@fmt^(0+1664),w
 12564  23F1  0086               	movwf	6
 12565  23F2  3007               	movlw	7	; select bank14/15
 12566  23F3  0087               	movwf	7
 12567  23F4  3F40               	moviw [0]fsr1
 12568  23F5  00DB               	movwf	??_vfpfcnvrt^(0+1664)
 12569  23F6  3F41               	moviw [1]fsr1
 12570  23F7  00DC               	movwf	(??_vfpfcnvrt^(0+1664)+1)
 12571  23F8  085B               	movf	??_vfpfcnvrt^(0+1664),w
 12572  23F9  0084               	movwf	4
 12573  23FA  085C               	movf	(??_vfpfcnvrt+1)^(0+1664),w
 12574  23FB  0085               	movwf	5
 12575  23FC  0012               	moviw fsr0++
 12576  23FD  3A69               	xorlw	105
 12577  23FE  1D03               	btfss	3,2
 12578  23FF  2C01               	goto	u8481
 12579  2400  2C02               	goto	u8480
 12580  2401                     u8481:	
 12581  2401  2C40               	goto	l7734
 12582  2402                     u8480:	
 12583  2402                     l7726:	
 12584                           
 12585                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 12586  2402  0859               	movf	vfpfcnvrt@fmt^(0+1664),w
 12587  2403  0086               	movwf	6
 12588  2404  3007               	movlw	7	; select bank14/15
 12589  2405  0087               	movwf	7
 12590  2406  3001               	movlw	1
 12591  2407  0781               	addwf	1,f
 12592  2408  3141               	addfsr 1,1
 12593  2409  1803               	skipnc
 12594  240A  0A81               	incf	1,f
 12595  240B                     l7728:	
 12596                           
 12597                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 12598  240B  085A               	movf	vfpfcnvrt@ap^(0+1664),w
 12599  240C  0086               	movwf	6
 12600  240D  3007               	movlw	7	; select bank14/15
 12601  240E  0087               	movwf	7
 12602  240F  0801               	movf	1,w
 12603  2410  0084               	movwf	4
 12604  2411  3007               	movlw	7	; select bank14/15
 12605  2412  0085               	movwf	5
 12606  2413  3002               	movlw	2
 12607  2414  0781               	addwf	1,f
 12608  2415  3F00               	moviw [0]fsr0
 12609  2416  00DB               	movwf	??_vfpfcnvrt^(0+1664)
 12610  2417  3F01               	moviw [1]fsr0
 12611  2418  00DC               	movwf	(??_vfpfcnvrt^(0+1664)+1)
 12612  2419  085B               	movf	??_vfpfcnvrt^(0+1664),w
 12613  241A  00E0               	movwf	vfpfcnvrt@ll^(0+1664)
 12614  241B  085C               	movf	(??_vfpfcnvrt+1)^(0+1664),w
 12615  241C  00E1               	movwf	(vfpfcnvrt@ll+1)^(0+1664)
 12616  241D  0D89               	rlf	9,f
 12617  241E  3B89               	subwfb	9,f
 12618  241F  0989               	comf	9,f
 12619  2420  00E2               	movwf	(vfpfcnvrt@ll+2)^(0+1664)
 12620  2421  00E3               	movwf	(vfpfcnvrt@ll+3)^(0+1664)
 12621  2422  00E4               	movwf	(vfpfcnvrt@ll+4)^(0+1664)
 12622  2423  00E5               	movwf	(vfpfcnvrt@ll+5)^(0+1664)
 12623  2424  00E6               	movwf	(vfpfcnvrt@ll+6)^(0+1664)
 12624  2425  00E7               	movwf	(vfpfcnvrt@ll+7)^(0+1664)
 12625  2426                     l7730:	
 12626                           
 12627                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 12628  2426  0860               	movf	vfpfcnvrt@ll^(0+1664),w
 12629  2427  00BB               	movwf	dtoa@d^(0+1664)
 12630  2428  0861               	movf	(vfpfcnvrt@ll+1)^(0+1664),w
 12631  2429  00BC               	movwf	(dtoa@d+1)^(0+1664)
 12632  242A  0862               	movf	(vfpfcnvrt@ll+2)^(0+1664),w
 12633  242B  00BD               	movwf	(dtoa@d+2)^(0+1664)
 12634  242C  0863               	movf	(vfpfcnvrt@ll+3)^(0+1664),w
 12635  242D  00BE               	movwf	(dtoa@d+3)^(0+1664)
 12636  242E  0864               	movf	(vfpfcnvrt@ll+4)^(0+1664),w
 12637  242F  00BF               	movwf	(dtoa@d+4)^(0+1664)
 12638  2430  0865               	movf	(vfpfcnvrt@ll+5)^(0+1664),w
 12639  2431  00C0               	movwf	(dtoa@d+5)^(0+1664)
 12640  2432  0866               	movf	(vfpfcnvrt@ll+6)^(0+1664),w
 12641  2433  00C1               	movwf	(dtoa@d+6)^(0+1664)
 12642  2434  0867               	movf	(vfpfcnvrt@ll+7)^(0+1664),w
 12643  2435  00C2               	movwf	(dtoa@d+7)^(0+1664)
 12644  2436  0868               	movf	vfpfcnvrt@fp^(0+1664),w
 12645  2437  31A6  2690  31A3   	fcall	_dtoa
 12646  243A  002D               	movlb	13	; select bank13
 12647  243B  083C               	movf	(?_dtoa+1)^(0+1664),w
 12648  243C  00DA               	movwf	(?_vfpfcnvrt+1)^(0+1664)
 12649  243D  083B               	movf	?_dtoa^(0+1664),w
 12650  243E  00D9               	movwf	?_vfpfcnvrt^(0+1664)
 12651  243F  2C9D               	goto	l1382
 12652  2440                     l7734:	
 12653                           
 12654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 12655  2440  0859               	movf	vfpfcnvrt@fmt^(0+1664),w
 12656  2441  0086               	movwf	6
 12657  2442  3007               	movlw	7	; select bank14/15
 12658  2443  0087               	movwf	7
 12659  2444  3F40               	moviw [0]fsr1
 12660  2445  00DB               	movwf	??_vfpfcnvrt^(0+1664)
 12661  2446  3F41               	moviw [1]fsr1
 12662  2447  00DC               	movwf	(??_vfpfcnvrt^(0+1664)+1)
 12663  2448  085B               	movf	??_vfpfcnvrt^(0+1664),w
 12664  2449  0084               	movwf	4
 12665  244A  085C               	movf	(??_vfpfcnvrt+1)^(0+1664),w
 12666  244B  0085               	movwf	5
 12667  244C  0012               	moviw fsr0++
 12668  244D  3A25               	xorlw	37
 12669  244E  1D03               	btfss	3,2
 12670  244F  2C51               	goto	u8491
 12671  2450  2C52               	goto	u8490
 12672  2451                     u8491:	
 12673  2451  2C6C               	goto	l7744
 12674  2452                     u8490:	
 12675  2452                     l7736:	
 12676                           
 12677                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 12678  2452  0859               	movf	vfpfcnvrt@fmt^(0+1664),w
 12679  2453  0086               	movwf	6
 12680  2454  3007               	movlw	7	; select bank14/15
 12681  2455  0087               	movwf	7
 12682  2456  3001               	movlw	1
 12683  2457  0781               	addwf	1,f
 12684  2458  3141               	addfsr 1,1
 12685  2459  1803               	skipnc
 12686  245A  0A81               	incf	1,f
 12687  245B                     l7738:	
 12688                           
 12689                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 12690  245B  3025               	movlw	37
 12691  245C  00A0               	movwf	fputc@c^(0+1664)
 12692  245D  3000               	movlw	0
 12693  245E  00A1               	movwf	(fputc@c^(0+1664)+1)
 12694  245F  0868               	movf	vfpfcnvrt@fp^(0+1664),w
 12695  2460  00DB               	movwf	??_vfpfcnvrt^(0+1664)
 12696  2461  085B               	movf	??_vfpfcnvrt^(0+1664),w
 12697  2462  00A2               	movwf	fputc@fp^(0+1664)
 12698  2463  31AE  26E5  31A3   	fcall	_fputc
 12699  2466                     l7740:	
 12700                           
 12701                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 12702  2466  3001               	movlw	1
 12703  2467  002D               	movlb	13	; select bank13
 12704  2468  00D9               	movwf	?_vfpfcnvrt^(0+1664)
 12705  2469  3000               	movlw	0
 12706  246A  00DA               	movwf	(?_vfpfcnvrt^(0+1664)+1)
 12707  246B  2C9D               	goto	l1382
 12708  246C                     l7744:	
 12709                           
 12710                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 12711  246C  0859               	movf	vfpfcnvrt@fmt^(0+1664),w
 12712  246D  0086               	movwf	6
 12713  246E  3007               	movlw	7	; select bank14/15
 12714  246F  0087               	movwf	7
 12715  2470  3001               	movlw	1
 12716  2471  0781               	addwf	1,f
 12717  2472  3141               	addfsr 1,1
 12718  2473  1803               	skipnc
 12719  2474  0A81               	incf	1,f
 12720  2475                     l7746:	
 12721                           
 12722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 12723  2475  01D9               	clrf	?_vfpfcnvrt^(0+1664)
 12724  2476  01DA               	clrf	(?_vfpfcnvrt+1)^(0+1664)
 12725  2477  2C9D               	goto	l1382
 12726  2478                     l7750:	
 12727                           
 12728                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 12729  2478  0859               	movf	vfpfcnvrt@fmt^(0+1664),w
 12730  2479  0086               	movwf	6
 12731  247A  3007               	movlw	7	; select bank14/15
 12732  247B  0087               	movwf	7
 12733  247C  3F40               	moviw [0]fsr1
 12734  247D  00DB               	movwf	??_vfpfcnvrt^(0+1664)
 12735  247E  3F41               	moviw [1]fsr1
 12736  247F  00DC               	movwf	(??_vfpfcnvrt^(0+1664)+1)
 12737  2480  085B               	movf	??_vfpfcnvrt^(0+1664),w
 12738  2481  0084               	movwf	4
 12739  2482  085C               	movf	(??_vfpfcnvrt+1)^(0+1664),w
 12740  2483  0085               	movwf	5
 12741  2484  0800               	movf	0,w	;code access
 12742  2485  00DD               	movwf	(??_vfpfcnvrt+2)^(0+1664)
 12743  2486  01DE               	clrf	((??_vfpfcnvrt+2)^(0+1664)+1)
 12744  2487  085D               	movf	(??_vfpfcnvrt+2)^(0+1664),w
 12745  2488  00A0               	movwf	fputc@c^(0+1664)
 12746  2489  085E               	movf	(??_vfpfcnvrt+3)^(0+1664),w
 12747  248A  00A1               	movwf	(fputc@c+1)^(0+1664)
 12748  248B  0868               	movf	vfpfcnvrt@fp^(0+1664),w
 12749  248C  00DF               	movwf	(??_vfpfcnvrt+4)^(0+1664)
 12750  248D  085F               	movf	(??_vfpfcnvrt+4)^(0+1664),w
 12751  248E  00A2               	movwf	fputc@fp^(0+1664)
 12752  248F  31AE  26E5  31A3   	fcall	_fputc
 12753  2492                     l7752:	
 12754                           
 12755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 12756  2492  002D               	movlb	13	; select bank13
 12757  2493  0859               	movf	vfpfcnvrt@fmt^(0+1664),w
 12758  2494  0086               	movwf	6
 12759  2495  3007               	movlw	7	; select bank14/15
 12760  2496  0087               	movwf	7
 12761  2497  3001               	movlw	1
 12762  2498  0781               	addwf	1,f
 12763  2499  3141               	addfsr 1,1
 12764  249A  1803               	skipnc
 12765  249B  0A81               	incf	1,f
 12766  249C  2C66               	goto	l7740
 12767  249D                     l1382:	
 12768  249D  0008               	return
 12769  249E                     __end_of_vfpfcnvrt:	
 12770                           
 12771                           	psect	text4
 12772  2690                     __ptext4:	
 12773 ;; *************** function _dtoa *****************
 12774 ;; Defined at:
 12775 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 12776 ;; Parameters:    Size  Location     Type
 12777 ;;  fp              1    wreg     PTR struct _IO_FILE
 12778 ;;		 -> sprintf@f(6), 
 12779 ;;  d               8   27[BANK13] long long 
 12780 ;; Auto vars:     Size  Location     Type
 12781 ;;  fp              1   38[BANK13] PTR struct _IO_FILE
 12782 ;;		 -> sprintf@f(6), 
 12783 ;;  n               8   47[BANK13] long long 
 12784 ;;  i               2   55[BANK13] int 
 12785 ;;  s               2   45[BANK13] int 
 12786 ;;  w               2   43[BANK13] int 
 12787 ;;  p               2   41[BANK13] int 
 12788 ;; Return value:  Size  Location     Type
 12789 ;;                  2   27[BANK13] int 
 12790 ;; Registers used:
 12791 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12792 ;; Tracked objects:
 12793 ;;		On entry : 0/0
 12794 ;;		On exit  : 0/0
 12795 ;;		Unchanged: 0/0
 12796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       8       0       0       0       0       0       0       0       0       0       0       0       0
 12798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0      19       0       0       0       0       0       0       0       0       0       0       0       0
 12799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       3       0       0       0       0       0       0       0       0       0       0       0       0
 12800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0      30       0       0       0       0       0       0       0       0       0       0       0       0
 12801 ;;Total ram usage:       30 bytes
 12802 ;; Hardware stack levels used:    1
 12803 ;; Hardware stack levels required when called:    8
 12804 ;; This function calls:
 12805 ;;		___aodiv
 12806 ;;		___aomod
 12807 ;;		_abs
 12808 ;;		_pad
 12809 ;; This function is called by:
 12810 ;;		_vfpfcnvrt
 12811 ;; This function uses a non-reentrant model
 12812 ;;
 12813                           
 12814                           
 12815                           ;psect for function _dtoa
 12816  2690                     _dtoa:	
 12817                           
 12818                           ;incstack = 0
 12819                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12820                           ;dtoa@fp stored from wreg
 12821  2690  002D               	movlb	13	; select bank13
 12822  2691  00C6               	movwf	dtoa@fp^(0+1664)
 12823  2692                     l7574:	
 12824                           
 12825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 12826  2692  083B               	movf	dtoa@d^(0+1664),w
 12827  2693  00CF               	movwf	dtoa@n^(0+1664)
 12828  2694  083C               	movf	(dtoa@d+1)^(0+1664),w
 12829  2695  00D0               	movwf	(dtoa@n+1)^(0+1664)
 12830  2696  083D               	movf	(dtoa@d+2)^(0+1664),w
 12831  2697  00D1               	movwf	(dtoa@n+2)^(0+1664)
 12832  2698  083E               	movf	(dtoa@d+3)^(0+1664),w
 12833  2699  00D2               	movwf	(dtoa@n+3)^(0+1664)
 12834  269A  083F               	movf	(dtoa@d+4)^(0+1664),w
 12835  269B  00D3               	movwf	(dtoa@n+4)^(0+1664)
 12836  269C  0840               	movf	(dtoa@d+5)^(0+1664),w
 12837  269D  00D4               	movwf	(dtoa@n+5)^(0+1664)
 12838  269E  0841               	movf	(dtoa@d+6)^(0+1664),w
 12839  269F  00D5               	movwf	(dtoa@n+6)^(0+1664)
 12840  26A0  0842               	movf	(dtoa@d+7)^(0+1664),w
 12841  26A1  00D6               	movwf	(dtoa@n+7)^(0+1664)
 12842  26A2                     l7576:	
 12843                           
 12844                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 12845  26A2  30CF               	movlw	low dtoa@n
 12846  26A3  0086               	movwf	6
 12847  26A4  3006               	movlw	high dtoa@n
 12848  26A5  0087               	movwf	7
 12849  26A6  3F47               	moviw [7]fsr1
 12850  26A7  00C3               	movwf	??_dtoa^(0+1664)
 12851  26A8  1BC3               	btfsc	??_dtoa^(0+1664),7
 12852  26A9  2EAB               	goto	u8101
 12853  26AA  2EAD               	goto	u8100
 12854  26AB                     u8101:	
 12855  26AB  3001               	movlw	1
 12856  26AC  2EAE               	goto	u8110
 12857  26AD                     u8100:	
 12858  26AD  3000               	movlw	0
 12859  26AE                     u8110:	
 12860  26AE  002D               	movlb	13	; select bank13
 12861  26AF  00C4               	movwf	(??_dtoa+1)^(0+1664)
 12862  26B0  01C5               	clrf	((??_dtoa+1)^(0+1664)+1)
 12863  26B1  0844               	movf	(??_dtoa+1)^(0+1664),w
 12864  26B2  00CD               	movwf	dtoa@s^(0+1664)
 12865  26B3  0845               	movf	(??_dtoa+2)^(0+1664),w
 12866  26B4  00CE               	movwf	(dtoa@s+1)^(0+1664)
 12867  26B5                     l7578:	
 12868                           
 12869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 12870  26B5  084D               	movf	dtoa@s^(0+1664),w
 12871  26B6  044E               	iorwf	(dtoa@s+1)^(0+1664),w
 12872  26B7  1903               	btfsc	3,2
 12873  26B8  2EBA               	goto	u8121
 12874  26B9  2EBB               	goto	u8120
 12875  26BA                     u8121:	
 12876  26BA  2ED9               	goto	l1352
 12877  26BB                     u8120:	
 12878  26BB                     l7580:	
 12879                           
 12880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 12881  26BB  09CF               	comf	dtoa@n^(0+1664),f
 12882  26BC  09D0               	comf	(dtoa@n+1)^(0+1664),f
 12883  26BD  09D1               	comf	(dtoa@n+2)^(0+1664),f
 12884  26BE  09D2               	comf	(dtoa@n+3)^(0+1664),f
 12885  26BF  09D3               	comf	(dtoa@n+4)^(0+1664),f
 12886  26C0  09D4               	comf	(dtoa@n+5)^(0+1664),f
 12887  26C1  09D5               	comf	(dtoa@n+6)^(0+1664),f
 12888  26C2  09D6               	comf	(dtoa@n+7)^(0+1664),f
 12889  26C3  0ACF               	incf	dtoa@n^(0+1664),f
 12890  26C4  1D03               	skipz
 12891  26C5  2ED9               	goto	u813lld
 12892  26C6  0AD0               	incf	(dtoa@n+1)^(0+1664),f
 12893  26C7  1D03               	skipz
 12894  26C8  2ED9               	goto	u813lld
 12895  26C9  0AD1               	incf	(dtoa@n+2)^(0+1664),f
 12896  26CA  1D03               	skipz
 12897  26CB  2ED9               	goto	u813lld
 12898  26CC  0AD2               	incf	(dtoa@n+3)^(0+1664),f
 12899  26CD  1D03               	skipz
 12900  26CE  2ED9               	goto	u813lld
 12901  26CF  0AD3               	incf	(dtoa@n+4)^(0+1664),f
 12902  26D0  1D03               	skipz
 12903  26D1  2ED9               	goto	u813lld
 12904  26D2  0AD4               	incf	(dtoa@n+5)^(0+1664),f
 12905  26D3  1D03               	skipz
 12906  26D4  2ED9               	goto	u813lld
 12907  26D5  0AD5               	incf	(dtoa@n+6)^(0+1664),f
 12908  26D6  1D03               	skipz
 12909  26D7  2ED9               	goto	u813lld
 12910  26D8  0AD6               	incf	(dtoa@n+7)^(0+1664),f
 12911  26D9                     u813lld:	
 12912  26D9                     l1352:	
 12913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 284:     }
 12914                           
 12915                           
 12916                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 12917  26D9  002E               	movlb	14	; select bank14
 12918  26DA  1BA8               	btfsc	(_prec+1)^(0+1792),7
 12919  26DB  2EDD               	goto	u8141
 12920  26DC  2EDE               	goto	u8140
 12921  26DD                     u8141:	
 12922  26DD  2EE2               	goto	l1353
 12923  26DE                     u8140:	
 12924  26DE                     l7582:	
 12925                           
 12926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 12927  26DE  30FD               	movlw	253
 12928  26DF  05A9               	andwf	_flags^(0+1792),f
 12929  26E0  30FF               	movlw	255
 12930  26E1  05AA               	andwf	(_flags+1)^(0+1792),f
 12931  26E2                     l1353:	
 12932                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 289:     }
 12933                           
 12934                           
 12935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 12936  26E2  0828               	movf	(_prec+1)^(0+1792),w
 12937  26E3  3A80               	xorlw	128
 12938  26E4  002D               	movlb	13	; select bank13
 12939  26E5  00C3               	movwf	??_dtoa^(0+1664)
 12940  26E6  3080               	movlw	128
 12941  26E7  0243               	subwf	??_dtoa^(0+1664),w
 12942  26E8  1D03               	skipz
 12943  26E9  2EED               	goto	u8155
 12944  26EA  3001               	movlw	1
 12945  26EB  002E               	movlb	14	; select bank14
 12946  26EC  0227               	subwf	_prec^(0+1792),w
 12947  26ED                     u8155:	
 12948  26ED  1803               	skipnc
 12949  26EE  2EF0               	goto	u8151
 12950  26EF  2EF1               	goto	u8150
 12951  26F0                     u8151:	
 12952  26F0  2EF7               	goto	l7586
 12953  26F1                     u8150:	
 12954  26F1                     l7584:	
 12955  26F1  3001               	movlw	1
 12956  26F2  002D               	movlb	13	; select bank13
 12957  26F3  00C9               	movwf	dtoa@p^(0+1664)
 12958  26F4  3000               	movlw	0
 12959  26F5  00CA               	movwf	(dtoa@p^(0+1664)+1)
 12960  26F6  2EFF               	goto	l1357
 12961  26F7                     l7586:	
 12962  26F7  002E               	movlb	14	; select bank14
 12963  26F8  0828               	movf	(_prec+1)^(0+1792),w
 12964  26F9  002D               	movlb	13	; select bank13
 12965  26FA  00CA               	movwf	(dtoa@p+1)^(0+1664)
 12966  26FB  002E               	movlb	14	; select bank14
 12967  26FC  0827               	movf	_prec^(0+1792),w
 12968  26FD  002D               	movlb	13	; select bank13
 12969  26FE  00C9               	movwf	dtoa@p^(0+1664)
 12970  26FF                     l1357:	
 12971                           
 12972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 12973  26FF  002F               	movlb	15	; select bank15
 12974  2700  0840               	movf	(doprnt@width+1)^(0+1920),w
 12975  2701  002D               	movlb	13	; select bank13
 12976  2702  00CC               	movwf	(dtoa@w+1)^(0+1664)
 12977  2703  002F               	movlb	15	; select bank15
 12978  2704  083F               	movf	doprnt@width^(0+1920),w
 12979  2705  002D               	movlb	13	; select bank13
 12980  2706  00CB               	movwf	dtoa@w^(0+1664)
 12981  2707                     l7588:	
 12982                           
 12983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 12984  2707  084D               	movf	dtoa@s^(0+1664),w
 12985  2708  044E               	iorwf	(dtoa@s+1)^(0+1664),w
 12986  2709  1D03               	btfss	3,2
 12987  270A  2F0C               	goto	u8161
 12988  270B  2F0D               	goto	u8160
 12989  270C                     u8161:	
 12990  270C  2F12               	goto	l7592
 12991  270D                     u8160:	
 12992  270D                     l7590:	
 12993  270D  002E               	movlb	14	; select bank14
 12994  270E  1D29               	btfss	_flags^(0+1792),2
 12995  270F  2F11               	goto	u8171
 12996  2710  2F12               	goto	u8170
 12997  2711                     u8171:	
 12998  2711  2F17               	goto	l1358
 12999  2712                     u8170:	
 13000  2712                     l7592:	
 13001                           
 13002                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 13003  2712  30FF               	movlw	255
 13004  2713  002D               	movlb	13	; select bank13
 13005  2714  07CB               	addwf	dtoa@w^(0+1664),f
 13006  2715  30FF               	movlw	255
 13007  2716  3DCC               	addwfc	(dtoa@w+1)^(0+1664),f
 13008  2717                     l1358:	
 13009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 294:     }
 13010                           
 13011                           
 13012                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 13013  2717  301F               	movlw	31
 13014  2718  002D               	movlb	13	; select bank13
 13015  2719  00D7               	movwf	dtoa@i^(0+1664)
 13016  271A  3000               	movlw	0
 13017  271B  00D8               	movwf	(dtoa@i^(0+1664)+1)
 13018  271C                     l7594:	
 13019                           
 13020                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 13021  271C  0031               	movlb	17	; select bank17
 13022  271D  01CF               	clrf	(_dbuf^(0+2176)+31)
 13023                           
 13024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13025  271E  2F88               	goto	l1361
 13026  271F                     l7596:	
 13027                           
 13028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 13029  271F  30FF               	movlw	255
 13030  2720  002D               	movlb	13	; select bank13
 13031  2721  07D7               	addwf	dtoa@i^(0+1664),f
 13032  2722  30FF               	movlw	255
 13033  2723  3DD8               	addwfc	(dtoa@i+1)^(0+1664),f
 13034  2724                     l7598:	
 13035                           
 13036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 13037  2724  300A               	movlw	10
 13038  2725  00A0               	movwf	___aomod@divisor^(0+1664)
 13039  2726  01A1               	clrf	(___aomod@divisor+1)^(0+1664)
 13040  2727  01A2               	clrf	(___aomod@divisor+2)^(0+1664)
 13041  2728  01A3               	clrf	(___aomod@divisor+3)^(0+1664)
 13042  2729  01A4               	clrf	(___aomod@divisor+4)^(0+1664)
 13043  272A  01A5               	clrf	(___aomod@divisor+5)^(0+1664)
 13044  272B  01A6               	clrf	(___aomod@divisor+6)^(0+1664)
 13045  272C  01A7               	clrf	(___aomod@divisor+7)^(0+1664)
 13046  272D  084F               	movf	dtoa@n^(0+1664),w
 13047  272E  00A8               	movwf	___aomod@dividend^(0+1664)
 13048  272F  0850               	movf	(dtoa@n+1)^(0+1664),w
 13049  2730  00A9               	movwf	(___aomod@dividend+1)^(0+1664)
 13050  2731  0851               	movf	(dtoa@n+2)^(0+1664),w
 13051  2732  00AA               	movwf	(___aomod@dividend+2)^(0+1664)
 13052  2733  0852               	movf	(dtoa@n+3)^(0+1664),w
 13053  2734  00AB               	movwf	(___aomod@dividend+3)^(0+1664)
 13054  2735  0853               	movf	(dtoa@n+4)^(0+1664),w
 13055  2736  00AC               	movwf	(___aomod@dividend+4)^(0+1664)
 13056  2737  0854               	movf	(dtoa@n+5)^(0+1664),w
 13057  2738  00AD               	movwf	(___aomod@dividend+5)^(0+1664)
 13058  2739  0855               	movf	(dtoa@n+6)^(0+1664),w
 13059  273A  00AE               	movwf	(___aomod@dividend+6)^(0+1664)
 13060  273B  0856               	movf	(dtoa@n+7)^(0+1664),w
 13061  273C  00AF               	movwf	(___aomod@dividend+7)^(0+1664)
 13062  273D  31A4  249E  31A6   	fcall	___aomod
 13063  2740  002D               	movlb	13	; select bank13
 13064  2741  0821               	movf	(?___aomod+1)^(0+1664),w
 13065  2742  00B4               	movwf	(abs@a+1)^(0+1664)
 13066  2743  0820               	movf	?___aomod^(0+1664),w
 13067  2744  00B3               	movwf	abs@a^(0+1664)
 13068  2745  31AA  22BA  31A6   	fcall	_abs
 13069  2748  002D               	movlb	13	; select bank13
 13070  2749  0833               	movf	?_abs^(0+1664),w
 13071  274A  3E30               	addlw	48
 13072  274B  00C3               	movwf	??_dtoa^(0+1664)
 13073  274C  0857               	movf	dtoa@i^(0+1664),w
 13074  274D  3EB0               	addlw	(low (_dbuf| (0+2048)))& (0+255)
 13075  274E  0086               	movwf	6
 13076  274F  3008               	movlw	8	; select bank17/18
 13077  2750  0087               	movwf	7
 13078  2751  0843               	movf	??_dtoa^(0+1664),w
 13079  2752  0081               	movwf	1
 13080  2753                     l7600:	
 13081                           
 13082                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 13083  2753  30FF               	movlw	255
 13084  2754  07C9               	addwf	dtoa@p^(0+1664),f
 13085  2755  30FF               	movlw	255
 13086  2756  3DCA               	addwfc	(dtoa@p+1)^(0+1664),f
 13087  2757                     l7602:	
 13088                           
 13089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 13090  2757  30FF               	movlw	255
 13091  2758  07CB               	addwf	dtoa@w^(0+1664),f
 13092  2759  30FF               	movlw	255
 13093  275A  3DCC               	addwfc	(dtoa@w+1)^(0+1664),f
 13094  275B                     l7604:	
 13095                           
 13096                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 13097  275B  300A               	movlw	10
 13098  275C  00A0               	movwf	___aodiv@divisor^(0+1664)
 13099  275D  01A1               	clrf	(___aodiv@divisor+1)^(0+1664)
 13100  275E  01A2               	clrf	(___aodiv@divisor+2)^(0+1664)
 13101  275F  01A3               	clrf	(___aodiv@divisor+3)^(0+1664)
 13102  2760  01A4               	clrf	(___aodiv@divisor+4)^(0+1664)
 13103  2761  01A5               	clrf	(___aodiv@divisor+5)^(0+1664)
 13104  2762  01A6               	clrf	(___aodiv@divisor+6)^(0+1664)
 13105  2763  01A7               	clrf	(___aodiv@divisor+7)^(0+1664)
 13106  2764  084F               	movf	dtoa@n^(0+1664),w
 13107  2765  00A8               	movwf	___aodiv@dividend^(0+1664)
 13108  2766  0850               	movf	(dtoa@n+1)^(0+1664),w
 13109  2767  00A9               	movwf	(___aodiv@dividend+1)^(0+1664)
 13110  2768  0851               	movf	(dtoa@n+2)^(0+1664),w
 13111  2769  00AA               	movwf	(___aodiv@dividend+2)^(0+1664)
 13112  276A  0852               	movf	(dtoa@n+3)^(0+1664),w
 13113  276B  00AB               	movwf	(___aodiv@dividend+3)^(0+1664)
 13114  276C  0853               	movf	(dtoa@n+4)^(0+1664),w
 13115  276D  00AC               	movwf	(___aodiv@dividend+4)^(0+1664)
 13116  276E  0854               	movf	(dtoa@n+5)^(0+1664),w
 13117  276F  00AD               	movwf	(___aodiv@dividend+5)^(0+1664)
 13118  2770  0855               	movf	(dtoa@n+6)^(0+1664),w
 13119  2771  00AE               	movwf	(___aodiv@dividend+6)^(0+1664)
 13120  2772  0856               	movf	(dtoa@n+7)^(0+1664),w
 13121  2773  00AF               	movwf	(___aodiv@dividend+7)^(0+1664)
 13122  2774  31A5  258B  31A6   	fcall	___aodiv
 13123  2777  002D               	movlb	13	; select bank13
 13124  2778  0820               	movf	?___aodiv^(0+1664),w
 13125  2779  00CF               	movwf	dtoa@n^(0+1664)
 13126  277A  0821               	movf	(?___aodiv+1)^(0+1664),w
 13127  277B  00D0               	movwf	(dtoa@n+1)^(0+1664)
 13128  277C  0822               	movf	(?___aodiv+2)^(0+1664),w
 13129  277D  00D1               	movwf	(dtoa@n+2)^(0+1664)
 13130  277E  0823               	movf	(?___aodiv+3)^(0+1664),w
 13131  277F  00D2               	movwf	(dtoa@n+3)^(0+1664)
 13132  2780  0824               	movf	(?___aodiv+4)^(0+1664),w
 13133  2781  00D3               	movwf	(dtoa@n+4)^(0+1664)
 13134  2782  0825               	movf	(?___aodiv+5)^(0+1664),w
 13135  2783  00D4               	movwf	(dtoa@n+5)^(0+1664)
 13136  2784  0826               	movf	(?___aodiv+6)^(0+1664),w
 13137  2785  00D5               	movwf	(dtoa@n+6)^(0+1664)
 13138  2786  0827               	movf	(?___aodiv+7)^(0+1664),w
 13139  2787  00D6               	movwf	(dtoa@n+7)^(0+1664)
 13140  2788                     l1361:	
 13141                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 305:     }
 13142                           
 13143                           
 13144                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13145  2788  002D               	movlb	13	; select bank13
 13146  2789  0858               	movf	(dtoa@i+1)^(0+1664),w
 13147  278A  3A80               	xorlw	128
 13148  278B  00C3               	movwf	??_dtoa^(0+1664)
 13149  278C  3080               	movlw	128
 13150  278D  0243               	subwf	??_dtoa^(0+1664),w
 13151  278E  1D03               	skipz
 13152  278F  2F92               	goto	u8185
 13153  2790  3001               	movlw	1
 13154  2791  0257               	subwf	dtoa@i^(0+1664),w
 13155  2792                     u8185:	
 13156  2792  1C03               	skipc
 13157  2793  2F95               	goto	u8181
 13158  2794  2F96               	goto	u8180
 13159  2795                     u8181:	
 13160  2795  2FC3               	goto	l7614
 13161  2796                     u8180:	
 13162  2796                     l7606:	
 13163  2796  002D               	movlb	13	; select bank13
 13164  2797  084F               	movf	dtoa@n^(0+1664),w
 13165  2798  0450               	iorwf	(dtoa@n+1)^(0+1664),w
 13166  2799  0451               	iorwf	(dtoa@n+2)^(0+1664),w
 13167  279A  0452               	iorwf	(dtoa@n+3)^(0+1664),w
 13168  279B  0453               	iorwf	(dtoa@n+4)^(0+1664),w
 13169  279C  0454               	iorwf	(dtoa@n+5)^(0+1664),w
 13170  279D  0455               	iorwf	(dtoa@n+6)^(0+1664),w
 13171  279E  0456               	iorwf	(dtoa@n+7)^(0+1664),w
 13172  279F  1D03               	skipz
 13173  27A0  2FA2               	goto	u8191
 13174  27A1  2FA3               	goto	u8190
 13175  27A2                     u8191:	
 13176  27A2  2F1F               	goto	l7596
 13177  27A3                     u8190:	
 13178  27A3                     l7608:	
 13179  27A3  084A               	movf	(dtoa@p+1)^(0+1664),w
 13180  27A4  3A80               	xorlw	128
 13181  27A5  00C3               	movwf	??_dtoa^(0+1664)
 13182  27A6  3080               	movlw	128
 13183  27A7  0243               	subwf	??_dtoa^(0+1664),w
 13184  27A8  1D03               	skipz
 13185  27A9  2FAC               	goto	u8205
 13186  27AA  3001               	movlw	1
 13187  27AB  0249               	subwf	dtoa@p^(0+1664),w
 13188  27AC                     u8205:	
 13189  27AC  1803               	skipnc
 13190  27AD  2FAF               	goto	u8201
 13191  27AE  2FB0               	goto	u8200
 13192  27AF                     u8201:	
 13193  27AF  2F1F               	goto	l7596
 13194  27B0                     u8200:	
 13195  27B0                     l7610:	
 13196  27B0  002D               	movlb	13	; select bank13
 13197  27B1  084C               	movf	(dtoa@w+1)^(0+1664),w
 13198  27B2  3A80               	xorlw	128
 13199  27B3  00C3               	movwf	??_dtoa^(0+1664)
 13200  27B4  3080               	movlw	128
 13201  27B5  0243               	subwf	??_dtoa^(0+1664),w
 13202  27B6  1D03               	skipz
 13203  27B7  2FBA               	goto	u8215
 13204  27B8  3001               	movlw	1
 13205  27B9  024B               	subwf	dtoa@w^(0+1664),w
 13206  27BA                     u8215:	
 13207  27BA  1C03               	skipc
 13208  27BB  2FBD               	goto	u8211
 13209  27BC  2FBE               	goto	u8210
 13210  27BD                     u8211:	
 13211  27BD  2FC3               	goto	l7614
 13212  27BE                     u8210:	
 13213  27BE                     l7612:	
 13214  27BE  002E               	movlb	14	; select bank14
 13215  27BF  18A9               	btfsc	_flags^(0+1792),1
 13216  27C0  2FC2               	goto	u8221
 13217  27C1  2FC3               	goto	u8220
 13218  27C2                     u8221:	
 13219  27C2  2F1F               	goto	l7596
 13220  27C3                     u8220:	
 13221  27C3                     l7614:	
 13222                           
 13223                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 13224  27C3  002D               	movlb	13	; select bank13
 13225  27C4  084D               	movf	dtoa@s^(0+1664),w
 13226  27C5  044E               	iorwf	(dtoa@s+1)^(0+1664),w
 13227  27C6  1D03               	btfss	3,2
 13228  27C7  2FC9               	goto	u8231
 13229  27C8  2FCA               	goto	u8230
 13230  27C9                     u8231:	
 13231  27C9  2FCF               	goto	l7618
 13232  27CA                     u8230:	
 13233  27CA                     l7616:	
 13234  27CA  002E               	movlb	14	; select bank14
 13235  27CB  1D29               	btfss	_flags^(0+1792),2
 13236  27CC  2FCE               	goto	u8241
 13237  27CD  2FCF               	goto	u8240
 13238  27CE                     u8241:	
 13239  27CE  2FEC               	goto	l7628
 13240  27CF                     u8240:	
 13241  27CF                     l7618:	
 13242                           
 13243                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 13244  27CF  30FF               	movlw	255
 13245  27D0  002D               	movlb	13	; select bank13
 13246  27D1  07D7               	addwf	dtoa@i^(0+1664),f
 13247  27D2  30FF               	movlw	255
 13248  27D3  3DD8               	addwfc	(dtoa@i+1)^(0+1664),f
 13249  27D4                     l7620:	
 13250                           
 13251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 13252  27D4  084D               	movf	dtoa@s^(0+1664),w
 13253  27D5  044E               	iorwf	(dtoa@s+1)^(0+1664),w
 13254  27D6  1D03               	btfss	3,2
 13255  27D7  2FD9               	goto	u8251
 13256  27D8  2FDA               	goto	u8250
 13257  27D9                     u8251:	
 13258  27D9  2FDF               	goto	l7624
 13259  27DA                     u8250:	
 13260  27DA                     l7622:	
 13261  27DA  302B               	movlw	43
 13262  27DB  00C7               	movwf	_dtoa$1635^(0+1664)
 13263  27DC  3000               	movlw	0
 13264  27DD  00C8               	movwf	(_dtoa$1635^(0+1664)+1)
 13265  27DE  2FE3               	goto	l7626
 13266  27DF                     l7624:	
 13267  27DF  302D               	movlw	45
 13268  27E0  00C7               	movwf	_dtoa$1635^(0+1664)
 13269  27E1  3000               	movlw	0
 13270  27E2  00C8               	movwf	(_dtoa$1635^(0+1664)+1)
 13271  27E3                     l7626:	
 13272  27E3  0847               	movf	_dtoa$1635^(0+1664),w
 13273  27E4  00C3               	movwf	??_dtoa^(0+1664)
 13274  27E5  0857               	movf	dtoa@i^(0+1664),w
 13275  27E6  3EB0               	addlw	(low (_dbuf| (0+2048)))& (0+255)
 13276  27E7  0086               	movwf	6
 13277  27E8  3008               	movlw	8	; select bank17/18
 13278  27E9  0087               	movwf	7
 13279  27EA  0843               	movf	??_dtoa^(0+1664),w
 13280  27EB  0081               	movwf	1
 13281  27EC                     l7628:	
 13282                           
 13283                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 13284  27EC  002D               	movlb	13	; select bank13
 13285  27ED  0857               	movf	dtoa@i^(0+1664),w
 13286  27EE  3EB0               	addlw	(low (_dbuf| (0+2048)))& (0+255)
 13287  27EF  00C3               	movwf	??_dtoa^(0+1664)
 13288  27F0  0843               	movf	??_dtoa^(0+1664),w
 13289  27F1  00B0               	movwf	pad@buf^(0+1664)
 13290  27F2  084C               	movf	(dtoa@w+1)^(0+1664),w
 13291  27F3  00B2               	movwf	(pad@p+1)^(0+1664)
 13292  27F4  084B               	movf	dtoa@w^(0+1664),w
 13293  27F5  00B1               	movwf	pad@p^(0+1664)
 13294  27F6  0846               	movf	dtoa@fp^(0+1664),w
 13295  27F7  31A0  2000  31A6   	fcall	_pad
 13296  27FA  002D               	movlb	13	; select bank13
 13297  27FB  0831               	movf	(?_pad+1)^(0+1664),w
 13298  27FC  00BC               	movwf	(?_dtoa+1)^(0+1664)
 13299  27FD  0830               	movf	?_pad^(0+1664),w
 13300  27FE  00BB               	movwf	?_dtoa^(0+1664)
 13301  27FF                     l1375:	
 13302  27FF  0008               	return
 13303  2800                     __end_of_dtoa:	
 13304                           
 13305                           	psect	text5
 13306  2000                     __ptext5:	
 13307 ;; *************** function _pad *****************
 13308 ;; Defined at:
 13309 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13310 ;; Parameters:    Size  Location     Type
 13311 ;;  fp              1    wreg     PTR struct _IO_FILE
 13312 ;;		 -> sprintf@f(6), 
 13313 ;;  buf             1   16[BANK13] PTR unsigned char 
 13314 ;;		 -> dbuf(32), 
 13315 ;;  p               2   17[BANK13] int 
 13316 ;; Auto vars:     Size  Location     Type
 13317 ;;  fp              1   24[BANK13] PTR struct _IO_FILE
 13318 ;;		 -> sprintf@f(6), 
 13319 ;;  w               2   22[BANK13] int 
 13320 ;;  i               2   20[BANK13] int 
 13321 ;; Return value:  Size  Location     Type
 13322 ;;                  2   16[BANK13] int 
 13323 ;; Registers used:
 13324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13325 ;; Tracked objects:
 13326 ;;		On entry : 0/0
 13327 ;;		On exit  : 0/0
 13328 ;;		Unchanged: 0/0
 13329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       3       0       0       0       0       0       0       0       0       0       0       0       0
 13331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       5       0       0       0       0       0       0       0       0       0       0       0       0
 13332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       1       0       0       0       0       0       0       0       0       0       0       0       0
 13333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       9       0       0       0       0       0       0       0       0       0       0       0       0
 13334 ;;Total ram usage:        9 bytes
 13335 ;; Hardware stack levels used:    1
 13336 ;; Hardware stack levels required when called:    7
 13337 ;; This function calls:
 13338 ;;		_fputc
 13339 ;;		_fputs
 13340 ;;		_strlen
 13341 ;; This function is called by:
 13342 ;;		_dtoa
 13343 ;; This function uses a non-reentrant model
 13344 ;;
 13345                           
 13346                           
 13347                           ;psect for function _pad
 13348  2000                     _pad:	
 13349                           
 13350                           ;incstack = 0
 13351                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13352                           ;pad@fp stored from wreg
 13353  2000  002D               	movlb	13	; select bank13
 13354  2001  00B8               	movwf	pad@fp^(0+1664)
 13355  2002                     l7466:	
 13356                           
 13357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 13358  2002  002E               	movlb	14	; select bank14
 13359  2003  1C29               	btfss	_flags^(0+1792),0
 13360  2004  2806               	goto	u7821
 13361  2005  2807               	goto	u7820
 13362  2006                     u7821:	
 13363  2006  2810               	goto	l7470
 13364  2007                     u7820:	
 13365  2007                     l7468:	
 13366                           
 13367                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 13368  2007  002D               	movlb	13	; select bank13
 13369  2008  0838               	movf	pad@fp^(0+1664),w
 13370  2009  00B3               	movwf	??_pad^(0+1664)
 13371  200A  0833               	movf	??_pad^(0+1664),w
 13372  200B  00A8               	movwf	fputs@fp^(0+1664)
 13373  200C  0830               	movf	pad@buf^(0+1664),w
 13374  200D  31AB  23D9  31A0   	fcall	_fputs
 13375  2010                     l7470:	
 13376                           
 13377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 13378  2010  002D               	movlb	13	; select bank13
 13379  2011  1BB2               	btfsc	(pad@p+1)^(0+1664),7
 13380  2012  2814               	goto	u7831
 13381  2013  2815               	goto	u7830
 13382  2014                     u7831:	
 13383  2014  281A               	goto	l7474
 13384  2015                     u7830:	
 13385  2015                     l7472:	
 13386  2015  0832               	movf	(pad@p+1)^(0+1664),w
 13387  2016  00B7               	movwf	(pad@w+1)^(0+1664)
 13388  2017  0831               	movf	pad@p^(0+1664),w
 13389  2018  00B6               	movwf	pad@w^(0+1664)
 13390  2019  281C               	goto	l1344
 13391  201A                     l7474:	
 13392  201A  01B6               	clrf	pad@w^(0+1664)
 13393  201B  01B7               	clrf	(pad@w+1)^(0+1664)
 13394  201C                     l1344:	
 13395                           
 13396                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 13397  201C  01B4               	clrf	pad@i^(0+1664)
 13398  201D  01B5               	clrf	(pad@i+1)^(0+1664)
 13399                           
 13400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 13401  201E  2830               	goto	l7480
 13402  201F                     l7476:	
 13403                           
 13404                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 13405  201F  3020               	movlw	32
 13406  2020  002D               	movlb	13	; select bank13
 13407  2021  00A0               	movwf	fputc@c^(0+1664)
 13408  2022  3000               	movlw	0
 13409  2023  00A1               	movwf	(fputc@c^(0+1664)+1)
 13410  2024  0838               	movf	pad@fp^(0+1664),w
 13411  2025  00B3               	movwf	??_pad^(0+1664)
 13412  2026  0833               	movf	??_pad^(0+1664),w
 13413  2027  00A2               	movwf	fputc@fp^(0+1664)
 13414  2028  31AE  26E5  31A0   	fcall	_fputc
 13415  202B                     l7478:	
 13416                           
 13417                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 13418  202B  3001               	movlw	1
 13419  202C  002D               	movlb	13	; select bank13
 13420  202D  07B4               	addwf	pad@i^(0+1664),f
 13421  202E  3000               	movlw	0
 13422  202F  3DB5               	addwfc	(pad@i+1)^(0+1664),f
 13423  2030                     l7480:	
 13424                           
 13425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 13426  2030  0835               	movf	(pad@i+1)^(0+1664),w
 13427  2031  3A80               	xorlw	128
 13428  2032  00B3               	movwf	??_pad^(0+1664)
 13429  2033  0837               	movf	(pad@w+1)^(0+1664),w
 13430  2034  3A80               	xorlw	128
 13431  2035  0233               	subwf	??_pad^(0+1664),w
 13432  2036  1D03               	skipz
 13433  2037  283A               	goto	u7845
 13434  2038  0836               	movf	pad@w^(0+1664),w
 13435  2039  0234               	subwf	pad@i^(0+1664),w
 13436  203A                     u7845:	
 13437  203A  1C03               	skipc
 13438  203B  283D               	goto	u7841
 13439  203C  283E               	goto	u7840
 13440  203D                     u7841:	
 13441  203D  281F               	goto	l7476
 13442  203E                     u7840:	
 13443  203E                     l1347:	
 13444                           
 13445                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 13446  203E  002E               	movlb	14	; select bank14
 13447  203F  1829               	btfsc	_flags^(0+1792),0
 13448  2040  2842               	goto	u7851
 13449  2041  2843               	goto	u7850
 13450  2042                     u7851:	
 13451  2042  284C               	goto	l7484
 13452  2043                     u7850:	
 13453  2043                     l7482:	
 13454                           
 13455                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 13456  2043  002D               	movlb	13	; select bank13
 13457  2044  0838               	movf	pad@fp^(0+1664),w
 13458  2045  00B3               	movwf	??_pad^(0+1664)
 13459  2046  0833               	movf	??_pad^(0+1664),w
 13460  2047  00A8               	movwf	fputs@fp^(0+1664)
 13461  2048  0830               	movf	pad@buf^(0+1664),w
 13462  2049  31AB  23D9  31A0   	fcall	_fputs
 13463  204C                     l7484:	
 13464                           
 13465                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 13466  204C  002D               	movlb	13	; select bank13
 13467  204D  0830               	movf	pad@buf^(0+1664),w
 13468  204E  31AA  229F  31A0   	fcall	_strlen
 13469  2051  002D               	movlb	13	; select bank13
 13470  2052  0836               	movf	pad@w^(0+1664),w
 13471  2053  0720               	addwf	?_strlen^(0+1664),w
 13472  2054  00B0               	movwf	?_pad^(0+1664)
 13473  2055  0837               	movf	(pad@w+1)^(0+1664),w
 13474  2056  3D21               	addwfc	(?_strlen+1)^(0+1664),w
 13475  2057  00B1               	movwf	(?_pad+1)^(0+1664)
 13476  2058                     l1349:	
 13477  2058  0008               	return
 13478  2059                     __end_of_pad:	
 13479                           
 13480                           	psect	text6
 13481  2A9F                     __ptext6:	
 13482 ;; *************** function _strlen *****************
 13483 ;; Defined at:
 13484 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 13485 ;; Parameters:    Size  Location     Type
 13486 ;;  s               1    wreg     PTR const unsigned char 
 13487 ;;		 -> dbuf(32), 
 13488 ;; Auto vars:     Size  Location     Type
 13489 ;;  s               1    4[BANK13] PTR const unsigned char 
 13490 ;;		 -> dbuf(32), 
 13491 ;;  a               1    3[BANK13] PTR const unsigned char 
 13492 ;;		 -> dbuf(32), 
 13493 ;; Return value:  Size  Location     Type
 13494 ;;                  2    0[BANK13] unsigned int 
 13495 ;; Registers used:
 13496 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13497 ;; Tracked objects:
 13498 ;;		On entry : 0/0
 13499 ;;		On exit  : 0/0
 13500 ;;		Unchanged: 0/0
 13501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 13503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 13504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       1       0       0       0       0       0       0       0       0       0       0       0       0
 13505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       5       0       0       0       0       0       0       0       0       0       0       0       0
 13506 ;;Total ram usage:        5 bytes
 13507 ;; Hardware stack levels used:    1
 13508 ;; Hardware stack levels required when called:    4
 13509 ;; This function calls:
 13510 ;;		Nothing
 13511 ;; This function is called by:
 13512 ;;		_pad
 13513 ;;		_OLED_Write_Text
 13514 ;; This function uses a non-reentrant model
 13515 ;;
 13516                           
 13517                           
 13518                           ;psect for function _strlen
 13519  2A9F                     _strlen:	
 13520                           
 13521                           ;incstack = 0
 13522                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 13523                           ;strlen@s stored from wreg
 13524  2A9F  002D               	movlb	13	; select bank13
 13525  2AA0  00A4               	movwf	strlen@s^(0+1664)
 13526  2AA1                     l7444:	
 13527  2AA1  0824               	movf	strlen@s^(0+1664),w
 13528  2AA2  00A2               	movwf	??_strlen^(0+1664)
 13529  2AA3  0822               	movf	??_strlen^(0+1664),w
 13530  2AA4  00A3               	movwf	strlen@a^(0+1664)
 13531  2AA5  2AAA               	goto	l7448
 13532  2AA6                     l7446:	
 13533  2AA6  3001               	movlw	1
 13534  2AA7  00A2               	movwf	??_strlen^(0+1664)
 13535  2AA8  0822               	movf	??_strlen^(0+1664),w
 13536  2AA9  07A4               	addwf	strlen@s^(0+1664),f
 13537  2AAA                     l7448:	
 13538  2AAA  0824               	movf	strlen@s^(0+1664),w
 13539  2AAB  0086               	movwf	6
 13540  2AAC  3008               	movlw	8	; select bank16/17
 13541  2AAD  0087               	movwf	7
 13542  2AAE  0801               	movf	1,w
 13543  2AAF  1D03               	btfss	3,2
 13544  2AB0  2AB2               	goto	u7781
 13545  2AB1  2AB3               	goto	u7780
 13546  2AB2                     u7781:	
 13547  2AB2  2AA6               	goto	l7446
 13548  2AB3                     u7780:	
 13549  2AB3                     l7450:	
 13550  2AB3  0823               	movf	strlen@a^(0+1664),w
 13551  2AB4  0224               	subwf	strlen@s^(0+1664),w
 13552  2AB5  00A0               	movwf	?_strlen^(0+1664)
 13553  2AB6  01A1               	clrf	(?_strlen+1)^(0+1664)
 13554  2AB7  1BA0               	btfsc	?_strlen^(0+1664),7
 13555  2AB8  03A1               	decf	(?_strlen+1)^(0+1664),f
 13556  2AB9                     l1896:	
 13557  2AB9  0008               	return
 13558  2ABA                     __end_of_strlen:	
 13559                           
 13560                           	psect	text7
 13561  2BD9                     __ptext7:	
 13562 ;; *************** function _fputs *****************
 13563 ;; Defined at:
 13564 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 13565 ;; Parameters:    Size  Location     Type
 13566 ;;  s               1    wreg     PTR const unsigned char 
 13567 ;;		 -> dbuf(32), 
 13568 ;;  fp              1    8[BANK13] PTR struct _IO_FILE
 13569 ;;		 -> sprintf@f(6), 
 13570 ;; Auto vars:     Size  Location     Type
 13571 ;;  s               1   15[BANK13] PTR const unsigned char 
 13572 ;;		 -> dbuf(32), 
 13573 ;;  i               2   13[BANK13] int 
 13574 ;;  c               1   12[BANK13] unsigned char 
 13575 ;; Return value:  Size  Location     Type
 13576 ;;                  2    8[BANK13] int 
 13577 ;; Registers used:
 13578 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13579 ;; Tracked objects:
 13580 ;;		On entry : 0/0
 13581 ;;		On exit  : 0/0
 13582 ;;		Unchanged: 0/0
 13583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       1       0       0       0       0       0       0       0       0       0       0       0       0
 13585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       4       0       0       0       0       0       0       0       0       0       0       0       0
 13586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       3       0       0       0       0       0       0       0       0       0       0       0       0
 13587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       8       0       0       0       0       0       0       0       0       0       0       0       0
 13588 ;;Total ram usage:        8 bytes
 13589 ;; Hardware stack levels used:    1
 13590 ;; Hardware stack levels required when called:    6
 13591 ;; This function calls:
 13592 ;;		_fputc
 13593 ;; This function is called by:
 13594 ;;		_pad
 13595 ;; This function uses a non-reentrant model
 13596 ;;
 13597                           
 13598                           
 13599                           ;psect for function _fputs
 13600  2BD9                     _fputs:	
 13601                           
 13602                           ;incstack = 0
 13603                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13604                           ;fputs@s stored from wreg
 13605  2BD9  002D               	movlb	13	; select bank13
 13606  2BDA  00AF               	movwf	fputs@s^(0+1664)
 13607  2BDB                     l7454:	
 13608  2BDB  01AD               	clrf	fputs@i^(0+1664)
 13609  2BDC  01AE               	clrf	(fputs@i+1)^(0+1664)
 13610  2BDD  2BF1               	goto	l7460
 13611  2BDE                     l7456:	
 13612  2BDE  082C               	movf	fputs@c^(0+1664),w
 13613  2BDF  00A9               	movwf	??_fputs^(0+1664)
 13614  2BE0  01AA               	clrf	(??_fputs^(0+1664)+1)
 13615  2BE1  0829               	movf	??_fputs^(0+1664),w
 13616  2BE2  00A0               	movwf	fputc@c^(0+1664)
 13617  2BE3  082A               	movf	(??_fputs+1)^(0+1664),w
 13618  2BE4  00A1               	movwf	(fputc@c+1)^(0+1664)
 13619  2BE5  0828               	movf	fputs@fp^(0+1664),w
 13620  2BE6  00AB               	movwf	(??_fputs+2)^(0+1664)
 13621  2BE7  082B               	movf	(??_fputs+2)^(0+1664),w
 13622  2BE8  00A2               	movwf	fputc@fp^(0+1664)
 13623  2BE9  31AE  26E5  31AB   	fcall	_fputc
 13624  2BEC                     l7458:	
 13625  2BEC  3001               	movlw	1
 13626  2BED  002D               	movlb	13	; select bank13
 13627  2BEE  07AD               	addwf	fputs@i^(0+1664),f
 13628  2BEF  3000               	movlw	0
 13629  2BF0  3DAE               	addwfc	(fputs@i+1)^(0+1664),f
 13630  2BF1                     l7460:	
 13631  2BF1  082D               	movf	fputs@i^(0+1664),w
 13632  2BF2  072F               	addwf	fputs@s^(0+1664),w
 13633  2BF3  00A9               	movwf	??_fputs^(0+1664)
 13634  2BF4  0829               	movf	??_fputs^(0+1664),w
 13635  2BF5  0086               	movwf	6
 13636  2BF6  3008               	movlw	8	; select bank16/17
 13637  2BF7  0087               	movwf	7
 13638  2BF8  0801               	movf	1,w
 13639  2BF9  00AA               	movwf	(??_fputs+1)^(0+1664)
 13640  2BFA  082A               	movf	(??_fputs+1)^(0+1664),w
 13641  2BFB  00AC               	movwf	fputs@c^(0+1664)
 13642  2BFC  082C               	movf	fputs@c^(0+1664),w
 13643  2BFD  1D03               	btfss	3,2
 13644  2BFE  2C00               	goto	u7791
 13645  2BFF  2C01               	goto	u7790
 13646  2C00                     u7791:	
 13647  2C00  2BDE               	goto	l7456
 13648  2C01                     u7790:	
 13649  2C01                     l1880:	
 13650  2C01  0008               	return
 13651  2C02                     __end_of_fputs:	
 13652                           
 13653                           	psect	text8
 13654  2EE5                     __ptext8:	
 13655 ;; *************** function _fputc *****************
 13656 ;; Defined at:
 13657 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 13658 ;; Parameters:    Size  Location     Type
 13659 ;;  c               2    0[BANK13] int 
 13660 ;;  fp              1    2[BANK13] PTR struct _IO_FILE
 13661 ;;		 -> sprintf@f(6), 
 13662 ;; Auto vars:     Size  Location     Type
 13663 ;;		None
 13664 ;; Return value:  Size  Location     Type
 13665 ;;                  2    0[BANK13] int 
 13666 ;; Registers used:
 13667 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13668 ;; Tracked objects:
 13669 ;;		On entry : 0/0
 13670 ;;		On exit  : 0/0
 13671 ;;		Unchanged: 0/0
 13672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       3       0       0       0       0       0       0       0       0       0       0       0       0
 13674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       5       0       0       0       0       0       0       0       0       0       0       0       0
 13676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       8       0       0       0       0       0       0       0       0       0       0       0       0
 13677 ;;Total ram usage:        8 bytes
 13678 ;; Hardware stack levels used:    1
 13679 ;; Hardware stack levels required when called:    5
 13680 ;; This function calls:
 13681 ;;		_putch
 13682 ;; This function is called by:
 13683 ;;		_pad
 13684 ;;		_vfpfcnvrt
 13685 ;;		_fputs
 13686 ;; This function uses a non-reentrant model
 13687 ;;
 13688                           
 13689                           
 13690                           ;psect for function _fputc
 13691  2EE5                     _fputc:	
 13692  2EE5                     l7426:	
 13693                           ;incstack = 0
 13694                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13695                           
 13696  2EE5  002D               	movlb	13	; select bank13
 13697  2EE6  0822               	movf	fputc@fp^(0+1664),w
 13698  2EE7  1903               	btfsc	3,2
 13699  2EE8  2EEA               	goto	u7731
 13700  2EE9  2EEB               	goto	u7730
 13701  2EEA                     u7731:	
 13702  2EEA  2EF0               	goto	l7430
 13703  2EEB                     u7730:	
 13704  2EEB                     l7428:	
 13705  2EEB  0822               	movf	fputc@fp^(0+1664),w
 13706  2EEC  1D03               	btfss	3,2
 13707  2EED  2EEF               	goto	u7741
 13708  2EEE  2EF0               	goto	u7740
 13709  2EEF                     u7741:	
 13710  2EEF  2EF5               	goto	l7432
 13711  2EF0                     u7740:	
 13712  2EF0                     l7430:	
 13713  2EF0  0820               	movf	fputc@c^(0+1664),w
 13714  2EF1  3190  2000  31AE   	fcall	_putch
 13715  2EF4  2F41               	goto	l1872
 13716  2EF5                     l7432:	
 13717  2EF5  0822               	movf	fputc@fp^(0+1664),w
 13718  2EF6  3E04               	addlw	4
 13719  2EF7  0086               	movwf	6
 13720  2EF8  3007               	movlw	7	; select bank14/15
 13721  2EF9  0087               	movwf	7
 13722  2EFA  0016               	moviw fsr1++
 13723  2EFB  0401               	iorwf	1,w
 13724  2EFC  1903               	btfsc	3,2
 13725  2EFD  2EFF               	goto	u7751
 13726  2EFE  2F00               	goto	u7750
 13727  2EFF                     u7751:	
 13728  2EFF  2F20               	goto	l7436
 13729  2F00                     u7750:	
 13730  2F00                     l7434:	
 13731  2F00  0822               	movf	fputc@fp^(0+1664),w
 13732  2F01  3E04               	addlw	4
 13733  2F02  0086               	movwf	6
 13734  2F03  3007               	movlw	7	; select bank14/15
 13735  2F04  0087               	movwf	7
 13736  2F05  3F40               	moviw [0]fsr1
 13737  2F06  00A3               	movwf	??_fputc^(0+1664)
 13738  2F07  3F41               	moviw [1]fsr1
 13739  2F08  00A4               	movwf	(??_fputc^(0+1664)+1)
 13740  2F09  0822               	movf	fputc@fp^(0+1664),w
 13741  2F0A  3E02               	addlw	2
 13742  2F0B  0086               	movwf	6
 13743  2F0C  3007               	movlw	7	; select bank14/15
 13744  2F0D  0087               	movwf	7
 13745  2F0E  3F40               	moviw [0]fsr1
 13746  2F0F  00A5               	movwf	(??_fputc+2)^(0+1664)
 13747  2F10  3F41               	moviw [1]fsr1
 13748  2F11  00A6               	movwf	((??_fputc+2)^(0+1664)+1)
 13749  2F12  0826               	movf	(??_fputc+3)^(0+1664),w
 13750  2F13  3A80               	xorlw	128
 13751  2F14  00A7               	movwf	(??_fputc+4)^(0+1664)
 13752  2F15  0824               	movf	(??_fputc+1)^(0+1664),w
 13753  2F16  3A80               	xorlw	128
 13754  2F17  0227               	subwf	(??_fputc+4)^(0+1664),w
 13755  2F18  1D03               	skipz
 13756  2F19  2F1C               	goto	u7765
 13757  2F1A  0823               	movf	??_fputc^(0+1664),w
 13758  2F1B  0225               	subwf	(??_fputc+2)^(0+1664),w
 13759  2F1C                     u7765:	
 13760  2F1C  1803               	skipnc
 13761  2F1D  2F1F               	goto	u7761
 13762  2F1E  2F20               	goto	u7760
 13763  2F1F                     u7761:	
 13764  2F1F  2F41               	goto	l1872
 13765  2F20                     u7760:	
 13766  2F20                     l7436:	
 13767  2F20  002D               	movlb	13	; select bank13
 13768  2F21  0822               	movf	fputc@fp^(0+1664),w
 13769  2F22  3E02               	addlw	2
 13770  2F23  0086               	movwf	6
 13771  2F24  3007               	movlw	7	; select bank14/15
 13772  2F25  0087               	movwf	7
 13773  2F26  0822               	movf	fputc@fp^(0+1664),w
 13774  2F27  0084               	movwf	4
 13775  2F28  3007               	movlw	7	; select bank14/15
 13776  2F29  0085               	movwf	5
 13777  2F2A  3F40               	moviw [0]fsr1
 13778  2F2B  0700               	addwf	0,w
 13779  2F2C  00A3               	movwf	??_fputc^(0+1664)
 13780  2F2D  3101               	addfsr 0,1
 13781  2F2E  3F41               	moviw [1]fsr1
 13782  2F2F  3D00               	addwfc	0,w
 13783  2F30  00A4               	movwf	(??_fputc^(0+1664)+1)
 13784  2F31  0823               	movf	??_fputc^(0+1664),w
 13785  2F32  0086               	movwf	6
 13786  2F33  0824               	movf	(??_fputc+1)^(0+1664),w
 13787  2F34  0087               	movwf	7
 13788  2F35  0820               	movf	fputc@c^(0+1664),w
 13789  2F36  0081               	movwf	1
 13790  2F37                     l7438:	
 13791  2F37  0822               	movf	fputc@fp^(0+1664),w
 13792  2F38  3E02               	addlw	2
 13793  2F39  0086               	movwf	6
 13794  2F3A  3007               	movlw	7	; select bank14/15
 13795  2F3B  0087               	movwf	7
 13796  2F3C  3001               	movlw	1
 13797  2F3D  0781               	addwf	1,f
 13798  2F3E  3141               	addfsr 1,1
 13799  2F3F  1803               	skipnc
 13800  2F40  0A81               	incf	1,f
 13801  2F41                     l1872:	
 13802  2F41  0008               	return
 13803  2F42                     __end_of_fputc:	
 13804                           
 13805                           	psect	text9
 13806  1000                     __ptext9:	
 13807 ;; *************** function _putch *****************
 13808 ;; Defined at:
 13809 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
 13810 ;; Parameters:    Size  Location     Type
 13811 ;;  c               1    wreg     unsigned char 
 13812 ;; Auto vars:     Size  Location     Type
 13813 ;;  c               1    0[COMMON] unsigned char 
 13814 ;; Return value:  Size  Location     Type
 13815 ;;                  1    wreg      void 
 13816 ;; Registers used:
 13817 ;;		wreg
 13818 ;; Tracked objects:
 13819 ;;		On entry : 0/0
 13820 ;;		On exit  : 0/0
 13821 ;;		Unchanged: 0/0
 13822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13827 ;;Total ram usage:        0 bytes
 13828 ;; Hardware stack levels used:    1
 13829 ;; Hardware stack levels required when called:    4
 13830 ;; This function calls:
 13831 ;;		Nothing
 13832 ;; This function is called by:
 13833 ;;		_fputc
 13834 ;; This function uses a non-reentrant model
 13835 ;;
 13836                           
 13837                           
 13838                           ;psect for function _putch
 13839  1000                     _putch:	
 13840  1000                     l1890:	
 13841                           ;incstack = 0
 13842                           ; Regs used in _putch: [wreg]
 13843                           
 13844  1000  0008               	return
 13845  1001                     __end_of_putch:	
 13846                           
 13847                           	psect	text10
 13848  2ABA                     __ptext10:	
 13849 ;; *************** function _abs *****************
 13850 ;; Defined at:
 13851 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 13852 ;; Parameters:    Size  Location     Type
 13853 ;;  a               2   19[BANK13] int 
 13854 ;; Auto vars:     Size  Location     Type
 13855 ;;		None
 13856 ;; Return value:  Size  Location     Type
 13857 ;;                  2   19[BANK13] int 
 13858 ;; Registers used:
 13859 ;;		wreg, status,2, status,0
 13860 ;; Tracked objects:
 13861 ;;		On entry : 0/0
 13862 ;;		On exit  : 0/0
 13863 ;;		Unchanged: 0/0
 13864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 13866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 13868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       4       0       0       0       0       0       0       0       0       0       0       0       0
 13869 ;;Total ram usage:        4 bytes
 13870 ;; Hardware stack levels used:    1
 13871 ;; Hardware stack levels required when called:    4
 13872 ;; This function calls:
 13873 ;;		Nothing
 13874 ;; This function is called by:
 13875 ;;		_dtoa
 13876 ;; This function uses a non-reentrant model
 13877 ;;
 13878                           
 13879                           
 13880                           ;psect for function _abs
 13881  2ABA                     _abs:	
 13882  2ABA                     l7488:	
 13883                           ;incstack = 0
 13884                           ; Regs used in _abs: [wreg+status,2+status,0]
 13885                           
 13886  2ABA  002D               	movlb	13	; select bank13
 13887  2ABB  0834               	movf	(abs@a+1)^(0+1664),w
 13888  2ABC  3A80               	xorlw	128
 13889  2ABD  00B5               	movwf	??_abs^(0+1664)
 13890  2ABE  3080               	movlw	128
 13891  2ABF  0235               	subwf	??_abs^(0+1664),w
 13892  2AC0  1D03               	skipz
 13893  2AC1  2AC4               	goto	u7865
 13894  2AC2  3001               	movlw	1
 13895  2AC3  0233               	subwf	abs@a^(0+1664),w
 13896  2AC4                     u7865:	
 13897  2AC4  1803               	skipnc
 13898  2AC5  2AC7               	goto	u7861
 13899  2AC6  2AC8               	goto	u7860
 13900  2AC7                     u7861:	
 13901  2AC7  2AD5               	goto	l1847
 13902  2AC8                     u7860:	
 13903  2AC8                     l7490:	
 13904  2AC8  002D               	movlb	13	; select bank13
 13905  2AC9  0933               	comf	abs@a^(0+1664),w
 13906  2ACA  00B5               	movwf	??_abs^(0+1664)
 13907  2ACB  0934               	comf	(abs@a+1)^(0+1664),w
 13908  2ACC  00B6               	movwf	(??_abs^(0+1664)+1)
 13909  2ACD  0AB5               	incf	??_abs^(0+1664),f
 13910  2ACE  1903               	skipnz
 13911  2ACF  0AB6               	incf	(??_abs^(0+1664)+1),f
 13912  2AD0  0835               	movf	??_abs^(0+1664),w
 13913  2AD1  00B3               	movwf	?_abs^(0+1664)
 13914  2AD2  0836               	movf	(??_abs+1)^(0+1664),w
 13915  2AD3  00B4               	movwf	(?_abs+1)^(0+1664)
 13916  2AD4  2AD5               	goto	l1850
 13917  2AD5                     l1847:	
 13918  2AD5                     l1850:	
 13919  2AD5  0008               	return
 13920  2AD6                     __end_of_abs:	
 13921                           
 13922                           	psect	text11
 13923  249E                     __ptext11:	
 13924 ;; *************** function ___aomod *****************
 13925 ;; Defined at:
 13926 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 13927 ;; Parameters:    Size  Location     Type
 13928 ;;  divisor         8    0[BANK13] long long 
 13929 ;;  dividend        8    8[BANK13] long long 
 13930 ;; Auto vars:     Size  Location     Type
 13931 ;;  sign            1   18[BANK13] unsigned char 
 13932 ;;  counter         1   17[BANK13] unsigned char 
 13933 ;; Return value:  Size  Location     Type
 13934 ;;                  8    0[BANK13] long long 
 13935 ;; Registers used:
 13936 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13937 ;; Tracked objects:
 13938 ;;		On entry : 0/0
 13939 ;;		On exit  : 0/0
 13940 ;;		Unchanged: 0/0
 13941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0      16       0       0       0       0       0       0       0       0       0       0       0       0
 13943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 13944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       1       0       0       0       0       0       0       0       0       0       0       0       0
 13945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0      19       0       0       0       0       0       0       0       0       0       0       0       0
 13946 ;;Total ram usage:       19 bytes
 13947 ;; Hardware stack levels used:    1
 13948 ;; Hardware stack levels required when called:    4
 13949 ;; This function calls:
 13950 ;;		Nothing
 13951 ;; This function is called by:
 13952 ;;		_dtoa
 13953 ;; This function uses a non-reentrant model
 13954 ;;
 13955                           
 13956                           
 13957                           ;psect for function ___aomod
 13958  249E                     ___aomod:	
 13959  249E                     l7530:	
 13960                           ;incstack = 0
 13961                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 13962                           
 13963  249E  002D               	movlb	13	; select bank13
 13964  249F  01B2               	clrf	___aomod@sign^(0+1664)
 13965  24A0                     l7532:	
 13966  24A0  30A8               	movlw	low ___aomod@dividend
 13967  24A1  0086               	movwf	6
 13968  24A2  3006               	movlw	high ___aomod@dividend
 13969  24A3  0087               	movwf	7
 13970  24A4  3F47               	moviw [7]fsr1
 13971  24A5  00B0               	movwf	??___aomod^(0+1664)
 13972  24A6  1FB0               	btfss	??___aomod^(0+1664),7
 13973  24A7  2CA9               	goto	u7981
 13974  24A8  2CAA               	goto	u7980
 13975  24A9                     u7981:	
 13976  24A9  2CCC               	goto	l7536
 13977  24AA                     u7980:	
 13978  24AA                     l7534:	
 13979  24AA  002D               	movlb	13	; select bank13
 13980  24AB  09A8               	comf	___aomod@dividend^(0+1664),f
 13981  24AC  09A9               	comf	(___aomod@dividend+1)^(0+1664),f
 13982  24AD  09AA               	comf	(___aomod@dividend+2)^(0+1664),f
 13983  24AE  09AB               	comf	(___aomod@dividend+3)^(0+1664),f
 13984  24AF  09AC               	comf	(___aomod@dividend+4)^(0+1664),f
 13985  24B0  09AD               	comf	(___aomod@dividend+5)^(0+1664),f
 13986  24B1  09AE               	comf	(___aomod@dividend+6)^(0+1664),f
 13987  24B2  09AF               	comf	(___aomod@dividend+7)^(0+1664),f
 13988  24B3  0AA8               	incf	___aomod@dividend^(0+1664),f
 13989  24B4  1D03               	skipz
 13990  24B5  2CC9               	goto	u799lld
 13991  24B6  0AA9               	incf	(___aomod@dividend+1)^(0+1664),f
 13992  24B7  1D03               	skipz
 13993  24B8  2CC9               	goto	u799lld
 13994  24B9  0AAA               	incf	(___aomod@dividend+2)^(0+1664),f
 13995  24BA  1D03               	skipz
 13996  24BB  2CC9               	goto	u799lld
 13997  24BC  0AAB               	incf	(___aomod@dividend+3)^(0+1664),f
 13998  24BD  1D03               	skipz
 13999  24BE  2CC9               	goto	u799lld
 14000  24BF  0AAC               	incf	(___aomod@dividend+4)^(0+1664),f
 14001  24C0  1D03               	skipz
 14002  24C1  2CC9               	goto	u799lld
 14003  24C2  0AAD               	incf	(___aomod@dividend+5)^(0+1664),f
 14004  24C3  1D03               	skipz
 14005  24C4  2CC9               	goto	u799lld
 14006  24C5  0AAE               	incf	(___aomod@dividend+6)^(0+1664),f
 14007  24C6  1D03               	skipz
 14008  24C7  2CC9               	goto	u799lld
 14009  24C8  0AAF               	incf	(___aomod@dividend+7)^(0+1664),f
 14010  24C9                     u799lld:	
 14011  24C9  002D               	movlb	13	; select bank13
 14012  24CA  01B2               	clrf	___aomod@sign^(0+1664)
 14013  24CB  0AB2               	incf	___aomod@sign^(0+1664),f
 14014  24CC                     l7536:	
 14015  24CC  30A0               	movlw	low ___aomod@divisor
 14016  24CD  0086               	movwf	6
 14017  24CE  3006               	movlw	high ___aomod@divisor
 14018  24CF  0087               	movwf	7
 14019  24D0  3F47               	moviw [7]fsr1
 14020  24D1  002D               	movlb	13	; select bank13
 14021  24D2  00B0               	movwf	??___aomod^(0+1664)
 14022  24D3  1FB0               	btfss	??___aomod^(0+1664),7
 14023  24D4  2CD6               	goto	u8001
 14024  24D5  2CD7               	goto	u8000
 14025  24D6                     u8001:	
 14026  24D6  2CF6               	goto	l7540
 14027  24D7                     u8000:	
 14028  24D7                     l7538:	
 14029  24D7  002D               	movlb	13	; select bank13
 14030  24D8  09A0               	comf	___aomod@divisor^(0+1664),f
 14031  24D9  09A1               	comf	(___aomod@divisor+1)^(0+1664),f
 14032  24DA  09A2               	comf	(___aomod@divisor+2)^(0+1664),f
 14033  24DB  09A3               	comf	(___aomod@divisor+3)^(0+1664),f
 14034  24DC  09A4               	comf	(___aomod@divisor+4)^(0+1664),f
 14035  24DD  09A5               	comf	(___aomod@divisor+5)^(0+1664),f
 14036  24DE  09A6               	comf	(___aomod@divisor+6)^(0+1664),f
 14037  24DF  09A7               	comf	(___aomod@divisor+7)^(0+1664),f
 14038  24E0  0AA0               	incf	___aomod@divisor^(0+1664),f
 14039  24E1  1D03               	skipz
 14040  24E2  2CF6               	goto	u801lld
 14041  24E3  0AA1               	incf	(___aomod@divisor+1)^(0+1664),f
 14042  24E4  1D03               	skipz
 14043  24E5  2CF6               	goto	u801lld
 14044  24E6  0AA2               	incf	(___aomod@divisor+2)^(0+1664),f
 14045  24E7  1D03               	skipz
 14046  24E8  2CF6               	goto	u801lld
 14047  24E9  0AA3               	incf	(___aomod@divisor+3)^(0+1664),f
 14048  24EA  1D03               	skipz
 14049  24EB  2CF6               	goto	u801lld
 14050  24EC  0AA4               	incf	(___aomod@divisor+4)^(0+1664),f
 14051  24ED  1D03               	skipz
 14052  24EE  2CF6               	goto	u801lld
 14053  24EF  0AA5               	incf	(___aomod@divisor+5)^(0+1664),f
 14054  24F0  1D03               	skipz
 14055  24F1  2CF6               	goto	u801lld
 14056  24F2  0AA6               	incf	(___aomod@divisor+6)^(0+1664),f
 14057  24F3  1D03               	skipz
 14058  24F4  2CF6               	goto	u801lld
 14059  24F5  0AA7               	incf	(___aomod@divisor+7)^(0+1664),f
 14060  24F6                     u801lld:	
 14061  24F6                     l7540:	
 14062  24F6  002D               	movlb	13	; select bank13
 14063  24F7  0820               	movf	___aomod@divisor^(0+1664),w
 14064  24F8  0421               	iorwf	(___aomod@divisor+1)^(0+1664),w
 14065  24F9  0422               	iorwf	(___aomod@divisor+2)^(0+1664),w
 14066  24FA  0423               	iorwf	(___aomod@divisor+3)^(0+1664),w
 14067  24FB  0424               	iorwf	(___aomod@divisor+4)^(0+1664),w
 14068  24FC  0425               	iorwf	(___aomod@divisor+5)^(0+1664),w
 14069  24FD  0426               	iorwf	(___aomod@divisor+6)^(0+1664),w
 14070  24FE  0427               	iorwf	(___aomod@divisor+7)^(0+1664),w
 14071  24FF  1903               	skipnz
 14072  2500  2D02               	goto	u8021
 14073  2501  2D03               	goto	u8020
 14074  2502                     u8021:	
 14075  2502  2D56               	goto	l7556
 14076  2503                     u8020:	
 14077  2503                     l7542:	
 14078  2503  01B1               	clrf	___aomod@counter^(0+1664)
 14079  2504  0AB1               	incf	___aomod@counter^(0+1664),f
 14080  2505  2D12               	goto	l7548
 14081  2506                     l7544:	
 14082  2506  35A0               	lslf	___aomod@divisor^(0+1664),f
 14083  2507  0DA1               	rlf	(___aomod@divisor+1)^(0+1664),f
 14084  2508  0DA2               	rlf	(___aomod@divisor+2)^(0+1664),f
 14085  2509  0DA3               	rlf	(___aomod@divisor+3)^(0+1664),f
 14086  250A  0DA4               	rlf	(___aomod@divisor+4)^(0+1664),f
 14087  250B  0DA5               	rlf	(___aomod@divisor+5)^(0+1664),f
 14088  250C  0DA6               	rlf	(___aomod@divisor+6)^(0+1664),f
 14089  250D  0DA7               	rlf	(___aomod@divisor+7)^(0+1664),f
 14090  250E                     l7546:	
 14091  250E  3001               	movlw	1
 14092  250F  00B0               	movwf	??___aomod^(0+1664)
 14093  2510  0830               	movf	??___aomod^(0+1664),w
 14094  2511  07B1               	addwf	___aomod@counter^(0+1664),f
 14095  2512                     l7548:	
 14096  2512  1FA7               	btfss	(___aomod@divisor+7)^(0+1664),7
 14097  2513  2D15               	goto	u8031
 14098  2514  2D16               	goto	u8030
 14099  2515                     u8031:	
 14100  2515  2D06               	goto	l7544
 14101  2516                     u8030:	
 14102  2516                     l7550:	
 14103  2516  0827               	movf	(___aomod@divisor+7)^(0+1664),w
 14104  2517  022F               	subwf	(___aomod@dividend+7)^(0+1664),w
 14105  2518  1D03               	skipz
 14106  2519  2D34               	goto	u8045
 14107  251A  0826               	movf	(___aomod@divisor+6)^(0+1664),w
 14108  251B  022E               	subwf	(___aomod@dividend+6)^(0+1664),w
 14109  251C  1D03               	skipz
 14110  251D  2D34               	goto	u8045
 14111  251E  0825               	movf	(___aomod@divisor+5)^(0+1664),w
 14112  251F  022D               	subwf	(___aomod@dividend+5)^(0+1664),w
 14113  2520  1D03               	skipz
 14114  2521  2D34               	goto	u8045
 14115  2522  0824               	movf	(___aomod@divisor+4)^(0+1664),w
 14116  2523  022C               	subwf	(___aomod@dividend+4)^(0+1664),w
 14117  2524  1D03               	skipz
 14118  2525  2D34               	goto	u8045
 14119  2526  0823               	movf	(___aomod@divisor+3)^(0+1664),w
 14120  2527  022B               	subwf	(___aomod@dividend+3)^(0+1664),w
 14121  2528  1D03               	skipz
 14122  2529  2D34               	goto	u8045
 14123  252A  0822               	movf	(___aomod@divisor+2)^(0+1664),w
 14124  252B  022A               	subwf	(___aomod@dividend+2)^(0+1664),w
 14125  252C  1D03               	skipz
 14126  252D  2D34               	goto	u8045
 14127  252E  0821               	movf	(___aomod@divisor+1)^(0+1664),w
 14128  252F  0229               	subwf	(___aomod@dividend+1)^(0+1664),w
 14129  2530  1D03               	skipz
 14130  2531  2D34               	goto	u8045
 14131  2532  0820               	movf	___aomod@divisor^(0+1664),w
 14132  2533  0228               	subwf	___aomod@dividend^(0+1664),w
 14133  2534                     u8045:	
 14134  2534  1C03               	skipc
 14135  2535  2D37               	goto	u8041
 14136  2536  2D38               	goto	u8040
 14137  2537                     u8041:	
 14138  2537  2D48               	goto	l7554
 14139  2538                     u8040:	
 14140  2538                     l7552:	
 14141  2538  0820               	movf	___aomod@divisor^(0+1664),w
 14142  2539  02A8               	subwf	___aomod@dividend^(0+1664),f
 14143  253A  0821               	movf	(___aomod@divisor+1)^(0+1664),w
 14144  253B  3BA9               	subwfb	(___aomod@dividend+1)^(0+1664),f
 14145  253C  0822               	movf	(___aomod@divisor+2)^(0+1664),w
 14146  253D  3BAA               	subwfb	(___aomod@dividend+2)^(0+1664),f
 14147  253E  0823               	movf	(___aomod@divisor+3)^(0+1664),w
 14148  253F  3BAB               	subwfb	(___aomod@dividend+3)^(0+1664),f
 14149  2540  0824               	movf	(___aomod@divisor+4)^(0+1664),w
 14150  2541  3BAC               	subwfb	(___aomod@dividend+4)^(0+1664),f
 14151  2542  0825               	movf	(___aomod@divisor+5)^(0+1664),w
 14152  2543  3BAD               	subwfb	(___aomod@dividend+5)^(0+1664),f
 14153  2544  0826               	movf	(___aomod@divisor+6)^(0+1664),w
 14154  2545  3BAE               	subwfb	(___aomod@dividend+6)^(0+1664),f
 14155  2546  0827               	movf	(___aomod@divisor+7)^(0+1664),w
 14156  2547  3BAF               	subwfb	(___aomod@dividend+7)^(0+1664),f
 14157  2548                     l7554:	
 14158  2548  36A7               	lsrf	(___aomod@divisor+7)^(0+1664),f
 14159  2549  0CA6               	rrf	(___aomod@divisor+6)^(0+1664),f
 14160  254A  0CA5               	rrf	(___aomod@divisor+5)^(0+1664),f
 14161  254B  0CA4               	rrf	(___aomod@divisor+4)^(0+1664),f
 14162  254C  0CA3               	rrf	(___aomod@divisor+3)^(0+1664),f
 14163  254D  0CA2               	rrf	(___aomod@divisor+2)^(0+1664),f
 14164  254E  0CA1               	rrf	(___aomod@divisor+1)^(0+1664),f
 14165  254F  0CA0               	rrf	___aomod@divisor^(0+1664),f
 14166  2550  3001               	movlw	1
 14167  2551  02B1               	subwf	___aomod@counter^(0+1664),f
 14168  2552  1D03               	btfss	3,2
 14169  2553  2D55               	goto	u8051
 14170  2554  2D56               	goto	u8050
 14171  2555                     u8051:	
 14172  2555  2D16               	goto	l7550
 14173  2556                     u8050:	
 14174  2556                     l7556:	
 14175  2556  0832               	movf	___aomod@sign^(0+1664),w
 14176  2557  1903               	btfsc	3,2
 14177  2558  2D5A               	goto	u8061
 14178  2559  2D5B               	goto	u8060
 14179  255A                     u8061:	
 14180  255A  2D79               	goto	l1506
 14181  255B                     u8060:	
 14182  255B                     l7558:	
 14183  255B  09A8               	comf	___aomod@dividend^(0+1664),f
 14184  255C  09A9               	comf	(___aomod@dividend+1)^(0+1664),f
 14185  255D  09AA               	comf	(___aomod@dividend+2)^(0+1664),f
 14186  255E  09AB               	comf	(___aomod@dividend+3)^(0+1664),f
 14187  255F  09AC               	comf	(___aomod@dividend+4)^(0+1664),f
 14188  2560  09AD               	comf	(___aomod@dividend+5)^(0+1664),f
 14189  2561  09AE               	comf	(___aomod@dividend+6)^(0+1664),f
 14190  2562  09AF               	comf	(___aomod@dividend+7)^(0+1664),f
 14191  2563  0AA8               	incf	___aomod@dividend^(0+1664),f
 14192  2564  1D03               	skipz
 14193  2565  2D79               	goto	u807lld
 14194  2566  0AA9               	incf	(___aomod@dividend+1)^(0+1664),f
 14195  2567  1D03               	skipz
 14196  2568  2D79               	goto	u807lld
 14197  2569  0AAA               	incf	(___aomod@dividend+2)^(0+1664),f
 14198  256A  1D03               	skipz
 14199  256B  2D79               	goto	u807lld
 14200  256C  0AAB               	incf	(___aomod@dividend+3)^(0+1664),f
 14201  256D  1D03               	skipz
 14202  256E  2D79               	goto	u807lld
 14203  256F  0AAC               	incf	(___aomod@dividend+4)^(0+1664),f
 14204  2570  1D03               	skipz
 14205  2571  2D79               	goto	u807lld
 14206  2572  0AAD               	incf	(___aomod@dividend+5)^(0+1664),f
 14207  2573  1D03               	skipz
 14208  2574  2D79               	goto	u807lld
 14209  2575  0AAE               	incf	(___aomod@dividend+6)^(0+1664),f
 14210  2576  1D03               	skipz
 14211  2577  2D79               	goto	u807lld
 14212  2578  0AAF               	incf	(___aomod@dividend+7)^(0+1664),f
 14213  2579                     u807lld:	
 14214  2579                     l1506:	
 14215  2579  002D               	movlb	13	; select bank13
 14216  257A  0828               	movf	___aomod@dividend^(0+1664),w
 14217  257B  00A0               	movwf	?___aomod^(0+1664)
 14218  257C  0829               	movf	(___aomod@dividend+1)^(0+1664),w
 14219  257D  00A1               	movwf	(?___aomod+1)^(0+1664)
 14220  257E  082A               	movf	(___aomod@dividend+2)^(0+1664),w
 14221  257F  00A2               	movwf	(?___aomod+2)^(0+1664)
 14222  2580  082B               	movf	(___aomod@dividend+3)^(0+1664),w
 14223  2581  00A3               	movwf	(?___aomod+3)^(0+1664)
 14224  2582  082C               	movf	(___aomod@dividend+4)^(0+1664),w
 14225  2583  00A4               	movwf	(?___aomod+4)^(0+1664)
 14226  2584  082D               	movf	(___aomod@dividend+5)^(0+1664),w
 14227  2585  00A5               	movwf	(?___aomod+5)^(0+1664)
 14228  2586  082E               	movf	(___aomod@dividend+6)^(0+1664),w
 14229  2587  00A6               	movwf	(?___aomod+6)^(0+1664)
 14230  2588  082F               	movf	(___aomod@dividend+7)^(0+1664),w
 14231  2589  00A7               	movwf	(?___aomod+7)^(0+1664)
 14232  258A                     l1507:	
 14233  258A  0008               	return
 14234  258B                     __end_of___aomod:	
 14235                           
 14236                           	psect	text12
 14237  258B                     __ptext12:	
 14238 ;; *************** function ___aodiv *****************
 14239 ;; Defined at:
 14240 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 14241 ;; Parameters:    Size  Location     Type
 14242 ;;  divisor         8    0[BANK13] long long 
 14243 ;;  dividend        8    8[BANK13] long long 
 14244 ;; Auto vars:     Size  Location     Type
 14245 ;;  quotient        8   19[BANK13] long long 
 14246 ;;  sign            1   18[BANK13] unsigned char 
 14247 ;;  counter         1   17[BANK13] unsigned char 
 14248 ;; Return value:  Size  Location     Type
 14249 ;;                  8    0[BANK13] long long 
 14250 ;; Registers used:
 14251 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14252 ;; Tracked objects:
 14253 ;;		On entry : 0/0
 14254 ;;		On exit  : 0/0
 14255 ;;		Unchanged: 0/0
 14256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0      16       0       0       0       0       0       0       0       0       0       0       0       0
 14258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0      10       0       0       0       0       0       0       0       0       0       0       0       0
 14259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       1       0       0       0       0       0       0       0       0       0       0       0       0
 14260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0      27       0       0       0       0       0       0       0       0       0       0       0       0
 14261 ;;Total ram usage:       27 bytes
 14262 ;; Hardware stack levels used:    1
 14263 ;; Hardware stack levels required when called:    4
 14264 ;; This function calls:
 14265 ;;		Nothing
 14266 ;; This function is called by:
 14267 ;;		_dtoa
 14268 ;; This function uses a non-reentrant model
 14269 ;;
 14270                           
 14271                           
 14272                           ;psect for function ___aodiv
 14273  258B                     ___aodiv:	
 14274  258B                     l7492:	
 14275                           ;incstack = 0
 14276                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 14277                           
 14278  258B  002D               	movlb	13	; select bank13
 14279  258C  01B2               	clrf	___aodiv@sign^(0+1664)
 14280  258D                     l7494:	
 14281  258D  30A0               	movlw	low ___aodiv@divisor
 14282  258E  0086               	movwf	6
 14283  258F  3006               	movlw	high ___aodiv@divisor
 14284  2590  0087               	movwf	7
 14285  2591  3F47               	moviw [7]fsr1
 14286  2592  00B0               	movwf	??___aodiv^(0+1664)
 14287  2593  1FB0               	btfss	??___aodiv^(0+1664),7
 14288  2594  2D96               	goto	u7871
 14289  2595  2D97               	goto	u7870
 14290  2596                     u7871:	
 14291  2596  2DB9               	goto	l7498
 14292  2597                     u7870:	
 14293  2597                     l7496:	
 14294  2597  002D               	movlb	13	; select bank13
 14295  2598  09A0               	comf	___aodiv@divisor^(0+1664),f
 14296  2599  09A1               	comf	(___aodiv@divisor+1)^(0+1664),f
 14297  259A  09A2               	comf	(___aodiv@divisor+2)^(0+1664),f
 14298  259B  09A3               	comf	(___aodiv@divisor+3)^(0+1664),f
 14299  259C  09A4               	comf	(___aodiv@divisor+4)^(0+1664),f
 14300  259D  09A5               	comf	(___aodiv@divisor+5)^(0+1664),f
 14301  259E  09A6               	comf	(___aodiv@divisor+6)^(0+1664),f
 14302  259F  09A7               	comf	(___aodiv@divisor+7)^(0+1664),f
 14303  25A0  0AA0               	incf	___aodiv@divisor^(0+1664),f
 14304  25A1  1D03               	skipz
 14305  25A2  2DB6               	goto	u788lld
 14306  25A3  0AA1               	incf	(___aodiv@divisor+1)^(0+1664),f
 14307  25A4  1D03               	skipz
 14308  25A5  2DB6               	goto	u788lld
 14309  25A6  0AA2               	incf	(___aodiv@divisor+2)^(0+1664),f
 14310  25A7  1D03               	skipz
 14311  25A8  2DB6               	goto	u788lld
 14312  25A9  0AA3               	incf	(___aodiv@divisor+3)^(0+1664),f
 14313  25AA  1D03               	skipz
 14314  25AB  2DB6               	goto	u788lld
 14315  25AC  0AA4               	incf	(___aodiv@divisor+4)^(0+1664),f
 14316  25AD  1D03               	skipz
 14317  25AE  2DB6               	goto	u788lld
 14318  25AF  0AA5               	incf	(___aodiv@divisor+5)^(0+1664),f
 14319  25B0  1D03               	skipz
 14320  25B1  2DB6               	goto	u788lld
 14321  25B2  0AA6               	incf	(___aodiv@divisor+6)^(0+1664),f
 14322  25B3  1D03               	skipz
 14323  25B4  2DB6               	goto	u788lld
 14324  25B5  0AA7               	incf	(___aodiv@divisor+7)^(0+1664),f
 14325  25B6                     u788lld:	
 14326  25B6  002D               	movlb	13	; select bank13
 14327  25B7  01B2               	clrf	___aodiv@sign^(0+1664)
 14328  25B8  0AB2               	incf	___aodiv@sign^(0+1664),f
 14329  25B9                     l7498:	
 14330  25B9  30A8               	movlw	low ___aodiv@dividend
 14331  25BA  0086               	movwf	6
 14332  25BB  3006               	movlw	high ___aodiv@dividend
 14333  25BC  0087               	movwf	7
 14334  25BD  3F47               	moviw [7]fsr1
 14335  25BE  002D               	movlb	13	; select bank13
 14336  25BF  00B0               	movwf	??___aodiv^(0+1664)
 14337  25C0  1FB0               	btfss	??___aodiv^(0+1664),7
 14338  25C1  2DC3               	goto	u7891
 14339  25C2  2DC4               	goto	u7890
 14340  25C3                     u7891:	
 14341  25C3  2DE8               	goto	l7504
 14342  25C4                     u7890:	
 14343  25C4                     l7500:	
 14344  25C4  002D               	movlb	13	; select bank13
 14345  25C5  09A8               	comf	___aodiv@dividend^(0+1664),f
 14346  25C6  09A9               	comf	(___aodiv@dividend+1)^(0+1664),f
 14347  25C7  09AA               	comf	(___aodiv@dividend+2)^(0+1664),f
 14348  25C8  09AB               	comf	(___aodiv@dividend+3)^(0+1664),f
 14349  25C9  09AC               	comf	(___aodiv@dividend+4)^(0+1664),f
 14350  25CA  09AD               	comf	(___aodiv@dividend+5)^(0+1664),f
 14351  25CB  09AE               	comf	(___aodiv@dividend+6)^(0+1664),f
 14352  25CC  09AF               	comf	(___aodiv@dividend+7)^(0+1664),f
 14353  25CD  0AA8               	incf	___aodiv@dividend^(0+1664),f
 14354  25CE  1D03               	skipz
 14355  25CF  2DE3               	goto	u790lld
 14356  25D0  0AA9               	incf	(___aodiv@dividend+1)^(0+1664),f
 14357  25D1  1D03               	skipz
 14358  25D2  2DE3               	goto	u790lld
 14359  25D3  0AAA               	incf	(___aodiv@dividend+2)^(0+1664),f
 14360  25D4  1D03               	skipz
 14361  25D5  2DE3               	goto	u790lld
 14362  25D6  0AAB               	incf	(___aodiv@dividend+3)^(0+1664),f
 14363  25D7  1D03               	skipz
 14364  25D8  2DE3               	goto	u790lld
 14365  25D9  0AAC               	incf	(___aodiv@dividend+4)^(0+1664),f
 14366  25DA  1D03               	skipz
 14367  25DB  2DE3               	goto	u790lld
 14368  25DC  0AAD               	incf	(___aodiv@dividend+5)^(0+1664),f
 14369  25DD  1D03               	skipz
 14370  25DE  2DE3               	goto	u790lld
 14371  25DF  0AAE               	incf	(___aodiv@dividend+6)^(0+1664),f
 14372  25E0  1D03               	skipz
 14373  25E1  2DE3               	goto	u790lld
 14374  25E2  0AAF               	incf	(___aodiv@dividend+7)^(0+1664),f
 14375  25E3                     u790lld:	
 14376  25E3                     l7502:	
 14377  25E3  3001               	movlw	1
 14378  25E4  002D               	movlb	13	; select bank13
 14379  25E5  00B0               	movwf	??___aodiv^(0+1664)
 14380  25E6  0830               	movf	??___aodiv^(0+1664),w
 14381  25E7  06B2               	xorwf	___aodiv@sign^(0+1664),f
 14382  25E8                     l7504:	
 14383  25E8  30B3               	movlw	low ___aodiv@quotient
 14384  25E9  0086               	movwf	6
 14385  25EA  3006               	movlw	high ___aodiv@quotient
 14386  25EB  0087               	movwf	7
 14387  25EC  3008               	movlw	8
 14388  25ED  002D               	movlb	13	; select bank13
 14389  25EE  00B0               	movwf	??___aodiv^(0+1664)
 14390  25EF  3000               	movlw	0
 14391  25F0                     u7910:	
 14392  25F0  001E               	movwi fsr1++
 14393  25F1  0BB0               	decfsz	??___aodiv^(0+1664),f
 14394  25F2  2DF0               	goto	u7910
 14395  25F3                     l7506:	
 14396  25F3  0820               	movf	___aodiv@divisor^(0+1664),w
 14397  25F4  0421               	iorwf	(___aodiv@divisor+1)^(0+1664),w
 14398  25F5  0422               	iorwf	(___aodiv@divisor+2)^(0+1664),w
 14399  25F6  0423               	iorwf	(___aodiv@divisor+3)^(0+1664),w
 14400  25F7  0424               	iorwf	(___aodiv@divisor+4)^(0+1664),w
 14401  25F8  0425               	iorwf	(___aodiv@divisor+5)^(0+1664),w
 14402  25F9  0426               	iorwf	(___aodiv@divisor+6)^(0+1664),w
 14403  25FA  0427               	iorwf	(___aodiv@divisor+7)^(0+1664),w
 14404  25FB  1903               	skipnz
 14405  25FC  2DFE               	goto	u7921
 14406  25FD  2DFF               	goto	u7920
 14407  25FE                     u7921:	
 14408  25FE  2E5B               	goto	l7526
 14409  25FF                     u7920:	
 14410  25FF                     l7508:	
 14411  25FF  01B1               	clrf	___aodiv@counter^(0+1664)
 14412  2600  0AB1               	incf	___aodiv@counter^(0+1664),f
 14413  2601  2E0E               	goto	l7514
 14414  2602                     l7510:	
 14415  2602  35A0               	lslf	___aodiv@divisor^(0+1664),f
 14416  2603  0DA1               	rlf	(___aodiv@divisor+1)^(0+1664),f
 14417  2604  0DA2               	rlf	(___aodiv@divisor+2)^(0+1664),f
 14418  2605  0DA3               	rlf	(___aodiv@divisor+3)^(0+1664),f
 14419  2606  0DA4               	rlf	(___aodiv@divisor+4)^(0+1664),f
 14420  2607  0DA5               	rlf	(___aodiv@divisor+5)^(0+1664),f
 14421  2608  0DA6               	rlf	(___aodiv@divisor+6)^(0+1664),f
 14422  2609  0DA7               	rlf	(___aodiv@divisor+7)^(0+1664),f
 14423  260A                     l7512:	
 14424  260A  3001               	movlw	1
 14425  260B  00B0               	movwf	??___aodiv^(0+1664)
 14426  260C  0830               	movf	??___aodiv^(0+1664),w
 14427  260D  07B1               	addwf	___aodiv@counter^(0+1664),f
 14428  260E                     l7514:	
 14429  260E  1FA7               	btfss	(___aodiv@divisor+7)^(0+1664),7
 14430  260F  2E11               	goto	u7931
 14431  2610  2E12               	goto	u7930
 14432  2611                     u7931:	
 14433  2611  2E02               	goto	l7510
 14434  2612                     u7930:	
 14435  2612                     l7516:	
 14436  2612  35B3               	lslf	___aodiv@quotient^(0+1664),f
 14437  2613  0DB4               	rlf	(___aodiv@quotient+1)^(0+1664),f
 14438  2614  0DB5               	rlf	(___aodiv@quotient+2)^(0+1664),f
 14439  2615  0DB6               	rlf	(___aodiv@quotient+3)^(0+1664),f
 14440  2616  0DB7               	rlf	(___aodiv@quotient+4)^(0+1664),f
 14441  2617  0DB8               	rlf	(___aodiv@quotient+5)^(0+1664),f
 14442  2618  0DB9               	rlf	(___aodiv@quotient+6)^(0+1664),f
 14443  2619  0DBA               	rlf	(___aodiv@quotient+7)^(0+1664),f
 14444  261A                     l7518:	
 14445  261A  0827               	movf	(___aodiv@divisor+7)^(0+1664),w
 14446  261B  022F               	subwf	(___aodiv@dividend+7)^(0+1664),w
 14447  261C  1D03               	skipz
 14448  261D  2E38               	goto	u7945
 14449  261E  0826               	movf	(___aodiv@divisor+6)^(0+1664),w
 14450  261F  022E               	subwf	(___aodiv@dividend+6)^(0+1664),w
 14451  2620  1D03               	skipz
 14452  2621  2E38               	goto	u7945
 14453  2622  0825               	movf	(___aodiv@divisor+5)^(0+1664),w
 14454  2623  022D               	subwf	(___aodiv@dividend+5)^(0+1664),w
 14455  2624  1D03               	skipz
 14456  2625  2E38               	goto	u7945
 14457  2626  0824               	movf	(___aodiv@divisor+4)^(0+1664),w
 14458  2627  022C               	subwf	(___aodiv@dividend+4)^(0+1664),w
 14459  2628  1D03               	skipz
 14460  2629  2E38               	goto	u7945
 14461  262A  0823               	movf	(___aodiv@divisor+3)^(0+1664),w
 14462  262B  022B               	subwf	(___aodiv@dividend+3)^(0+1664),w
 14463  262C  1D03               	skipz
 14464  262D  2E38               	goto	u7945
 14465  262E  0822               	movf	(___aodiv@divisor+2)^(0+1664),w
 14466  262F  022A               	subwf	(___aodiv@dividend+2)^(0+1664),w
 14467  2630  1D03               	skipz
 14468  2631  2E38               	goto	u7945
 14469  2632  0821               	movf	(___aodiv@divisor+1)^(0+1664),w
 14470  2633  0229               	subwf	(___aodiv@dividend+1)^(0+1664),w
 14471  2634  1D03               	skipz
 14472  2635  2E38               	goto	u7945
 14473  2636  0820               	movf	___aodiv@divisor^(0+1664),w
 14474  2637  0228               	subwf	___aodiv@dividend^(0+1664),w
 14475  2638                     u7945:	
 14476  2638  1C03               	skipc
 14477  2639  2E3B               	goto	u7941
 14478  263A  2E3C               	goto	u7940
 14479  263B                     u7941:	
 14480  263B  2E4D               	goto	l7524
 14481  263C                     u7940:	
 14482  263C                     l7520:	
 14483  263C  0820               	movf	___aodiv@divisor^(0+1664),w
 14484  263D  02A8               	subwf	___aodiv@dividend^(0+1664),f
 14485  263E  0821               	movf	(___aodiv@divisor+1)^(0+1664),w
 14486  263F  3BA9               	subwfb	(___aodiv@dividend+1)^(0+1664),f
 14487  2640  0822               	movf	(___aodiv@divisor+2)^(0+1664),w
 14488  2641  3BAA               	subwfb	(___aodiv@dividend+2)^(0+1664),f
 14489  2642  0823               	movf	(___aodiv@divisor+3)^(0+1664),w
 14490  2643  3BAB               	subwfb	(___aodiv@dividend+3)^(0+1664),f
 14491  2644  0824               	movf	(___aodiv@divisor+4)^(0+1664),w
 14492  2645  3BAC               	subwfb	(___aodiv@dividend+4)^(0+1664),f
 14493  2646  0825               	movf	(___aodiv@divisor+5)^(0+1664),w
 14494  2647  3BAD               	subwfb	(___aodiv@dividend+5)^(0+1664),f
 14495  2648  0826               	movf	(___aodiv@divisor+6)^(0+1664),w
 14496  2649  3BAE               	subwfb	(___aodiv@dividend+6)^(0+1664),f
 14497  264A  0827               	movf	(___aodiv@divisor+7)^(0+1664),w
 14498  264B  3BAF               	subwfb	(___aodiv@dividend+7)^(0+1664),f
 14499  264C                     l7522:	
 14500  264C  1433               	bsf	___aodiv@quotient^(0+1664),0
 14501  264D                     l7524:	
 14502  264D  36A7               	lsrf	(___aodiv@divisor+7)^(0+1664),f
 14503  264E  0CA6               	rrf	(___aodiv@divisor+6)^(0+1664),f
 14504  264F  0CA5               	rrf	(___aodiv@divisor+5)^(0+1664),f
 14505  2650  0CA4               	rrf	(___aodiv@divisor+4)^(0+1664),f
 14506  2651  0CA3               	rrf	(___aodiv@divisor+3)^(0+1664),f
 14507  2652  0CA2               	rrf	(___aodiv@divisor+2)^(0+1664),f
 14508  2653  0CA1               	rrf	(___aodiv@divisor+1)^(0+1664),f
 14509  2654  0CA0               	rrf	___aodiv@divisor^(0+1664),f
 14510  2655  3001               	movlw	1
 14511  2656  02B1               	subwf	___aodiv@counter^(0+1664),f
 14512  2657  1D03               	btfss	3,2
 14513  2658  2E5A               	goto	u7951
 14514  2659  2E5B               	goto	u7950
 14515  265A                     u7951:	
 14516  265A  2E12               	goto	l7516
 14517  265B                     u7950:	
 14518  265B                     l7526:	
 14519  265B  0832               	movf	___aodiv@sign^(0+1664),w
 14520  265C  1903               	btfsc	3,2
 14521  265D  2E5F               	goto	u7961
 14522  265E  2E60               	goto	u7960
 14523  265F                     u7961:	
 14524  265F  2E7E               	goto	l1493
 14525  2660                     u7960:	
 14526  2660                     l7528:	
 14527  2660  09B3               	comf	___aodiv@quotient^(0+1664),f
 14528  2661  09B4               	comf	(___aodiv@quotient+1)^(0+1664),f
 14529  2662  09B5               	comf	(___aodiv@quotient+2)^(0+1664),f
 14530  2663  09B6               	comf	(___aodiv@quotient+3)^(0+1664),f
 14531  2664  09B7               	comf	(___aodiv@quotient+4)^(0+1664),f
 14532  2665  09B8               	comf	(___aodiv@quotient+5)^(0+1664),f
 14533  2666  09B9               	comf	(___aodiv@quotient+6)^(0+1664),f
 14534  2667  09BA               	comf	(___aodiv@quotient+7)^(0+1664),f
 14535  2668  0AB3               	incf	___aodiv@quotient^(0+1664),f
 14536  2669  1D03               	skipz
 14537  266A  2E7E               	goto	u797lld
 14538  266B  0AB4               	incf	(___aodiv@quotient+1)^(0+1664),f
 14539  266C  1D03               	skipz
 14540  266D  2E7E               	goto	u797lld
 14541  266E  0AB5               	incf	(___aodiv@quotient+2)^(0+1664),f
 14542  266F  1D03               	skipz
 14543  2670  2E7E               	goto	u797lld
 14544  2671  0AB6               	incf	(___aodiv@quotient+3)^(0+1664),f
 14545  2672  1D03               	skipz
 14546  2673  2E7E               	goto	u797lld
 14547  2674  0AB7               	incf	(___aodiv@quotient+4)^(0+1664),f
 14548  2675  1D03               	skipz
 14549  2676  2E7E               	goto	u797lld
 14550  2677  0AB8               	incf	(___aodiv@quotient+5)^(0+1664),f
 14551  2678  1D03               	skipz
 14552  2679  2E7E               	goto	u797lld
 14553  267A  0AB9               	incf	(___aodiv@quotient+6)^(0+1664),f
 14554  267B  1D03               	skipz
 14555  267C  2E7E               	goto	u797lld
 14556  267D  0ABA               	incf	(___aodiv@quotient+7)^(0+1664),f
 14557  267E                     u797lld:	
 14558  267E                     l1493:	
 14559  267E  002D               	movlb	13	; select bank13
 14560  267F  0833               	movf	___aodiv@quotient^(0+1664),w
 14561  2680  00A0               	movwf	?___aodiv^(0+1664)
 14562  2681  0834               	movf	(___aodiv@quotient+1)^(0+1664),w
 14563  2682  00A1               	movwf	(?___aodiv+1)^(0+1664)
 14564  2683  0835               	movf	(___aodiv@quotient+2)^(0+1664),w
 14565  2684  00A2               	movwf	(?___aodiv+2)^(0+1664)
 14566  2685  0836               	movf	(___aodiv@quotient+3)^(0+1664),w
 14567  2686  00A3               	movwf	(?___aodiv+3)^(0+1664)
 14568  2687  0837               	movf	(___aodiv@quotient+4)^(0+1664),w
 14569  2688  00A4               	movwf	(?___aodiv+4)^(0+1664)
 14570  2689  0838               	movf	(___aodiv@quotient+5)^(0+1664),w
 14571  268A  00A5               	movwf	(?___aodiv+5)^(0+1664)
 14572  268B  0839               	movf	(___aodiv@quotient+6)^(0+1664),w
 14573  268C  00A6               	movwf	(?___aodiv+6)^(0+1664)
 14574  268D  083A               	movf	(___aodiv@quotient+7)^(0+1664),w
 14575  268E  00A7               	movwf	(?___aodiv+7)^(0+1664)
 14576  268F                     l1494:	
 14577  268F  0008               	return
 14578  2690                     __end_of___aodiv:	
 14579                           
 14580                           	psect	text13
 14581  2B93                     __ptext13:	
 14582 ;; *************** function _clearText *****************
 14583 ;; Defined at:
 14584 ;;		line 141 in file "main.c"
 14585 ;; Parameters:    Size  Location     Type
 14586 ;;  textToClear     2    0[BANK13] PTR unsigned char 
 14587 ;;		 -> newTextLine4(16), newTextLine3(16), newTextLine2(16), newTextLine1(16), 
 14588 ;; Auto vars:     Size  Location     Type
 14589 ;;  i               2    4[BANK13] int 
 14590 ;; Return value:  Size  Location     Type
 14591 ;;                  1    wreg      void 
 14592 ;; Registers used:
 14593 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14594 ;; Tracked objects:
 14595 ;;		On entry : 0/0
 14596 ;;		On exit  : 0/0
 14597 ;;		Unchanged: 0/0
 14598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 14600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 14601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 14602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       6       0       0       0       0       0       0       0       0       0       0       0       0
 14603 ;;Total ram usage:        6 bytes
 14604 ;; Hardware stack levels used:    1
 14605 ;; Hardware stack levels required when called:    4
 14606 ;; This function calls:
 14607 ;;		Nothing
 14608 ;; This function is called by:
 14609 ;;		_main
 14610 ;; This function uses a non-reentrant model
 14611 ;;
 14612                           
 14613                           
 14614                           ;psect for function _clearText
 14615  2B93                     _clearText:	
 14616  2B93                     l8162:	
 14617                           ;incstack = 0
 14618                           ; Regs used in _clearText: [wreg+fsr1l+fsr1h+status,2+status,0]
 14619                           
 14620                           
 14621                           ;main.c: 142:     for(int i = 0; i < 16; i++){
 14622  2B93  002D               	movlb	13	; select bank13
 14623  2B94  01A4               	clrf	clearText@i^(0+1664)
 14624  2B95  01A5               	clrf	(clearText@i+1)^(0+1664)
 14625  2B96                     l8168:	
 14626                           
 14627                           ;main.c: 143:         textToClear[i] = ' ';
 14628  2B96  002D               	movlb	13	; select bank13
 14629  2B97  0824               	movf	clearText@i^(0+1664),w
 14630  2B98  0720               	addwf	clearText@textToClear^(0+1664),w
 14631  2B99  00A2               	movwf	??_clearText^(0+1664)
 14632  2B9A  0825               	movf	(clearText@i+1)^(0+1664),w
 14633  2B9B  3D21               	addwfc	(clearText@textToClear+1)^(0+1664),w
 14634  2B9C  00A3               	movwf	(??_clearText+1)^(0+1664)
 14635  2B9D  0822               	movf	??_clearText^(0+1664),w
 14636  2B9E  0086               	movwf	6
 14637  2B9F  0823               	movf	(??_clearText+1)^(0+1664),w
 14638  2BA0  0087               	movwf	7
 14639  2BA1  3020               	movlw	32
 14640  2BA2  0081               	movwf	1
 14641  2BA3                     l8170:	
 14642                           
 14643                           ;main.c: 144:     }
 14644  2BA3  3001               	movlw	1
 14645  2BA4  07A4               	addwf	clearText@i^(0+1664),f
 14646  2BA5  3000               	movlw	0
 14647  2BA6  3DA5               	addwfc	(clearText@i+1)^(0+1664),f
 14648  2BA7                     l8172:	
 14649  2BA7  0825               	movf	(clearText@i+1)^(0+1664),w
 14650  2BA8  3A80               	xorlw	128
 14651  2BA9  00A2               	movwf	??_clearText^(0+1664)
 14652  2BAA  3080               	movlw	128
 14653  2BAB  0222               	subwf	??_clearText^(0+1664),w
 14654  2BAC  1D03               	skipz
 14655  2BAD  2BB0               	goto	u8905
 14656  2BAE  3010               	movlw	16
 14657  2BAF  0224               	subwf	clearText@i^(0+1664),w
 14658  2BB0                     u8905:	
 14659  2BB0  1C03               	skipc
 14660  2BB1  2BB3               	goto	u8901
 14661  2BB2  2BB4               	goto	u8900
 14662  2BB3                     u8901:	
 14663  2BB3  2B96               	goto	l8168
 14664  2BB4                     u8900:	
 14665  2BB4                     l903:	
 14666  2BB4  0008               	return
 14667  2BB5                     __end_of_clearText:	
 14668                           
 14669                           	psect	text14
 14670  222B                     __ptext14:	
 14671 ;; *************** function ___xxtofl *****************
 14672 ;; Defined at:
 14673 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 14674 ;; Parameters:    Size  Location     Type
 14675 ;;  sign            1    wreg     unsigned char 
 14676 ;;  val             4    9[BANK13] long 
 14677 ;; Auto vars:     Size  Location     Type
 14678 ;;  sign            1   17[BANK13] unsigned char 
 14679 ;;  arg             4   19[BANK13] unsigned long 
 14680 ;;  exp             1   18[BANK13] unsigned char 
 14681 ;; Return value:  Size  Location     Type
 14682 ;;                  4    9[BANK13] unsigned char 
 14683 ;; Registers used:
 14684 ;;		wreg, status,2, status,0
 14685 ;; Tracked objects:
 14686 ;;		On entry : 0/0
 14687 ;;		On exit  : 0/0
 14688 ;;		Unchanged: 0/0
 14689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       4       0       0       0       0       0       0       0       0       0       0       0       0
 14691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       6       0       0       0       0       0       0       0       0       0       0       0       0
 14692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       4       0       0       0       0       0       0       0       0       0       0       0       0
 14693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0      14       0       0       0       0       0       0       0       0       0       0       0       0
 14694 ;;Total ram usage:       14 bytes
 14695 ;; Hardware stack levels used:    1
 14696 ;; Hardware stack levels required when called:    4
 14697 ;; This function calls:
 14698 ;;		Nothing
 14699 ;; This function is called by:
 14700 ;;		_main
 14701 ;; This function uses a non-reentrant model
 14702 ;;
 14703                           
 14704                           
 14705                           ;psect for function ___xxtofl
 14706  222B                     ___xxtofl:	
 14707                           
 14708                           ;incstack = 0
 14709                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 14710                           ;___xxtofl@sign stored from wreg
 14711  222B  002D               	movlb	13	; select bank13
 14712  222C  00B1               	movwf	___xxtofl@sign^(0+1664)
 14713  222D                     l8810:	
 14714  222D  0831               	movf	___xxtofl@sign^(0+1664),w
 14715  222E  1903               	btfsc	3,2
 14716  222F  2A31               	goto	u10061
 14717  2230  2A32               	goto	u10060
 14718  2231                     u10061:	
 14719  2231  2A46               	goto	l8816
 14720  2232                     u10060:	
 14721  2232                     l8812:	
 14722  2232  1FAC               	btfss	(___xxtofl@val+3)^(0+1664),7
 14723  2233  2A35               	goto	u10071
 14724  2234  2A36               	goto	u10070
 14725  2235                     u10071:	
 14726  2235  2A46               	goto	l8816
 14727  2236                     u10070:	
 14728  2236                     l8814:	
 14729  2236  0929               	comf	___xxtofl@val^(0+1664),w
 14730  2237  00B3               	movwf	___xxtofl@arg^(0+1664)
 14731  2238  092A               	comf	(___xxtofl@val^(0+1664)+1),w
 14732  2239  00B4               	movwf	(___xxtofl@arg+1)^(0+1664)
 14733  223A  092B               	comf	(___xxtofl@val^(0+1664)+2),w
 14734  223B  00B5               	movwf	(___xxtofl@arg+2)^(0+1664)
 14735  223C  092C               	comf	(___xxtofl@val^(0+1664)+3),w
 14736  223D  00B6               	movwf	(___xxtofl@arg+3)^(0+1664)
 14737  223E  0AB3               	incf	___xxtofl@arg^(0+1664),f
 14738  223F  1903               	skipnz
 14739  2240  0AB4               	incf	(___xxtofl@arg+1)^(0+1664),f
 14740  2241  1903               	skipnz
 14741  2242  0AB5               	incf	(___xxtofl@arg+2)^(0+1664),f
 14742  2243  1903               	skipnz
 14743  2244  0AB6               	incf	(___xxtofl@arg+3)^(0+1664),f
 14744  2245  2A4E               	goto	l1828
 14745  2246                     l8816:	
 14746  2246  082C               	movf	(___xxtofl@val+3)^(0+1664),w
 14747  2247  00B6               	movwf	(___xxtofl@arg+3)^(0+1664)
 14748  2248  082B               	movf	(___xxtofl@val+2)^(0+1664),w
 14749  2249  00B5               	movwf	(___xxtofl@arg+2)^(0+1664)
 14750  224A  082A               	movf	(___xxtofl@val+1)^(0+1664),w
 14751  224B  00B4               	movwf	(___xxtofl@arg+1)^(0+1664)
 14752  224C  0829               	movf	___xxtofl@val^(0+1664),w
 14753  224D  00B3               	movwf	___xxtofl@arg^(0+1664)
 14754  224E                     l1828:	
 14755  224E  082C               	movf	(___xxtofl@val+3)^(0+1664),w
 14756  224F  042B               	iorwf	(___xxtofl@val+2)^(0+1664),w
 14757  2250  042A               	iorwf	(___xxtofl@val+1)^(0+1664),w
 14758  2251  0429               	iorwf	___xxtofl@val^(0+1664),w
 14759  2252  1D03               	skipz
 14760  2253  2A55               	goto	u10081
 14761  2254  2A56               	goto	u10080
 14762  2255                     u10081:	
 14763  2255  2A5F               	goto	l8822
 14764  2256                     u10080:	
 14765  2256                     l8818:	
 14766  2256  3000               	movlw	0
 14767  2257  00AC               	movwf	(?___xxtofl+3)^(0+1664)
 14768  2258  3000               	movlw	0
 14769  2259  00AB               	movwf	(?___xxtofl+2)^(0+1664)
 14770  225A  3000               	movlw	0
 14771  225B  00AA               	movwf	(?___xxtofl+1)^(0+1664)
 14772  225C  3000               	movlw	0
 14773  225D  00A9               	movwf	?___xxtofl^(0+1664)
 14774  225E  2AD7               	goto	l1830
 14775  225F                     l8822:	
 14776  225F  3096               	movlw	150
 14777  2260  00AD               	movwf	??___xxtofl^(0+1664)
 14778  2261  082D               	movf	??___xxtofl^(0+1664),w
 14779  2262  00B2               	movwf	___xxtofl@exp^(0+1664)
 14780  2263  2A6F               	goto	l8826
 14781  2264                     l8824:	
 14782  2264  3001               	movlw	1
 14783  2265  00AD               	movwf	??___xxtofl^(0+1664)
 14784  2266  082D               	movf	??___xxtofl^(0+1664),w
 14785  2267  07B2               	addwf	___xxtofl@exp^(0+1664),f
 14786  2268  3001               	movlw	1
 14787  2269                     u10095:	
 14788  2269  36B6               	lsrf	(___xxtofl@arg+3)^(0+1664),f
 14789  226A  0CB5               	rrf	(___xxtofl@arg+2)^(0+1664),f
 14790  226B  0CB4               	rrf	(___xxtofl@arg+1)^(0+1664),f
 14791  226C  0CB3               	rrf	___xxtofl@arg^(0+1664),f
 14792  226D  0B89               	decfsz	9,f
 14793  226E  2A69               	goto	u10095
 14794  226F                     l8826:	
 14795  226F  30FE               	movlw	254
 14796  2270  0536               	andwf	(___xxtofl@arg+3)^(0+1664),w
 14797  2271  1D03               	btfss	3,2
 14798  2272  2A74               	goto	u10101
 14799  2273  2A75               	goto	u10100
 14800  2274                     u10101:	
 14801  2274  2A64               	goto	l8824
 14802  2275                     u10100:	
 14803  2275  2A89               	goto	l1834
 14804  2276                     l8828:	
 14805  2276  3001               	movlw	1
 14806  2277  00AD               	movwf	??___xxtofl^(0+1664)
 14807  2278  082D               	movf	??___xxtofl^(0+1664),w
 14808  2279  07B2               	addwf	___xxtofl@exp^(0+1664),f
 14809  227A                     l8830:	
 14810  227A  3001               	movlw	1
 14811  227B  07B3               	addwf	___xxtofl@arg^(0+1664),f
 14812  227C  3000               	movlw	0
 14813  227D  3DB4               	addwfc	(___xxtofl@arg+1)^(0+1664),f
 14814  227E  3000               	movlw	0
 14815  227F  3DB5               	addwfc	(___xxtofl@arg+2)^(0+1664),f
 14816  2280  3000               	movlw	0
 14817  2281  3DB6               	addwfc	(___xxtofl@arg+3)^(0+1664),f
 14818  2282                     l8832:	
 14819  2282  3001               	movlw	1
 14820  2283                     u10115:	
 14821  2283  36B6               	lsrf	(___xxtofl@arg+3)^(0+1664),f
 14822  2284  0CB5               	rrf	(___xxtofl@arg+2)^(0+1664),f
 14823  2285  0CB4               	rrf	(___xxtofl@arg+1)^(0+1664),f
 14824  2286  0CB3               	rrf	___xxtofl@arg^(0+1664),f
 14825  2287  0B89               	decfsz	9,f
 14826  2288  2A83               	goto	u10115
 14827  2289                     l1834:	
 14828  2289  30FF               	movlw	255
 14829  228A  0536               	andwf	(___xxtofl@arg+3)^(0+1664),w
 14830  228B  1D03               	btfss	3,2
 14831  228C  2A8E               	goto	u10121
 14832  228D  2A8F               	goto	u10120
 14833  228E                     u10121:	
 14834  228E  2A76               	goto	l8828
 14835  228F                     u10120:	
 14836  228F  2A99               	goto	l8836
 14837  2290                     l8834:	
 14838  2290  3001               	movlw	1
 14839  2291  02B2               	subwf	___xxtofl@exp^(0+1664),f
 14840  2292  3001               	movlw	1
 14841  2293                     u10135:	
 14842  2293  35B3               	lslf	___xxtofl@arg^(0+1664),f
 14843  2294  0DB4               	rlf	(___xxtofl@arg+1)^(0+1664),f
 14844  2295  0DB5               	rlf	(___xxtofl@arg+2)^(0+1664),f
 14845  2296  0DB6               	rlf	(___xxtofl@arg+3)^(0+1664),f
 14846  2297  0B89               	decfsz	9,f
 14847  2298  2A93               	goto	u10135
 14848  2299                     l8836:	
 14849  2299  1BB5               	btfsc	(___xxtofl@arg+2)^(0+1664),7
 14850  229A  2A9C               	goto	u10141
 14851  229B  2A9D               	goto	u10140
 14852  229C                     u10141:	
 14853  229C  2AA3               	goto	l1841
 14854  229D                     u10140:	
 14855  229D                     l8838:	
 14856  229D  3002               	movlw	2
 14857  229E  0232               	subwf	___xxtofl@exp^(0+1664),w
 14858  229F  1803               	skipnc
 14859  22A0  2AA2               	goto	u10151
 14860  22A1  2AA3               	goto	u10150
 14861  22A2                     u10151:	
 14862  22A2  2A90               	goto	l8834
 14863  22A3                     u10150:	
 14864  22A3                     l1841:	
 14865  22A3  1832               	btfsc	___xxtofl@exp^(0+1664),0
 14866  22A4  2AA6               	goto	u10161
 14867  22A5  2AA7               	goto	u10160
 14868  22A6                     u10161:	
 14869  22A6  2AAF               	goto	l1842
 14870  22A7                     u10160:	
 14871  22A7                     l8840:	
 14872  22A7  30FF               	movlw	255
 14873  22A8  05B3               	andwf	___xxtofl@arg^(0+1664),f
 14874  22A9  30FF               	movlw	255
 14875  22AA  05B4               	andwf	(___xxtofl@arg+1)^(0+1664),f
 14876  22AB  307F               	movlw	127
 14877  22AC  05B5               	andwf	(___xxtofl@arg+2)^(0+1664),f
 14878  22AD  30FF               	movlw	255
 14879  22AE  05B6               	andwf	(___xxtofl@arg+3)^(0+1664),f
 14880  22AF                     l1842:	
 14881  22AF  1003               	clrc
 14882  22B0  0CB2               	rrf	___xxtofl@exp^(0+1664),f
 14883  22B1                     l8842:	
 14884  22B1  0832               	movf	___xxtofl@exp^(0+1664),w
 14885  22B2  00AD               	movwf	??___xxtofl^(0+1664)
 14886  22B3  01AE               	clrf	(??___xxtofl^(0+1664)+1)
 14887  22B4  01AF               	clrf	(??___xxtofl^(0+1664)+2)
 14888  22B5  01B0               	clrf	(??___xxtofl^(0+1664)+3)
 14889  22B6  3018               	movlw	24
 14890  22B7                     u10175:	
 14891  22B7  35AD               	lslf	??___xxtofl^(0+1664),f
 14892  22B8  0DAE               	rlf	(??___xxtofl^(0+1664)+1),f
 14893  22B9  0DAF               	rlf	(??___xxtofl^(0+1664)+2),f
 14894  22BA  0DB0               	rlf	(??___xxtofl^(0+1664)+3),f
 14895  22BB                     u10170:	
 14896  22BB  0B89               	decfsz	9,f
 14897  22BC  2AB7               	goto	u10175
 14898  22BD  082D               	movf	??___xxtofl^(0+1664),w
 14899  22BE  04B3               	iorwf	___xxtofl@arg^(0+1664),f
 14900  22BF  082E               	movf	(??___xxtofl+1)^(0+1664),w
 14901  22C0  04B4               	iorwf	(___xxtofl@arg+1)^(0+1664),f
 14902  22C1  082F               	movf	(??___xxtofl+2)^(0+1664),w
 14903  22C2  04B5               	iorwf	(___xxtofl@arg+2)^(0+1664),f
 14904  22C3  0830               	movf	(??___xxtofl+3)^(0+1664),w
 14905  22C4  04B6               	iorwf	(___xxtofl@arg+3)^(0+1664),f
 14906  22C5                     l8844:	
 14907  22C5  0831               	movf	___xxtofl@sign^(0+1664),w
 14908  22C6  1903               	btfsc	3,2
 14909  22C7  2AC9               	goto	u10181
 14910  22C8  2ACA               	goto	u10180
 14911  22C9                     u10181:	
 14912  22C9  2ACF               	goto	l8850
 14913  22CA                     u10180:	
 14914  22CA                     l8846:	
 14915  22CA  1FAC               	btfss	(___xxtofl@val+3)^(0+1664),7
 14916  22CB  2ACD               	goto	u10191
 14917  22CC  2ACE               	goto	u10190
 14918  22CD                     u10191:	
 14919  22CD  2ACF               	goto	l8850
 14920  22CE                     u10190:	
 14921  22CE                     l8848:	
 14922  22CE  17B6               	bsf	(___xxtofl@arg^(0+1664)+3),7
 14923  22CF                     l8850:	
 14924  22CF  0836               	movf	(___xxtofl@arg+3)^(0+1664),w
 14925  22D0  00AC               	movwf	(?___xxtofl+3)^(0+1664)
 14926  22D1  0835               	movf	(___xxtofl@arg+2)^(0+1664),w
 14927  22D2  00AB               	movwf	(?___xxtofl+2)^(0+1664)
 14928  22D3  0834               	movf	(___xxtofl@arg+1)^(0+1664),w
 14929  22D4  00AA               	movwf	(?___xxtofl+1)^(0+1664)
 14930  22D5  0833               	movf	___xxtofl@arg^(0+1664),w
 14931  22D6  00A9               	movwf	?___xxtofl^(0+1664)
 14932  22D7                     l1830:	
 14933  22D7  0008               	return
 14934  22D8                     __end_of___xxtofl:	
 14935                           
 14936                           	psect	text15
 14937  2D0C                     __ptext15:	
 14938 ;; *************** function ___lwdiv *****************
 14939 ;; Defined at:
 14940 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
 14941 ;; Parameters:    Size  Location     Type
 14942 ;;  divisor         2   15[BANK13] unsigned int 
 14943 ;;  dividend        2   17[BANK13] unsigned int 
 14944 ;; Auto vars:     Size  Location     Type
 14945 ;;  quotient        2   21[BANK13] unsigned int 
 14946 ;;  counter         1   20[BANK13] unsigned char 
 14947 ;; Return value:  Size  Location     Type
 14948 ;;                  2   15[BANK13] unsigned int 
 14949 ;; Registers used:
 14950 ;;		wreg, status,2, status,0
 14951 ;; Tracked objects:
 14952 ;;		On entry : 0/0
 14953 ;;		On exit  : 0/0
 14954 ;;		Unchanged: 0/0
 14955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       4       0       0       0       0       0       0       0       0       0       0       0       0
 14957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       3       0       0       0       0       0       0       0       0       0       0       0       0
 14958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       1       0       0       0       0       0       0       0       0       0       0       0       0
 14959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       8       0       0       0       0       0       0       0       0       0       0       0       0
 14960 ;;Total ram usage:        8 bytes
 14961 ;; Hardware stack levels used:    1
 14962 ;; Hardware stack levels required when called:    4
 14963 ;; This function calls:
 14964 ;;		Nothing
 14965 ;; This function is called by:
 14966 ;;		_main
 14967 ;; This function uses a non-reentrant model
 14968 ;;
 14969                           
 14970                           
 14971                           ;psect for function ___lwdiv
 14972  2D0C                     ___lwdiv:	
 14973  2D0C                     l8504:	
 14974                           ;incstack = 0
 14975                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 14976                           
 14977  2D0C  002D               	movlb	13	; select bank13
 14978  2D0D  01B5               	clrf	___lwdiv@quotient^(0+1664)
 14979  2D0E  01B6               	clrf	(___lwdiv@quotient+1)^(0+1664)
 14980  2D0F                     l8506:	
 14981  2D0F  082F               	movf	___lwdiv@divisor^(0+1664),w
 14982  2D10  0430               	iorwf	(___lwdiv@divisor+1)^(0+1664),w
 14983  2D11  1903               	btfsc	3,2
 14984  2D12  2D14               	goto	u9441
 14985  2D13  2D15               	goto	u9440
 14986  2D14                     u9441:	
 14987  2D14  2D44               	goto	l8526
 14988  2D15                     u9440:	
 14989  2D15                     l8508:	
 14990  2D15  01B4               	clrf	___lwdiv@counter^(0+1664)
 14991  2D16  0AB4               	incf	___lwdiv@counter^(0+1664),f
 14992  2D17  2D21               	goto	l8514
 14993  2D18                     l8510:	
 14994  2D18  3001               	movlw	1
 14995  2D19                     u9455:	
 14996  2D19  35AF               	lslf	___lwdiv@divisor^(0+1664),f
 14997  2D1A  0DB0               	rlf	(___lwdiv@divisor+1)^(0+1664),f
 14998  2D1B  0B89               	decfsz	9,f
 14999  2D1C  2D19               	goto	u9455
 15000  2D1D                     l8512:	
 15001  2D1D  3001               	movlw	1
 15002  2D1E  00B3               	movwf	??___lwdiv^(0+1664)
 15003  2D1F  0833               	movf	??___lwdiv^(0+1664),w
 15004  2D20  07B4               	addwf	___lwdiv@counter^(0+1664),f
 15005  2D21                     l8514:	
 15006  2D21  1FB0               	btfss	(___lwdiv@divisor+1)^(0+1664),7
 15007  2D22  2D24               	goto	u9461
 15008  2D23  2D25               	goto	u9460
 15009  2D24                     u9461:	
 15010  2D24  2D18               	goto	l8510
 15011  2D25                     u9460:	
 15012  2D25                     l8516:	
 15013  2D25  3001               	movlw	1
 15014  2D26                     u9475:	
 15015  2D26  35B5               	lslf	___lwdiv@quotient^(0+1664),f
 15016  2D27  0DB6               	rlf	(___lwdiv@quotient+1)^(0+1664),f
 15017  2D28  0B89               	decfsz	9,f
 15018  2D29  2D26               	goto	u9475
 15019  2D2A  0830               	movf	(___lwdiv@divisor+1)^(0+1664),w
 15020  2D2B  0232               	subwf	(___lwdiv@dividend+1)^(0+1664),w
 15021  2D2C  1D03               	skipz
 15022  2D2D  2D30               	goto	u9485
 15023  2D2E  082F               	movf	___lwdiv@divisor^(0+1664),w
 15024  2D2F  0231               	subwf	___lwdiv@dividend^(0+1664),w
 15025  2D30                     u9485:	
 15026  2D30  1C03               	skipc
 15027  2D31  2D33               	goto	u9481
 15028  2D32  2D34               	goto	u9480
 15029  2D33                     u9481:	
 15030  2D33  2D39               	goto	l8522
 15031  2D34                     u9480:	
 15032  2D34                     l8518:	
 15033  2D34  082F               	movf	___lwdiv@divisor^(0+1664),w
 15034  2D35  02B1               	subwf	___lwdiv@dividend^(0+1664),f
 15035  2D36  0830               	movf	(___lwdiv@divisor+1)^(0+1664),w
 15036  2D37  3BB2               	subwfb	(___lwdiv@dividend+1)^(0+1664),f
 15037  2D38                     l8520:	
 15038  2D38  1435               	bsf	___lwdiv@quotient^(0+1664),0
 15039  2D39                     l8522:	
 15040  2D39  3001               	movlw	1
 15041  2D3A                     u9495:	
 15042  2D3A  36B0               	lsrf	(___lwdiv@divisor+1)^(0+1664),f
 15043  2D3B  0CAF               	rrf	___lwdiv@divisor^(0+1664),f
 15044  2D3C  0B89               	decfsz	9,f
 15045  2D3D  2D3A               	goto	u9495
 15046  2D3E                     l8524:	
 15047  2D3E  3001               	movlw	1
 15048  2D3F  02B4               	subwf	___lwdiv@counter^(0+1664),f
 15049  2D40  1D03               	btfss	3,2
 15050  2D41  2D43               	goto	u9501
 15051  2D42  2D44               	goto	u9500
 15052  2D43                     u9501:	
 15053  2D43  2D25               	goto	l8516
 15054  2D44                     u9500:	
 15055  2D44                     l8526:	
 15056  2D44  0836               	movf	(___lwdiv@quotient+1)^(0+1664),w
 15057  2D45  00B0               	movwf	(?___lwdiv+1)^(0+1664)
 15058  2D46  0835               	movf	___lwdiv@quotient^(0+1664),w
 15059  2D47  00AF               	movwf	?___lwdiv^(0+1664)
 15060  2D48                     l1673:	
 15061  2D48  0008               	return
 15062  2D49                     __end_of___lwdiv:	
 15063                           
 15064                           	psect	text16
 15065  2C2C                     __ptext16:	
 15066 ;; *************** function ___lmul *****************
 15067 ;; Defined at:
 15068 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
 15069 ;; Parameters:    Size  Location     Type
 15070 ;;  multiplier      4    0[BANK13] unsigned long 
 15071 ;;  multiplicand    4    4[BANK13] unsigned long 
 15072 ;; Auto vars:     Size  Location     Type
 15073 ;;  product         4    8[BANK13] unsigned long 
 15074 ;; Return value:  Size  Location     Type
 15075 ;;                  4    0[BANK13] unsigned long 
 15076 ;; Registers used:
 15077 ;;		wreg, status,2, status,0
 15078 ;; Tracked objects:
 15079 ;;		On entry : 0/0
 15080 ;;		On exit  : 0/0
 15081 ;;		Unchanged: 0/0
 15082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       8       0       0       0       0       0       0       0       0       0       0       0       0
 15084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       4       0       0       0       0       0       0       0       0       0       0       0       0
 15085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0      12       0       0       0       0       0       0       0       0       0       0       0       0
 15087 ;;Total ram usage:       12 bytes
 15088 ;; Hardware stack levels used:    1
 15089 ;; Hardware stack levels required when called:    4
 15090 ;; This function calls:
 15091 ;;		Nothing
 15092 ;; This function is called by:
 15093 ;;		_main
 15094 ;; This function uses a non-reentrant model
 15095 ;;
 15096                           
 15097                           
 15098                           ;psect for function ___lmul
 15099  2C2C                     ___lmul:	
 15100  2C2C                     l8352:	
 15101                           ;incstack = 0
 15102                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 15103                           
 15104  2C2C  3000               	movlw	0
 15105  2C2D  002D               	movlb	13	; select bank13
 15106  2C2E  00AB               	movwf	(___lmul@product+3)^(0+1664)
 15107  2C2F  3000               	movlw	0
 15108  2C30  00AA               	movwf	(___lmul@product+2)^(0+1664)
 15109  2C31  3000               	movlw	0
 15110  2C32  00A9               	movwf	(___lmul@product+1)^(0+1664)
 15111  2C33  3000               	movlw	0
 15112  2C34  00A8               	movwf	___lmul@product^(0+1664)
 15113  2C35                     l8354:	
 15114  2C35  1C20               	btfss	___lmul@multiplier^(0+1664),0
 15115  2C36  2C38               	goto	u9031
 15116  2C37  2C39               	goto	u9030
 15117  2C38                     u9031:	
 15118  2C38  2C41               	goto	l8358
 15119  2C39                     u9030:	
 15120  2C39                     l8356:	
 15121  2C39  0824               	movf	___lmul@multiplicand^(0+1664),w
 15122  2C3A  07A8               	addwf	___lmul@product^(0+1664),f
 15123  2C3B  0825               	movf	(___lmul@multiplicand+1)^(0+1664),w
 15124  2C3C  3DA9               	addwfc	(___lmul@product+1)^(0+1664),f
 15125  2C3D  0826               	movf	(___lmul@multiplicand+2)^(0+1664),w
 15126  2C3E  3DAA               	addwfc	(___lmul@product+2)^(0+1664),f
 15127  2C3F  0827               	movf	(___lmul@multiplicand+3)^(0+1664),w
 15128  2C40  3DAB               	addwfc	(___lmul@product+3)^(0+1664),f
 15129  2C41                     l8358:	
 15130  2C41  3001               	movlw	1
 15131  2C42                     u9045:	
 15132  2C42  35A4               	lslf	___lmul@multiplicand^(0+1664),f
 15133  2C43  0DA5               	rlf	(___lmul@multiplicand+1)^(0+1664),f
 15134  2C44  0DA6               	rlf	(___lmul@multiplicand+2)^(0+1664),f
 15135  2C45  0DA7               	rlf	(___lmul@multiplicand+3)^(0+1664),f
 15136  2C46  0B89               	decfsz	9,f
 15137  2C47  2C42               	goto	u9045
 15138  2C48                     l8360:	
 15139  2C48  3001               	movlw	1
 15140  2C49                     u9055:	
 15141  2C49  36A3               	lsrf	(___lmul@multiplier+3)^(0+1664),f
 15142  2C4A  0CA2               	rrf	(___lmul@multiplier+2)^(0+1664),f
 15143  2C4B  0CA1               	rrf	(___lmul@multiplier+1)^(0+1664),f
 15144  2C4C  0CA0               	rrf	___lmul@multiplier^(0+1664),f
 15145  2C4D  0B89               	decfsz	9,f
 15146  2C4E  2C49               	goto	u9055
 15147  2C4F  0823               	movf	(___lmul@multiplier+3)^(0+1664),w
 15148  2C50  0422               	iorwf	(___lmul@multiplier+2)^(0+1664),w
 15149  2C51  0421               	iorwf	(___lmul@multiplier+1)^(0+1664),w
 15150  2C52  0420               	iorwf	___lmul@multiplier^(0+1664),w
 15151  2C53  1D03               	skipz
 15152  2C54  2C56               	goto	u9061
 15153  2C55  2C57               	goto	u9060
 15154  2C56                     u9061:	
 15155  2C56  2C35               	goto	l8354
 15156  2C57                     u9060:	
 15157  2C57                     l8362:	
 15158  2C57  082B               	movf	(___lmul@product+3)^(0+1664),w
 15159  2C58  00A3               	movwf	(?___lmul+3)^(0+1664)
 15160  2C59  082A               	movf	(___lmul@product+2)^(0+1664),w
 15161  2C5A  00A2               	movwf	(?___lmul+2)^(0+1664)
 15162  2C5B  0829               	movf	(___lmul@product+1)^(0+1664),w
 15163  2C5C  00A1               	movwf	(?___lmul+1)^(0+1664)
 15164  2C5D  0828               	movf	___lmul@product^(0+1664),w
 15165  2C5E  00A0               	movwf	?___lmul^(0+1664)
 15166  2C5F                     l1407:	
 15167  2C5F  0008               	return
 15168  2C60                     __end_of___lmul:	
 15169                           
 15170                           	psect	text17
 15171  2D90                     __ptext17:	
 15172 ;; *************** function ___llmod *****************
 15173 ;; Defined at:
 15174 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\llmod.c"
 15175 ;; Parameters:    Size  Location     Type
 15176 ;;  divisor         4   26[BANK13] unsigned long 
 15177 ;;  dividend        4   30[BANK13] unsigned long 
 15178 ;; Auto vars:     Size  Location     Type
 15179 ;;  counter         1   35[BANK13] unsigned char 
 15180 ;; Return value:  Size  Location     Type
 15181 ;;                  4   26[BANK13] unsigned long 
 15182 ;; Registers used:
 15183 ;;		wreg, status,2, status,0
 15184 ;; Tracked objects:
 15185 ;;		On entry : 0/0
 15186 ;;		On exit  : 0/0
 15187 ;;		Unchanged: 0/0
 15188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       8       0       0       0       0       0       0       0       0       0       0       0       0
 15190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       1       0       0       0       0       0       0       0       0       0       0       0       0
 15191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       1       0       0       0       0       0       0       0       0       0       0       0       0
 15192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0      10       0       0       0       0       0       0       0       0       0       0       0       0
 15193 ;;Total ram usage:       10 bytes
 15194 ;; Hardware stack levels used:    1
 15195 ;; Hardware stack levels required when called:    4
 15196 ;; This function calls:
 15197 ;;		Nothing
 15198 ;; This function is called by:
 15199 ;;		_main
 15200 ;; This function uses a non-reentrant model
 15201 ;;
 15202                           
 15203                           
 15204                           ;psect for function ___llmod
 15205  2D90                     ___llmod:	
 15206  2D90                     l8484:	
 15207                           ;incstack = 0
 15208                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 15209                           
 15210  2D90  002D               	movlb	13	; select bank13
 15211  2D91  083D               	movf	(___llmod@divisor+3)^(0+1664),w
 15212  2D92  043C               	iorwf	(___llmod@divisor+2)^(0+1664),w
 15213  2D93  043B               	iorwf	(___llmod@divisor+1)^(0+1664),w
 15214  2D94  043A               	iorwf	___llmod@divisor^(0+1664),w
 15215  2D95  1903               	skipnz
 15216  2D96  2D98               	goto	u9381
 15217  2D97  2D99               	goto	u9380
 15218  2D98                     u9381:	
 15219  2D98  2DD2               	goto	l8500
 15220  2D99                     u9380:	
 15221  2D99                     l8486:	
 15222  2D99  01C3               	clrf	___llmod@counter^(0+1664)
 15223  2D9A  0AC3               	incf	___llmod@counter^(0+1664),f
 15224  2D9B  2DA7               	goto	l8490
 15225  2D9C                     l8488:	
 15226  2D9C  3001               	movlw	1
 15227  2D9D                     u9395:	
 15228  2D9D  35BA               	lslf	___llmod@divisor^(0+1664),f
 15229  2D9E  0DBB               	rlf	(___llmod@divisor+1)^(0+1664),f
 15230  2D9F  0DBC               	rlf	(___llmod@divisor+2)^(0+1664),f
 15231  2DA0  0DBD               	rlf	(___llmod@divisor+3)^(0+1664),f
 15232  2DA1  0B89               	decfsz	9,f
 15233  2DA2  2D9D               	goto	u9395
 15234  2DA3  3001               	movlw	1
 15235  2DA4  00C2               	movwf	??___llmod^(0+1664)
 15236  2DA5  0842               	movf	??___llmod^(0+1664),w
 15237  2DA6  07C3               	addwf	___llmod@counter^(0+1664),f
 15238  2DA7                     l8490:	
 15239  2DA7  1FBD               	btfss	(___llmod@divisor+3)^(0+1664),7
 15240  2DA8  2DAA               	goto	u9401
 15241  2DA9  2DAB               	goto	u9400
 15242  2DAA                     u9401:	
 15243  2DAA  2D9C               	goto	l8488
 15244  2DAB                     u9400:	
 15245  2DAB                     l8492:	
 15246  2DAB  083D               	movf	(___llmod@divisor+3)^(0+1664),w
 15247  2DAC  0241               	subwf	(___llmod@dividend+3)^(0+1664),w
 15248  2DAD  1D03               	skipz
 15249  2DAE  2DB9               	goto	u9415
 15250  2DAF  083C               	movf	(___llmod@divisor+2)^(0+1664),w
 15251  2DB0  0240               	subwf	(___llmod@dividend+2)^(0+1664),w
 15252  2DB1  1D03               	skipz
 15253  2DB2  2DB9               	goto	u9415
 15254  2DB3  083B               	movf	(___llmod@divisor+1)^(0+1664),w
 15255  2DB4  023F               	subwf	(___llmod@dividend+1)^(0+1664),w
 15256  2DB5  1D03               	skipz
 15257  2DB6  2DB9               	goto	u9415
 15258  2DB7  083A               	movf	___llmod@divisor^(0+1664),w
 15259  2DB8  023E               	subwf	___llmod@dividend^(0+1664),w
 15260  2DB9                     u9415:	
 15261  2DB9  1C03               	skipc
 15262  2DBA  2DBC               	goto	u9411
 15263  2DBB  2DBD               	goto	u9410
 15264  2DBC                     u9411:	
 15265  2DBC  2DC5               	goto	l8496
 15266  2DBD                     u9410:	
 15267  2DBD                     l8494:	
 15268  2DBD  083A               	movf	___llmod@divisor^(0+1664),w
 15269  2DBE  02BE               	subwf	___llmod@dividend^(0+1664),f
 15270  2DBF  083B               	movf	(___llmod@divisor+1)^(0+1664),w
 15271  2DC0  3BBF               	subwfb	(___llmod@dividend+1)^(0+1664),f
 15272  2DC1  083C               	movf	(___llmod@divisor+2)^(0+1664),w
 15273  2DC2  3BC0               	subwfb	(___llmod@dividend+2)^(0+1664),f
 15274  2DC3  083D               	movf	(___llmod@divisor+3)^(0+1664),w
 15275  2DC4  3BC1               	subwfb	(___llmod@dividend+3)^(0+1664),f
 15276  2DC5                     l8496:	
 15277  2DC5  3001               	movlw	1
 15278  2DC6                     u9425:	
 15279  2DC6  36BD               	lsrf	(___llmod@divisor+3)^(0+1664),f
 15280  2DC7  0CBC               	rrf	(___llmod@divisor+2)^(0+1664),f
 15281  2DC8  0CBB               	rrf	(___llmod@divisor+1)^(0+1664),f
 15282  2DC9  0CBA               	rrf	___llmod@divisor^(0+1664),f
 15283  2DCA  0B89               	decfsz	9,f
 15284  2DCB  2DC6               	goto	u9425
 15285  2DCC                     l8498:	
 15286  2DCC  3001               	movlw	1
 15287  2DCD  02C3               	subwf	___llmod@counter^(0+1664),f
 15288  2DCE  1D03               	btfss	3,2
 15289  2DCF  2DD1               	goto	u9431
 15290  2DD0  2DD2               	goto	u9430
 15291  2DD1                     u9431:	
 15292  2DD1  2DAB               	goto	l8492
 15293  2DD2                     u9430:	
 15294  2DD2                     l8500:	
 15295  2DD2  0841               	movf	(___llmod@dividend+3)^(0+1664),w
 15296  2DD3  00BD               	movwf	(?___llmod+3)^(0+1664)
 15297  2DD4  0840               	movf	(___llmod@dividend+2)^(0+1664),w
 15298  2DD5  00BC               	movwf	(?___llmod+2)^(0+1664)
 15299  2DD6  083F               	movf	(___llmod@dividend+1)^(0+1664),w
 15300  2DD7  00BB               	movwf	(?___llmod+1)^(0+1664)
 15301  2DD8  083E               	movf	___llmod@dividend^(0+1664),w
 15302  2DD9  00BA               	movwf	?___llmod^(0+1664)
 15303  2DDA                     l1623:	
 15304  2DDA  0008               	return
 15305  2DDB                     __end_of___llmod:	
 15306                           
 15307                           	psect	text18
 15308  2E8A                     __ptext18:	
 15309 ;; *************** function ___lldiv *****************
 15310 ;; Defined at:
 15311 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
 15312 ;; Parameters:    Size  Location     Type
 15313 ;;  divisor         4   12[BANK13] unsigned long 
 15314 ;;  dividend        4   16[BANK13] unsigned long 
 15315 ;; Auto vars:     Size  Location     Type
 15316 ;;  quotient        4   21[BANK13] unsigned long 
 15317 ;;  counter         1   25[BANK13] unsigned char 
 15318 ;; Return value:  Size  Location     Type
 15319 ;;                  4   12[BANK13] unsigned long 
 15320 ;; Registers used:
 15321 ;;		wreg, status,2, status,0
 15322 ;; Tracked objects:
 15323 ;;		On entry : 0/0
 15324 ;;		On exit  : 0/0
 15325 ;;		Unchanged: 0/0
 15326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       8       0       0       0       0       0       0       0       0       0       0       0       0
 15328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       5       0       0       0       0       0       0       0       0       0       0       0       0
 15329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       1       0       0       0       0       0       0       0       0       0       0       0       0
 15330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0      14       0       0       0       0       0       0       0       0       0       0       0       0
 15331 ;;Total ram usage:       14 bytes
 15332 ;; Hardware stack levels used:    1
 15333 ;; Hardware stack levels required when called:    4
 15334 ;; This function calls:
 15335 ;;		Nothing
 15336 ;; This function is called by:
 15337 ;;		_main
 15338 ;; This function uses a non-reentrant model
 15339 ;;
 15340                           
 15341                           
 15342                           ;psect for function ___lldiv
 15343  2E8A                     ___lldiv:	
 15344  2E8A                     l8366:	
 15345                           ;incstack = 0
 15346                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 15347                           
 15348  2E8A  3000               	movlw	0
 15349  2E8B  002D               	movlb	13	; select bank13
 15350  2E8C  00B8               	movwf	(___lldiv@quotient+3)^(0+1664)
 15351  2E8D  3000               	movlw	0
 15352  2E8E  00B7               	movwf	(___lldiv@quotient+2)^(0+1664)
 15353  2E8F  3000               	movlw	0
 15354  2E90  00B6               	movwf	(___lldiv@quotient+1)^(0+1664)
 15355  2E91  3000               	movlw	0
 15356  2E92  00B5               	movwf	___lldiv@quotient^(0+1664)
 15357  2E93  082F               	movf	(___lldiv@divisor+3)^(0+1664),w
 15358  2E94  042E               	iorwf	(___lldiv@divisor+2)^(0+1664),w
 15359  2E95  042D               	iorwf	(___lldiv@divisor+1)^(0+1664),w
 15360  2E96  042C               	iorwf	___lldiv@divisor^(0+1664),w
 15361  2E97  1903               	skipnz
 15362  2E98  2E9A               	goto	u9071
 15363  2E99  2E9B               	goto	u9070
 15364  2E9A                     u9071:	
 15365  2E9A  2EDC               	goto	l8386
 15366  2E9B                     u9070:	
 15367  2E9B                     l8368:	
 15368  2E9B  01B9               	clrf	___lldiv@counter^(0+1664)
 15369  2E9C  0AB9               	incf	___lldiv@counter^(0+1664),f
 15370  2E9D  2EA9               	goto	l8372
 15371  2E9E                     l8370:	
 15372  2E9E  3001               	movlw	1
 15373  2E9F                     u9085:	
 15374  2E9F  35AC               	lslf	___lldiv@divisor^(0+1664),f
 15375  2EA0  0DAD               	rlf	(___lldiv@divisor+1)^(0+1664),f
 15376  2EA1  0DAE               	rlf	(___lldiv@divisor+2)^(0+1664),f
 15377  2EA2  0DAF               	rlf	(___lldiv@divisor+3)^(0+1664),f
 15378  2EA3  0B89               	decfsz	9,f
 15379  2EA4  2E9F               	goto	u9085
 15380  2EA5  3001               	movlw	1
 15381  2EA6  00B4               	movwf	??___lldiv^(0+1664)
 15382  2EA7  0834               	movf	??___lldiv^(0+1664),w
 15383  2EA8  07B9               	addwf	___lldiv@counter^(0+1664),f
 15384  2EA9                     l8372:	
 15385  2EA9  1FAF               	btfss	(___lldiv@divisor+3)^(0+1664),7
 15386  2EAA  2EAC               	goto	u9091
 15387  2EAB  2EAD               	goto	u9090
 15388  2EAC                     u9091:	
 15389  2EAC  2E9E               	goto	l8370
 15390  2EAD                     u9090:	
 15391  2EAD                     l8374:	
 15392  2EAD  3001               	movlw	1
 15393  2EAE                     u9105:	
 15394  2EAE  35B5               	lslf	___lldiv@quotient^(0+1664),f
 15395  2EAF  0DB6               	rlf	(___lldiv@quotient+1)^(0+1664),f
 15396  2EB0  0DB7               	rlf	(___lldiv@quotient+2)^(0+1664),f
 15397  2EB1  0DB8               	rlf	(___lldiv@quotient+3)^(0+1664),f
 15398  2EB2  0B89               	decfsz	9,f
 15399  2EB3  2EAE               	goto	u9105
 15400  2EB4                     l8376:	
 15401  2EB4  082F               	movf	(___lldiv@divisor+3)^(0+1664),w
 15402  2EB5  0233               	subwf	(___lldiv@dividend+3)^(0+1664),w
 15403  2EB6  1D03               	skipz
 15404  2EB7  2EC2               	goto	u9115
 15405  2EB8  082E               	movf	(___lldiv@divisor+2)^(0+1664),w
 15406  2EB9  0232               	subwf	(___lldiv@dividend+2)^(0+1664),w
 15407  2EBA  1D03               	skipz
 15408  2EBB  2EC2               	goto	u9115
 15409  2EBC  082D               	movf	(___lldiv@divisor+1)^(0+1664),w
 15410  2EBD  0231               	subwf	(___lldiv@dividend+1)^(0+1664),w
 15411  2EBE  1D03               	skipz
 15412  2EBF  2EC2               	goto	u9115
 15413  2EC0  082C               	movf	___lldiv@divisor^(0+1664),w
 15414  2EC1  0230               	subwf	___lldiv@dividend^(0+1664),w
 15415  2EC2                     u9115:	
 15416  2EC2  1C03               	skipc
 15417  2EC3  2EC5               	goto	u9111
 15418  2EC4  2EC6               	goto	u9110
 15419  2EC5                     u9111:	
 15420  2EC5  2ECF               	goto	l8382
 15421  2EC6                     u9110:	
 15422  2EC6                     l8378:	
 15423  2EC6  082C               	movf	___lldiv@divisor^(0+1664),w
 15424  2EC7  02B0               	subwf	___lldiv@dividend^(0+1664),f
 15425  2EC8  082D               	movf	(___lldiv@divisor+1)^(0+1664),w
 15426  2EC9  3BB1               	subwfb	(___lldiv@dividend+1)^(0+1664),f
 15427  2ECA  082E               	movf	(___lldiv@divisor+2)^(0+1664),w
 15428  2ECB  3BB2               	subwfb	(___lldiv@dividend+2)^(0+1664),f
 15429  2ECC  082F               	movf	(___lldiv@divisor+3)^(0+1664),w
 15430  2ECD  3BB3               	subwfb	(___lldiv@dividend+3)^(0+1664),f
 15431  2ECE                     l8380:	
 15432  2ECE  1435               	bsf	___lldiv@quotient^(0+1664),0
 15433  2ECF                     l8382:	
 15434  2ECF  3001               	movlw	1
 15435  2ED0                     u9125:	
 15436  2ED0  36AF               	lsrf	(___lldiv@divisor+3)^(0+1664),f
 15437  2ED1  0CAE               	rrf	(___lldiv@divisor+2)^(0+1664),f
 15438  2ED2  0CAD               	rrf	(___lldiv@divisor+1)^(0+1664),f
 15439  2ED3  0CAC               	rrf	___lldiv@divisor^(0+1664),f
 15440  2ED4  0B89               	decfsz	9,f
 15441  2ED5  2ED0               	goto	u9125
 15442  2ED6                     l8384:	
 15443  2ED6  3001               	movlw	1
 15444  2ED7  02B9               	subwf	___lldiv@counter^(0+1664),f
 15445  2ED8  1D03               	btfss	3,2
 15446  2ED9  2EDB               	goto	u9131
 15447  2EDA  2EDC               	goto	u9130
 15448  2EDB                     u9131:	
 15449  2EDB  2EAD               	goto	l8374
 15450  2EDC                     u9130:	
 15451  2EDC                     l8386:	
 15452  2EDC  0838               	movf	(___lldiv@quotient+3)^(0+1664),w
 15453  2EDD  00AF               	movwf	(?___lldiv+3)^(0+1664)
 15454  2EDE  0837               	movf	(___lldiv@quotient+2)^(0+1664),w
 15455  2EDF  00AE               	movwf	(?___lldiv+2)^(0+1664)
 15456  2EE0  0836               	movf	(___lldiv@quotient+1)^(0+1664),w
 15457  2EE1  00AD               	movwf	(?___lldiv+1)^(0+1664)
 15458  2EE2  0835               	movf	___lldiv@quotient^(0+1664),w
 15459  2EE3  00AC               	movwf	?___lldiv^(0+1664)
 15460  2EE4                     l1429:	
 15461  2EE4  0008               	return
 15462  2EE5                     __end_of___lldiv:	
 15463                           
 15464                           	psect	text19
 15465  212B                     __ptext19:	
 15466 ;; *************** function ___fltol *****************
 15467 ;; Defined at:
 15468 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 15469 ;; Parameters:    Size  Location     Type
 15470 ;;  f1              4   49[BANK13] unsigned long 
 15471 ;; Auto vars:     Size  Location     Type
 15472 ;;  exp1            1   59[BANK13] unsigned char 
 15473 ;;  sign1           1   58[BANK13] unsigned char 
 15474 ;; Return value:  Size  Location     Type
 15475 ;;                  4   49[BANK13] long 
 15476 ;; Registers used:
 15477 ;;		wreg, status,2, status,0
 15478 ;; Tracked objects:
 15479 ;;		On entry : 0/0
 15480 ;;		On exit  : 0/0
 15481 ;;		Unchanged: 0/0
 15482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       4       0       0       0       0       0       0       0       0       0       0       0       0
 15484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 15485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       5       0       0       0       0       0       0       0       0       0       0       0       0
 15486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0      11       0       0       0       0       0       0       0       0       0       0       0       0
 15487 ;;Total ram usage:       11 bytes
 15488 ;; Hardware stack levels used:    1
 15489 ;; Hardware stack levels required when called:    4
 15490 ;; This function calls:
 15491 ;;		Nothing
 15492 ;; This function is called by:
 15493 ;;		_main
 15494 ;; This function uses a non-reentrant model
 15495 ;;
 15496                           
 15497                           
 15498                           ;psect for function ___fltol
 15499  212B                     ___fltol:	
 15500  212B                     l8448:	
 15501                           ;incstack = 0
 15502                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 15503                           
 15504  212B  1003               	clrc
 15505  212C  002D               	movlb	13	; select bank13
 15506  212D  0D53               	rlf	(___fltol@f1+2)^(0+1664),w
 15507  212E  0D54               	rlf	(___fltol@f1+3)^(0+1664),w
 15508  212F  00D5               	movwf	??___fltol^(0+1664)
 15509  2130  0855               	movf	??___fltol^(0+1664),w
 15510  2131  00DB               	movwf	___fltol@exp1^(0+1664)
 15511  2132  085B               	movf	___fltol@exp1^(0+1664),w
 15512  2133  1D03               	btfss	3,2
 15513  2134  2936               	goto	u9281
 15514  2135  2937               	goto	u9280
 15515  2136                     u9281:	
 15516  2136  2940               	goto	l8454
 15517  2137                     u9280:	
 15518  2137                     l8450:	
 15519  2137  3000               	movlw	0
 15520  2138  00D4               	movwf	(?___fltol+3)^(0+1664)
 15521  2139  3000               	movlw	0
 15522  213A  00D3               	movwf	(?___fltol+2)^(0+1664)
 15523  213B  3000               	movlw	0
 15524  213C  00D2               	movwf	(?___fltol+1)^(0+1664)
 15525  213D  3000               	movlw	0
 15526  213E  00D1               	movwf	?___fltol^(0+1664)
 15527  213F  299F               	goto	l1587
 15528  2140                     l8454:	
 15529  2140  0851               	movf	___fltol@f1^(0+1664),w
 15530  2141  00D5               	movwf	??___fltol^(0+1664)
 15531  2142  0852               	movf	(___fltol@f1+1)^(0+1664),w
 15532  2143  00D6               	movwf	(??___fltol^(0+1664)+1)
 15533  2144  0853               	movf	(___fltol@f1+2)^(0+1664),w
 15534  2145  00D7               	movwf	(??___fltol^(0+1664)+2)
 15535  2146  0854               	movf	(___fltol@f1+3)^(0+1664),w
 15536  2147  00D8               	movwf	(??___fltol^(0+1664)+3)
 15537  2148  301F               	movlw	31
 15538  2149                     u9295:	
 15539  2149  36D8               	lsrf	(??___fltol^(0+1664)+3),f
 15540  214A  0CD7               	rrf	(??___fltol^(0+1664)+2),f
 15541  214B  0CD6               	rrf	(??___fltol^(0+1664)+1),f
 15542  214C  0CD5               	rrf	??___fltol^(0+1664),f
 15543  214D                     u9290:	
 15544  214D  0B89               	decfsz	9,f
 15545  214E  2949               	goto	u9295
 15546  214F  0855               	movf	??___fltol^(0+1664),w
 15547  2150  00D9               	movwf	(??___fltol+4)^(0+1664)
 15548  2151  0859               	movf	(??___fltol+4)^(0+1664),w
 15549  2152  00DA               	movwf	___fltol@sign1^(0+1664)
 15550  2153                     l8456:	
 15551  2153  17D3               	bsf	(___fltol@f1^(0+1664)+2),7
 15552  2154                     l8458:	
 15553  2154  30FF               	movlw	255
 15554  2155  05D1               	andwf	___fltol@f1^(0+1664),f
 15555  2156  30FF               	movlw	255
 15556  2157  05D2               	andwf	(___fltol@f1+1)^(0+1664),f
 15557  2158  30FF               	movlw	255
 15558  2159  05D3               	andwf	(___fltol@f1+2)^(0+1664),f
 15559  215A  3000               	movlw	0
 15560  215B  05D4               	andwf	(___fltol@f1+3)^(0+1664),f
 15561  215C                     l8460:	
 15562  215C  3096               	movlw	150
 15563  215D  02DB               	subwf	___fltol@exp1^(0+1664),f
 15564  215E                     l8462:	
 15565  215E  1FDB               	btfss	___fltol@exp1^(0+1664),7
 15566  215F  2961               	goto	u9301
 15567  2160  2962               	goto	u9300
 15568  2161                     u9301:	
 15569  2161  297A               	goto	l8472
 15570  2162                     u9300:	
 15571  2162                     l8464:	
 15572  2162  085B               	movf	___fltol@exp1^(0+1664),w
 15573  2163  3A80               	xorlw	128
 15574  2164  3E97               	addlw	151
 15575  2165  1803               	skipnc
 15576  2166  2968               	goto	u9311
 15577  2167  2969               	goto	u9310
 15578  2168                     u9311:	
 15579  2168  296A               	goto	l8470
 15580  2169                     u9310:	
 15581  2169  2937               	goto	l8450
 15582  216A                     l8470:	
 15583  216A  3001               	movlw	1
 15584  216B                     u9325:	
 15585  216B  36D4               	lsrf	(___fltol@f1+3)^(0+1664),f
 15586  216C  0CD3               	rrf	(___fltol@f1+2)^(0+1664),f
 15587  216D  0CD2               	rrf	(___fltol@f1+1)^(0+1664),f
 15588  216E  0CD1               	rrf	___fltol@f1^(0+1664),f
 15589  216F  0B89               	decfsz	9,f
 15590  2170  296B               	goto	u9325
 15591  2171  3001               	movlw	1
 15592  2172  00D5               	movwf	??___fltol^(0+1664)
 15593  2173  0855               	movf	??___fltol^(0+1664),w
 15594  2174  07DB               	addwf	___fltol@exp1^(0+1664),f
 15595  2175  1D03               	btfss	3,2
 15596  2176  2978               	goto	u9331
 15597  2177  2979               	goto	u9330
 15598  2178                     u9331:	
 15599  2178  296A               	goto	l8470
 15600  2179                     u9330:	
 15601  2179  298F               	goto	l8480
 15602  217A                     l8472:	
 15603  217A  3020               	movlw	32
 15604  217B  025B               	subwf	___fltol@exp1^(0+1664),w
 15605  217C  1C03               	skipc
 15606  217D  297F               	goto	u9341
 15607  217E  2980               	goto	u9340
 15608  217F                     u9341:	
 15609  217F  298A               	goto	l1594
 15610  2180                     u9340:	
 15611  2180  2937               	goto	l8450
 15612  2181                     l8478:	
 15613  2181  3001               	movlw	1
 15614  2182                     u9355:	
 15615  2182  35D1               	lslf	___fltol@f1^(0+1664),f
 15616  2183  0DD2               	rlf	(___fltol@f1+1)^(0+1664),f
 15617  2184  0DD3               	rlf	(___fltol@f1+2)^(0+1664),f
 15618  2185  0DD4               	rlf	(___fltol@f1+3)^(0+1664),f
 15619  2186  0B89               	decfsz	9,f
 15620  2187  2982               	goto	u9355
 15621  2188  3001               	movlw	1
 15622  2189  02DB               	subwf	___fltol@exp1^(0+1664),f
 15623  218A                     l1594:	
 15624  218A  085B               	movf	___fltol@exp1^(0+1664),w
 15625  218B  1D03               	btfss	3,2
 15626  218C  298E               	goto	u9361
 15627  218D  298F               	goto	u9360
 15628  218E                     u9361:	
 15629  218E  2981               	goto	l8478
 15630  218F                     u9360:	
 15631  218F                     l8480:	
 15632  218F  085A               	movf	___fltol@sign1^(0+1664),w
 15633  2190  1903               	btfsc	3,2
 15634  2191  2993               	goto	u9371
 15635  2192  2994               	goto	u9370
 15636  2193                     u9371:	
 15637  2193  299F               	goto	l1597
 15638  2194                     u9370:	
 15639  2194                     l8482:	
 15640  2194  09D1               	comf	___fltol@f1^(0+1664),f
 15641  2195  09D2               	comf	(___fltol@f1+1)^(0+1664),f
 15642  2196  09D3               	comf	(___fltol@f1+2)^(0+1664),f
 15643  2197  09D4               	comf	(___fltol@f1+3)^(0+1664),f
 15644  2198  0AD1               	incf	___fltol@f1^(0+1664),f
 15645  2199  1903               	skipnz
 15646  219A  0AD2               	incf	(___fltol@f1+1)^(0+1664),f
 15647  219B  1903               	skipnz
 15648  219C  0AD3               	incf	(___fltol@f1+2)^(0+1664),f
 15649  219D  1903               	skipnz
 15650  219E  0AD4               	incf	(___fltol@f1+3)^(0+1664),f
 15651  219F                     l1597:	
 15652  219F                     l1587:	
 15653  219F  0008               	return
 15654  21A0                     __end_of___fltol:	
 15655                           
 15656                           	psect	text20
 15657  100A                     __ptext20:	
 15658 ;; *************** function ___flmul *****************
 15659 ;; Defined at:
 15660 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 15661 ;; Parameters:    Size  Location     Type
 15662 ;;  b               4   23[BANK13] long 
 15663 ;;  a               4   27[BANK13] long 
 15664 ;; Auto vars:     Size  Location     Type
 15665 ;;  prod            4   43[BANK13] struct .
 15666 ;;  grs             4   38[BANK13] unsigned long 
 15667 ;;  temp            2   47[BANK13] struct .
 15668 ;;  bexp            1   42[BANK13] unsigned char 
 15669 ;;  aexp            1   37[BANK13] unsigned char 
 15670 ;;  sign            1   36[BANK13] unsigned char 
 15671 ;; Return value:  Size  Location     Type
 15672 ;;                  4   23[BANK13] unsigned char 
 15673 ;; Registers used:
 15674 ;;		wreg, status,2, status,0, pclath, cstack
 15675 ;; Tracked objects:
 15676 ;;		On entry : 0/0
 15677 ;;		On exit  : 0/0
 15678 ;;		Unchanged: 0/0
 15679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       8       0       0       0       0       0       0       0       0       0       0       0       0
 15681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0      13       0       0       0       0       0       0       0       0       0       0       0       0
 15682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       5       0       0       0       0       0       0       0       0       0       0       0       0
 15683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0      26       0       0       0       0       0       0       0       0       0       0       0       0
 15684 ;;Total ram usage:       26 bytes
 15685 ;; Hardware stack levels used:    1
 15686 ;; Hardware stack levels required when called:    5
 15687 ;; This function calls:
 15688 ;;		__Umul8_16
 15689 ;; This function is called by:
 15690 ;;		_main
 15691 ;; This function uses a non-reentrant model
 15692 ;;
 15693                           
 15694                           
 15695                           ;psect for function ___flmul
 15696  100A                     ___flmul:	
 15697  100A                     l8670:	
 15698                           ;incstack = 0
 15699                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 15700                           
 15701  100A  002D               	movlb	13	; select bank13
 15702  100B  083A               	movf	(___flmul@b^(0+1664)+3),w
 15703  100C  3980               	andlw	128
 15704  100D  00BF               	movwf	??___flmul^(0+1664)
 15705  100E  083F               	movf	??___flmul^(0+1664),w
 15706  100F  00C4               	movwf	___flmul@sign^(0+1664)
 15707  1010                     l8672:	
 15708  1010  353A               	lslf	(___flmul@b^(0+1664)+3),w
 15709  1011  00BF               	movwf	??___flmul^(0+1664)
 15710  1012  083F               	movf	??___flmul^(0+1664),w
 15711  1013  00CA               	movwf	___flmul@bexp^(0+1664)
 15712  1014                     l8674:	
 15713  1014  1FB9               	btfss	(___flmul@b^(0+1664)+2),7
 15714  1015  2817               	goto	u9801
 15715  1016  2818               	goto	u9800
 15716  1017                     u9801:	
 15717  1017  2819               	goto	l8678
 15718  1018                     u9800:	
 15719  1018                     l8676:	
 15720  1018  144A               	bsf	___flmul@bexp^(0+1664),0
 15721  1019                     l8678:	
 15722  1019  084A               	movf	___flmul@bexp^(0+1664),w
 15723  101A  1903               	btfsc	3,2
 15724  101B  281D               	goto	u9811
 15725  101C  281E               	goto	u9810
 15726  101D                     u9811:	
 15727  101D  282D               	goto	l8686
 15728  101E                     u9810:	
 15729  101E                     l8680:	
 15730  101E  0A4A               	incf	___flmul@bexp^(0+1664),w
 15731  101F  1D03               	btfss	3,2
 15732  1020  2822               	goto	u9821
 15733  1021  2823               	goto	u9820
 15734  1022                     u9821:	
 15735  1022  282B               	goto	l8684
 15736  1023                     u9820:	
 15737  1023                     l8682:	
 15738  1023  3000               	movlw	0
 15739  1024  00BA               	movwf	(___flmul@b+3)^(0+1664)
 15740  1025  3000               	movlw	0
 15741  1026  00B9               	movwf	(___flmul@b+2)^(0+1664)
 15742  1027  3000               	movlw	0
 15743  1028  00B8               	movwf	(___flmul@b+1)^(0+1664)
 15744  1029  3000               	movlw	0
 15745  102A  00B7               	movwf	___flmul@b^(0+1664)
 15746  102B                     l8684:	
 15747  102B  17B9               	bsf	(___flmul@b^(0+1664)+2),7
 15748  102C  2835               	goto	l8688
 15749  102D                     l8686:	
 15750  102D  3000               	movlw	0
 15751  102E  00BA               	movwf	(___flmul@b+3)^(0+1664)
 15752  102F  3000               	movlw	0
 15753  1030  00B9               	movwf	(___flmul@b+2)^(0+1664)
 15754  1031  3000               	movlw	0
 15755  1032  00B8               	movwf	(___flmul@b+1)^(0+1664)
 15756  1033  3000               	movlw	0
 15757  1034  00B7               	movwf	___flmul@b^(0+1664)
 15758  1035                     l8688:	
 15759  1035  083E               	movf	(___flmul@a^(0+1664)+3),w
 15760  1036  3980               	andlw	128
 15761  1037  00BF               	movwf	??___flmul^(0+1664)
 15762  1038  083F               	movf	??___flmul^(0+1664),w
 15763  1039  06C4               	xorwf	___flmul@sign^(0+1664),f
 15764  103A                     l8690:	
 15765  103A  353E               	lslf	(___flmul@a^(0+1664)+3),w
 15766  103B  00BF               	movwf	??___flmul^(0+1664)
 15767  103C  083F               	movf	??___flmul^(0+1664),w
 15768  103D  00C5               	movwf	___flmul@aexp^(0+1664)
 15769  103E                     l8692:	
 15770  103E  1FBD               	btfss	(___flmul@a^(0+1664)+2),7
 15771  103F  2841               	goto	u9831
 15772  1040  2842               	goto	u9830
 15773  1041                     u9831:	
 15774  1041  2843               	goto	l8696
 15775  1042                     u9830:	
 15776  1042                     l8694:	
 15777  1042  1445               	bsf	___flmul@aexp^(0+1664),0
 15778  1043                     l8696:	
 15779  1043  0845               	movf	___flmul@aexp^(0+1664),w
 15780  1044  1903               	btfsc	3,2
 15781  1045  2847               	goto	u9841
 15782  1046  2848               	goto	u9840
 15783  1047                     u9841:	
 15784  1047  2857               	goto	l8704
 15785  1048                     u9840:	
 15786  1048                     l8698:	
 15787  1048  0A45               	incf	___flmul@aexp^(0+1664),w
 15788  1049  1D03               	btfss	3,2
 15789  104A  284C               	goto	u9851
 15790  104B  284D               	goto	u9850
 15791  104C                     u9851:	
 15792  104C  2855               	goto	l8702
 15793  104D                     u9850:	
 15794  104D                     l8700:	
 15795  104D  3000               	movlw	0
 15796  104E  00BE               	movwf	(___flmul@a+3)^(0+1664)
 15797  104F  3000               	movlw	0
 15798  1050  00BD               	movwf	(___flmul@a+2)^(0+1664)
 15799  1051  3000               	movlw	0
 15800  1052  00BC               	movwf	(___flmul@a+1)^(0+1664)
 15801  1053  3000               	movlw	0
 15802  1054  00BB               	movwf	___flmul@a^(0+1664)
 15803  1055                     l8702:	
 15804  1055  17BD               	bsf	(___flmul@a^(0+1664)+2),7
 15805  1056  285F               	goto	l8706
 15806  1057                     l8704:	
 15807  1057  3000               	movlw	0
 15808  1058  00BE               	movwf	(___flmul@a+3)^(0+1664)
 15809  1059  3000               	movlw	0
 15810  105A  00BD               	movwf	(___flmul@a+2)^(0+1664)
 15811  105B  3000               	movlw	0
 15812  105C  00BC               	movwf	(___flmul@a+1)^(0+1664)
 15813  105D  3000               	movlw	0
 15814  105E  00BB               	movwf	___flmul@a^(0+1664)
 15815  105F                     l8706:	
 15816  105F  0845               	movf	___flmul@aexp^(0+1664),w
 15817  1060  1903               	btfsc	3,2
 15818  1061  2863               	goto	u9861
 15819  1062  2864               	goto	u9860
 15820  1063                     u9861:	
 15821  1063  2869               	goto	l8710
 15822  1064                     u9860:	
 15823  1064                     l8708:	
 15824  1064  084A               	movf	___flmul@bexp^(0+1664),w
 15825  1065  1D03               	btfss	3,2
 15826  1066  2868               	goto	u9871
 15827  1067  2869               	goto	u9870
 15828  1068                     u9871:	
 15829  1068  2872               	goto	l8714
 15830  1069                     u9870:	
 15831  1069                     l8710:	
 15832  1069  3000               	movlw	0
 15833  106A  00BA               	movwf	(?___flmul+3)^(0+1664)
 15834  106B  3000               	movlw	0
 15835  106C  00B9               	movwf	(?___flmul+2)^(0+1664)
 15836  106D  3000               	movlw	0
 15837  106E  00B8               	movwf	(?___flmul+1)^(0+1664)
 15838  106F  3000               	movlw	0
 15839  1070  00B7               	movwf	?___flmul^(0+1664)
 15840  1071  2A60               	goto	l1790
 15841  1072                     l8714:	
 15842  1072  0837               	movf	___flmul@b^(0+1664),w
 15843  1073  00BF               	movwf	??___flmul^(0+1664)
 15844  1074  083F               	movf	??___flmul^(0+1664),w
 15845  1075  00A0               	movwf	__Umul8_16@multiplicand^(0+1664)
 15846  1076  083D               	movf	(___flmul@a^(0+1664)+2),w
 15847  1077  31AB  23B5  3190   	fcall	__Umul8_16
 15848  107A  002D               	movlb	13	; select bank13
 15849  107B  0821               	movf	(?__Umul8_16+1)^(0+1664),w
 15850  107C  00D0               	movwf	(___flmul@temp+1)^(0+1664)
 15851  107D  0820               	movf	?__Umul8_16^(0+1664),w
 15852  107E  00CF               	movwf	___flmul@temp^(0+1664)
 15853  107F                     l8716:	
 15854  107F  084F               	movf	___flmul@temp^(0+1664),w
 15855  1080  00BF               	movwf	??___flmul^(0+1664)
 15856  1081  01C0               	clrf	(??___flmul^(0+1664)+1)
 15857  1082  01C1               	clrf	(??___flmul^(0+1664)+2)
 15858  1083  01C2               	clrf	(??___flmul^(0+1664)+3)
 15859  1084  0842               	movf	(??___flmul+3)^(0+1664),w
 15860  1085  00C9               	movwf	(___flmul@grs+3)^(0+1664)
 15861  1086  0841               	movf	(??___flmul+2)^(0+1664),w
 15862  1087  00C8               	movwf	(___flmul@grs+2)^(0+1664)
 15863  1088  0840               	movf	(??___flmul+1)^(0+1664),w
 15864  1089  00C7               	movwf	(___flmul@grs+1)^(0+1664)
 15865  108A  083F               	movf	??___flmul^(0+1664),w
 15866  108B  00C6               	movwf	___flmul@grs^(0+1664)
 15867  108C                     l8718:	
 15868  108C  0850               	movf	(___flmul@temp^(0+1664)+1),w
 15869  108D  00BF               	movwf	??___flmul^(0+1664)
 15870  108E  01C0               	clrf	(??___flmul^(0+1664)+1)
 15871  108F  01C1               	clrf	(??___flmul^(0+1664)+2)
 15872  1090  01C2               	clrf	(??___flmul^(0+1664)+3)
 15873  1091  0842               	movf	(??___flmul+3)^(0+1664),w
 15874  1092  00CE               	movwf	(___flmul@prod+3)^(0+1664)
 15875  1093  0841               	movf	(??___flmul+2)^(0+1664),w
 15876  1094  00CD               	movwf	(___flmul@prod+2)^(0+1664)
 15877  1095  0840               	movf	(??___flmul+1)^(0+1664),w
 15878  1096  00CC               	movwf	(___flmul@prod+1)^(0+1664)
 15879  1097  083F               	movf	??___flmul^(0+1664),w
 15880  1098  00CB               	movwf	___flmul@prod^(0+1664)
 15881  1099  0838               	movf	(___flmul@b^(0+1664)+1),w
 15882  109A  00BF               	movwf	??___flmul^(0+1664)
 15883  109B  083F               	movf	??___flmul^(0+1664),w
 15884  109C  00A0               	movwf	__Umul8_16@multiplicand^(0+1664)
 15885  109D  083C               	movf	(___flmul@a^(0+1664)+1),w
 15886  109E  31AB  23B5  3190   	fcall	__Umul8_16
 15887  10A1  002D               	movlb	13	; select bank13
 15888  10A2  0821               	movf	(?__Umul8_16+1)^(0+1664),w
 15889  10A3  00D0               	movwf	(___flmul@temp+1)^(0+1664)
 15890  10A4  0820               	movf	?__Umul8_16^(0+1664),w
 15891  10A5  00CF               	movwf	___flmul@temp^(0+1664)
 15892  10A6                     l8720:	
 15893  10A6  084F               	movf	___flmul@temp^(0+1664),w
 15894  10A7  00BF               	movwf	??___flmul^(0+1664)
 15895  10A8  01C0               	clrf	(??___flmul^(0+1664)+1)
 15896  10A9  01C1               	clrf	(??___flmul^(0+1664)+2)
 15897  10AA  01C2               	clrf	(??___flmul^(0+1664)+3)
 15898  10AB  083F               	movf	??___flmul^(0+1664),w
 15899  10AC  07C6               	addwf	___flmul@grs^(0+1664),f
 15900  10AD  0840               	movf	(??___flmul+1)^(0+1664),w
 15901  10AE  3DC7               	addwfc	(___flmul@grs+1)^(0+1664),f
 15902  10AF  0841               	movf	(??___flmul+2)^(0+1664),w
 15903  10B0  3DC8               	addwfc	(___flmul@grs+2)^(0+1664),f
 15904  10B1  0842               	movf	(??___flmul+3)^(0+1664),w
 15905  10B2  3DC9               	addwfc	(___flmul@grs+3)^(0+1664),f
 15906  10B3                     l8722:	
 15907  10B3  0850               	movf	(___flmul@temp^(0+1664)+1),w
 15908  10B4  00BF               	movwf	??___flmul^(0+1664)
 15909  10B5  01C0               	clrf	(??___flmul^(0+1664)+1)
 15910  10B6  01C1               	clrf	(??___flmul^(0+1664)+2)
 15911  10B7  01C2               	clrf	(??___flmul^(0+1664)+3)
 15912  10B8  083F               	movf	??___flmul^(0+1664),w
 15913  10B9  07CB               	addwf	___flmul@prod^(0+1664),f
 15914  10BA  0840               	movf	(??___flmul+1)^(0+1664),w
 15915  10BB  3DCC               	addwfc	(___flmul@prod+1)^(0+1664),f
 15916  10BC  0841               	movf	(??___flmul+2)^(0+1664),w
 15917  10BD  3DCD               	addwfc	(___flmul@prod+2)^(0+1664),f
 15918  10BE  0842               	movf	(??___flmul+3)^(0+1664),w
 15919  10BF  3DCE               	addwfc	(___flmul@prod+3)^(0+1664),f
 15920  10C0  0839               	movf	(___flmul@b^(0+1664)+2),w
 15921  10C1  00BF               	movwf	??___flmul^(0+1664)
 15922  10C2  083F               	movf	??___flmul^(0+1664),w
 15923  10C3  00A0               	movwf	__Umul8_16@multiplicand^(0+1664)
 15924  10C4  083B               	movf	___flmul@a^(0+1664),w
 15925  10C5  31AB  23B5  3190   	fcall	__Umul8_16
 15926  10C8  002D               	movlb	13	; select bank13
 15927  10C9  0821               	movf	(?__Umul8_16+1)^(0+1664),w
 15928  10CA  00D0               	movwf	(___flmul@temp+1)^(0+1664)
 15929  10CB  0820               	movf	?__Umul8_16^(0+1664),w
 15930  10CC  00CF               	movwf	___flmul@temp^(0+1664)
 15931  10CD                     l8724:	
 15932  10CD  084F               	movf	___flmul@temp^(0+1664),w
 15933  10CE  00BF               	movwf	??___flmul^(0+1664)
 15934  10CF  01C0               	clrf	(??___flmul^(0+1664)+1)
 15935  10D0  01C1               	clrf	(??___flmul^(0+1664)+2)
 15936  10D1  01C2               	clrf	(??___flmul^(0+1664)+3)
 15937  10D2  083F               	movf	??___flmul^(0+1664),w
 15938  10D3  07C6               	addwf	___flmul@grs^(0+1664),f
 15939  10D4  0840               	movf	(??___flmul+1)^(0+1664),w
 15940  10D5  3DC7               	addwfc	(___flmul@grs+1)^(0+1664),f
 15941  10D6  0841               	movf	(??___flmul+2)^(0+1664),w
 15942  10D7  3DC8               	addwfc	(___flmul@grs+2)^(0+1664),f
 15943  10D8  0842               	movf	(??___flmul+3)^(0+1664),w
 15944  10D9  3DC9               	addwfc	(___flmul@grs+3)^(0+1664),f
 15945  10DA                     l8726:	
 15946  10DA  0850               	movf	(___flmul@temp^(0+1664)+1),w
 15947  10DB  00BF               	movwf	??___flmul^(0+1664)
 15948  10DC  01C0               	clrf	(??___flmul^(0+1664)+1)
 15949  10DD  01C1               	clrf	(??___flmul^(0+1664)+2)
 15950  10DE  01C2               	clrf	(??___flmul^(0+1664)+3)
 15951  10DF  083F               	movf	??___flmul^(0+1664),w
 15952  10E0  07CB               	addwf	___flmul@prod^(0+1664),f
 15953  10E1  0840               	movf	(??___flmul+1)^(0+1664),w
 15954  10E2  3DCC               	addwfc	(___flmul@prod+1)^(0+1664),f
 15955  10E3  0841               	movf	(??___flmul+2)^(0+1664),w
 15956  10E4  3DCD               	addwfc	(___flmul@prod+2)^(0+1664),f
 15957  10E5  0842               	movf	(??___flmul+3)^(0+1664),w
 15958  10E6  3DCE               	addwfc	(___flmul@prod+3)^(0+1664),f
 15959  10E7                     l8728:	
 15960  10E7  3008               	movlw	8
 15961  10E8                     u9885:	
 15962  10E8  35C6               	lslf	___flmul@grs^(0+1664),f
 15963  10E9  0DC7               	rlf	(___flmul@grs+1)^(0+1664),f
 15964  10EA  0DC8               	rlf	(___flmul@grs+2)^(0+1664),f
 15965  10EB  0DC9               	rlf	(___flmul@grs+3)^(0+1664),f
 15966  10EC  0B89               	decfsz	9,f
 15967  10ED  28E8               	goto	u9885
 15968  10EE                     l8730:	
 15969  10EE  0838               	movf	(___flmul@b^(0+1664)+1),w
 15970  10EF  00BF               	movwf	??___flmul^(0+1664)
 15971  10F0  083F               	movf	??___flmul^(0+1664),w
 15972  10F1  00A0               	movwf	__Umul8_16@multiplicand^(0+1664)
 15973  10F2  083B               	movf	___flmul@a^(0+1664),w
 15974  10F3  31AB  23B5  3190   	fcall	__Umul8_16
 15975  10F6  002D               	movlb	13	; select bank13
 15976  10F7  0821               	movf	(?__Umul8_16+1)^(0+1664),w
 15977  10F8  00D0               	movwf	(___flmul@temp+1)^(0+1664)
 15978  10F9  0820               	movf	?__Umul8_16^(0+1664),w
 15979  10FA  00CF               	movwf	___flmul@temp^(0+1664)
 15980  10FB                     l8732:	
 15981  10FB  084F               	movf	___flmul@temp^(0+1664),w
 15982  10FC  07C6               	addwf	___flmul@grs^(0+1664),f
 15983  10FD  0850               	movf	(___flmul@temp+1)^(0+1664),w
 15984  10FE  3DC7               	addwfc	(___flmul@grs+1)^(0+1664),f
 15985  10FF  3000               	movlw	0
 15986  1100  3DC8               	addwfc	(___flmul@grs+2)^(0+1664),f
 15987  1101  3DC9               	addwfc	(___flmul@grs+3)^(0+1664),f
 15988  1102                     l8734:	
 15989  1102  0837               	movf	___flmul@b^(0+1664),w
 15990  1103  00BF               	movwf	??___flmul^(0+1664)
 15991  1104  083F               	movf	??___flmul^(0+1664),w
 15992  1105  00A0               	movwf	__Umul8_16@multiplicand^(0+1664)
 15993  1106  083C               	movf	(___flmul@a^(0+1664)+1),w
 15994  1107  31AB  23B5  3190   	fcall	__Umul8_16
 15995  110A  002D               	movlb	13	; select bank13
 15996  110B  0821               	movf	(?__Umul8_16+1)^(0+1664),w
 15997  110C  00D0               	movwf	(___flmul@temp+1)^(0+1664)
 15998  110D  0820               	movf	?__Umul8_16^(0+1664),w
 15999  110E  00CF               	movwf	___flmul@temp^(0+1664)
 16000  110F                     l8736:	
 16001  110F  084F               	movf	___flmul@temp^(0+1664),w
 16002  1110  07C6               	addwf	___flmul@grs^(0+1664),f
 16003  1111  0850               	movf	(___flmul@temp+1)^(0+1664),w
 16004  1112  3DC7               	addwfc	(___flmul@grs+1)^(0+1664),f
 16005  1113  3000               	movlw	0
 16006  1114  3DC8               	addwfc	(___flmul@grs+2)^(0+1664),f
 16007  1115  3DC9               	addwfc	(___flmul@grs+3)^(0+1664),f
 16008  1116                     l8738:	
 16009  1116  3008               	movlw	8
 16010  1117                     u9895:	
 16011  1117  35C6               	lslf	___flmul@grs^(0+1664),f
 16012  1118  0DC7               	rlf	(___flmul@grs+1)^(0+1664),f
 16013  1119  0DC8               	rlf	(___flmul@grs+2)^(0+1664),f
 16014  111A  0DC9               	rlf	(___flmul@grs+3)^(0+1664),f
 16015  111B  0B89               	decfsz	9,f
 16016  111C  2917               	goto	u9895
 16017  111D  0837               	movf	___flmul@b^(0+1664),w
 16018  111E  00BF               	movwf	??___flmul^(0+1664)
 16019  111F  083F               	movf	??___flmul^(0+1664),w
 16020  1120  00A0               	movwf	__Umul8_16@multiplicand^(0+1664)
 16021  1121  083B               	movf	___flmul@a^(0+1664),w
 16022  1122  31AB  23B5  3190   	fcall	__Umul8_16
 16023  1125  002D               	movlb	13	; select bank13
 16024  1126  0821               	movf	(?__Umul8_16+1)^(0+1664),w
 16025  1127  00D0               	movwf	(___flmul@temp+1)^(0+1664)
 16026  1128  0820               	movf	?__Umul8_16^(0+1664),w
 16027  1129  00CF               	movwf	___flmul@temp^(0+1664)
 16028  112A                     l8740:	
 16029  112A  084F               	movf	___flmul@temp^(0+1664),w
 16030  112B  07C6               	addwf	___flmul@grs^(0+1664),f
 16031  112C  0850               	movf	(___flmul@temp+1)^(0+1664),w
 16032  112D  3DC7               	addwfc	(___flmul@grs+1)^(0+1664),f
 16033  112E  3000               	movlw	0
 16034  112F  3DC8               	addwfc	(___flmul@grs+2)^(0+1664),f
 16035  1130  3DC9               	addwfc	(___flmul@grs+3)^(0+1664),f
 16036  1131                     l8742:	
 16037  1131  0838               	movf	(___flmul@b^(0+1664)+1),w
 16038  1132  00BF               	movwf	??___flmul^(0+1664)
 16039  1133  083F               	movf	??___flmul^(0+1664),w
 16040  1134  00A0               	movwf	__Umul8_16@multiplicand^(0+1664)
 16041  1135  083D               	movf	(___flmul@a^(0+1664)+2),w
 16042  1136  31AB  23B5  3190   	fcall	__Umul8_16
 16043  1139  002D               	movlb	13	; select bank13
 16044  113A  0821               	movf	(?__Umul8_16+1)^(0+1664),w
 16045  113B  00D0               	movwf	(___flmul@temp+1)^(0+1664)
 16046  113C  0820               	movf	?__Umul8_16^(0+1664),w
 16047  113D  00CF               	movwf	___flmul@temp^(0+1664)
 16048  113E  084F               	movf	___flmul@temp^(0+1664),w
 16049  113F  07CB               	addwf	___flmul@prod^(0+1664),f
 16050  1140  0850               	movf	(___flmul@temp+1)^(0+1664),w
 16051  1141  3DCC               	addwfc	(___flmul@prod+1)^(0+1664),f
 16052  1142  3000               	movlw	0
 16053  1143  3DCD               	addwfc	(___flmul@prod+2)^(0+1664),f
 16054  1144  3DCE               	addwfc	(___flmul@prod+3)^(0+1664),f
 16055  1145                     l8744:	
 16056  1145  0839               	movf	(___flmul@b^(0+1664)+2),w
 16057  1146  00BF               	movwf	??___flmul^(0+1664)
 16058  1147  083F               	movf	??___flmul^(0+1664),w
 16059  1148  00A0               	movwf	__Umul8_16@multiplicand^(0+1664)
 16060  1149  083C               	movf	(___flmul@a^(0+1664)+1),w
 16061  114A  31AB  23B5  3190   	fcall	__Umul8_16
 16062  114D  002D               	movlb	13	; select bank13
 16063  114E  0821               	movf	(?__Umul8_16+1)^(0+1664),w
 16064  114F  00D0               	movwf	(___flmul@temp+1)^(0+1664)
 16065  1150  0820               	movf	?__Umul8_16^(0+1664),w
 16066  1151  00CF               	movwf	___flmul@temp^(0+1664)
 16067  1152                     l8746:	
 16068  1152  084F               	movf	___flmul@temp^(0+1664),w
 16069  1153  07CB               	addwf	___flmul@prod^(0+1664),f
 16070  1154  0850               	movf	(___flmul@temp+1)^(0+1664),w
 16071  1155  3DCC               	addwfc	(___flmul@prod+1)^(0+1664),f
 16072  1156  3000               	movlw	0
 16073  1157  3DCD               	addwfc	(___flmul@prod+2)^(0+1664),f
 16074  1158  3DCE               	addwfc	(___flmul@prod+3)^(0+1664),f
 16075  1159  0839               	movf	(___flmul@b^(0+1664)+2),w
 16076  115A  00BF               	movwf	??___flmul^(0+1664)
 16077  115B  083F               	movf	??___flmul^(0+1664),w
 16078  115C  00A0               	movwf	__Umul8_16@multiplicand^(0+1664)
 16079  115D  083D               	movf	(___flmul@a^(0+1664)+2),w
 16080  115E  31AB  23B5  3190   	fcall	__Umul8_16
 16081  1161  002D               	movlb	13	; select bank13
 16082  1162  0821               	movf	(?__Umul8_16+1)^(0+1664),w
 16083  1163  00D0               	movwf	(___flmul@temp+1)^(0+1664)
 16084  1164  0820               	movf	?__Umul8_16^(0+1664),w
 16085  1165  00CF               	movwf	___flmul@temp^(0+1664)
 16086  1166                     l8748:	
 16087  1166  084F               	movf	___flmul@temp^(0+1664),w
 16088  1167  00BF               	movwf	??___flmul^(0+1664)
 16089  1168  0850               	movf	(___flmul@temp+1)^(0+1664),w
 16090  1169  00C0               	movwf	(??___flmul^(0+1664)+1)
 16091  116A  01C1               	clrf	(??___flmul^(0+1664)+2)
 16092  116B  01C2               	clrf	(??___flmul^(0+1664)+3)
 16093  116C  3008               	movlw	8
 16094  116D                     u9905:	
 16095  116D  35BF               	lslf	??___flmul^(0+1664),f
 16096  116E  0DC0               	rlf	(??___flmul^(0+1664)+1),f
 16097  116F  0DC1               	rlf	(??___flmul^(0+1664)+2),f
 16098  1170  0DC2               	rlf	(??___flmul^(0+1664)+3),f
 16099  1171                     u9900:	
 16100  1171  0B89               	decfsz	9,f
 16101  1172  296D               	goto	u9905
 16102  1173  083F               	movf	??___flmul^(0+1664),w
 16103  1174  07CB               	addwf	___flmul@prod^(0+1664),f
 16104  1175  0840               	movf	(??___flmul+1)^(0+1664),w
 16105  1176  3DCC               	addwfc	(___flmul@prod+1)^(0+1664),f
 16106  1177  0841               	movf	(??___flmul+2)^(0+1664),w
 16107  1178  3DCD               	addwfc	(___flmul@prod+2)^(0+1664),f
 16108  1179  0842               	movf	(??___flmul+3)^(0+1664),w
 16109  117A  3DCE               	addwfc	(___flmul@prod+3)^(0+1664),f
 16110  117B                     l8750:	
 16111  117B  0846               	movf	___flmul@grs^(0+1664),w
 16112  117C  00BF               	movwf	??___flmul^(0+1664)
 16113  117D  0847               	movf	(___flmul@grs+1)^(0+1664),w
 16114  117E  00C0               	movwf	(??___flmul^(0+1664)+1)
 16115  117F  0848               	movf	(___flmul@grs+2)^(0+1664),w
 16116  1180  00C1               	movwf	(??___flmul^(0+1664)+2)
 16117  1181  0849               	movf	(___flmul@grs+3)^(0+1664),w
 16118  1182  00C2               	movwf	(??___flmul^(0+1664)+3)
 16119  1183  3018               	movlw	24
 16120  1184                     u9915:	
 16121  1184  36C2               	lsrf	(??___flmul^(0+1664)+3),f
 16122  1185  0CC1               	rrf	(??___flmul^(0+1664)+2),f
 16123  1186  0CC0               	rrf	(??___flmul^(0+1664)+1),f
 16124  1187  0CBF               	rrf	??___flmul^(0+1664),f
 16125  1188                     u9910:	
 16126  1188  0B89               	decfsz	9,f
 16127  1189  2984               	goto	u9915
 16128  118A  083F               	movf	??___flmul^(0+1664),w
 16129  118B  07CB               	addwf	___flmul@prod^(0+1664),f
 16130  118C  0840               	movf	(??___flmul+1)^(0+1664),w
 16131  118D  3DCC               	addwfc	(___flmul@prod+1)^(0+1664),f
 16132  118E  0841               	movf	(??___flmul+2)^(0+1664),w
 16133  118F  3DCD               	addwfc	(___flmul@prod+2)^(0+1664),f
 16134  1190  0842               	movf	(??___flmul+3)^(0+1664),w
 16135  1191  3DCE               	addwfc	(___flmul@prod+3)^(0+1664),f
 16136  1192                     l8752:	
 16137  1192  3008               	movlw	8
 16138  1193                     u9925:	
 16139  1193  35C6               	lslf	___flmul@grs^(0+1664),f
 16140  1194  0DC7               	rlf	(___flmul@grs+1)^(0+1664),f
 16141  1195  0DC8               	rlf	(___flmul@grs+2)^(0+1664),f
 16142  1196  0DC9               	rlf	(___flmul@grs+3)^(0+1664),f
 16143  1197  0B89               	decfsz	9,f
 16144  1198  2993               	goto	u9925
 16145  1199                     l8754:	
 16146  1199  084A               	movf	___flmul@bexp^(0+1664),w
 16147  119A  0745               	addwf	___flmul@aexp^(0+1664),w
 16148  119B  00BF               	movwf	??___flmul^(0+1664)
 16149  119C  01C0               	clrf	(??___flmul^(0+1664)+1)
 16150  119D  0DC0               	rlf	(??___flmul+1)^(0+1664),f
 16151  119E  083F               	movf	??___flmul^(0+1664),w
 16152  119F  3E82               	addlw	130
 16153  11A0  00CF               	movwf	___flmul@temp^(0+1664)
 16154  11A1  30FF               	movlw	255
 16155  11A2  3D40               	addwfc	(??___flmul+1)^(0+1664),w
 16156  11A3  00D0               	movwf	(___flmul@temp+1)^(0+1664)
 16157  11A4  29BC               	goto	l8766
 16158  11A5                     l8756:	
 16159  11A5  3001               	movlw	1
 16160  11A6                     u9935:	
 16161  11A6  35CB               	lslf	___flmul@prod^(0+1664),f
 16162  11A7  0DCC               	rlf	(___flmul@prod+1)^(0+1664),f
 16163  11A8  0DCD               	rlf	(___flmul@prod+2)^(0+1664),f
 16164  11A9  0DCE               	rlf	(___flmul@prod+3)^(0+1664),f
 16165  11AA  0B89               	decfsz	9,f
 16166  11AB  29A6               	goto	u9935
 16167  11AC                     l8758:	
 16168  11AC  1FC9               	btfss	(___flmul@grs+3)^(0+1664),7
 16169  11AD  29AF               	goto	u9941
 16170  11AE  29B0               	goto	u9940
 16171  11AF                     u9941:	
 16172  11AF  29B1               	goto	l8762
 16173  11B0                     u9940:	
 16174  11B0                     l8760:	
 16175  11B0  144B               	bsf	___flmul@prod^(0+1664),0
 16176  11B1                     l8762:	
 16177  11B1  3001               	movlw	1
 16178  11B2                     u9955:	
 16179  11B2  35C6               	lslf	___flmul@grs^(0+1664),f
 16180  11B3  0DC7               	rlf	(___flmul@grs+1)^(0+1664),f
 16181  11B4  0DC8               	rlf	(___flmul@grs+2)^(0+1664),f
 16182  11B5  0DC9               	rlf	(___flmul@grs+3)^(0+1664),f
 16183  11B6  0B89               	decfsz	9,f
 16184  11B7  29B2               	goto	u9955
 16185  11B8                     l8764:	
 16186  11B8  30FF               	movlw	255
 16187  11B9  07CF               	addwf	___flmul@temp^(0+1664),f
 16188  11BA  30FF               	movlw	255
 16189  11BB  3DD0               	addwfc	(___flmul@temp+1)^(0+1664),f
 16190  11BC                     l8766:	
 16191  11BC  1FCD               	btfss	(___flmul@prod+2)^(0+1664),7
 16192  11BD  29BF               	goto	u9961
 16193  11BE  29C0               	goto	u9960
 16194  11BF                     u9961:	
 16195  11BF  29A5               	goto	l8756
 16196  11C0                     u9960:	
 16197  11C0                     l8768:	
 16198  11C0  01C5               	clrf	___flmul@aexp^(0+1664)
 16199  11C1                     l8770:	
 16200  11C1  1FC9               	btfss	(___flmul@grs+3)^(0+1664),7
 16201  11C2  29C4               	goto	u9971
 16202  11C3  29C5               	goto	u9970
 16203  11C4                     u9971:	
 16204  11C4  29E1               	goto	l8778
 16205  11C5                     u9970:	
 16206  11C5                     l8772:	
 16207  11C5  30FF               	movlw	255
 16208  11C6  0546               	andwf	___flmul@grs^(0+1664),w
 16209  11C7  00BF               	movwf	??___flmul^(0+1664)
 16210  11C8  30FF               	movlw	255
 16211  11C9  0547               	andwf	(___flmul@grs+1)^(0+1664),w
 16212  11CA  00C0               	movwf	(??___flmul^(0+1664)+1)
 16213  11CB  30FF               	movlw	255
 16214  11CC  0548               	andwf	(___flmul@grs+2)^(0+1664),w
 16215  11CD  00C1               	movwf	(??___flmul^(0+1664)+2)
 16216  11CE  307F               	movlw	127
 16217  11CF  0549               	andwf	(___flmul@grs+3)^(0+1664),w
 16218  11D0  00C2               	movwf	(??___flmul^(0+1664)+3)
 16219  11D1  0842               	movf	(??___flmul+3)^(0+1664),w
 16220  11D2  0441               	iorwf	(??___flmul+2)^(0+1664),w
 16221  11D3  0440               	iorwf	(??___flmul+1)^(0+1664),w
 16222  11D4  043F               	iorwf	??___flmul^(0+1664),w
 16223  11D5  1903               	skipnz
 16224  11D6  29D8               	goto	u9981
 16225  11D7  29D9               	goto	u9980
 16226  11D8                     u9981:	
 16227  11D8  29DC               	goto	l1796
 16228  11D9                     u9980:	
 16229  11D9                     l8774:	
 16230  11D9  01C5               	clrf	___flmul@aexp^(0+1664)
 16231  11DA  0AC5               	incf	___flmul@aexp^(0+1664),f
 16232  11DB  29E1               	goto	l8778
 16233  11DC                     l1796:	
 16234  11DC  1C4B               	btfss	___flmul@prod^(0+1664),0
 16235  11DD  29DF               	goto	u9991
 16236  11DE  29E0               	goto	u9990
 16237  11DF                     u9991:	
 16238  11DF  29E1               	goto	l8778
 16239  11E0                     u9990:	
 16240  11E0  29D9               	goto	l8774
 16241  11E1                     l8778:	
 16242  11E1  0845               	movf	___flmul@aexp^(0+1664),w
 16243  11E2  1903               	btfsc	3,2
 16244  11E3  29E5               	goto	u10001
 16245  11E4  29E6               	goto	u10000
 16246  11E5                     u10001:	
 16247  11E5  2A0E               	goto	l8788
 16248  11E6                     u10000:	
 16249  11E6                     l8780:	
 16250  11E6  3001               	movlw	1
 16251  11E7  07CB               	addwf	___flmul@prod^(0+1664),f
 16252  11E8  3000               	movlw	0
 16253  11E9  3DCC               	addwfc	(___flmul@prod+1)^(0+1664),f
 16254  11EA  3000               	movlw	0
 16255  11EB  3DCD               	addwfc	(___flmul@prod+2)^(0+1664),f
 16256  11EC  3000               	movlw	0
 16257  11ED  3DCE               	addwfc	(___flmul@prod+3)^(0+1664),f
 16258  11EE                     l8782:	
 16259  11EE  1C4E               	btfss	(___flmul@prod+3)^(0+1664),0
 16260  11EF  29F1               	goto	u10011
 16261  11F0  29F2               	goto	u10010
 16262  11F1                     u10011:	
 16263  11F1  2A0E               	goto	l8788
 16264  11F2                     u10010:	
 16265  11F2                     l8784:	
 16266  11F2  084B               	movf	___flmul@prod^(0+1664),w
 16267  11F3  00BF               	movwf	??___flmul^(0+1664)
 16268  11F4  084C               	movf	(___flmul@prod+1)^(0+1664),w
 16269  11F5  00C0               	movwf	(??___flmul^(0+1664)+1)
 16270  11F6  084D               	movf	(___flmul@prod+2)^(0+1664),w
 16271  11F7  00C1               	movwf	(??___flmul^(0+1664)+2)
 16272  11F8  084E               	movf	(___flmul@prod+3)^(0+1664),w
 16273  11F9  00C2               	movwf	(??___flmul^(0+1664)+3)
 16274  11FA  3001               	movlw	1
 16275  11FB  00C3               	movwf	(??___flmul+4)^(0+1664)
 16276  11FC                     u10025:	
 16277  11FC  37C2               	asrf	(??___flmul^(0+1664)+3),f
 16278  11FD  0CC1               	rrf	(??___flmul^(0+1664)+2),f
 16279  11FE  0CC0               	rrf	(??___flmul^(0+1664)+1),f
 16280  11FF  0CBF               	rrf	??___flmul^(0+1664),f
 16281  1200                     u10020:	
 16282  1200  0BC3               	decfsz	(??___flmul+4)^(0+1664),f
 16283  1201  29FC               	goto	u10025
 16284  1202  0842               	movf	(??___flmul+3)^(0+1664),w
 16285  1203  00CE               	movwf	(___flmul@prod+3)^(0+1664)
 16286  1204  0841               	movf	(??___flmul+2)^(0+1664),w
 16287  1205  00CD               	movwf	(___flmul@prod+2)^(0+1664)
 16288  1206  0840               	movf	(??___flmul+1)^(0+1664),w
 16289  1207  00CC               	movwf	(___flmul@prod+1)^(0+1664)
 16290  1208  083F               	movf	??___flmul^(0+1664),w
 16291  1209  00CB               	movwf	___flmul@prod^(0+1664)
 16292  120A                     l8786:	
 16293  120A  3001               	movlw	1
 16294  120B  07CF               	addwf	___flmul@temp^(0+1664),f
 16295  120C  3000               	movlw	0
 16296  120D  3DD0               	addwfc	(___flmul@temp+1)^(0+1664),f
 16297  120E                     l8788:	
 16298  120E  0850               	movf	(___flmul@temp+1)^(0+1664),w
 16299  120F  3A80               	xorlw	128
 16300  1210  00BF               	movwf	??___flmul^(0+1664)
 16301  1211  3080               	movlw	128
 16302  1212  023F               	subwf	??___flmul^(0+1664),w
 16303  1213  1D03               	skipz
 16304  1214  2A17               	goto	u10035
 16305  1215  30FF               	movlw	255
 16306  1216  024F               	subwf	___flmul@temp^(0+1664),w
 16307  1217                     u10035:	
 16308  1217  1C03               	skipc
 16309  1218  2A1A               	goto	u10031
 16310  1219  2A1B               	goto	u10030
 16311  121A                     u10031:	
 16312  121A  2A25               	goto	l8792
 16313  121B                     u10030:	
 16314  121B                     l8790:	
 16315  121B  307F               	movlw	127
 16316  121C  002D               	movlb	13	; select bank13
 16317  121D  00CE               	movwf	(___flmul@prod+3)^(0+1664)
 16318  121E  3080               	movlw	128
 16319  121F  00CD               	movwf	(___flmul@prod+2)^(0+1664)
 16320  1220  3000               	movlw	0
 16321  1221  00CC               	movwf	(___flmul@prod+1)^(0+1664)
 16322  1222  3000               	movlw	0
 16323  1223  00CB               	movwf	___flmul@prod^(0+1664)
 16324  1224  2A54               	goto	l1802
 16325  1225                     l8792:	
 16326  1225  002D               	movlb	13	; select bank13
 16327  1226  0850               	movf	(___flmul@temp+1)^(0+1664),w
 16328  1227  3A80               	xorlw	128
 16329  1228  00BF               	movwf	??___flmul^(0+1664)
 16330  1229  3080               	movlw	128
 16331  122A  023F               	subwf	??___flmul^(0+1664),w
 16332  122B  1D03               	skipz
 16333  122C  2A2F               	goto	u10045
 16334  122D  3001               	movlw	1
 16335  122E  024F               	subwf	___flmul@temp^(0+1664),w
 16336  122F                     u10045:	
 16337  122F  1803               	skipnc
 16338  1230  2A32               	goto	u10041
 16339  1231  2A33               	goto	u10040
 16340  1232                     u10041:	
 16341  1232  2A3E               	goto	l8798
 16342  1233                     u10040:	
 16343  1233                     l8794:	
 16344  1233  3000               	movlw	0
 16345  1234  002D               	movlb	13	; select bank13
 16346  1235  00CE               	movwf	(___flmul@prod+3)^(0+1664)
 16347  1236  3000               	movlw	0
 16348  1237  00CD               	movwf	(___flmul@prod+2)^(0+1664)
 16349  1238  3000               	movlw	0
 16350  1239  00CC               	movwf	(___flmul@prod+1)^(0+1664)
 16351  123A  3000               	movlw	0
 16352  123B  00CB               	movwf	___flmul@prod^(0+1664)
 16353  123C                     l8796:	
 16354  123C  01C4               	clrf	___flmul@sign^(0+1664)
 16355  123D  2A54               	goto	l1802
 16356  123E                     l8798:	
 16357  123E  002D               	movlb	13	; select bank13
 16358  123F  084F               	movf	___flmul@temp^(0+1664),w
 16359  1240  00BF               	movwf	??___flmul^(0+1664)
 16360  1241  083F               	movf	??___flmul^(0+1664),w
 16361  1242  00CA               	movwf	___flmul@bexp^(0+1664)
 16362  1243  30FF               	movlw	255
 16363  1244  05CB               	andwf	___flmul@prod^(0+1664),f
 16364  1245  30FF               	movlw	255
 16365  1246  05CC               	andwf	(___flmul@prod+1)^(0+1664),f
 16366  1247  307F               	movlw	127
 16367  1248  05CD               	andwf	(___flmul@prod+2)^(0+1664),f
 16368  1249  3000               	movlw	0
 16369  124A  05CE               	andwf	(___flmul@prod+3)^(0+1664),f
 16370  124B                     l8800:	
 16371  124B  1C4A               	btfss	___flmul@bexp^(0+1664),0
 16372  124C  2A4E               	goto	u10051
 16373  124D  2A4F               	goto	u10050
 16374  124E                     u10051:	
 16375  124E  2A50               	goto	l8804
 16376  124F                     u10050:	
 16377  124F                     l8802:	
 16378  124F  17CD               	bsf	(___flmul@prod^(0+1664)+2),7
 16379  1250                     l8804:	
 16380  1250  364A               	lsrf	___flmul@bexp^(0+1664),w
 16381  1251  00BF               	movwf	??___flmul^(0+1664)
 16382  1252  083F               	movf	??___flmul^(0+1664),w
 16383  1253  00CE               	movwf	(___flmul@prod^(0+1664)+3)
 16384  1254                     l1802:	
 16385  1254  0844               	movf	___flmul@sign^(0+1664),w
 16386  1255  00BF               	movwf	??___flmul^(0+1664)
 16387  1256  083F               	movf	??___flmul^(0+1664),w
 16388  1257  04CE               	iorwf	(___flmul@prod^(0+1664)+3),f
 16389  1258                     l8806:	
 16390  1258  084E               	movf	(___flmul@prod+3)^(0+1664),w
 16391  1259  00BA               	movwf	(?___flmul+3)^(0+1664)
 16392  125A  084D               	movf	(___flmul@prod+2)^(0+1664),w
 16393  125B  00B9               	movwf	(?___flmul+2)^(0+1664)
 16394  125C  084C               	movf	(___flmul@prod+1)^(0+1664),w
 16395  125D  00B8               	movwf	(?___flmul+1)^(0+1664)
 16396  125E  084B               	movf	___flmul@prod^(0+1664),w
 16397  125F  00B7               	movwf	?___flmul^(0+1664)
 16398  1260                     l1790:	
 16399  1260  0008               	return
 16400  1261                     __end_of___flmul:	
 16401                           
 16402                           	psect	text21
 16403  2BB5                     __ptext21:	
 16404 ;; *************** function __Umul8_16 *****************
 16405 ;; Defined at:
 16406 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul8_16.c"
 16407 ;; Parameters:    Size  Location     Type
 16408 ;;  multiplier      1    wreg     unsigned char 
 16409 ;;  multiplicand    1    0[BANK13] unsigned char 
 16410 ;; Auto vars:     Size  Location     Type
 16411 ;;  multiplier      1    8[BANK13] unsigned char 
 16412 ;;  word_mpld       2    6[BANK13] unsigned int 
 16413 ;;  product         2    4[BANK13] unsigned int 
 16414 ;; Return value:  Size  Location     Type
 16415 ;;                  2    0[BANK13] unsigned int 
 16416 ;; Registers used:
 16417 ;;		wreg, status,2, status,0
 16418 ;; Tracked objects:
 16419 ;;		On entry : 0/0
 16420 ;;		On exit  : 0/0
 16421 ;;		Unchanged: 0/0
 16422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 16424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       5       0       0       0       0       0       0       0       0       0       0       0       0
 16425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 16426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       9       0       0       0       0       0       0       0       0       0       0       0       0
 16427 ;;Total ram usage:        9 bytes
 16428 ;; Hardware stack levels used:    1
 16429 ;; Hardware stack levels required when called:    4
 16430 ;; This function calls:
 16431 ;;		Nothing
 16432 ;; This function is called by:
 16433 ;;		___flmul
 16434 ;; This function uses a non-reentrant model
 16435 ;;
 16436                           
 16437                           
 16438                           ;psect for function __Umul8_16
 16439  2BB5                     __Umul8_16:	
 16440                           
 16441                           ;incstack = 0
 16442                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 16443                           ;__Umul8_16@multiplier stored from wreg
 16444  2BB5  002D               	movlb	13	; select bank13
 16445  2BB6  00A8               	movwf	__Umul8_16@multiplier^(0+1664)
 16446  2BB7                     l8098:	
 16447  2BB7  01A4               	clrf	__Umul8_16@product^(0+1664)
 16448  2BB8  01A5               	clrf	(__Umul8_16@product+1)^(0+1664)
 16449  2BB9                     l8100:	
 16450  2BB9  0820               	movf	__Umul8_16@multiplicand^(0+1664),w
 16451  2BBA  00A2               	movwf	??__Umul8_16^(0+1664)
 16452  2BBB  01A3               	clrf	(??__Umul8_16^(0+1664)+1)
 16453  2BBC  0822               	movf	??__Umul8_16^(0+1664),w
 16454  2BBD  00A6               	movwf	__Umul8_16@word_mpld^(0+1664)
 16455  2BBE  0823               	movf	(??__Umul8_16+1)^(0+1664),w
 16456  2BBF  00A7               	movwf	(__Umul8_16@word_mpld+1)^(0+1664)
 16457  2BC0                     l8102:	
 16458  2BC0  1C28               	btfss	__Umul8_16@multiplier^(0+1664),0
 16459  2BC1  2BC3               	goto	u8791
 16460  2BC2  2BC4               	goto	u8790
 16461  2BC3                     u8791:	
 16462  2BC3  2BC8               	goto	l1900
 16463  2BC4                     u8790:	
 16464  2BC4                     l8104:	
 16465  2BC4  0826               	movf	__Umul8_16@word_mpld^(0+1664),w
 16466  2BC5  07A4               	addwf	__Umul8_16@product^(0+1664),f
 16467  2BC6  0827               	movf	(__Umul8_16@word_mpld+1)^(0+1664),w
 16468  2BC7  3DA5               	addwfc	(__Umul8_16@product+1)^(0+1664),f
 16469  2BC8                     l1900:	
 16470  2BC8  3001               	movlw	1
 16471  2BC9                     u8805:	
 16472  2BC9  35A6               	lslf	__Umul8_16@word_mpld^(0+1664),f
 16473  2BCA  0DA7               	rlf	(__Umul8_16@word_mpld+1)^(0+1664),f
 16474  2BCB  0B89               	decfsz	9,f
 16475  2BCC  2BC9               	goto	u8805
 16476  2BCD  1003               	clrc
 16477  2BCE  0CA8               	rrf	__Umul8_16@multiplier^(0+1664),f
 16478  2BCF                     l8106:	
 16479  2BCF  0828               	movf	__Umul8_16@multiplier^(0+1664),w
 16480  2BD0  1D03               	btfss	3,2
 16481  2BD1  2BD3               	goto	u8811
 16482  2BD2  2BD4               	goto	u8810
 16483  2BD3                     u8811:	
 16484  2BD3  2BC0               	goto	l8102
 16485  2BD4                     u8810:	
 16486  2BD4                     l8108:	
 16487  2BD4  0825               	movf	(__Umul8_16@product+1)^(0+1664),w
 16488  2BD5  00A1               	movwf	(?__Umul8_16+1)^(0+1664)
 16489  2BD6  0824               	movf	__Umul8_16@product^(0+1664),w
 16490  2BD7  00A0               	movwf	?__Umul8_16^(0+1664)
 16491  2BD8                     l1902:	
 16492  2BD8  0008               	return
 16493  2BD9                     __end_of__Umul8_16:	
 16494                           
 16495                           	psect	text22
 16496  21A0                     __ptext22:	
 16497 ;; *************** function ___flge *****************
 16498 ;; Defined at:
 16499 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 16500 ;; Parameters:    Size  Location     Type
 16501 ;;  ff1             4   49[BANK13] unsigned int 
 16502 ;;  ff2             4   53[BANK13] unsigned int 
 16503 ;; Auto vars:     Size  Location     Type
 16504 ;;		None
 16505 ;; Return value:  Size  Location     Type
 16506 ;;		None               void
 16507 ;; Registers used:
 16508 ;;		wreg, status,2, status,0
 16509 ;; Tracked objects:
 16510 ;;		On entry : 0/0
 16511 ;;		On exit  : 0/0
 16512 ;;		Unchanged: 0/0
 16513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       8       0       0       0       0       0       0       0       0       0       0       0       0
 16515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       4       0       0       0       0       0       0       0       0       0       0       0       0
 16517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0      12       0       0       0       0       0       0       0       0       0       0       0       0
 16518 ;;Total ram usage:       12 bytes
 16519 ;; Hardware stack levels used:    1
 16520 ;; Hardware stack levels required when called:    4
 16521 ;; This function calls:
 16522 ;;		Nothing
 16523 ;; This function is called by:
 16524 ;;		_main
 16525 ;; This function uses a non-reentrant model
 16526 ;;
 16527                           
 16528                           
 16529                           ;psect for function ___flge
 16530  21A0                     ___flge:	
 16531  21A0                     l8428:	
 16532                           ;incstack = 0
 16533                           ; Regs used in ___flge: [wreg+status,2+status,0]
 16534                           
 16535  21A0  3000               	movlw	0
 16536  21A1  002D               	movlb	13	; select bank13
 16537  21A2  0551               	andwf	___flge@ff1^(0+1664),w
 16538  21A3  00D9               	movwf	??___flge^(0+1664)
 16539  21A4  3000               	movlw	0
 16540  21A5  0552               	andwf	(___flge@ff1+1)^(0+1664),w
 16541  21A6  00DA               	movwf	(??___flge^(0+1664)+1)
 16542  21A7  3080               	movlw	128
 16543  21A8  0553               	andwf	(___flge@ff1+2)^(0+1664),w
 16544  21A9  00DB               	movwf	(??___flge^(0+1664)+2)
 16545  21AA  307F               	movlw	127
 16546  21AB  0554               	andwf	(___flge@ff1+3)^(0+1664),w
 16547  21AC  00DC               	movwf	(??___flge^(0+1664)+3)
 16548  21AD  085C               	movf	(??___flge+3)^(0+1664),w
 16549  21AE  045B               	iorwf	(??___flge+2)^(0+1664),w
 16550  21AF  045A               	iorwf	(??___flge+1)^(0+1664),w
 16551  21B0  0459               	iorwf	??___flge^(0+1664),w
 16552  21B1  1D03               	skipz
 16553  21B2  29B4               	goto	u9231
 16554  21B3  29B5               	goto	u9230
 16555  21B4                     u9231:	
 16556  21B4  29BD               	goto	l1571
 16557  21B5                     u9230:	
 16558  21B5                     l8430:	
 16559  21B5  3000               	movlw	0
 16560  21B6  00D4               	movwf	(___flge@ff1+3)^(0+1664)
 16561  21B7  3000               	movlw	0
 16562  21B8  00D3               	movwf	(___flge@ff1+2)^(0+1664)
 16563  21B9  3000               	movlw	0
 16564  21BA  00D2               	movwf	(___flge@ff1+1)^(0+1664)
 16565  21BB  3000               	movlw	0
 16566  21BC  00D1               	movwf	___flge@ff1^(0+1664)
 16567  21BD                     l1571:	
 16568  21BD  3000               	movlw	0
 16569  21BE  0555               	andwf	___flge@ff2^(0+1664),w
 16570  21BF  00D9               	movwf	??___flge^(0+1664)
 16571  21C0  3000               	movlw	0
 16572  21C1  0556               	andwf	(___flge@ff2+1)^(0+1664),w
 16573  21C2  00DA               	movwf	(??___flge^(0+1664)+1)
 16574  21C3  3080               	movlw	128
 16575  21C4  0557               	andwf	(___flge@ff2+2)^(0+1664),w
 16576  21C5  00DB               	movwf	(??___flge^(0+1664)+2)
 16577  21C6  307F               	movlw	127
 16578  21C7  0558               	andwf	(___flge@ff2+3)^(0+1664),w
 16579  21C8  00DC               	movwf	(??___flge^(0+1664)+3)
 16580  21C9  085C               	movf	(??___flge+3)^(0+1664),w
 16581  21CA  045B               	iorwf	(??___flge+2)^(0+1664),w
 16582  21CB  045A               	iorwf	(??___flge+1)^(0+1664),w
 16583  21CC  0459               	iorwf	??___flge^(0+1664),w
 16584  21CD  1D03               	skipz
 16585  21CE  29D0               	goto	u9241
 16586  21CF  29D1               	goto	u9240
 16587  21D0                     u9241:	
 16588  21D0  29D9               	goto	l8434
 16589  21D1                     u9240:	
 16590  21D1                     l8432:	
 16591  21D1  3000               	movlw	0
 16592  21D2  00D8               	movwf	(___flge@ff2+3)^(0+1664)
 16593  21D3  3000               	movlw	0
 16594  21D4  00D7               	movwf	(___flge@ff2+2)^(0+1664)
 16595  21D5  3000               	movlw	0
 16596  21D6  00D6               	movwf	(___flge@ff2+1)^(0+1664)
 16597  21D7  3000               	movlw	0
 16598  21D8  00D5               	movwf	___flge@ff2^(0+1664)
 16599  21D9                     l8434:	
 16600  21D9  1FD4               	btfss	(___flge@ff1+3)^(0+1664),7
 16601  21DA  29DC               	goto	u9251
 16602  21DB  29DD               	goto	u9250
 16603  21DC                     u9251:	
 16604  21DC  29F5               	goto	l8438
 16605  21DD                     u9250:	
 16606  21DD                     l8436:	
 16607  21DD  3000               	movlw	0
 16608  21DE  00D9               	movwf	??___flge^(0+1664)
 16609  21DF  3000               	movlw	0
 16610  21E0  00DA               	movwf	(??___flge^(0+1664)+1)
 16611  21E1  3000               	movlw	0
 16612  21E2  00DB               	movwf	(??___flge^(0+1664)+2)
 16613  21E3  3080               	movlw	128
 16614  21E4  00DC               	movwf	(??___flge^(0+1664)+3)
 16615  21E5  0851               	movf	___flge@ff1^(0+1664),w
 16616  21E6  02D9               	subwf	??___flge^(0+1664),f
 16617  21E7  0852               	movf	(___flge@ff1+1)^(0+1664),w
 16618  21E8  3BDA               	subwfb	(??___flge^(0+1664)+1),f
 16619  21E9  0853               	movf	(___flge@ff1+2)^(0+1664),w
 16620  21EA  3BDB               	subwfb	(??___flge^(0+1664)+2),f
 16621  21EB  0854               	movf	(___flge@ff1+3)^(0+1664),w
 16622  21EC  3BDC               	subwfb	(??___flge^(0+1664)+3),f
 16623  21ED  085C               	movf	(??___flge+3)^(0+1664),w
 16624  21EE  00D4               	movwf	(___flge@ff1+3)^(0+1664)
 16625  21EF  085B               	movf	(??___flge+2)^(0+1664),w
 16626  21F0  00D3               	movwf	(___flge@ff1+2)^(0+1664)
 16627  21F1  085A               	movf	(??___flge+1)^(0+1664),w
 16628  21F2  00D2               	movwf	(___flge@ff1+1)^(0+1664)
 16629  21F3  0859               	movf	??___flge^(0+1664),w
 16630  21F4  00D1               	movwf	___flge@ff1^(0+1664)
 16631  21F5                     l8438:	
 16632  21F5  1FD8               	btfss	(___flge@ff2+3)^(0+1664),7
 16633  21F6  29F8               	goto	u9261
 16634  21F7  29F9               	goto	u9260
 16635  21F8                     u9261:	
 16636  21F8  2A11               	goto	l1574
 16637  21F9                     u9260:	
 16638  21F9                     l8440:	
 16639  21F9  3000               	movlw	0
 16640  21FA  00D9               	movwf	??___flge^(0+1664)
 16641  21FB  3000               	movlw	0
 16642  21FC  00DA               	movwf	(??___flge^(0+1664)+1)
 16643  21FD  3000               	movlw	0
 16644  21FE  00DB               	movwf	(??___flge^(0+1664)+2)
 16645  21FF  3080               	movlw	128
 16646  2200  00DC               	movwf	(??___flge^(0+1664)+3)
 16647  2201  0855               	movf	___flge@ff2^(0+1664),w
 16648  2202  02D9               	subwf	??___flge^(0+1664),f
 16649  2203  0856               	movf	(___flge@ff2+1)^(0+1664),w
 16650  2204  3BDA               	subwfb	(??___flge^(0+1664)+1),f
 16651  2205  0857               	movf	(___flge@ff2+2)^(0+1664),w
 16652  2206  3BDB               	subwfb	(??___flge^(0+1664)+2),f
 16653  2207  0858               	movf	(___flge@ff2+3)^(0+1664),w
 16654  2208  3BDC               	subwfb	(??___flge^(0+1664)+3),f
 16655  2209  085C               	movf	(??___flge+3)^(0+1664),w
 16656  220A  00D8               	movwf	(___flge@ff2+3)^(0+1664)
 16657  220B  085B               	movf	(??___flge+2)^(0+1664),w
 16658  220C  00D7               	movwf	(___flge@ff2+2)^(0+1664)
 16659  220D  085A               	movf	(??___flge+1)^(0+1664),w
 16660  220E  00D6               	movwf	(___flge@ff2+1)^(0+1664)
 16661  220F  0859               	movf	??___flge^(0+1664),w
 16662  2210  00D5               	movwf	___flge@ff2^(0+1664)
 16663  2211                     l1574:	
 16664  2211  3080               	movlw	128
 16665  2212  06D4               	xorwf	(___flge@ff1+3)^(0+1664),f
 16666  2213  3080               	movlw	128
 16667  2214  06D8               	xorwf	(___flge@ff2+3)^(0+1664),f
 16668  2215  0858               	movf	(___flge@ff2+3)^(0+1664),w
 16669  2216  0254               	subwf	(___flge@ff1+3)^(0+1664),w
 16670  2217  1D03               	skipz
 16671  2218  2A23               	goto	u9275
 16672  2219  0857               	movf	(___flge@ff2+2)^(0+1664),w
 16673  221A  0253               	subwf	(___flge@ff1+2)^(0+1664),w
 16674  221B  1D03               	skipz
 16675  221C  2A23               	goto	u9275
 16676  221D  0856               	movf	(___flge@ff2+1)^(0+1664),w
 16677  221E  0252               	subwf	(___flge@ff1+1)^(0+1664),w
 16678  221F  1D03               	skipz
 16679  2220  2A23               	goto	u9275
 16680  2221  0855               	movf	___flge@ff2^(0+1664),w
 16681  2222  0251               	subwf	___flge@ff1^(0+1664),w
 16682  2223                     u9275:	
 16683  2223  1803               	skipnc
 16684  2224  2A26               	goto	u9271
 16685  2225  2A27               	goto	u9270
 16686  2226                     u9271:	
 16687  2226  2A29               	goto	l8444
 16688  2227                     u9270:	
 16689  2227                     l8442:	
 16690  2227  1003               	clrc
 16691  2228  2A2A               	goto	l1579
 16692  2229                     l8444:	
 16693  2229  1403               	setc
 16694  222A                     l1579:	
 16695  222A  0008               	return
 16696  222B                     __end_of___flge:	
 16697                           
 16698                           	psect	text23
 16699  1A5C                     __ptext23:	
 16700 ;; *************** function ___fldiv *****************
 16701 ;; Defined at:
 16702 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
 16703 ;; Parameters:    Size  Location     Type
 16704 ;;  a               4   23[BANK13] unsigned int 
 16705 ;;  b               4   27[BANK13] unsigned int 
 16706 ;; Auto vars:     Size  Location     Type
 16707 ;;  grs             4   43[BANK13] unsigned long 
 16708 ;;  rem             4   36[BANK13] unsigned long 
 16709 ;;  new_exp         2   41[BANK13] int 
 16710 ;;  aexp            1   48[BANK13] unsigned char 
 16711 ;;  bexp            1   47[BANK13] unsigned char 
 16712 ;;  sign            1   40[BANK13] unsigned char 
 16713 ;; Return value:  Size  Location     Type
 16714 ;;                  4   23[BANK13] unsigned char 
 16715 ;; Registers used:
 16716 ;;		wreg, status,2, status,0
 16717 ;; Tracked objects:
 16718 ;;		On entry : 0/0
 16719 ;;		On exit  : 0/0
 16720 ;;		Unchanged: 0/0
 16721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       8       0       0       0       0       0       0       0       0       0       0       0       0
 16723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0      13       0       0       0       0       0       0       0       0       0       0       0       0
 16724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       5       0       0       0       0       0       0       0       0       0       0       0       0
 16725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0      26       0       0       0       0       0       0       0       0       0       0       0       0
 16726 ;;Total ram usage:       26 bytes
 16727 ;; Hardware stack levels used:    1
 16728 ;; Hardware stack levels required when called:    4
 16729 ;; This function calls:
 16730 ;;		Nothing
 16731 ;; This function is called by:
 16732 ;;		_main
 16733 ;; This function uses a non-reentrant model
 16734 ;;
 16735                           
 16736                           
 16737                           ;psect for function ___fldiv
 16738  1A5C                     ___fldiv:	
 16739  1A5C                     l8530:	
 16740                           ;incstack = 0
 16741                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 16742                           
 16743  1A5C  002D               	movlb	13	; select bank13
 16744  1A5D  083E               	movf	(___fldiv@b^(0+1664)+3),w
 16745  1A5E  3980               	andlw	128
 16746  1A5F  00BF               	movwf	??___fldiv^(0+1664)
 16747  1A60  083F               	movf	??___fldiv^(0+1664),w
 16748  1A61  00C8               	movwf	___fldiv@sign^(0+1664)
 16749  1A62                     l8532:	
 16750  1A62  353E               	lslf	(___fldiv@b^(0+1664)+3),w
 16751  1A63  00BF               	movwf	??___fldiv^(0+1664)
 16752  1A64  083F               	movf	??___fldiv^(0+1664),w
 16753  1A65  00CF               	movwf	___fldiv@bexp^(0+1664)
 16754  1A66                     l8534:	
 16755  1A66  1FBD               	btfss	(___fldiv@b^(0+1664)+2),7
 16756  1A67  2A69               	goto	u9511
 16757  1A68  2A6A               	goto	u9510
 16758  1A69                     u9511:	
 16759  1A69  2A6B               	goto	l8538
 16760  1A6A                     u9510:	
 16761  1A6A                     l8536:	
 16762  1A6A  144F               	bsf	___fldiv@bexp^(0+1664),0
 16763  1A6B                     l8538:	
 16764  1A6B  084F               	movf	___fldiv@bexp^(0+1664),w
 16765  1A6C  1903               	btfsc	3,2
 16766  1A6D  2A6F               	goto	u9521
 16767  1A6E  2A70               	goto	u9520
 16768  1A6F                     u9521:	
 16769  1A6F  2A80               	goto	l8548
 16770  1A70                     u9520:	
 16771  1A70                     l8540:	
 16772  1A70  0A4F               	incf	___fldiv@bexp^(0+1664),w
 16773  1A71  1D03               	btfss	3,2
 16774  1A72  2A74               	goto	u9531
 16775  1A73  2A75               	goto	u9530
 16776  1A74                     u9531:	
 16777  1A74  2A7D               	goto	l8544
 16778  1A75                     u9530:	
 16779  1A75                     l8542:	
 16780  1A75  3000               	movlw	0
 16781  1A76  00BE               	movwf	(___fldiv@b+3)^(0+1664)
 16782  1A77  3000               	movlw	0
 16783  1A78  00BD               	movwf	(___fldiv@b+2)^(0+1664)
 16784  1A79  3000               	movlw	0
 16785  1A7A  00BC               	movwf	(___fldiv@b+1)^(0+1664)
 16786  1A7B  3000               	movlw	0
 16787  1A7C  00BB               	movwf	___fldiv@b^(0+1664)
 16788  1A7D                     l8544:	
 16789  1A7D  17BD               	bsf	(___fldiv@b^(0+1664)+2),7
 16790  1A7E                     l8546:	
 16791  1A7E  01BE               	clrf	(___fldiv@b^(0+1664)+3)
 16792  1A7F  2A88               	goto	l8550
 16793  1A80                     l8548:	
 16794  1A80  3000               	movlw	0
 16795  1A81  00BE               	movwf	(___fldiv@b+3)^(0+1664)
 16796  1A82  3000               	movlw	0
 16797  1A83  00BD               	movwf	(___fldiv@b+2)^(0+1664)
 16798  1A84  3000               	movlw	0
 16799  1A85  00BC               	movwf	(___fldiv@b+1)^(0+1664)
 16800  1A86  3000               	movlw	0
 16801  1A87  00BB               	movwf	___fldiv@b^(0+1664)
 16802  1A88                     l8550:	
 16803  1A88  083A               	movf	(___fldiv@a^(0+1664)+3),w
 16804  1A89  3980               	andlw	128
 16805  1A8A  00BF               	movwf	??___fldiv^(0+1664)
 16806  1A8B  083F               	movf	??___fldiv^(0+1664),w
 16807  1A8C  06C8               	xorwf	___fldiv@sign^(0+1664),f
 16808  1A8D                     l8552:	
 16809  1A8D  353A               	lslf	(___fldiv@a^(0+1664)+3),w
 16810  1A8E  00BF               	movwf	??___fldiv^(0+1664)
 16811  1A8F  083F               	movf	??___fldiv^(0+1664),w
 16812  1A90  00D0               	movwf	___fldiv@aexp^(0+1664)
 16813  1A91                     l8554:	
 16814  1A91  1FB9               	btfss	(___fldiv@a^(0+1664)+2),7
 16815  1A92  2A94               	goto	u9541
 16816  1A93  2A95               	goto	u9540
 16817  1A94                     u9541:	
 16818  1A94  2A96               	goto	l8558
 16819  1A95                     u9540:	
 16820  1A95                     l8556:	
 16821  1A95  1450               	bsf	___fldiv@aexp^(0+1664),0
 16822  1A96                     l8558:	
 16823  1A96  0850               	movf	___fldiv@aexp^(0+1664),w
 16824  1A97  1903               	btfsc	3,2
 16825  1A98  2A9A               	goto	u9551
 16826  1A99  2A9B               	goto	u9550
 16827  1A9A                     u9551:	
 16828  1A9A  2AAB               	goto	l8568
 16829  1A9B                     u9550:	
 16830  1A9B                     l8560:	
 16831  1A9B  0A50               	incf	___fldiv@aexp^(0+1664),w
 16832  1A9C  1D03               	btfss	3,2
 16833  1A9D  2A9F               	goto	u9561
 16834  1A9E  2AA0               	goto	u9560
 16835  1A9F                     u9561:	
 16836  1A9F  2AA8               	goto	l8564
 16837  1AA0                     u9560:	
 16838  1AA0                     l8562:	
 16839  1AA0  3000               	movlw	0
 16840  1AA1  00BA               	movwf	(___fldiv@a+3)^(0+1664)
 16841  1AA2  3000               	movlw	0
 16842  1AA3  00B9               	movwf	(___fldiv@a+2)^(0+1664)
 16843  1AA4  3000               	movlw	0
 16844  1AA5  00B8               	movwf	(___fldiv@a+1)^(0+1664)
 16845  1AA6  3000               	movlw	0
 16846  1AA7  00B7               	movwf	___fldiv@a^(0+1664)
 16847  1AA8                     l8564:	
 16848  1AA8  17B9               	bsf	(___fldiv@a^(0+1664)+2),7
 16849  1AA9                     l8566:	
 16850  1AA9  01BA               	clrf	(___fldiv@a^(0+1664)+3)
 16851  1AAA  2AB3               	goto	l1750
 16852  1AAB                     l8568:	
 16853  1AAB  3000               	movlw	0
 16854  1AAC  00BA               	movwf	(___fldiv@a+3)^(0+1664)
 16855  1AAD  3000               	movlw	0
 16856  1AAE  00B9               	movwf	(___fldiv@a+2)^(0+1664)
 16857  1AAF  3000               	movlw	0
 16858  1AB0  00B8               	movwf	(___fldiv@a+1)^(0+1664)
 16859  1AB1  3000               	movlw	0
 16860  1AB2  00B7               	movwf	___fldiv@a^(0+1664)
 16861  1AB3                     l1750:	
 16862  1AB3  083A               	movf	(___fldiv@a+3)^(0+1664),w
 16863  1AB4  0439               	iorwf	(___fldiv@a+2)^(0+1664),w
 16864  1AB5  0438               	iorwf	(___fldiv@a+1)^(0+1664),w
 16865  1AB6  0437               	iorwf	___fldiv@a^(0+1664),w
 16866  1AB7  1D03               	skipz
 16867  1AB8  2ABA               	goto	u9571
 16868  1AB9  2ABB               	goto	u9570
 16869  1ABA                     u9571:	
 16870  1ABA  2AD4               	goto	l8578
 16871  1ABB                     u9570:	
 16872  1ABB                     l8570:	
 16873  1ABB  3000               	movlw	0
 16874  1ABC  00BE               	movwf	(___fldiv@b+3)^(0+1664)
 16875  1ABD  3000               	movlw	0
 16876  1ABE  00BD               	movwf	(___fldiv@b+2)^(0+1664)
 16877  1ABF  3000               	movlw	0
 16878  1AC0  00BC               	movwf	(___fldiv@b+1)^(0+1664)
 16879  1AC1  3000               	movlw	0
 16880  1AC2  00BB               	movwf	___fldiv@b^(0+1664)
 16881  1AC3  3080               	movlw	128
 16882  1AC4  04BD               	iorwf	(___fldiv@b^(0+1664)+2),f
 16883  1AC5  307F               	movlw	127
 16884  1AC6  04BE               	iorwf	((___fldiv@b+1)^(0+1664)+2),f
 16885  1AC7                     l8572:	
 16886  1AC7  0848               	movf	___fldiv@sign^(0+1664),w
 16887  1AC8  00BF               	movwf	??___fldiv^(0+1664)
 16888  1AC9  083F               	movf	??___fldiv^(0+1664),w
 16889  1ACA  04BE               	iorwf	(___fldiv@b^(0+1664)+3),f
 16890  1ACB                     l8574:	
 16891  1ACB  083E               	movf	(___fldiv@b+3)^(0+1664),w
 16892  1ACC  00BA               	movwf	(?___fldiv+3)^(0+1664)
 16893  1ACD  083D               	movf	(___fldiv@b+2)^(0+1664),w
 16894  1ACE  00B9               	movwf	(?___fldiv+2)^(0+1664)
 16895  1ACF  083C               	movf	(___fldiv@b+1)^(0+1664),w
 16896  1AD0  00B8               	movwf	(?___fldiv+1)^(0+1664)
 16897  1AD1  083B               	movf	___fldiv@b^(0+1664),w
 16898  1AD2  00B7               	movwf	?___fldiv^(0+1664)
 16899  1AD3  2C0F               	goto	l1752
 16900  1AD4                     l8578:	
 16901  1AD4  084F               	movf	___fldiv@bexp^(0+1664),w
 16902  1AD5  1D03               	btfss	3,2
 16903  1AD6  2AD8               	goto	u9581
 16904  1AD7  2AD9               	goto	u9580
 16905  1AD8                     u9581:	
 16906  1AD8  2AE2               	goto	l8584
 16907  1AD9                     u9580:	
 16908  1AD9                     l8580:	
 16909  1AD9  3000               	movlw	0
 16910  1ADA  00BA               	movwf	(?___fldiv+3)^(0+1664)
 16911  1ADB  3000               	movlw	0
 16912  1ADC  00B9               	movwf	(?___fldiv+2)^(0+1664)
 16913  1ADD  3000               	movlw	0
 16914  1ADE  00B8               	movwf	(?___fldiv+1)^(0+1664)
 16915  1ADF  3000               	movlw	0
 16916  1AE0  00B7               	movwf	?___fldiv^(0+1664)
 16917  1AE1  2C0F               	goto	l1752
 16918  1AE2                     l8584:	
 16919  1AE2  084F               	movf	___fldiv@bexp^(0+1664),w
 16920  1AE3  00BF               	movwf	??___fldiv^(0+1664)
 16921  1AE4  01C0               	clrf	(??___fldiv^(0+1664)+1)
 16922  1AE5  0840               	movf	(??___fldiv+1)^(0+1664),w
 16923  1AE6  00C2               	movwf	((??___fldiv+2)^(0+1664)+1)
 16924  1AE7  0850               	movf	___fldiv@aexp^(0+1664),w
 16925  1AE8  023F               	subwf	??___fldiv^(0+1664),w
 16926  1AE9  00C1               	movwf	(??___fldiv+2)^(0+1664)
 16927  1AEA  1C03               	skipc
 16928  1AEB  03C2               	decf	((??___fldiv+2)^(0+1664)+1),f
 16929  1AEC  0841               	movf	(??___fldiv+2)^(0+1664),w
 16930  1AED  3E7F               	addlw	127
 16931  1AEE  00C9               	movwf	___fldiv@new_exp^(0+1664)
 16932  1AEF  3000               	movlw	0
 16933  1AF0  3D42               	addwfc	(??___fldiv+3)^(0+1664),w
 16934  1AF1  00CA               	movwf	(___fldiv@new_exp+1)^(0+1664)
 16935  1AF2                     l8586:	
 16936  1AF2  083E               	movf	(___fldiv@b+3)^(0+1664),w
 16937  1AF3  00C7               	movwf	(___fldiv@rem+3)^(0+1664)
 16938  1AF4  083D               	movf	(___fldiv@b+2)^(0+1664),w
 16939  1AF5  00C6               	movwf	(___fldiv@rem+2)^(0+1664)
 16940  1AF6  083C               	movf	(___fldiv@b+1)^(0+1664),w
 16941  1AF7  00C5               	movwf	(___fldiv@rem+1)^(0+1664)
 16942  1AF8  083B               	movf	___fldiv@b^(0+1664),w
 16943  1AF9  00C4               	movwf	___fldiv@rem^(0+1664)
 16944  1AFA                     l8588:	
 16945  1AFA  3000               	movlw	0
 16946  1AFB  00BE               	movwf	(___fldiv@b+3)^(0+1664)
 16947  1AFC  3000               	movlw	0
 16948  1AFD  00BD               	movwf	(___fldiv@b+2)^(0+1664)
 16949  1AFE  3000               	movlw	0
 16950  1AFF  00BC               	movwf	(___fldiv@b+1)^(0+1664)
 16951  1B00  3000               	movlw	0
 16952  1B01  00BB               	movwf	___fldiv@b^(0+1664)
 16953  1B02                     l8590:	
 16954  1B02  3000               	movlw	0
 16955  1B03  00CE               	movwf	(___fldiv@grs+3)^(0+1664)
 16956  1B04  3000               	movlw	0
 16957  1B05  00CD               	movwf	(___fldiv@grs+2)^(0+1664)
 16958  1B06  3000               	movlw	0
 16959  1B07  00CC               	movwf	(___fldiv@grs+1)^(0+1664)
 16960  1B08  3000               	movlw	0
 16961  1B09  00CB               	movwf	___fldiv@grs^(0+1664)
 16962  1B0A                     l8592:	
 16963  1B0A  01D0               	clrf	___fldiv@aexp^(0+1664)
 16964  1B0B  2B4A               	goto	l8612
 16965  1B0C                     l8594:	
 16966  1B0C  0850               	movf	___fldiv@aexp^(0+1664),w
 16967  1B0D  1903               	btfsc	3,2
 16968  1B0E  2B10               	goto	u9591
 16969  1B0F  2B11               	goto	u9590
 16970  1B10                     u9591:	
 16971  1B10  2B2B               	goto	l8604
 16972  1B11                     u9590:	
 16973  1B11                     l8596:	
 16974  1B11  3001               	movlw	1
 16975  1B12                     u9605:	
 16976  1B12  35C4               	lslf	___fldiv@rem^(0+1664),f
 16977  1B13  0DC5               	rlf	(___fldiv@rem+1)^(0+1664),f
 16978  1B14  0DC6               	rlf	(___fldiv@rem+2)^(0+1664),f
 16979  1B15  0DC7               	rlf	(___fldiv@rem+3)^(0+1664),f
 16980  1B16  0B89               	decfsz	9,f
 16981  1B17  2B12               	goto	u9605
 16982  1B18  3001               	movlw	1
 16983  1B19                     u9615:	
 16984  1B19  35BB               	lslf	___fldiv@b^(0+1664),f
 16985  1B1A  0DBC               	rlf	(___fldiv@b+1)^(0+1664),f
 16986  1B1B  0DBD               	rlf	(___fldiv@b+2)^(0+1664),f
 16987  1B1C  0DBE               	rlf	(___fldiv@b+3)^(0+1664),f
 16988  1B1D  0B89               	decfsz	9,f
 16989  1B1E  2B19               	goto	u9615
 16990  1B1F                     l8598:	
 16991  1B1F  1FCE               	btfss	(___fldiv@grs+3)^(0+1664),7
 16992  1B20  2B22               	goto	u9621
 16993  1B21  2B23               	goto	u9620
 16994  1B22                     u9621:	
 16995  1B22  2B24               	goto	l8602
 16996  1B23                     u9620:	
 16997  1B23                     l8600:	
 16998  1B23  143B               	bsf	___fldiv@b^(0+1664),0
 16999  1B24                     l8602:	
 17000  1B24  3001               	movlw	1
 17001  1B25                     u9635:	
 17002  1B25  35CB               	lslf	___fldiv@grs^(0+1664),f
 17003  1B26  0DCC               	rlf	(___fldiv@grs+1)^(0+1664),f
 17004  1B27  0DCD               	rlf	(___fldiv@grs+2)^(0+1664),f
 17005  1B28  0DCE               	rlf	(___fldiv@grs+3)^(0+1664),f
 17006  1B29  0B89               	decfsz	9,f
 17007  1B2A  2B25               	goto	u9635
 17008  1B2B                     l8604:	
 17009  1B2B  083A               	movf	(___fldiv@a+3)^(0+1664),w
 17010  1B2C  0247               	subwf	(___fldiv@rem+3)^(0+1664),w
 17011  1B2D  1D03               	skipz
 17012  1B2E  2B39               	goto	u9645
 17013  1B2F  0839               	movf	(___fldiv@a+2)^(0+1664),w
 17014  1B30  0246               	subwf	(___fldiv@rem+2)^(0+1664),w
 17015  1B31  1D03               	skipz
 17016  1B32  2B39               	goto	u9645
 17017  1B33  0838               	movf	(___fldiv@a+1)^(0+1664),w
 17018  1B34  0245               	subwf	(___fldiv@rem+1)^(0+1664),w
 17019  1B35  1D03               	skipz
 17020  1B36  2B39               	goto	u9645
 17021  1B37  0837               	movf	___fldiv@a^(0+1664),w
 17022  1B38  0244               	subwf	___fldiv@rem^(0+1664),w
 17023  1B39                     u9645:	
 17024  1B39  1C03               	skipc
 17025  1B3A  2B3C               	goto	u9641
 17026  1B3B  2B3D               	goto	u9640
 17027  1B3C                     u9641:	
 17028  1B3C  2B46               	goto	l8610
 17029  1B3D                     u9640:	
 17030  1B3D                     l8606:	
 17031  1B3D  174E               	bsf	(___fldiv@grs^(0+1664)+3),6
 17032  1B3E                     l8608:	
 17033  1B3E  0837               	movf	___fldiv@a^(0+1664),w
 17034  1B3F  02C4               	subwf	___fldiv@rem^(0+1664),f
 17035  1B40  0838               	movf	(___fldiv@a+1)^(0+1664),w
 17036  1B41  3BC5               	subwfb	(___fldiv@rem+1)^(0+1664),f
 17037  1B42  0839               	movf	(___fldiv@a+2)^(0+1664),w
 17038  1B43  3BC6               	subwfb	(___fldiv@rem+2)^(0+1664),f
 17039  1B44  083A               	movf	(___fldiv@a+3)^(0+1664),w
 17040  1B45  3BC7               	subwfb	(___fldiv@rem+3)^(0+1664),f
 17041  1B46                     l8610:	
 17042  1B46  3001               	movlw	1
 17043  1B47  00BF               	movwf	??___fldiv^(0+1664)
 17044  1B48  083F               	movf	??___fldiv^(0+1664),w
 17045  1B49  07D0               	addwf	___fldiv@aexp^(0+1664),f
 17046  1B4A                     l8612:	
 17047  1B4A  301A               	movlw	26
 17048  1B4B  0250               	subwf	___fldiv@aexp^(0+1664),w
 17049  1B4C  1C03               	skipc
 17050  1B4D  2B4F               	goto	u9651
 17051  1B4E  2B50               	goto	u9650
 17052  1B4F                     u9651:	
 17053  1B4F  2B0C               	goto	l8594
 17054  1B50                     u9650:	
 17055  1B50                     l8614:	
 17056  1B50  0847               	movf	(___fldiv@rem+3)^(0+1664),w
 17057  1B51  0446               	iorwf	(___fldiv@rem+2)^(0+1664),w
 17058  1B52  0445               	iorwf	(___fldiv@rem+1)^(0+1664),w
 17059  1B53  0444               	iorwf	___fldiv@rem^(0+1664),w
 17060  1B54  1903               	skipnz
 17061  1B55  2B57               	goto	u9661
 17062  1B56  2B58               	goto	u9660
 17063  1B57                     u9661:	
 17064  1B57  2B71               	goto	l8628
 17065  1B58                     u9660:	
 17066  1B58                     l8616:	
 17067  1B58  144B               	bsf	___fldiv@grs^(0+1664),0
 17068  1B59  2B71               	goto	l8628
 17069  1B5A                     l8618:	
 17070  1B5A  3001               	movlw	1
 17071  1B5B                     u9675:	
 17072  1B5B  35BB               	lslf	___fldiv@b^(0+1664),f
 17073  1B5C  0DBC               	rlf	(___fldiv@b+1)^(0+1664),f
 17074  1B5D  0DBD               	rlf	(___fldiv@b+2)^(0+1664),f
 17075  1B5E  0DBE               	rlf	(___fldiv@b+3)^(0+1664),f
 17076  1B5F  0B89               	decfsz	9,f
 17077  1B60  2B5B               	goto	u9675
 17078  1B61                     l8620:	
 17079  1B61  1FCE               	btfss	(___fldiv@grs+3)^(0+1664),7
 17080  1B62  2B64               	goto	u9681
 17081  1B63  2B65               	goto	u9680
 17082  1B64                     u9681:	
 17083  1B64  2B66               	goto	l8624
 17084  1B65                     u9680:	
 17085  1B65                     l8622:	
 17086  1B65  143B               	bsf	___fldiv@b^(0+1664),0
 17087  1B66                     l8624:	
 17088  1B66  3001               	movlw	1
 17089  1B67                     u9695:	
 17090  1B67  35CB               	lslf	___fldiv@grs^(0+1664),f
 17091  1B68  0DCC               	rlf	(___fldiv@grs+1)^(0+1664),f
 17092  1B69  0DCD               	rlf	(___fldiv@grs+2)^(0+1664),f
 17093  1B6A  0DCE               	rlf	(___fldiv@grs+3)^(0+1664),f
 17094  1B6B  0B89               	decfsz	9,f
 17095  1B6C  2B67               	goto	u9695
 17096  1B6D                     l8626:	
 17097  1B6D  30FF               	movlw	255
 17098  1B6E  07C9               	addwf	___fldiv@new_exp^(0+1664),f
 17099  1B6F  30FF               	movlw	255
 17100  1B70  3DCA               	addwfc	(___fldiv@new_exp+1)^(0+1664),f
 17101  1B71                     l8628:	
 17102  1B71  1FBD               	btfss	(___fldiv@b+2)^(0+1664),7
 17103  1B72  2B74               	goto	u9701
 17104  1B73  2B75               	goto	u9700
 17105  1B74                     u9701:	
 17106  1B74  2B5A               	goto	l8618
 17107  1B75                     u9700:	
 17108  1B75                     l8630:	
 17109  1B75  01D0               	clrf	___fldiv@aexp^(0+1664)
 17110  1B76                     l8632:	
 17111  1B76  1FCE               	btfss	(___fldiv@grs+3)^(0+1664),7
 17112  1B77  2B79               	goto	u9711
 17113  1B78  2B7A               	goto	u9710
 17114  1B79                     u9711:	
 17115  1B79  2B96               	goto	l8640
 17116  1B7A                     u9710:	
 17117  1B7A                     l8634:	
 17118  1B7A  30FF               	movlw	255
 17119  1B7B  054B               	andwf	___fldiv@grs^(0+1664),w
 17120  1B7C  00BF               	movwf	??___fldiv^(0+1664)
 17121  1B7D  30FF               	movlw	255
 17122  1B7E  054C               	andwf	(___fldiv@grs+1)^(0+1664),w
 17123  1B7F  00C0               	movwf	(??___fldiv^(0+1664)+1)
 17124  1B80  30FF               	movlw	255
 17125  1B81  054D               	andwf	(___fldiv@grs+2)^(0+1664),w
 17126  1B82  00C1               	movwf	(??___fldiv^(0+1664)+2)
 17127  1B83  307F               	movlw	127
 17128  1B84  054E               	andwf	(___fldiv@grs+3)^(0+1664),w
 17129  1B85  00C2               	movwf	(??___fldiv^(0+1664)+3)
 17130  1B86  0842               	movf	(??___fldiv+3)^(0+1664),w
 17131  1B87  0441               	iorwf	(??___fldiv+2)^(0+1664),w
 17132  1B88  0440               	iorwf	(??___fldiv+1)^(0+1664),w
 17133  1B89  043F               	iorwf	??___fldiv^(0+1664),w
 17134  1B8A  1903               	skipnz
 17135  1B8B  2B8D               	goto	u9721
 17136  1B8C  2B8E               	goto	u9720
 17137  1B8D                     u9721:	
 17138  1B8D  2B91               	goto	l1766
 17139  1B8E                     u9720:	
 17140  1B8E                     l8636:	
 17141  1B8E  01D0               	clrf	___fldiv@aexp^(0+1664)
 17142  1B8F  0AD0               	incf	___fldiv@aexp^(0+1664),f
 17143  1B90  2B96               	goto	l8640
 17144  1B91                     l1766:	
 17145  1B91  1C3B               	btfss	___fldiv@b^(0+1664),0
 17146  1B92  2B94               	goto	u9731
 17147  1B93  2B95               	goto	u9730
 17148  1B94                     u9731:	
 17149  1B94  2B96               	goto	l8640
 17150  1B95                     u9730:	
 17151  1B95  2B8E               	goto	l8636
 17152  1B96                     l8640:	
 17153  1B96  0850               	movf	___fldiv@aexp^(0+1664),w
 17154  1B97  1903               	btfsc	3,2
 17155  1B98  2B9A               	goto	u9741
 17156  1B99  2B9B               	goto	u9740
 17157  1B9A                     u9741:	
 17158  1B9A  2BC3               	goto	l8650
 17159  1B9B                     u9740:	
 17160  1B9B                     l8642:	
 17161  1B9B  3001               	movlw	1
 17162  1B9C  07BB               	addwf	___fldiv@b^(0+1664),f
 17163  1B9D  3000               	movlw	0
 17164  1B9E  3DBC               	addwfc	(___fldiv@b+1)^(0+1664),f
 17165  1B9F  3000               	movlw	0
 17166  1BA0  3DBD               	addwfc	(___fldiv@b+2)^(0+1664),f
 17167  1BA1  3000               	movlw	0
 17168  1BA2  3DBE               	addwfc	(___fldiv@b+3)^(0+1664),f
 17169  1BA3                     l8644:	
 17170  1BA3  1C3E               	btfss	(___fldiv@b+3)^(0+1664),0
 17171  1BA4  2BA6               	goto	u9751
 17172  1BA5  2BA7               	goto	u9750
 17173  1BA6                     u9751:	
 17174  1BA6  2BC3               	goto	l8650
 17175  1BA7                     u9750:	
 17176  1BA7                     l8646:	
 17177  1BA7  083B               	movf	___fldiv@b^(0+1664),w
 17178  1BA8  00BF               	movwf	??___fldiv^(0+1664)
 17179  1BA9  083C               	movf	(___fldiv@b+1)^(0+1664),w
 17180  1BAA  00C0               	movwf	(??___fldiv^(0+1664)+1)
 17181  1BAB  083D               	movf	(___fldiv@b+2)^(0+1664),w
 17182  1BAC  00C1               	movwf	(??___fldiv^(0+1664)+2)
 17183  1BAD  083E               	movf	(___fldiv@b+3)^(0+1664),w
 17184  1BAE  00C2               	movwf	(??___fldiv^(0+1664)+3)
 17185  1BAF  3001               	movlw	1
 17186  1BB0  00C3               	movwf	(??___fldiv+4)^(0+1664)
 17187  1BB1                     u9765:	
 17188  1BB1  37C2               	asrf	(??___fldiv^(0+1664)+3),f
 17189  1BB2  0CC1               	rrf	(??___fldiv^(0+1664)+2),f
 17190  1BB3  0CC0               	rrf	(??___fldiv^(0+1664)+1),f
 17191  1BB4  0CBF               	rrf	??___fldiv^(0+1664),f
 17192  1BB5                     u9760:	
 17193  1BB5  0BC3               	decfsz	(??___fldiv+4)^(0+1664),f
 17194  1BB6  2BB1               	goto	u9765
 17195  1BB7  0842               	movf	(??___fldiv+3)^(0+1664),w
 17196  1BB8  00BE               	movwf	(___fldiv@b+3)^(0+1664)
 17197  1BB9  0841               	movf	(??___fldiv+2)^(0+1664),w
 17198  1BBA  00BD               	movwf	(___fldiv@b+2)^(0+1664)
 17199  1BBB  0840               	movf	(??___fldiv+1)^(0+1664),w
 17200  1BBC  00BC               	movwf	(___fldiv@b+1)^(0+1664)
 17201  1BBD  083F               	movf	??___fldiv^(0+1664),w
 17202  1BBE  00BB               	movwf	___fldiv@b^(0+1664)
 17203  1BBF                     l8648:	
 17204  1BBF  3001               	movlw	1
 17205  1BC0  07C9               	addwf	___fldiv@new_exp^(0+1664),f
 17206  1BC1  3000               	movlw	0
 17207  1BC2  3DCA               	addwfc	(___fldiv@new_exp+1)^(0+1664),f
 17208  1BC3                     l8650:	
 17209  1BC3  084A               	movf	(___fldiv@new_exp+1)^(0+1664),w
 17210  1BC4  3A80               	xorlw	128
 17211  1BC5  00BF               	movwf	??___fldiv^(0+1664)
 17212  1BC6  3080               	movlw	128
 17213  1BC7  023F               	subwf	??___fldiv^(0+1664),w
 17214  1BC8  1D03               	skipz
 17215  1BC9  2BCC               	goto	u9775
 17216  1BCA  30FF               	movlw	255
 17217  1BCB  0249               	subwf	___fldiv@new_exp^(0+1664),w
 17218  1BCC                     u9775:	
 17219  1BCC  1C03               	skipc
 17220  1BCD  2BCF               	goto	u9771
 17221  1BCE  2BD0               	goto	u9770
 17222  1BCF                     u9771:	
 17223  1BCF  2BDD               	goto	l1771
 17224  1BD0                     u9770:	
 17225  1BD0                     l8652:	
 17226  1BD0  30FF               	movlw	255
 17227  1BD1  002D               	movlb	13	; select bank13
 17228  1BD2  00C9               	movwf	___fldiv@new_exp^(0+1664)
 17229  1BD3  3000               	movlw	0
 17230  1BD4  00CA               	movwf	(___fldiv@new_exp^(0+1664)+1)
 17231  1BD5  3000               	movlw	0
 17232  1BD6  00BE               	movwf	(___fldiv@b+3)^(0+1664)
 17233  1BD7  3000               	movlw	0
 17234  1BD8  00BD               	movwf	(___fldiv@b+2)^(0+1664)
 17235  1BD9  3000               	movlw	0
 17236  1BDA  00BC               	movwf	(___fldiv@b+1)^(0+1664)
 17237  1BDB  3000               	movlw	0
 17238  1BDC  00BB               	movwf	___fldiv@b^(0+1664)
 17239  1BDD                     l1771:	
 17240  1BDD  002D               	movlb	13	; select bank13
 17241  1BDE  084A               	movf	(___fldiv@new_exp+1)^(0+1664),w
 17242  1BDF  3A80               	xorlw	128
 17243  1BE0  00BF               	movwf	??___fldiv^(0+1664)
 17244  1BE1  3080               	movlw	128
 17245  1BE2  023F               	subwf	??___fldiv^(0+1664),w
 17246  1BE3  1D03               	skipz
 17247  1BE4  2BE7               	goto	u9785
 17248  1BE5  3001               	movlw	1
 17249  1BE6  0249               	subwf	___fldiv@new_exp^(0+1664),w
 17250  1BE7                     u9785:	
 17251  1BE7  1803               	skipnc
 17252  1BE8  2BEA               	goto	u9781
 17253  1BE9  2BEB               	goto	u9780
 17254  1BEA                     u9781:	
 17255  1BEA  2BF7               	goto	l1772
 17256  1BEB                     u9780:	
 17257  1BEB                     l8654:	
 17258  1BEB  002D               	movlb	13	; select bank13
 17259  1BEC  01C9               	clrf	___fldiv@new_exp^(0+1664)
 17260  1BED  01CA               	clrf	(___fldiv@new_exp+1)^(0+1664)
 17261  1BEE                     l8656:	
 17262  1BEE  3000               	movlw	0
 17263  1BEF  00BE               	movwf	(___fldiv@b+3)^(0+1664)
 17264  1BF0  3000               	movlw	0
 17265  1BF1  00BD               	movwf	(___fldiv@b+2)^(0+1664)
 17266  1BF2  3000               	movlw	0
 17267  1BF3  00BC               	movwf	(___fldiv@b+1)^(0+1664)
 17268  1BF4  3000               	movlw	0
 17269  1BF5  00BB               	movwf	___fldiv@b^(0+1664)
 17270  1BF6                     l8658:	
 17271  1BF6  01C8               	clrf	___fldiv@sign^(0+1664)
 17272  1BF7                     l1772:	
 17273  1BF7  002D               	movlb	13	; select bank13
 17274  1BF8  0849               	movf	___fldiv@new_exp^(0+1664),w
 17275  1BF9  00BF               	movwf	??___fldiv^(0+1664)
 17276  1BFA  083F               	movf	??___fldiv^(0+1664),w
 17277  1BFB  00CF               	movwf	___fldiv@bexp^(0+1664)
 17278  1BFC                     l8660:	
 17279  1BFC  1C4F               	btfss	___fldiv@bexp^(0+1664),0
 17280  1BFD  2BFF               	goto	u9791
 17281  1BFE  2C00               	goto	u9790
 17282  1BFF                     u9791:	
 17283  1BFF  2C02               	goto	l8664
 17284  1C00                     u9790:	
 17285  1C00                     l8662:	
 17286  1C00  17BD               	bsf	(___fldiv@b^(0+1664)+2),7
 17287  1C01  2C06               	goto	l1774
 17288  1C02                     l8664:	
 17289  1C02  307F               	movlw	127
 17290  1C03  00BF               	movwf	??___fldiv^(0+1664)
 17291  1C04  083F               	movf	??___fldiv^(0+1664),w
 17292  1C05  05BD               	andwf	(___fldiv@b^(0+1664)+2),f
 17293  1C06                     l1774:	
 17294  1C06  364F               	lsrf	___fldiv@bexp^(0+1664),w
 17295  1C07  00BF               	movwf	??___fldiv^(0+1664)
 17296  1C08  083F               	movf	??___fldiv^(0+1664),w
 17297  1C09  00BE               	movwf	(___fldiv@b^(0+1664)+3)
 17298  1C0A  0848               	movf	___fldiv@sign^(0+1664),w
 17299  1C0B  00BF               	movwf	??___fldiv^(0+1664)
 17300  1C0C  083F               	movf	??___fldiv^(0+1664),w
 17301  1C0D  04BE               	iorwf	(___fldiv@b^(0+1664)+3),f
 17302  1C0E  2ACB               	goto	l8574
 17303  1C0F                     l1752:	
 17304  1C0F  0008               	return
 17305  1C10                     __end_of___fldiv:	
 17306                           
 17307                           	psect	text24
 17308  2DDB                     __ptext24:	
 17309 ;; *************** function ___awmod *****************
 17310 ;; Defined at:
 17311 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 17312 ;; Parameters:    Size  Location     Type
 17313 ;;  divisor         2    0[BANK13] int 
 17314 ;;  dividend        2    2[BANK13] int 
 17315 ;; Auto vars:     Size  Location     Type
 17316 ;;  sign            1    6[BANK13] unsigned char 
 17317 ;;  counter         1    5[BANK13] unsigned char 
 17318 ;; Return value:  Size  Location     Type
 17319 ;;                  2    0[BANK13] int 
 17320 ;; Registers used:
 17321 ;;		wreg, status,2, status,0
 17322 ;; Tracked objects:
 17323 ;;		On entry : 0/0
 17324 ;;		On exit  : 0/0
 17325 ;;		Unchanged: 0/0
 17326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       4       0       0       0       0       0       0       0       0       0       0       0       0
 17328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 17329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       1       0       0       0       0       0       0       0       0       0       0       0       0
 17330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       7       0       0       0       0       0       0       0       0       0       0       0       0
 17331 ;;Total ram usage:        7 bytes
 17332 ;; Hardware stack levels used:    1
 17333 ;; Hardware stack levels required when called:    4
 17334 ;; This function calls:
 17335 ;;		Nothing
 17336 ;; This function is called by:
 17337 ;;		_main
 17338 ;; This function uses a non-reentrant model
 17339 ;;
 17340                           
 17341                           
 17342                           ;psect for function ___awmod
 17343  2DDB                     ___awmod:	
 17344  2DDB                     l8390:	
 17345                           ;incstack = 0
 17346                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 17347                           
 17348  2DDB  002D               	movlb	13	; select bank13
 17349  2DDC  01A6               	clrf	___awmod@sign^(0+1664)
 17350  2DDD                     l8392:	
 17351  2DDD  1FA3               	btfss	(___awmod@dividend+1)^(0+1664),7
 17352  2DDE  2DE0               	goto	u9141
 17353  2DDF  2DE1               	goto	u9140
 17354  2DE0                     u9141:	
 17355  2DE0  2DE8               	goto	l8398
 17356  2DE1                     u9140:	
 17357  2DE1                     l8394:	
 17358  2DE1  09A2               	comf	___awmod@dividend^(0+1664),f
 17359  2DE2  09A3               	comf	(___awmod@dividend+1)^(0+1664),f
 17360  2DE3  0AA2               	incf	___awmod@dividend^(0+1664),f
 17361  2DE4  1903               	skipnz
 17362  2DE5  0AA3               	incf	(___awmod@dividend+1)^(0+1664),f
 17363  2DE6                     l8396:	
 17364  2DE6  01A6               	clrf	___awmod@sign^(0+1664)
 17365  2DE7  0AA6               	incf	___awmod@sign^(0+1664),f
 17366  2DE8                     l8398:	
 17367  2DE8  1FA1               	btfss	(___awmod@divisor+1)^(0+1664),7
 17368  2DE9  2DEB               	goto	u9151
 17369  2DEA  2DEC               	goto	u9150
 17370  2DEB                     u9151:	
 17371  2DEB  2DF1               	goto	l8402
 17372  2DEC                     u9150:	
 17373  2DEC                     l8400:	
 17374  2DEC  09A0               	comf	___awmod@divisor^(0+1664),f
 17375  2DED  09A1               	comf	(___awmod@divisor+1)^(0+1664),f
 17376  2DEE  0AA0               	incf	___awmod@divisor^(0+1664),f
 17377  2DEF  1903               	skipnz
 17378  2DF0  0AA1               	incf	(___awmod@divisor+1)^(0+1664),f
 17379  2DF1                     l8402:	
 17380  2DF1  0820               	movf	___awmod@divisor^(0+1664),w
 17381  2DF2  0421               	iorwf	(___awmod@divisor+1)^(0+1664),w
 17382  2DF3  1903               	btfsc	3,2
 17383  2DF4  2DF6               	goto	u9161
 17384  2DF5  2DF7               	goto	u9160
 17385  2DF6                     u9161:	
 17386  2DF6  2E20               	goto	l8420
 17387  2DF7                     u9160:	
 17388  2DF7                     l8404:	
 17389  2DF7  01A5               	clrf	___awmod@counter^(0+1664)
 17390  2DF8  0AA5               	incf	___awmod@counter^(0+1664),f
 17391  2DF9  2E03               	goto	l8410
 17392  2DFA                     l8406:	
 17393  2DFA  3001               	movlw	1
 17394  2DFB                     u9175:	
 17395  2DFB  35A0               	lslf	___awmod@divisor^(0+1664),f
 17396  2DFC  0DA1               	rlf	(___awmod@divisor+1)^(0+1664),f
 17397  2DFD  0B89               	decfsz	9,f
 17398  2DFE  2DFB               	goto	u9175
 17399  2DFF                     l8408:	
 17400  2DFF  3001               	movlw	1
 17401  2E00  00A4               	movwf	??___awmod^(0+1664)
 17402  2E01  0824               	movf	??___awmod^(0+1664),w
 17403  2E02  07A5               	addwf	___awmod@counter^(0+1664),f
 17404  2E03                     l8410:	
 17405  2E03  1FA1               	btfss	(___awmod@divisor+1)^(0+1664),7
 17406  2E04  2E06               	goto	u9181
 17407  2E05  2E07               	goto	u9180
 17408  2E06                     u9181:	
 17409  2E06  2DFA               	goto	l8406
 17410  2E07                     u9180:	
 17411  2E07                     l8412:	
 17412  2E07  0821               	movf	(___awmod@divisor+1)^(0+1664),w
 17413  2E08  0223               	subwf	(___awmod@dividend+1)^(0+1664),w
 17414  2E09  1D03               	skipz
 17415  2E0A  2E0D               	goto	u9195
 17416  2E0B  0820               	movf	___awmod@divisor^(0+1664),w
 17417  2E0C  0222               	subwf	___awmod@dividend^(0+1664),w
 17418  2E0D                     u9195:	
 17419  2E0D  1C03               	skipc
 17420  2E0E  2E10               	goto	u9191
 17421  2E0F  2E11               	goto	u9190
 17422  2E10                     u9191:	
 17423  2E10  2E15               	goto	l8416
 17424  2E11                     u9190:	
 17425  2E11                     l8414:	
 17426  2E11  0820               	movf	___awmod@divisor^(0+1664),w
 17427  2E12  02A2               	subwf	___awmod@dividend^(0+1664),f
 17428  2E13  0821               	movf	(___awmod@divisor+1)^(0+1664),w
 17429  2E14  3BA3               	subwfb	(___awmod@dividend+1)^(0+1664),f
 17430  2E15                     l8416:	
 17431  2E15  3001               	movlw	1
 17432  2E16                     u9205:	
 17433  2E16  36A1               	lsrf	(___awmod@divisor+1)^(0+1664),f
 17434  2E17  0CA0               	rrf	___awmod@divisor^(0+1664),f
 17435  2E18  0B89               	decfsz	9,f
 17436  2E19  2E16               	goto	u9205
 17437  2E1A                     l8418:	
 17438  2E1A  3001               	movlw	1
 17439  2E1B  02A5               	subwf	___awmod@counter^(0+1664),f
 17440  2E1C  1D03               	btfss	3,2
 17441  2E1D  2E1F               	goto	u9211
 17442  2E1E  2E20               	goto	u9210
 17443  2E1F                     u9211:	
 17444  2E1F  2E07               	goto	l8412
 17445  2E20                     u9210:	
 17446  2E20                     l8420:	
 17447  2E20  0826               	movf	___awmod@sign^(0+1664),w
 17448  2E21  1903               	btfsc	3,2
 17449  2E22  2E24               	goto	u9221
 17450  2E23  2E25               	goto	u9220
 17451  2E24                     u9221:	
 17452  2E24  2E2A               	goto	l8424
 17453  2E25                     u9220:	
 17454  2E25                     l8422:	
 17455  2E25  09A2               	comf	___awmod@dividend^(0+1664),f
 17456  2E26  09A3               	comf	(___awmod@dividend+1)^(0+1664),f
 17457  2E27  0AA2               	incf	___awmod@dividend^(0+1664),f
 17458  2E28  1903               	skipnz
 17459  2E29  0AA3               	incf	(___awmod@dividend+1)^(0+1664),f
 17460  2E2A                     l8424:	
 17461  2E2A  0823               	movf	(___awmod@dividend+1)^(0+1664),w
 17462  2E2B  00A1               	movwf	(?___awmod+1)^(0+1664)
 17463  2E2C  0822               	movf	___awmod@dividend^(0+1664),w
 17464  2E2D  00A0               	movwf	?___awmod^(0+1664)
 17465  2E2E                     l1559:	
 17466  2E2E  0008               	return
 17467  2E2F                     __end_of___awmod:	
 17468                           
 17469                           	psect	text25
 17470  18AB                     __ptext25:	
 17471 ;; *************** function _UpdateScreen *****************
 17472 ;; Defined at:
 17473 ;;		line 998 in file "OLED.c"
 17474 ;; Parameters:    Size  Location     Type
 17475 ;;		None
 17476 ;; Auto vars:     Size  Location     Type
 17477 ;;  i               2   63[BANK13] int 
 17478 ;;  i               2   61[BANK13] int 
 17479 ;;  i               2   59[BANK13] int 
 17480 ;;  i               2   57[BANK13] int 
 17481 ;; Return value:  Size  Location     Type
 17482 ;;                  1    wreg      void 
 17483 ;; Registers used:
 17484 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17485 ;; Tracked objects:
 17486 ;;		On entry : 0/0
 17487 ;;		On exit  : 0/0
 17488 ;;		Unchanged: 0/0
 17489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0      10       0       0       0       0       0       0       0       0       0       0       0       0
 17492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       1       0       0       0       0       0       0       0       0       0       0       0       0
 17493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0      11       0       0       0       0       0       0       0       0       0       0       0       0
 17494 ;;Total ram usage:       11 bytes
 17495 ;; Hardware stack levels used:    1
 17496 ;; Hardware stack levels required when called:    9
 17497 ;; This function calls:
 17498 ;;		_OLED_Update_Partial
 17499 ;;		_OLED_Write
 17500 ;;		___wmul
 17501 ;; This function is called by:
 17502 ;;		_main
 17503 ;; This function uses a non-reentrant model
 17504 ;;
 17505                           
 17506                           
 17507                           ;psect for function _UpdateScreen
 17508  18AB                     _UpdateScreen:	
 17509  18AB                     l8248:	
 17510                           ;incstack = 0
 17511                           ; Regs used in _UpdateScreen: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17512                           
 17513                           
 17514                           ;OLED.c: 999:     for(int i = 0;i < 16; i++){
 17515  18AB  002D               	movlb	13	; select bank13
 17516  18AC  01D9               	clrf	UpdateScreen@i^(0+1664)
 17517  18AD  01DA               	clrf	(UpdateScreen@i+1)^(0+1664)
 17518  18AE                     l8254:	
 17519                           
 17520                           ;OLED.c: 1000:         if(textLine1[i]!=newTextLine1[i]){
 17521  18AE  002D               	movlb	13	; select bank13
 17522  18AF  0859               	movf	UpdateScreen@i^(0+1664),w
 17523  18B0  3ED3               	addlw	(low (_newTextLine1| (0+1792)))& (0+255)
 17524  18B1  0086               	movwf	6
 17525  18B2  3007               	movlw	7	; select bank15/16
 17526  18B3  0087               	movwf	7
 17527  18B4  0859               	movf	UpdateScreen@i^(0+1664),w
 17528  18B5  3E40               	addlw	(low (_textLine1| (0+2048)))& (0+255)
 17529  18B6  0084               	movwf	4
 17530  18B7  3008               	movlw	8	; select bank16/17
 17531  18B8  0085               	movwf	5
 17532  18B9  0800               	movf	0,w
 17533  18BA  0601               	xorwf	1,w
 17534  18BB  1903               	skipnz
 17535  18BC  28BE               	goto	u8911
 17536  18BD  28BF               	goto	u8910
 17537  18BE                     u8911:	
 17538  18BE  28F8               	goto	l8264
 17539  18BF                     u8910:	
 17540  18BF                     l8256:	
 17541                           
 17542                           ;OLED.c: 1001:             OLED_Write(i*(cfont.x_size - 4),0,newTextLine1[i]);
 17543  18BF  002E               	movlb	14	; select bank14
 17544  18C0  0822               	movf	(_cfont^(0+1792)+2),w
 17545  18C1  3EFC               	addlw	252
 17546  18C2  002D               	movlb	13	; select bank13
 17547  18C3  00A9               	movwf	___wmul@multiplier^(0+1664)
 17548  18C4  30FF               	movlw	255
 17549  18C5  1803               	skipnc
 17550  18C6  3000               	movlw	0
 17551  18C7  00AA               	movwf	(___wmul@multiplier^(0+1664)+1)
 17552  18C8  085A               	movf	(UpdateScreen@i+1)^(0+1664),w
 17553  18C9  00AC               	movwf	(___wmul@multiplicand+1)^(0+1664)
 17554  18CA  0859               	movf	UpdateScreen@i^(0+1664),w
 17555  18CB  00AB               	movwf	___wmul@multiplicand^(0+1664)
 17556  18CC  31AB  2333  3198   	fcall	___wmul
 17557  18CF  002D               	movlb	13	; select bank13
 17558  18D0  082A               	movf	(?___wmul+1)^(0+1664),w
 17559  18D1  00D8               	movwf	(_UpdateScreen$2310+1)^(0+1664)
 17560  18D2  0829               	movf	?___wmul^(0+1664),w
 17561  18D3  00D7               	movwf	_UpdateScreen$2310^(0+1664)
 17562  18D4                     l8258:	
 17563                           
 17564                           ;OLED.c: 1001:             OLED_Write(i*(cfont.x_size - 4),0,newTextLine1[i]);
 17565  18D4  0858               	movf	(_UpdateScreen$2310+1)^(0+1664),w
 17566  18D5  00B7               	movwf	(OLED_Write@x+1)^(0+1664)
 17567  18D6  0857               	movf	_UpdateScreen$2310^(0+1664),w
 17568  18D7  00B6               	movwf	OLED_Write@x^(0+1664)
 17569  18D8  3000               	movlw	0
 17570  18D9  00B8               	movwf	OLED_Write@y^(0+1664)
 17571  18DA  00B9               	movwf	(OLED_Write@y+1)^(0+1664)
 17572  18DB  0859               	movf	UpdateScreen@i^(0+1664),w
 17573  18DC  3ED3               	addlw	(low (_newTextLine1| (0+1792)))& (0+255)
 17574  18DD  0086               	movwf	6
 17575  18DE  3007               	movlw	7	; select bank15/16
 17576  18DF  0087               	movwf	7
 17577  18E0  0801               	movf	1,w
 17578  18E1  00D6               	movwf	??_UpdateScreen^(0+1664)
 17579  18E2  0856               	movf	??_UpdateScreen^(0+1664),w
 17580  18E3  00BA               	movwf	OLED_Write@value^(0+1664)
 17581  18E4  319D  25D8  3198   	fcall	_OLED_Write
 17582  18E7                     l8260:	
 17583                           
 17584                           ;OLED.c: 1002:             textLine1[i] = newTextLine1[i];
 17585  18E7  002D               	movlb	13	; select bank13
 17586  18E8  0859               	movf	UpdateScreen@i^(0+1664),w
 17587  18E9  3ED3               	addlw	(low (_newTextLine1| (0+1792)))& (0+255)
 17588  18EA  0086               	movwf	6
 17589  18EB  3007               	movlw	7	; select bank15/16
 17590  18EC  0087               	movwf	7
 17591  18ED  0801               	movf	1,w
 17592  18EE  00D6               	movwf	??_UpdateScreen^(0+1664)
 17593  18EF  0859               	movf	UpdateScreen@i^(0+1664),w
 17594  18F0  3E40               	addlw	(low (_textLine1| (0+2048)))& (0+255)
 17595  18F1  0086               	movwf	6
 17596  18F2  3008               	movlw	8	; select bank16/17
 17597  18F3  0087               	movwf	7
 17598  18F4  0856               	movf	??_UpdateScreen^(0+1664),w
 17599  18F5  0081               	movwf	1
 17600  18F6                     l8262:	
 17601                           
 17602                           ;OLED.c: 1003:             line_1_update_flag = 1;
 17603  18F6  01EF               	clrf	_line_1_update_flag^(0+1664)
 17604  18F7  0AEF               	incf	_line_1_update_flag^(0+1664),f
 17605  18F8                     l8264:	
 17606                           
 17607                           ;OLED.c: 1005:     }
 17608  18F8  3001               	movlw	1
 17609  18F9  07D9               	addwf	UpdateScreen@i^(0+1664),f
 17610  18FA  3000               	movlw	0
 17611  18FB  3DDA               	addwfc	(UpdateScreen@i+1)^(0+1664),f
 17612  18FC                     l8266:	
 17613  18FC  085A               	movf	(UpdateScreen@i+1)^(0+1664),w
 17614  18FD  3A80               	xorlw	128
 17615  18FE  00D6               	movwf	??_UpdateScreen^(0+1664)
 17616  18FF  3080               	movlw	128
 17617  1900  0256               	subwf	??_UpdateScreen^(0+1664),w
 17618  1901  1D03               	skipz
 17619  1902  2905               	goto	u8925
 17620  1903  3010               	movlw	16
 17621  1904  0259               	subwf	UpdateScreen@i^(0+1664),w
 17622  1905                     u8925:	
 17623  1905  1C03               	skipc
 17624  1906  2908               	goto	u8921
 17625  1907  2909               	goto	u8920
 17626  1908                     u8921:	
 17627  1908  28AE               	goto	l8254
 17628  1909                     u8920:	
 17629  1909                     l8268:	
 17630                           
 17631                           ;OLED.c: 1006:     if(line_1_update_flag){
 17632  1909  002D               	movlb	13	; select bank13
 17633  190A  086F               	movf	_line_1_update_flag^(0+1664),w
 17634  190B  1903               	btfsc	3,2
 17635  190C  290E               	goto	u8931
 17636  190D  290F               	goto	u8930
 17637  190E                     u8931:	
 17638  190E  2915               	goto	l8274
 17639  190F                     u8930:	
 17640  190F                     l8270:	
 17641                           
 17642                           ;OLED.c: 1007:         OLED_Update_Partial(0);
 17643  190F  3000               	movlw	0
 17644  1910  31A0  20BA  3198   	fcall	_OLED_Update_Partial
 17645  1913                     l8272:	
 17646                           
 17647                           ;OLED.c: 1008:         line_1_update_flag = 0;
 17648  1913  002D               	movlb	13	; select bank13
 17649  1914  01EF               	clrf	_line_1_update_flag^(0+1664)
 17650  1915                     l8274:	
 17651                           
 17652                           ;OLED.c: 1011:     for(int i = 0;i < 16; i++){
 17653  1915  01DB               	clrf	UpdateScreen@i_1557^(0+1664)
 17654  1916  01DC               	clrf	(UpdateScreen@i_1557+1)^(0+1664)
 17655  1917                     l8280:	
 17656                           
 17657                           ;OLED.c: 1012:         if(textLine2[i]!=newTextLine2[i]){
 17658  1917  002D               	movlb	13	; select bank13
 17659  1918  085B               	movf	UpdateScreen@i_1557^(0+1664),w
 17660  1919  3E60               	addlw	(low (_newTextLine2| (0+2048)))& (0+255)
 17661  191A  0086               	movwf	6
 17662  191B  3008               	movlw	8	; select bank16/17
 17663  191C  0087               	movwf	7
 17664  191D  085B               	movf	UpdateScreen@i_1557^(0+1664),w
 17665  191E  3E30               	addlw	(low (_textLine2| (0+2048)))& (0+255)
 17666  191F  0084               	movwf	4
 17667  1920  3008               	movlw	8	; select bank16/17
 17668  1921  0085               	movwf	5
 17669  1922  0800               	movf	0,w
 17670  1923  0601               	xorwf	1,w
 17671  1924  1903               	skipnz
 17672  1925  2927               	goto	u8941
 17673  1926  2928               	goto	u8940
 17674  1927                     u8941:	
 17675  1927  2963               	goto	l8290
 17676  1928                     u8940:	
 17677  1928                     l8282:	
 17678                           
 17679                           ;OLED.c: 1013:             OLED_Write(i*(cfont.x_size - 4),16,newTextLine2[i]);
 17680  1928  002E               	movlb	14	; select bank14
 17681  1929  0822               	movf	(_cfont^(0+1792)+2),w
 17682  192A  3EFC               	addlw	252
 17683  192B  002D               	movlb	13	; select bank13
 17684  192C  00A9               	movwf	___wmul@multiplier^(0+1664)
 17685  192D  30FF               	movlw	255
 17686  192E  1803               	skipnc
 17687  192F  3000               	movlw	0
 17688  1930  00AA               	movwf	(___wmul@multiplier^(0+1664)+1)
 17689  1931  085C               	movf	(UpdateScreen@i_1557+1)^(0+1664),w
 17690  1932  00AC               	movwf	(___wmul@multiplicand+1)^(0+1664)
 17691  1933  085B               	movf	UpdateScreen@i_1557^(0+1664),w
 17692  1934  00AB               	movwf	___wmul@multiplicand^(0+1664)
 17693  1935  31AB  2333  3198   	fcall	___wmul
 17694  1938  002D               	movlb	13	; select bank13
 17695  1939  082A               	movf	(?___wmul+1)^(0+1664),w
 17696  193A  00D8               	movwf	(_UpdateScreen$2310+1)^(0+1664)
 17697  193B  0829               	movf	?___wmul^(0+1664),w
 17698  193C  00D7               	movwf	_UpdateScreen$2310^(0+1664)
 17699  193D                     l8284:	
 17700                           
 17701                           ;OLED.c: 1013:             OLED_Write(i*(cfont.x_size - 4),16,newTextLine2[i]);
 17702  193D  0858               	movf	(_UpdateScreen$2310+1)^(0+1664),w
 17703  193E  00B7               	movwf	(OLED_Write@x+1)^(0+1664)
 17704  193F  0857               	movf	_UpdateScreen$2310^(0+1664),w
 17705  1940  00B6               	movwf	OLED_Write@x^(0+1664)
 17706  1941  3010               	movlw	16
 17707  1942  00B8               	movwf	OLED_Write@y^(0+1664)
 17708  1943  3000               	movlw	0
 17709  1944  00B9               	movwf	(OLED_Write@y^(0+1664)+1)
 17710  1945  085B               	movf	UpdateScreen@i_1557^(0+1664),w
 17711  1946  3E60               	addlw	(low (_newTextLine2| (0+2048)))& (0+255)
 17712  1947  0086               	movwf	6
 17713  1948  3008               	movlw	8	; select bank16/17
 17714  1949  0087               	movwf	7
 17715  194A  0801               	movf	1,w
 17716  194B  00D6               	movwf	??_UpdateScreen^(0+1664)
 17717  194C  0856               	movf	??_UpdateScreen^(0+1664),w
 17718  194D  00BA               	movwf	OLED_Write@value^(0+1664)
 17719  194E  319D  25D8  3198   	fcall	_OLED_Write
 17720  1951                     l8286:	
 17721                           
 17722                           ;OLED.c: 1014:             textLine2[i] = newTextLine2[i];
 17723  1951  002D               	movlb	13	; select bank13
 17724  1952  085B               	movf	UpdateScreen@i_1557^(0+1664),w
 17725  1953  3E60               	addlw	(low (_newTextLine2| (0+2048)))& (0+255)
 17726  1954  0086               	movwf	6
 17727  1955  3008               	movlw	8	; select bank16/17
 17728  1956  0087               	movwf	7
 17729  1957  0801               	movf	1,w
 17730  1958  00D6               	movwf	??_UpdateScreen^(0+1664)
 17731  1959  085B               	movf	UpdateScreen@i_1557^(0+1664),w
 17732  195A  3E30               	addlw	(low (_textLine2| (0+2048)))& (0+255)
 17733  195B  0086               	movwf	6
 17734  195C  3008               	movlw	8	; select bank16/17
 17735  195D  0087               	movwf	7
 17736  195E  0856               	movf	??_UpdateScreen^(0+1664),w
 17737  195F  0081               	movwf	1
 17738  1960                     l8288:	
 17739                           
 17740                           ;OLED.c: 1015:             line_2_update_flag = 1;
 17741  1960  002E               	movlb	14	; select bank14
 17742  1961  01BF               	clrf	_line_2_update_flag^(0+1792)
 17743  1962  0ABF               	incf	_line_2_update_flag^(0+1792),f
 17744  1963                     l8290:	
 17745                           
 17746                           ;OLED.c: 1017:     }
 17747  1963  3001               	movlw	1
 17748  1964  002D               	movlb	13	; select bank13
 17749  1965  07DB               	addwf	UpdateScreen@i_1557^(0+1664),f
 17750  1966  3000               	movlw	0
 17751  1967  3DDC               	addwfc	(UpdateScreen@i_1557+1)^(0+1664),f
 17752  1968                     l8292:	
 17753  1968  085C               	movf	(UpdateScreen@i_1557+1)^(0+1664),w
 17754  1969  3A80               	xorlw	128
 17755  196A  00D6               	movwf	??_UpdateScreen^(0+1664)
 17756  196B  3080               	movlw	128
 17757  196C  0256               	subwf	??_UpdateScreen^(0+1664),w
 17758  196D  1D03               	skipz
 17759  196E  2971               	goto	u8955
 17760  196F  3010               	movlw	16
 17761  1970  025B               	subwf	UpdateScreen@i_1557^(0+1664),w
 17762  1971                     u8955:	
 17763  1971  1C03               	skipc
 17764  1972  2974               	goto	u8951
 17765  1973  2975               	goto	u8950
 17766  1974                     u8951:	
 17767  1974  2917               	goto	l8280
 17768  1975                     u8950:	
 17769  1975                     l8294:	
 17770                           
 17771                           ;OLED.c: 1018:     if(line_2_update_flag){
 17772  1975  002E               	movlb	14	; select bank14
 17773  1976  083F               	movf	_line_2_update_flag^(0+1792),w
 17774  1977  1903               	btfsc	3,2
 17775  1978  297A               	goto	u8961
 17776  1979  297B               	goto	u8960
 17777  197A                     u8961:	
 17778  197A  2981               	goto	l8300
 17779  197B                     u8960:	
 17780  197B                     l8296:	
 17781                           
 17782                           ;OLED.c: 1019:         OLED_Update_Partial(2);
 17783  197B  3002               	movlw	2
 17784  197C  31A0  20BA  3198   	fcall	_OLED_Update_Partial
 17785  197F                     l8298:	
 17786                           
 17787                           ;OLED.c: 1020:         line_2_update_flag = 0;
 17788  197F  002E               	movlb	14	; select bank14
 17789  1980  01BF               	clrf	_line_2_update_flag^(0+1792)
 17790  1981                     l8300:	
 17791                           
 17792                           ;OLED.c: 1023:     for(int i = 0;i < 16; i++){
 17793  1981  002D               	movlb	13	; select bank13
 17794  1982  01DD               	clrf	UpdateScreen@i_1558^(0+1664)
 17795  1983  01DE               	clrf	(UpdateScreen@i_1558+1)^(0+1664)
 17796  1984                     l8306:	
 17797                           
 17798                           ;OLED.c: 1024:         if(textLine3[i]!=newTextLine3[i]){
 17799  1984  002D               	movlb	13	; select bank13
 17800  1985  085D               	movf	UpdateScreen@i_1558^(0+1664),w
 17801  1986  3E50               	addlw	(low (_newTextLine3| (0+2048)))& (0+255)
 17802  1987  0086               	movwf	6
 17803  1988  3008               	movlw	8	; select bank16/17
 17804  1989  0087               	movwf	7
 17805  198A  085D               	movf	UpdateScreen@i_1558^(0+1664),w
 17806  198B  3EA0               	addlw	(low (_textLine3| (0+2048)))& (0+255)
 17807  198C  0084               	movwf	4
 17808  198D  3008               	movlw	8	; select bank17/18
 17809  198E  0085               	movwf	5
 17810  198F  0800               	movf	0,w
 17811  1990  0601               	xorwf	1,w
 17812  1991  1903               	skipnz
 17813  1992  2994               	goto	u8971
 17814  1993  2995               	goto	u8970
 17815  1994                     u8971:	
 17816  1994  29D0               	goto	l8316
 17817  1995                     u8970:	
 17818  1995                     l8308:	
 17819                           
 17820                           ;OLED.c: 1025:             OLED_Write(i*(cfont.x_size - 4),32,newTextLine3[i]);
 17821  1995  002E               	movlb	14	; select bank14
 17822  1996  0822               	movf	(_cfont^(0+1792)+2),w
 17823  1997  3EFC               	addlw	252
 17824  1998  002D               	movlb	13	; select bank13
 17825  1999  00A9               	movwf	___wmul@multiplier^(0+1664)
 17826  199A  30FF               	movlw	255
 17827  199B  1803               	skipnc
 17828  199C  3000               	movlw	0
 17829  199D  00AA               	movwf	(___wmul@multiplier^(0+1664)+1)
 17830  199E  085E               	movf	(UpdateScreen@i_1558+1)^(0+1664),w
 17831  199F  00AC               	movwf	(___wmul@multiplicand+1)^(0+1664)
 17832  19A0  085D               	movf	UpdateScreen@i_1558^(0+1664),w
 17833  19A1  00AB               	movwf	___wmul@multiplicand^(0+1664)
 17834  19A2  31AB  2333  3198   	fcall	___wmul
 17835  19A5  002D               	movlb	13	; select bank13
 17836  19A6  082A               	movf	(?___wmul+1)^(0+1664),w
 17837  19A7  00D8               	movwf	(_UpdateScreen$2310+1)^(0+1664)
 17838  19A8  0829               	movf	?___wmul^(0+1664),w
 17839  19A9  00D7               	movwf	_UpdateScreen$2310^(0+1664)
 17840  19AA                     l8310:	
 17841                           
 17842                           ;OLED.c: 1025:             OLED_Write(i*(cfont.x_size - 4),32,newTextLine3[i]);
 17843  19AA  0858               	movf	(_UpdateScreen$2310+1)^(0+1664),w
 17844  19AB  00B7               	movwf	(OLED_Write@x+1)^(0+1664)
 17845  19AC  0857               	movf	_UpdateScreen$2310^(0+1664),w
 17846  19AD  00B6               	movwf	OLED_Write@x^(0+1664)
 17847  19AE  3020               	movlw	32
 17848  19AF  00B8               	movwf	OLED_Write@y^(0+1664)
 17849  19B0  3000               	movlw	0
 17850  19B1  00B9               	movwf	(OLED_Write@y^(0+1664)+1)
 17851  19B2  085D               	movf	UpdateScreen@i_1558^(0+1664),w
 17852  19B3  3E50               	addlw	(low (_newTextLine3| (0+2048)))& (0+255)
 17853  19B4  0086               	movwf	6
 17854  19B5  3008               	movlw	8	; select bank16/17
 17855  19B6  0087               	movwf	7
 17856  19B7  0801               	movf	1,w
 17857  19B8  00D6               	movwf	??_UpdateScreen^(0+1664)
 17858  19B9  0856               	movf	??_UpdateScreen^(0+1664),w
 17859  19BA  00BA               	movwf	OLED_Write@value^(0+1664)
 17860  19BB  319D  25D8  3198   	fcall	_OLED_Write
 17861  19BE                     l8312:	
 17862                           
 17863                           ;OLED.c: 1026:             textLine3[i] = newTextLine3[i];
 17864  19BE  002D               	movlb	13	; select bank13
 17865  19BF  085D               	movf	UpdateScreen@i_1558^(0+1664),w
 17866  19C0  3E50               	addlw	(low (_newTextLine3| (0+2048)))& (0+255)
 17867  19C1  0086               	movwf	6
 17868  19C2  3008               	movlw	8	; select bank16/17
 17869  19C3  0087               	movwf	7
 17870  19C4  0801               	movf	1,w
 17871  19C5  00D6               	movwf	??_UpdateScreen^(0+1664)
 17872  19C6  085D               	movf	UpdateScreen@i_1558^(0+1664),w
 17873  19C7  3EA0               	addlw	(low (_textLine3| (0+2048)))& (0+255)
 17874  19C8  0086               	movwf	6
 17875  19C9  3008               	movlw	8	; select bank17/18
 17876  19CA  0087               	movwf	7
 17877  19CB  0856               	movf	??_UpdateScreen^(0+1664),w
 17878  19CC  0081               	movwf	1
 17879  19CD                     l8314:	
 17880                           
 17881                           ;OLED.c: 1027:             line_3_update_flag = 1;
 17882  19CD  002E               	movlb	14	; select bank14
 17883  19CE  01BE               	clrf	_line_3_update_flag^(0+1792)
 17884  19CF  0ABE               	incf	_line_3_update_flag^(0+1792),f
 17885  19D0                     l8316:	
 17886                           
 17887                           ;OLED.c: 1029:     }
 17888  19D0  3001               	movlw	1
 17889  19D1  002D               	movlb	13	; select bank13
 17890  19D2  07DD               	addwf	UpdateScreen@i_1558^(0+1664),f
 17891  19D3  3000               	movlw	0
 17892  19D4  3DDE               	addwfc	(UpdateScreen@i_1558+1)^(0+1664),f
 17893  19D5                     l8318:	
 17894  19D5  085E               	movf	(UpdateScreen@i_1558+1)^(0+1664),w
 17895  19D6  3A80               	xorlw	128
 17896  19D7  00D6               	movwf	??_UpdateScreen^(0+1664)
 17897  19D8  3080               	movlw	128
 17898  19D9  0256               	subwf	??_UpdateScreen^(0+1664),w
 17899  19DA  1D03               	skipz
 17900  19DB  29DE               	goto	u8985
 17901  19DC  3010               	movlw	16
 17902  19DD  025D               	subwf	UpdateScreen@i_1558^(0+1664),w
 17903  19DE                     u8985:	
 17904  19DE  1C03               	skipc
 17905  19DF  29E1               	goto	u8981
 17906  19E0  29E2               	goto	u8980
 17907  19E1                     u8981:	
 17908  19E1  2984               	goto	l8306
 17909  19E2                     u8980:	
 17910  19E2                     l8320:	
 17911                           
 17912                           ;OLED.c: 1030:     if(line_3_update_flag){
 17913  19E2  002E               	movlb	14	; select bank14
 17914  19E3  083E               	movf	_line_3_update_flag^(0+1792),w
 17915  19E4  1903               	btfsc	3,2
 17916  19E5  29E7               	goto	u8991
 17917  19E6  29E8               	goto	u8990
 17918  19E7                     u8991:	
 17919  19E7  29EE               	goto	l8326
 17920  19E8                     u8990:	
 17921  19E8                     l8322:	
 17922                           
 17923                           ;OLED.c: 1031:         OLED_Update_Partial(4);
 17924  19E8  3004               	movlw	4
 17925  19E9  31A0  20BA  3198   	fcall	_OLED_Update_Partial
 17926  19EC                     l8324:	
 17927                           
 17928                           ;OLED.c: 1032:         line_3_update_flag = 0;
 17929  19EC  002E               	movlb	14	; select bank14
 17930  19ED  01BE               	clrf	_line_3_update_flag^(0+1792)
 17931  19EE                     l8326:	
 17932                           
 17933                           ;OLED.c: 1035:     for(int i = 0;i < 16; i++){
 17934  19EE  002D               	movlb	13	; select bank13
 17935  19EF  01DF               	clrf	UpdateScreen@i_1559^(0+1664)
 17936  19F0  01E0               	clrf	(UpdateScreen@i_1559+1)^(0+1664)
 17937  19F1                     l8332:	
 17938                           
 17939                           ;OLED.c: 1036:         if(textLine4[i]!=newTextLine4[i]){
 17940  19F1  002D               	movlb	13	; select bank13
 17941  19F2  085F               	movf	UpdateScreen@i_1559^(0+1664),w
 17942  19F3  3EC3               	addlw	(low (_newTextLine4| (0+1792)))& (0+255)
 17943  19F4  0086               	movwf	6
 17944  19F5  3007               	movlw	7	; select bank15/16
 17945  19F6  0087               	movwf	7
 17946  19F7  085F               	movf	UpdateScreen@i_1559^(0+1664),w
 17947  19F8  3E20               	addlw	(low (_textLine4| (0+2048)))& (0+255)
 17948  19F9  0084               	movwf	4
 17949  19FA  3008               	movlw	8	; select bank16/17
 17950  19FB  0085               	movwf	5
 17951  19FC  0800               	movf	0,w
 17952  19FD  0601               	xorwf	1,w
 17953  19FE  1903               	skipnz
 17954  19FF  2A01               	goto	u9001
 17955  1A00  2A02               	goto	u9000
 17956  1A01                     u9001:	
 17957  1A01  2A3D               	goto	l8342
 17958  1A02                     u9000:	
 17959  1A02                     l8334:	
 17960                           
 17961                           ;OLED.c: 1037:             OLED_Write(i*(cfont.x_size - 4),48,newTextLine4[i]);
 17962  1A02  002E               	movlb	14	; select bank14
 17963  1A03  0822               	movf	(_cfont^(0+1792)+2),w
 17964  1A04  3EFC               	addlw	252
 17965  1A05  002D               	movlb	13	; select bank13
 17966  1A06  00A9               	movwf	___wmul@multiplier^(0+1664)
 17967  1A07  30FF               	movlw	255
 17968  1A08  1803               	skipnc
 17969  1A09  3000               	movlw	0
 17970  1A0A  00AA               	movwf	(___wmul@multiplier^(0+1664)+1)
 17971  1A0B  0860               	movf	(UpdateScreen@i_1559+1)^(0+1664),w
 17972  1A0C  00AC               	movwf	(___wmul@multiplicand+1)^(0+1664)
 17973  1A0D  085F               	movf	UpdateScreen@i_1559^(0+1664),w
 17974  1A0E  00AB               	movwf	___wmul@multiplicand^(0+1664)
 17975  1A0F  31AB  2333  3198   	fcall	___wmul
 17976  1A12  002D               	movlb	13	; select bank13
 17977  1A13  082A               	movf	(?___wmul+1)^(0+1664),w
 17978  1A14  00D8               	movwf	(_UpdateScreen$2310+1)^(0+1664)
 17979  1A15  0829               	movf	?___wmul^(0+1664),w
 17980  1A16  00D7               	movwf	_UpdateScreen$2310^(0+1664)
 17981  1A17                     l8336:	
 17982                           
 17983                           ;OLED.c: 1037:             OLED_Write(i*(cfont.x_size - 4),48,newTextLine4[i]);
 17984  1A17  0858               	movf	(_UpdateScreen$2310+1)^(0+1664),w
 17985  1A18  00B7               	movwf	(OLED_Write@x+1)^(0+1664)
 17986  1A19  0857               	movf	_UpdateScreen$2310^(0+1664),w
 17987  1A1A  00B6               	movwf	OLED_Write@x^(0+1664)
 17988  1A1B  3030               	movlw	48
 17989  1A1C  00B8               	movwf	OLED_Write@y^(0+1664)
 17990  1A1D  3000               	movlw	0
 17991  1A1E  00B9               	movwf	(OLED_Write@y^(0+1664)+1)
 17992  1A1F  085F               	movf	UpdateScreen@i_1559^(0+1664),w
 17993  1A20  3EC3               	addlw	(low (_newTextLine4| (0+1792)))& (0+255)
 17994  1A21  0086               	movwf	6
 17995  1A22  3007               	movlw	7	; select bank15/16
 17996  1A23  0087               	movwf	7
 17997  1A24  0801               	movf	1,w
 17998  1A25  00D6               	movwf	??_UpdateScreen^(0+1664)
 17999  1A26  0856               	movf	??_UpdateScreen^(0+1664),w
 18000  1A27  00BA               	movwf	OLED_Write@value^(0+1664)
 18001  1A28  319D  25D8  3198   	fcall	_OLED_Write
 18002  1A2B                     l8338:	
 18003                           
 18004                           ;OLED.c: 1038:             textLine4[i] = newTextLine4[i];
 18005  1A2B  002D               	movlb	13	; select bank13
 18006  1A2C  085F               	movf	UpdateScreen@i_1559^(0+1664),w
 18007  1A2D  3EC3               	addlw	(low (_newTextLine4| (0+1792)))& (0+255)
 18008  1A2E  0086               	movwf	6
 18009  1A2F  3007               	movlw	7	; select bank15/16
 18010  1A30  0087               	movwf	7
 18011  1A31  0801               	movf	1,w
 18012  1A32  00D6               	movwf	??_UpdateScreen^(0+1664)
 18013  1A33  085F               	movf	UpdateScreen@i_1559^(0+1664),w
 18014  1A34  3E20               	addlw	(low (_textLine4| (0+2048)))& (0+255)
 18015  1A35  0086               	movwf	6
 18016  1A36  3008               	movlw	8	; select bank16/17
 18017  1A37  0087               	movwf	7
 18018  1A38  0856               	movf	??_UpdateScreen^(0+1664),w
 18019  1A39  0081               	movwf	1
 18020  1A3A                     l8340:	
 18021                           
 18022                           ;OLED.c: 1039:             line_4_update_flag = 1;
 18023  1A3A  002E               	movlb	14	; select bank14
 18024  1A3B  01BD               	clrf	_line_4_update_flag^(0+1792)
 18025  1A3C  0ABD               	incf	_line_4_update_flag^(0+1792),f
 18026  1A3D                     l8342:	
 18027                           
 18028                           ;OLED.c: 1041:     }
 18029  1A3D  3001               	movlw	1
 18030  1A3E  002D               	movlb	13	; select bank13
 18031  1A3F  07DF               	addwf	UpdateScreen@i_1559^(0+1664),f
 18032  1A40  3000               	movlw	0
 18033  1A41  3DE0               	addwfc	(UpdateScreen@i_1559+1)^(0+1664),f
 18034  1A42                     l8344:	
 18035  1A42  0860               	movf	(UpdateScreen@i_1559+1)^(0+1664),w
 18036  1A43  3A80               	xorlw	128
 18037  1A44  00D6               	movwf	??_UpdateScreen^(0+1664)
 18038  1A45  3080               	movlw	128
 18039  1A46  0256               	subwf	??_UpdateScreen^(0+1664),w
 18040  1A47  1D03               	skipz
 18041  1A48  2A4B               	goto	u9015
 18042  1A49  3010               	movlw	16
 18043  1A4A  025F               	subwf	UpdateScreen@i_1559^(0+1664),w
 18044  1A4B                     u9015:	
 18045  1A4B  1C03               	skipc
 18046  1A4C  2A4E               	goto	u9011
 18047  1A4D  2A4F               	goto	u9010
 18048  1A4E                     u9011:	
 18049  1A4E  29F1               	goto	l8332
 18050  1A4F                     u9010:	
 18051  1A4F                     l8346:	
 18052                           
 18053                           ;OLED.c: 1042:     if(line_4_update_flag){
 18054  1A4F  002E               	movlb	14	; select bank14
 18055  1A50  083D               	movf	_line_4_update_flag^(0+1792),w
 18056  1A51  1903               	btfsc	3,2
 18057  1A52  2A54               	goto	u9021
 18058  1A53  2A55               	goto	u9020
 18059  1A54                     u9021:	
 18060  1A54  2A5B               	goto	l1253
 18061  1A55                     u9020:	
 18062  1A55                     l8348:	
 18063                           
 18064                           ;OLED.c: 1043:         OLED_Update_Partial(6);
 18065  1A55  3006               	movlw	6
 18066  1A56  31A0  20BA  3198   	fcall	_OLED_Update_Partial
 18067  1A59                     l8350:	
 18068                           
 18069                           ;OLED.c: 1044:         line_4_update_flag = 0;
 18070  1A59  002E               	movlb	14	; select bank14
 18071  1A5A  01BD               	clrf	_line_4_update_flag^(0+1792)
 18072  1A5B                     l1253:	
 18073  1A5B  0008               	return
 18074  1A5C                     __end_of_UpdateScreen:	
 18075                           
 18076                           	psect	text26
 18077  1DD8                     __ptext26:	
 18078 ;; *************** function _OLED_Write *****************
 18079 ;; Defined at:
 18080 ;;		line 836 in file "OLED.c"
 18081 ;; Parameters:    Size  Location     Type
 18082 ;;  x               2   22[BANK13] short 
 18083 ;;  y               2   24[BANK13] short 
 18084 ;;  value           1   26[BANK13] unsigned char 
 18085 ;; Auto vars:     Size  Location     Type
 18086 ;;  cnt             2   51[BANK13] unsigned short 
 18087 ;;  rowcnt          2   49[BANK13] unsigned short 
 18088 ;;  cy              2   47[BANK13] short 
 18089 ;;  cx              2   45[BANK13] short 
 18090 ;;  font_idx        2   43[BANK13] unsigned short 
 18091 ;;  cbit            2   41[BANK13] short 
 18092 ;;  cbyte           2   37[BANK13] short 
 18093 ;;  temp            2   35[BANK13] unsigned short 
 18094 ;;  b               1   53[BANK13] unsigned char 
 18095 ;; Return value:  Size  Location     Type
 18096 ;;                  1    wreg      void 
 18097 ;; Registers used:
 18098 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18099 ;; Tracked objects:
 18100 ;;		On entry : 0/0
 18101 ;;		On exit  : 0/0
 18102 ;;		Unchanged: 0/0
 18103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       5       0       0       0       0       0       0       0       0       0       0       0       0
 18105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0      19       0       0       0       0       0       0       0       0       0       0       0       0
 18106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       8       0       0       0       0       0       0       0       0       0       0       0       0
 18107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0      32       0       0       0       0       0       0       0       0       0       0       0       0
 18108 ;;Total ram usage:       32 bytes
 18109 ;; Hardware stack levels used:    1
 18110 ;; Hardware stack levels required when called:    6
 18111 ;; This function calls:
 18112 ;;		_OLED_DrawPixel
 18113 ;;		___awdiv
 18114 ;;		___wmul
 18115 ;; This function is called by:
 18116 ;;		_UpdateScreen
 18117 ;;		_OLED_Write_Text
 18118 ;; This function uses a non-reentrant model
 18119 ;;
 18120                           
 18121                           
 18122                           ;psect for function _OLED_Write
 18123  1DD8                     _OLED_Write:	
 18124  1DD8                     l8006:	
 18125                           ;incstack = 0
 18126                           ; Regs used in _OLED_Write: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18127                           
 18128                           
 18129                           ;OLED.c: 838:     uint16_t rowcnt = 0;
 18130  1DD8  002D               	movlb	13	; select bank13
 18131  1DD9  01D1               	clrf	OLED_Write@rowcnt^(0+1664)
 18132  1DDA  01D2               	clrf	(OLED_Write@rowcnt+1)^(0+1664)
 18133                           
 18134                           ;OLED.c: 839:     uint16_t cnt = 0;
 18135  1DDB  01D3               	clrf	OLED_Write@cnt^(0+1664)
 18136  1DDC  01D4               	clrf	(OLED_Write@cnt+1)^(0+1664)
 18137                           
 18138                           ;OLED.c: 840:     uint8_t b;;OLED.c: 841:     uint16_t temp = 0;
 18139  1DDD  01C3               	clrf	OLED_Write@temp^(0+1664)
 18140  1DDE  01C4               	clrf	(OLED_Write@temp+1)^(0+1664)
 18141  1DDF                     l8008:	
 18142                           
 18143                           ;OLED.c: 843:     int16_t cbyte, cx, cy;;OLED.c: 844:     int16_t cbit;;OLED.c: 846:    
      +                           if (cfont.y_size % 8 == 0) {
 18144  1DDF  002E               	movlb	14	; select bank14
 18145  1DE0  0823               	movf	(_cfont^(0+1792)+3),w
 18146  1DE1  3907               	andlw	7
 18147  1DE2  1D03               	btfss	3,2
 18148  1DE3  2DE5               	goto	u8631
 18149  1DE4  2DE6               	goto	u8630
 18150  1DE5                     u8631:	
 18151  1DE5  2F14               	goto	l8048
 18152  1DE6                     u8630:	
 18153  1DE6                     l8010:	
 18154                           
 18155                           ;OLED.c: 847:         font_idx = ((value - cfont.offset)*(cfont.x_size * (cfont.y_size /
      +                           8))) + 4;
 18156  1DE6  0822               	movf	(_cfont^(0+1792)+2),w
 18157  1DE7  002D               	movlb	13	; select bank13
 18158  1DE8  00BB               	movwf	??_OLED_Write^(0+1664)
 18159  1DE9  01BC               	clrf	(??_OLED_Write^(0+1664)+1)
 18160  1DEA  083B               	movf	??_OLED_Write^(0+1664),w
 18161  1DEB  00A9               	movwf	___wmul@multiplier^(0+1664)
 18162  1DEC  083C               	movf	(??_OLED_Write+1)^(0+1664),w
 18163  1DED  00AA               	movwf	(___wmul@multiplier+1)^(0+1664)
 18164  1DEE  3008               	movlw	8
 18165  1DEF  00A0               	movwf	___awdiv@divisor^(0+1664)
 18166  1DF0  3000               	movlw	0
 18167  1DF1  00A1               	movwf	(___awdiv@divisor^(0+1664)+1)
 18168  1DF2  002E               	movlb	14	; select bank14
 18169  1DF3  0823               	movf	(_cfont^(0+1792)+3),w
 18170  1DF4  002D               	movlb	13	; select bank13
 18171  1DF5  00BD               	movwf	(??_OLED_Write+2)^(0+1664)
 18172  1DF6  01BE               	clrf	((??_OLED_Write+2)^(0+1664)+1)
 18173  1DF7  083D               	movf	(??_OLED_Write+2)^(0+1664),w
 18174  1DF8  00A2               	movwf	___awdiv@dividend^(0+1664)
 18175  1DF9  083E               	movf	(??_OLED_Write+3)^(0+1664),w
 18176  1DFA  00A3               	movwf	(___awdiv@dividend+1)^(0+1664)
 18177  1DFB  31AF  27A0  319D   	fcall	___awdiv
 18178  1DFE  002D               	movlb	13	; select bank13
 18179  1DFF  0821               	movf	(?___awdiv+1)^(0+1664),w
 18180  1E00  00AC               	movwf	(___wmul@multiplicand+1)^(0+1664)
 18181  1E01  0820               	movf	?___awdiv^(0+1664),w
 18182  1E02  00AB               	movwf	___wmul@multiplicand^(0+1664)
 18183  1E03  31AB  2333  319D   	fcall	___wmul
 18184  1E06  002D               	movlb	13	; select bank13
 18185  1E07  082A               	movf	(?___wmul+1)^(0+1664),w
 18186  1E08  00C8               	movwf	(_OLED_Write$2307+1)^(0+1664)
 18187  1E09  0829               	movf	?___wmul^(0+1664),w
 18188  1E0A  00C7               	movwf	_OLED_Write$2307^(0+1664)
 18189                           
 18190                           ;OLED.c: 847:         font_idx = ((value - cfont.offset)*(cfont.x_size * (cfont.y_size /
      +                           8))) + 4;
 18191  1E0B  002E               	movlb	14	; select bank14
 18192  1E0C  0824               	movf	(_cfont^(0+1792)+4),w
 18193  1E0D  002D               	movlb	13	; select bank13
 18194  1E0E  023A               	subwf	OLED_Write@value^(0+1664),w
 18195  1E0F  00A9               	movwf	___wmul@multiplier^(0+1664)
 18196  1E10  01AA               	clrf	(___wmul@multiplier^(0+1664)+1)
 18197  1E11  1C03               	skipc
 18198  1E12  03AA               	decf	(___wmul@multiplier+1)^(0+1664),f
 18199  1E13  0848               	movf	(_OLED_Write$2307+1)^(0+1664),w
 18200  1E14  00AC               	movwf	(___wmul@multiplicand+1)^(0+1664)
 18201  1E15  0847               	movf	_OLED_Write$2307^(0+1664),w
 18202  1E16  00AB               	movwf	___wmul@multiplicand^(0+1664)
 18203  1E17  31AB  2333  319D   	fcall	___wmul
 18204  1E1A  002D               	movlb	13	; select bank13
 18205  1E1B  0829               	movf	?___wmul^(0+1664),w
 18206  1E1C  3E04               	addlw	4
 18207  1E1D  00CB               	movwf	OLED_Write@font_idx^(0+1664)
 18208  1E1E  3000               	movlw	0
 18209  1E1F  3D2A               	addwfc	(?___wmul+1)^(0+1664),w
 18210  1E20  00CC               	movwf	(OLED_Write@font_idx+1)^(0+1664)
 18211  1E21                     l8012:	
 18212                           
 18213                           ;OLED.c: 848:         for (rowcnt = 0; rowcnt < (cfont.y_size / 8); rowcnt++) {
 18214  1E21  01D1               	clrf	OLED_Write@rowcnt^(0+1664)
 18215  1E22  01D2               	clrf	(OLED_Write@rowcnt+1)^(0+1664)
 18216  1E23  2EF8               	goto	l8046
 18217  1E24                     l8014:	
 18218                           
 18219                           ;OLED.c: 849:             for (cnt = 2; cnt < cfont.x_size-2 ; cnt++)
 18220  1E24  3002               	movlw	2
 18221  1E25  00D3               	movwf	OLED_Write@cnt^(0+1664)
 18222  1E26  3000               	movlw	0
 18223  1E27  00D4               	movwf	(OLED_Write@cnt^(0+1664)+1)
 18224  1E28  2EE1               	goto	l1188
 18225  1E29                     l8016:	
 18226                           
 18227                           ;OLED.c: 850:             {;OLED.c: 851:                 temp = *(cfont.font + font_idx 
      +                          + cnt + (rowcnt * cfont.x_size));
 18228  1E29  002E               	movlb	14	; select bank14
 18229  1E2A  0822               	movf	(_cfont^(0+1792)+2),w
 18230  1E2B  002D               	movlb	13	; select bank13
 18231  1E2C  00BB               	movwf	??_OLED_Write^(0+1664)
 18232  1E2D  01BC               	clrf	(??_OLED_Write^(0+1664)+1)
 18233  1E2E  083B               	movf	??_OLED_Write^(0+1664),w
 18234  1E2F  00A9               	movwf	___wmul@multiplier^(0+1664)
 18235  1E30  083C               	movf	(??_OLED_Write+1)^(0+1664),w
 18236  1E31  00AA               	movwf	(___wmul@multiplier+1)^(0+1664)
 18237  1E32  0852               	movf	(OLED_Write@rowcnt+1)^(0+1664),w
 18238  1E33  00AC               	movwf	(___wmul@multiplicand+1)^(0+1664)
 18239  1E34  0851               	movf	OLED_Write@rowcnt^(0+1664),w
 18240  1E35  00AB               	movwf	___wmul@multiplicand^(0+1664)
 18241  1E36  31AB  2333  319D   	fcall	___wmul
 18242  1E39  002D               	movlb	13	; select bank13
 18243  1E3A  0829               	movf	?___wmul^(0+1664),w
 18244  1E3B  002E               	movlb	14	; select bank14
 18245  1E3C  0720               	addwf	_cfont^(0+1792),w
 18246  1E3D  002D               	movlb	13	; select bank13
 18247  1E3E  00BD               	movwf	(??_OLED_Write+2)^(0+1664)
 18248  1E3F  082A               	movf	(?___wmul+1)^(0+1664),w
 18249  1E40  002E               	movlb	14	; select bank14
 18250  1E41  3D21               	addwfc	(_cfont+1)^(0+1792),w
 18251  1E42  002D               	movlb	13	; select bank13
 18252  1E43  00BE               	movwf	(??_OLED_Write+3)^(0+1664)
 18253  1E44  084B               	movf	OLED_Write@font_idx^(0+1664),w
 18254  1E45  073D               	addwf	(??_OLED_Write+2)^(0+1664),w
 18255  1E46  00BF               	movwf	(??_OLED_Write+4)^(0+1664)
 18256  1E47  084C               	movf	(OLED_Write@font_idx+1)^(0+1664),w
 18257  1E48  3D3E               	addwfc	(??_OLED_Write+3)^(0+1664),w
 18258  1E49  00C0               	movwf	(??_OLED_Write+5)^(0+1664)
 18259  1E4A  083F               	movf	(??_OLED_Write+4)^(0+1664),w
 18260  1E4B  0753               	addwf	OLED_Write@cnt^(0+1664),w
 18261  1E4C  0084               	movwf	4
 18262  1E4D  0840               	movf	(??_OLED_Write+5)^(0+1664),w
 18263  1E4E  3D54               	addwfc	(OLED_Write@cnt+1)^(0+1664),w
 18264  1E4F  0085               	movwf	5
 18265  1E50  0800               	movf	0,w	;code access
 18266  1E51  00C1               	movwf	(??_OLED_Write+6)^(0+1664)
 18267  1E52  01C2               	clrf	((??_OLED_Write+6)^(0+1664)+1)
 18268  1E53  0841               	movf	(??_OLED_Write+6)^(0+1664),w
 18269  1E54  00C3               	movwf	OLED_Write@temp^(0+1664)
 18270  1E55  0842               	movf	(??_OLED_Write+7)^(0+1664),w
 18271  1E56  00C4               	movwf	(OLED_Write@temp+1)^(0+1664)
 18272  1E57                     l8018:	
 18273                           
 18274                           ;OLED.c: 852:                 for (b = 0; b < 8; b++) {
 18275  1E57  01D5               	clrf	OLED_Write@b^(0+1664)
 18276  1E58                     l8024:	
 18277                           
 18278                           ;OLED.c: 853:                     if (temp & (1 << b)) {
 18279  1E58  3001               	movlw	1
 18280  1E59  00BB               	movwf	??_OLED_Write^(0+1664)
 18281  1E5A  3000               	movlw	0
 18282  1E5B  00BC               	movwf	(??_OLED_Write^(0+1664)+1)
 18283  1E5C  0A55               	incf	OLED_Write@b^(0+1664),w
 18284  1E5D  2E60               	goto	u8644
 18285  1E5E                     u8645:	
 18286  1E5E  35BB               	lslf	??_OLED_Write^(0+1664),f
 18287  1E5F  0DBC               	rlf	(??_OLED_Write^(0+1664)+1),f
 18288  1E60                     u8644:	
 18289  1E60  0B89               	decfsz	9,f
 18290  1E61  2E5E               	goto	u8645
 18291  1E62  0843               	movf	OLED_Write@temp^(0+1664),w
 18292  1E63  053B               	andwf	??_OLED_Write^(0+1664),w
 18293  1E64  00BD               	movwf	(??_OLED_Write+2)^(0+1664)
 18294  1E65  0844               	movf	(OLED_Write@temp+1)^(0+1664),w
 18295  1E66  053C               	andwf	(??_OLED_Write+1)^(0+1664),w
 18296  1E67  00BE               	movwf	(??_OLED_Write+3)^(0+1664)
 18297  1E68  083D               	movf	(??_OLED_Write+2)^(0+1664),w
 18298  1E69  043E               	iorwf	((??_OLED_Write+2)^(0+1664)+1),w
 18299  1E6A  1903               	btfsc	3,2
 18300  1E6B  2E6D               	goto	u8651
 18301  1E6C  2E6E               	goto	u8650
 18302  1E6D                     u8651:	
 18303  1E6D  2ECB               	goto	l8032
 18304  1E6E                     u8650:	
 18305  1E6E                     l8026:	
 18306                           
 18307                           ;OLED.c: 854:                         if (cfont.inverted == 0){
 18308  1E6E  002E               	movlb	14	; select bank14
 18309  1E6F  0826               	movf	(_cfont^(0+1792)+6),w
 18310  1E70  1D03               	btfss	3,2
 18311  1E71  2E73               	goto	u8661
 18312  1E72  2E74               	goto	u8660
 18313  1E73                     u8661:	
 18314  1E73  2EA0               	goto	l8030
 18315  1E74                     u8660:	
 18316  1E74                     l8028:	
 18317                           
 18318                           ;OLED.c: 855:                             OLED_DrawPixel(x + cnt - 2, y + (rowcnt * 8) +
      +                           b, 1);
 18319  1E74  002D               	movlb	13	; select bank13
 18320  1E75  0853               	movf	OLED_Write@cnt^(0+1664),w
 18321  1E76  0736               	addwf	OLED_Write@x^(0+1664),w
 18322  1E77  00BB               	movwf	??_OLED_Write^(0+1664)
 18323  1E78  0854               	movf	(OLED_Write@cnt+1)^(0+1664),w
 18324  1E79  3D37               	addwfc	(OLED_Write@x+1)^(0+1664),w
 18325  1E7A  00BC               	movwf	(??_OLED_Write+1)^(0+1664)
 18326  1E7B  083B               	movf	??_OLED_Write^(0+1664),w
 18327  1E7C  3EFE               	addlw	254
 18328  1E7D  00A9               	movwf	OLED_DrawPixel@x^(0+1664)
 18329  1E7E  30FF               	movlw	255
 18330  1E7F  3D3C               	addwfc	(??_OLED_Write+1)^(0+1664),w
 18331  1E80  00AA               	movwf	(OLED_DrawPixel@x+1)^(0+1664)
 18332  1E81  0855               	movf	OLED_Write@b^(0+1664),w
 18333  1E82  00BD               	movwf	(??_OLED_Write+2)^(0+1664)
 18334  1E83  01BE               	clrf	((??_OLED_Write+2)^(0+1664)+1)
 18335  1E84  0852               	movf	(OLED_Write@rowcnt+1)^(0+1664),w
 18336  1E85  00C0               	movwf	((??_OLED_Write+4)^(0+1664)+1)
 18337  1E86  0851               	movf	OLED_Write@rowcnt^(0+1664),w
 18338  1E87  00BF               	movwf	(??_OLED_Write+4)^(0+1664)
 18339  1E88  35BF               	lslf	(??_OLED_Write+4)^(0+1664),f
 18340  1E89  0DC0               	rlf	((??_OLED_Write+4)^(0+1664)+1),f
 18341  1E8A  35BF               	lslf	(??_OLED_Write+4)^(0+1664),f
 18342  1E8B  0DC0               	rlf	((??_OLED_Write+4)^(0+1664)+1),f
 18343  1E8C  35BF               	lslf	(??_OLED_Write+4)^(0+1664),f
 18344  1E8D  0DC0               	rlf	((??_OLED_Write+4)^(0+1664)+1),f
 18345  1E8E  083D               	movf	(??_OLED_Write+2)^(0+1664),w
 18346  1E8F  073F               	addwf	(??_OLED_Write+4)^(0+1664),w
 18347  1E90  00C1               	movwf	(??_OLED_Write+6)^(0+1664)
 18348  1E91  083E               	movf	(??_OLED_Write+3)^(0+1664),w
 18349  1E92  3D40               	addwfc	(??_OLED_Write+5)^(0+1664),w
 18350  1E93  00C2               	movwf	(??_OLED_Write+7)^(0+1664)
 18351  1E94  0838               	movf	OLED_Write@y^(0+1664),w
 18352  1E95  0741               	addwf	(??_OLED_Write+6)^(0+1664),w
 18353  1E96  00AB               	movwf	OLED_DrawPixel@y^(0+1664)
 18354  1E97  0839               	movf	(OLED_Write@y+1)^(0+1664),w
 18355  1E98  3D42               	addwfc	(??_OLED_Write+7)^(0+1664),w
 18356  1E99  00AC               	movwf	(OLED_DrawPixel@y+1)^(0+1664)
 18357  1E9A  01AD               	clrf	OLED_DrawPixel@color^(0+1664)
 18358  1E9B  0AAD               	incf	OLED_DrawPixel@color^(0+1664),f
 18359  1E9C  31A2  22D8  319D   	fcall	_OLED_DrawPixel
 18360                           
 18361                           ;OLED.c: 856:                         }
 18362  1E9F  2ED2               	goto	l8038
 18363  1EA0                     l8030:	
 18364                           
 18365                           ;OLED.c: 858:                             OLED_DrawPixel(x + cnt - 2, y + (rowcnt * 8) +
      +                           b, 0);
 18366  1EA0  002D               	movlb	13	; select bank13
 18367  1EA1  0853               	movf	OLED_Write@cnt^(0+1664),w
 18368  1EA2  0736               	addwf	OLED_Write@x^(0+1664),w
 18369  1EA3  00BB               	movwf	??_OLED_Write^(0+1664)
 18370  1EA4  0854               	movf	(OLED_Write@cnt+1)^(0+1664),w
 18371  1EA5  3D37               	addwfc	(OLED_Write@x+1)^(0+1664),w
 18372  1EA6  00BC               	movwf	(??_OLED_Write+1)^(0+1664)
 18373  1EA7  083B               	movf	??_OLED_Write^(0+1664),w
 18374  1EA8  3EFE               	addlw	254
 18375  1EA9  00A9               	movwf	OLED_DrawPixel@x^(0+1664)
 18376  1EAA  30FF               	movlw	255
 18377  1EAB  3D3C               	addwfc	(??_OLED_Write+1)^(0+1664),w
 18378  1EAC  00AA               	movwf	(OLED_DrawPixel@x+1)^(0+1664)
 18379  1EAD  0855               	movf	OLED_Write@b^(0+1664),w
 18380  1EAE  00BD               	movwf	(??_OLED_Write+2)^(0+1664)
 18381  1EAF  01BE               	clrf	((??_OLED_Write+2)^(0+1664)+1)
 18382  1EB0  0852               	movf	(OLED_Write@rowcnt+1)^(0+1664),w
 18383  1EB1  00C0               	movwf	((??_OLED_Write+4)^(0+1664)+1)
 18384  1EB2  0851               	movf	OLED_Write@rowcnt^(0+1664),w
 18385  1EB3  00BF               	movwf	(??_OLED_Write+4)^(0+1664)
 18386  1EB4  35BF               	lslf	(??_OLED_Write+4)^(0+1664),f
 18387  1EB5  0DC0               	rlf	((??_OLED_Write+4)^(0+1664)+1),f
 18388  1EB6  35BF               	lslf	(??_OLED_Write+4)^(0+1664),f
 18389  1EB7  0DC0               	rlf	((??_OLED_Write+4)^(0+1664)+1),f
 18390  1EB8  35BF               	lslf	(??_OLED_Write+4)^(0+1664),f
 18391  1EB9  0DC0               	rlf	((??_OLED_Write+4)^(0+1664)+1),f
 18392  1EBA  083D               	movf	(??_OLED_Write+2)^(0+1664),w
 18393  1EBB  073F               	addwf	(??_OLED_Write+4)^(0+1664),w
 18394  1EBC  00C1               	movwf	(??_OLED_Write+6)^(0+1664)
 18395  1EBD  083E               	movf	(??_OLED_Write+3)^(0+1664),w
 18396  1EBE  3D40               	addwfc	(??_OLED_Write+5)^(0+1664),w
 18397  1EBF  00C2               	movwf	(??_OLED_Write+7)^(0+1664)
 18398  1EC0  0838               	movf	OLED_Write@y^(0+1664),w
 18399  1EC1  0741               	addwf	(??_OLED_Write+6)^(0+1664),w
 18400  1EC2  00AB               	movwf	OLED_DrawPixel@y^(0+1664)
 18401  1EC3  0839               	movf	(OLED_Write@y+1)^(0+1664),w
 18402  1EC4  3D42               	addwfc	(??_OLED_Write+7)^(0+1664),w
 18403  1EC5  00AC               	movwf	(OLED_DrawPixel@y+1)^(0+1664)
 18404  1EC6  01AD               	clrf	OLED_DrawPixel@color^(0+1664)
 18405  1EC7  31A2  22D8  319D   	fcall	_OLED_DrawPixel
 18406  1ECA  2ED2               	goto	l8038
 18407  1ECB                     l8032:	
 18408                           
 18409                           ;OLED.c: 861:                         if (cfont.inverted == 0){
 18410  1ECB  002E               	movlb	14	; select bank14
 18411  1ECC  0826               	movf	(_cfont^(0+1792)+6),w
 18412  1ECD  1D03               	btfss	3,2
 18413  1ECE  2ED0               	goto	u8671
 18414  1ECF  2ED1               	goto	u8670
 18415  1ED0                     u8671:	
 18416  1ED0  2E74               	goto	l8028
 18417  1ED1                     u8670:	
 18418  1ED1  2EA0               	goto	l8030
 18419  1ED2                     l8038:	
 18420                           
 18421                           ;OLED.c: 868:                 }
 18422  1ED2  3001               	movlw	1
 18423  1ED3  002D               	movlb	13	; select bank13
 18424  1ED4  00BB               	movwf	??_OLED_Write^(0+1664)
 18425  1ED5  083B               	movf	??_OLED_Write^(0+1664),w
 18426  1ED6  07D5               	addwf	OLED_Write@b^(0+1664),f
 18427  1ED7                     l8040:	
 18428  1ED7  3008               	movlw	8
 18429  1ED8  0255               	subwf	OLED_Write@b^(0+1664),w
 18430  1ED9  1C03               	skipc
 18431  1EDA  2EDC               	goto	u8681
 18432  1EDB  2EDD               	goto	u8680
 18433  1EDC                     u8681:	
 18434  1EDC  2E58               	goto	l8024
 18435  1EDD                     u8680:	
 18436  1EDD                     l8042:	
 18437                           
 18438                           ;OLED.c: 869:             }
 18439  1EDD  3001               	movlw	1
 18440  1EDE  07D3               	addwf	OLED_Write@cnt^(0+1664),f
 18441  1EDF  3000               	movlw	0
 18442  1EE0  3DD4               	addwfc	(OLED_Write@cnt+1)^(0+1664),f
 18443  1EE1                     l1188:	
 18444  1EE1  002E               	movlb	14	; select bank14
 18445  1EE2  0822               	movf	(_cfont^(0+1792)+2),w
 18446  1EE3  3EFE               	addlw	254
 18447  1EE4  002D               	movlb	13	; select bank13
 18448  1EE5  00BB               	movwf	??_OLED_Write^(0+1664)
 18449  1EE6  30FF               	movlw	255
 18450  1EE7  1803               	skipnc
 18451  1EE8  3000               	movlw	0
 18452  1EE9  00BC               	movwf	(??_OLED_Write^(0+1664)+1)
 18453  1EEA  083C               	movf	(??_OLED_Write+1)^(0+1664),w
 18454  1EEB  0254               	subwf	(OLED_Write@cnt+1)^(0+1664),w
 18455  1EEC  1D03               	skipz
 18456  1EED  2EF0               	goto	u8695
 18457  1EEE  083B               	movf	??_OLED_Write^(0+1664),w
 18458  1EEF  0253               	subwf	OLED_Write@cnt^(0+1664),w
 18459  1EF0                     u8695:	
 18460  1EF0  1C03               	skipc
 18461  1EF1  2EF3               	goto	u8691
 18462  1EF2  2EF4               	goto	u8690
 18463  1EF3                     u8691:	
 18464  1EF3  2E29               	goto	l8016
 18465  1EF4                     u8690:	
 18466  1EF4                     l8044:	
 18467                           
 18468                           ;OLED.c: 870:         }
 18469  1EF4  3001               	movlw	1
 18470  1EF5  07D1               	addwf	OLED_Write@rowcnt^(0+1664),f
 18471  1EF6  3000               	movlw	0
 18472  1EF7  3DD2               	addwfc	(OLED_Write@rowcnt+1)^(0+1664),f
 18473  1EF8                     l8046:	
 18474  1EF8  3008               	movlw	8
 18475  1EF9  00A0               	movwf	___awdiv@divisor^(0+1664)
 18476  1EFA  3000               	movlw	0
 18477  1EFB  00A1               	movwf	(___awdiv@divisor^(0+1664)+1)
 18478  1EFC  002E               	movlb	14	; select bank14
 18479  1EFD  0823               	movf	(_cfont^(0+1792)+3),w
 18480  1EFE  002D               	movlb	13	; select bank13
 18481  1EFF  00BB               	movwf	??_OLED_Write^(0+1664)
 18482  1F00  01BC               	clrf	(??_OLED_Write^(0+1664)+1)
 18483  1F01  083B               	movf	??_OLED_Write^(0+1664),w
 18484  1F02  00A2               	movwf	___awdiv@dividend^(0+1664)
 18485  1F03  083C               	movf	(??_OLED_Write+1)^(0+1664),w
 18486  1F04  00A3               	movwf	(___awdiv@dividend+1)^(0+1664)
 18487  1F05  31AF  27A0  319D   	fcall	___awdiv
 18488  1F08  002D               	movlb	13	; select bank13
 18489  1F09  0821               	movf	(?___awdiv+1)^(0+1664),w
 18490  1F0A  0252               	subwf	(OLED_Write@rowcnt+1)^(0+1664),w
 18491  1F0B  1D03               	skipz
 18492  1F0C  2F0F               	goto	u8705
 18493  1F0D  0820               	movf	?___awdiv^(0+1664),w
 18494  1F0E  0251               	subwf	OLED_Write@rowcnt^(0+1664),w
 18495  1F0F                     u8705:	
 18496  1F0F  1C03               	skipc
 18497  1F10  2F12               	goto	u8701
 18498  1F11  2F13               	goto	u8700
 18499  1F12                     u8701:	
 18500  1F12  2E24               	goto	l8014
 18501  1F13                     u8700:	
 18502  1F13  2FFF               	goto	l1214
 18503  1F14                     l8048:	
 18504                           
 18505                           ;OLED.c: 872:         font_idx = ((value - cfont.offset)*((cfont.x_size * cfont.y_size) 
      +                          / 8)) + 4;
 18506  1F14  3008               	movlw	8
 18507  1F15  002D               	movlb	13	; select bank13
 18508  1F16  00A0               	movwf	___awdiv@divisor^(0+1664)
 18509  1F17  3000               	movlw	0
 18510  1F18  00A1               	movwf	(___awdiv@divisor^(0+1664)+1)
 18511  1F19  002E               	movlb	14	; select bank14
 18512  1F1A  0822               	movf	(_cfont^(0+1792)+2),w
 18513  1F1B  002D               	movlb	13	; select bank13
 18514  1F1C  00BB               	movwf	??_OLED_Write^(0+1664)
 18515  1F1D  01BC               	clrf	(??_OLED_Write^(0+1664)+1)
 18516  1F1E  083B               	movf	??_OLED_Write^(0+1664),w
 18517  1F1F  00A9               	movwf	___wmul@multiplier^(0+1664)
 18518  1F20  083C               	movf	(??_OLED_Write+1)^(0+1664),w
 18519  1F21  00AA               	movwf	(___wmul@multiplier+1)^(0+1664)
 18520  1F22  002E               	movlb	14	; select bank14
 18521  1F23  0823               	movf	(_cfont^(0+1792)+3),w
 18522  1F24  002D               	movlb	13	; select bank13
 18523  1F25  00BD               	movwf	(??_OLED_Write+2)^(0+1664)
 18524  1F26  01BE               	clrf	((??_OLED_Write+2)^(0+1664)+1)
 18525  1F27  083D               	movf	(??_OLED_Write+2)^(0+1664),w
 18526  1F28  00AB               	movwf	___wmul@multiplicand^(0+1664)
 18527  1F29  083E               	movf	(??_OLED_Write+3)^(0+1664),w
 18528  1F2A  00AC               	movwf	(___wmul@multiplicand+1)^(0+1664)
 18529  1F2B  31AB  2333  319D   	fcall	___wmul
 18530  1F2E  002D               	movlb	13	; select bank13
 18531  1F2F  082A               	movf	(?___wmul+1)^(0+1664),w
 18532  1F30  00A3               	movwf	(___awdiv@dividend+1)^(0+1664)
 18533  1F31  0829               	movf	?___wmul^(0+1664),w
 18534  1F32  00A2               	movwf	___awdiv@dividend^(0+1664)
 18535  1F33  31AF  27A0  319D   	fcall	___awdiv
 18536  1F36  002D               	movlb	13	; select bank13
 18537  1F37  0821               	movf	(?___awdiv+1)^(0+1664),w
 18538  1F38  00C8               	movwf	(_OLED_Write$2307+1)^(0+1664)
 18539  1F39  0820               	movf	?___awdiv^(0+1664),w
 18540  1F3A  00C7               	movwf	_OLED_Write$2307^(0+1664)
 18541                           
 18542                           ;OLED.c: 872:         font_idx = ((value - cfont.offset)*((cfont.x_size * cfont.y_size) 
      +                          / 8)) + 4;
 18543  1F3B  002E               	movlb	14	; select bank14
 18544  1F3C  0824               	movf	(_cfont^(0+1792)+4),w
 18545  1F3D  002D               	movlb	13	; select bank13
 18546  1F3E  023A               	subwf	OLED_Write@value^(0+1664),w
 18547  1F3F  00A9               	movwf	___wmul@multiplier^(0+1664)
 18548  1F40  01AA               	clrf	(___wmul@multiplier^(0+1664)+1)
 18549  1F41  1C03               	skipc
 18550  1F42  03AA               	decf	(___wmul@multiplier+1)^(0+1664),f
 18551  1F43  0848               	movf	(_OLED_Write$2307+1)^(0+1664),w
 18552  1F44  00AC               	movwf	(___wmul@multiplicand+1)^(0+1664)
 18553  1F45  0847               	movf	_OLED_Write$2307^(0+1664),w
 18554  1F46  00AB               	movwf	___wmul@multiplicand^(0+1664)
 18555  1F47  31AB  2333  319D   	fcall	___wmul
 18556  1F4A  002D               	movlb	13	; select bank13
 18557  1F4B  0829               	movf	?___wmul^(0+1664),w
 18558  1F4C  3E04               	addlw	4
 18559  1F4D  00CB               	movwf	OLED_Write@font_idx^(0+1664)
 18560  1F4E  3000               	movlw	0
 18561  1F4F  3D2A               	addwfc	(?___wmul+1)^(0+1664),w
 18562  1F50  00CC               	movwf	(OLED_Write@font_idx+1)^(0+1664)
 18563  1F51                     l8050:	
 18564                           
 18565                           ;OLED.c: 873:         cbyte = *(cfont.font + font_idx);
 18566  1F51  002E               	movlb	14	; select bank14
 18567  1F52  0820               	movf	_cfont^(0+1792),w
 18568  1F53  002D               	movlb	13	; select bank13
 18569  1F54  074B               	addwf	OLED_Write@font_idx^(0+1664),w
 18570  1F55  0084               	movwf	4
 18571  1F56  002E               	movlb	14	; select bank14
 18572  1F57  0821               	movf	(_cfont+1)^(0+1792),w
 18573  1F58  002D               	movlb	13	; select bank13
 18574  1F59  3D4C               	addwfc	(OLED_Write@font_idx+1)^(0+1664),w
 18575  1F5A  0085               	movwf	5
 18576  1F5B  0800               	movf	0,w	;code access
 18577  1F5C  00BB               	movwf	??_OLED_Write^(0+1664)
 18578  1F5D  01BC               	clrf	(??_OLED_Write^(0+1664)+1)
 18579  1F5E  083B               	movf	??_OLED_Write^(0+1664),w
 18580  1F5F  00C5               	movwf	OLED_Write@cbyte^(0+1664)
 18581  1F60  083C               	movf	(??_OLED_Write+1)^(0+1664),w
 18582  1F61  00C6               	movwf	(OLED_Write@cbyte+1)^(0+1664)
 18583  1F62                     l8052:	
 18584                           
 18585                           ;OLED.c: 874:         cbit = 7;
 18586  1F62  3007               	movlw	7
 18587  1F63  00C9               	movwf	OLED_Write@cbit^(0+1664)
 18588  1F64  3000               	movlw	0
 18589  1F65  00CA               	movwf	(OLED_Write@cbit^(0+1664)+1)
 18590  1F66                     l8054:	
 18591                           
 18592                           ;OLED.c: 875:         for (cx = 0; cx < cfont.x_size; cx++) {
 18593  1F66  01CD               	clrf	OLED_Write@cx^(0+1664)
 18594  1F67  01CE               	clrf	(OLED_Write@cx+1)^(0+1664)
 18595  1F68  2FF0               	goto	l1201
 18596  1F69                     l8056:	
 18597                           
 18598                           ;OLED.c: 876:             for (cy = 0; cy < cfont.y_size; cy++) {
 18599  1F69  002D               	movlb	13	; select bank13
 18600  1F6A  01CF               	clrf	OLED_Write@cy^(0+1664)
 18601  1F6B  01D0               	clrf	(OLED_Write@cy+1)^(0+1664)
 18602  1F6C  2FDC               	goto	l8082
 18603  1F6D                     l8058:	
 18604                           
 18605                           ;OLED.c: 877:                 if ((cbyte & (1 << cbit)) != 0) {
 18606  1F6D  3001               	movlw	1
 18607  1F6E  002D               	movlb	13	; select bank13
 18608  1F6F  00BB               	movwf	??_OLED_Write^(0+1664)
 18609  1F70  3000               	movlw	0
 18610  1F71  00BC               	movwf	(??_OLED_Write^(0+1664)+1)
 18611  1F72  0A49               	incf	OLED_Write@cbit^(0+1664),w
 18612  1F73  2F76               	goto	u8714
 18613  1F74                     u8715:	
 18614  1F74  35BB               	lslf	??_OLED_Write^(0+1664),f
 18615  1F75  0DBC               	rlf	(??_OLED_Write^(0+1664)+1),f
 18616  1F76                     u8714:	
 18617  1F76  0B89               	decfsz	9,f
 18618  1F77  2F74               	goto	u8715
 18619  1F78  0845               	movf	OLED_Write@cbyte^(0+1664),w
 18620  1F79  053B               	andwf	??_OLED_Write^(0+1664),w
 18621  1F7A  00BD               	movwf	(??_OLED_Write+2)^(0+1664)
 18622  1F7B  0846               	movf	(OLED_Write@cbyte+1)^(0+1664),w
 18623  1F7C  053C               	andwf	(??_OLED_Write+1)^(0+1664),w
 18624  1F7D  00BE               	movwf	(??_OLED_Write+3)^(0+1664)
 18625  1F7E  083D               	movf	(??_OLED_Write+2)^(0+1664),w
 18626  1F7F  043E               	iorwf	((??_OLED_Write+2)^(0+1664)+1),w
 18627  1F80  1903               	btfsc	3,2
 18628  1F81  2F83               	goto	u8721
 18629  1F82  2F84               	goto	u8720
 18630  1F83                     u8721:	
 18631  1F83  2FAF               	goto	l8066
 18632  1F84                     u8720:	
 18633  1F84                     l8060:	
 18634                           
 18635                           ;OLED.c: 878:                     if (cfont.inverted == 0){
 18636  1F84  002E               	movlb	14	; select bank14
 18637  1F85  0826               	movf	(_cfont^(0+1792)+6),w
 18638  1F86  1D03               	btfss	3,2
 18639  1F87  2F89               	goto	u8731
 18640  1F88  2F8A               	goto	u8730
 18641  1F89                     u8731:	
 18642  1F89  2F9D               	goto	l8064
 18643  1F8A                     u8730:	
 18644  1F8A                     l8062:	
 18645                           
 18646                           ;OLED.c: 879:                         OLED_DrawPixel(x + cx, y + cy, 1);
 18647  1F8A  002D               	movlb	13	; select bank13
 18648  1F8B  084D               	movf	OLED_Write@cx^(0+1664),w
 18649  1F8C  0736               	addwf	OLED_Write@x^(0+1664),w
 18650  1F8D  00A9               	movwf	OLED_DrawPixel@x^(0+1664)
 18651  1F8E  084E               	movf	(OLED_Write@cx+1)^(0+1664),w
 18652  1F8F  3D37               	addwfc	(OLED_Write@x+1)^(0+1664),w
 18653  1F90  00AA               	movwf	(OLED_DrawPixel@x+1)^(0+1664)
 18654  1F91  084F               	movf	OLED_Write@cy^(0+1664),w
 18655  1F92  0738               	addwf	OLED_Write@y^(0+1664),w
 18656  1F93  00AB               	movwf	OLED_DrawPixel@y^(0+1664)
 18657  1F94  0850               	movf	(OLED_Write@cy+1)^(0+1664),w
 18658  1F95  3D39               	addwfc	(OLED_Write@y+1)^(0+1664),w
 18659  1F96  00AC               	movwf	(OLED_DrawPixel@y+1)^(0+1664)
 18660  1F97  01AD               	clrf	OLED_DrawPixel@color^(0+1664)
 18661  1F98  0AAD               	incf	OLED_DrawPixel@color^(0+1664),f
 18662  1F99  31A2  22D8  319D   	fcall	_OLED_DrawPixel
 18663                           
 18664                           ;OLED.c: 880:                     }
 18665  1F9C  2FB6               	goto	l8072
 18666  1F9D                     l8064:	
 18667                           
 18668                           ;OLED.c: 882:                         OLED_DrawPixel(x + cx, y + cy, 0);
 18669  1F9D  002D               	movlb	13	; select bank13
 18670  1F9E  084D               	movf	OLED_Write@cx^(0+1664),w
 18671  1F9F  0736               	addwf	OLED_Write@x^(0+1664),w
 18672  1FA0  00A9               	movwf	OLED_DrawPixel@x^(0+1664)
 18673  1FA1  084E               	movf	(OLED_Write@cx+1)^(0+1664),w
 18674  1FA2  3D37               	addwfc	(OLED_Write@x+1)^(0+1664),w
 18675  1FA3  00AA               	movwf	(OLED_DrawPixel@x+1)^(0+1664)
 18676  1FA4  084F               	movf	OLED_Write@cy^(0+1664),w
 18677  1FA5  0738               	addwf	OLED_Write@y^(0+1664),w
 18678  1FA6  00AB               	movwf	OLED_DrawPixel@y^(0+1664)
 18679  1FA7  0850               	movf	(OLED_Write@cy+1)^(0+1664),w
 18680  1FA8  3D39               	addwfc	(OLED_Write@y+1)^(0+1664),w
 18681  1FA9  00AC               	movwf	(OLED_DrawPixel@y+1)^(0+1664)
 18682  1FAA  01AD               	clrf	OLED_DrawPixel@color^(0+1664)
 18683  1FAB  31A2  22D8  319D   	fcall	_OLED_DrawPixel
 18684  1FAE  2FB6               	goto	l8072
 18685  1FAF                     l8066:	
 18686                           
 18687                           ;OLED.c: 885:                     if (cfont.inverted == 0){
 18688  1FAF  002E               	movlb	14	; select bank14
 18689  1FB0  0826               	movf	(_cfont^(0+1792)+6),w
 18690  1FB1  1D03               	btfss	3,2
 18691  1FB2  2FB4               	goto	u8741
 18692  1FB3  2FB5               	goto	u8740
 18693  1FB4                     u8741:	
 18694  1FB4  2F8A               	goto	l8062
 18695  1FB5                     u8740:	
 18696  1FB5  2F9D               	goto	l8064
 18697  1FB6                     l8072:	
 18698                           
 18699                           ;OLED.c: 892:                 cbit--;
 18700  1FB6  30FF               	movlw	255
 18701  1FB7  002D               	movlb	13	; select bank13
 18702  1FB8  07C9               	addwf	OLED_Write@cbit^(0+1664),f
 18703  1FB9  30FF               	movlw	255
 18704  1FBA  3DCA               	addwfc	(OLED_Write@cbit+1)^(0+1664),f
 18705  1FBB                     l8074:	
 18706                           
 18707                           ;OLED.c: 893:                 if (cbit < 0) {
 18708  1FBB  1FCA               	btfss	(OLED_Write@cbit+1)^(0+1664),7
 18709  1FBC  2FBE               	goto	u8751
 18710  1FBD  2FBF               	goto	u8750
 18711  1FBE                     u8751:	
 18712  1FBE  2FD8               	goto	l8080
 18713  1FBF                     u8750:	
 18714  1FBF                     l8076:	
 18715                           
 18716                           ;OLED.c: 894:                     cbit = 7;
 18717  1FBF  3007               	movlw	7
 18718  1FC0  00C9               	movwf	OLED_Write@cbit^(0+1664)
 18719  1FC1  3000               	movlw	0
 18720  1FC2  00CA               	movwf	(OLED_Write@cbit^(0+1664)+1)
 18721                           
 18722                           ;OLED.c: 895:                     font_idx++;
 18723  1FC3  3001               	movlw	1
 18724  1FC4  07CB               	addwf	OLED_Write@font_idx^(0+1664),f
 18725  1FC5  3000               	movlw	0
 18726  1FC6  3DCC               	addwfc	(OLED_Write@font_idx+1)^(0+1664),f
 18727  1FC7                     l8078:	
 18728                           
 18729                           ;OLED.c: 896:                     cbyte = *(cfont.font + font_idx);
 18730  1FC7  002E               	movlb	14	; select bank14
 18731  1FC8  0820               	movf	_cfont^(0+1792),w
 18732  1FC9  002D               	movlb	13	; select bank13
 18733  1FCA  074B               	addwf	OLED_Write@font_idx^(0+1664),w
 18734  1FCB  0084               	movwf	4
 18735  1FCC  002E               	movlb	14	; select bank14
 18736  1FCD  0821               	movf	(_cfont+1)^(0+1792),w
 18737  1FCE  002D               	movlb	13	; select bank13
 18738  1FCF  3D4C               	addwfc	(OLED_Write@font_idx+1)^(0+1664),w
 18739  1FD0  0085               	movwf	5
 18740  1FD1  0800               	movf	0,w	;code access
 18741  1FD2  00BB               	movwf	??_OLED_Write^(0+1664)
 18742  1FD3  01BC               	clrf	(??_OLED_Write^(0+1664)+1)
 18743  1FD4  083B               	movf	??_OLED_Write^(0+1664),w
 18744  1FD5  00C5               	movwf	OLED_Write@cbyte^(0+1664)
 18745  1FD6  083C               	movf	(??_OLED_Write+1)^(0+1664),w
 18746  1FD7  00C6               	movwf	(OLED_Write@cbyte+1)^(0+1664)
 18747  1FD8                     l8080:	
 18748                           
 18749                           ;OLED.c: 898:             }
 18750  1FD8  3001               	movlw	1
 18751  1FD9  07CF               	addwf	OLED_Write@cy^(0+1664),f
 18752  1FDA  3000               	movlw	0
 18753  1FDB  3DD0               	addwfc	(OLED_Write@cy+1)^(0+1664),f
 18754  1FDC                     l8082:	
 18755  1FDC  0850               	movf	(OLED_Write@cy+1)^(0+1664),w
 18756  1FDD  3A80               	xorlw	128
 18757  1FDE  00BB               	movwf	??_OLED_Write^(0+1664)
 18758  1FDF  3080               	movlw	128
 18759  1FE0  023B               	subwf	??_OLED_Write^(0+1664),w
 18760  1FE1  1D03               	skipz
 18761  1FE2  2FE7               	goto	u8765
 18762  1FE3  002E               	movlb	14	; select bank14
 18763  1FE4  0823               	movf	(_cfont^(0+1792)+3),w
 18764  1FE5  002D               	movlb	13	; select bank13
 18765  1FE6  024F               	subwf	OLED_Write@cy^(0+1664),w
 18766  1FE7                     u8765:	
 18767  1FE7  1C03               	skipc
 18768  1FE8  2FEA               	goto	u8761
 18769  1FE9  2FEB               	goto	u8760
 18770  1FEA                     u8761:	
 18771  1FEA  2F6D               	goto	l8058
 18772  1FEB                     u8760:	
 18773  1FEB                     l8084:	
 18774                           
 18775                           ;OLED.c: 899:         }
 18776  1FEB  3001               	movlw	1
 18777  1FEC  002D               	movlb	13	; select bank13
 18778  1FED  07CD               	addwf	OLED_Write@cx^(0+1664),f
 18779  1FEE  3000               	movlw	0
 18780  1FEF  3DCE               	addwfc	(OLED_Write@cx+1)^(0+1664),f
 18781  1FF0                     l1201:	
 18782  1FF0  084E               	movf	(OLED_Write@cx+1)^(0+1664),w
 18783  1FF1  3A80               	xorlw	128
 18784  1FF2  00BB               	movwf	??_OLED_Write^(0+1664)
 18785  1FF3  3080               	movlw	128
 18786  1FF4  023B               	subwf	??_OLED_Write^(0+1664),w
 18787  1FF5  1D03               	skipz
 18788  1FF6  2FFB               	goto	u8775
 18789  1FF7  002E               	movlb	14	; select bank14
 18790  1FF8  0822               	movf	(_cfont^(0+1792)+2),w
 18791  1FF9  002D               	movlb	13	; select bank13
 18792  1FFA  024D               	subwf	OLED_Write@cx^(0+1664),w
 18793  1FFB                     u8775:	
 18794  1FFB  1C03               	skipc
 18795  1FFC  2FFE               	goto	u8771
 18796  1FFD  2FFF               	goto	u8770
 18797  1FFE                     u8771:	
 18798  1FFE  2F69               	goto	l8056
 18799  1FFF                     u8770:	
 18800  1FFF                     l1214:	
 18801  1FFF  0008               	return
 18802  2000                     __end_of_OLED_Write:	
 18803                           
 18804                           	psect	text27
 18805  2B33                     __ptext27:	
 18806 ;; *************** function ___wmul *****************
 18807 ;; Defined at:
 18808 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 18809 ;; Parameters:    Size  Location     Type
 18810 ;;  multiplier      2    9[BANK13] unsigned int 
 18811 ;;  multiplicand    2   11[BANK13] unsigned int 
 18812 ;; Auto vars:     Size  Location     Type
 18813 ;;  product         2   13[BANK13] unsigned int 
 18814 ;; Return value:  Size  Location     Type
 18815 ;;                  2    9[BANK13] unsigned int 
 18816 ;; Registers used:
 18817 ;;		wreg, status,2, status,0
 18818 ;; Tracked objects:
 18819 ;;		On entry : 0/0
 18820 ;;		On exit  : 0/0
 18821 ;;		Unchanged: 0/0
 18822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       4       0       0       0       0       0       0       0       0       0       0       0       0
 18824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 18825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       6       0       0       0       0       0       0       0       0       0       0       0       0
 18827 ;;Total ram usage:        6 bytes
 18828 ;; Hardware stack levels used:    1
 18829 ;; Hardware stack levels required when called:    4
 18830 ;; This function calls:
 18831 ;;		Nothing
 18832 ;; This function is called by:
 18833 ;;		_main
 18834 ;;		_OLED_Write
 18835 ;;		_UpdateScreen
 18836 ;;		_OLED_Write_Text
 18837 ;; This function uses a non-reentrant model
 18838 ;;
 18839                           
 18840                           
 18841                           ;psect for function ___wmul
 18842  2B33                     ___wmul:	
 18843  2B33                     l7758:	
 18844                           ;incstack = 0
 18845                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 18846                           
 18847  2B33  002D               	movlb	13	; select bank13
 18848  2B34  01AD               	clrf	___wmul@product^(0+1664)
 18849  2B35  01AE               	clrf	(___wmul@product+1)^(0+1664)
 18850  2B36                     l7760:	
 18851  2B36  1C29               	btfss	___wmul@multiplier^(0+1664),0
 18852  2B37  2B39               	goto	u8501
 18853  2B38  2B3A               	goto	u8500
 18854  2B39                     u8501:	
 18855  2B39  2B3E               	goto	l1393
 18856  2B3A                     u8500:	
 18857  2B3A                     l7762:	
 18858  2B3A  082B               	movf	___wmul@multiplicand^(0+1664),w
 18859  2B3B  07AD               	addwf	___wmul@product^(0+1664),f
 18860  2B3C  082C               	movf	(___wmul@multiplicand+1)^(0+1664),w
 18861  2B3D  3DAE               	addwfc	(___wmul@product+1)^(0+1664),f
 18862  2B3E                     l1393:	
 18863  2B3E  3001               	movlw	1
 18864  2B3F                     u8515:	
 18865  2B3F  35AB               	lslf	___wmul@multiplicand^(0+1664),f
 18866  2B40  0DAC               	rlf	(___wmul@multiplicand+1)^(0+1664),f
 18867  2B41  0B89               	decfsz	9,f
 18868  2B42  2B3F               	goto	u8515
 18869  2B43                     l7764:	
 18870  2B43  3001               	movlw	1
 18871  2B44                     u8525:	
 18872  2B44  36AA               	lsrf	(___wmul@multiplier+1)^(0+1664),f
 18873  2B45  0CA9               	rrf	___wmul@multiplier^(0+1664),f
 18874  2B46  0B89               	decfsz	9,f
 18875  2B47  2B44               	goto	u8525
 18876  2B48                     l7766:	
 18877  2B48  0829               	movf	___wmul@multiplier^(0+1664),w
 18878  2B49  042A               	iorwf	(___wmul@multiplier+1)^(0+1664),w
 18879  2B4A  1D03               	btfss	3,2
 18880  2B4B  2B4D               	goto	u8531
 18881  2B4C  2B4E               	goto	u8530
 18882  2B4D                     u8531:	
 18883  2B4D  2B36               	goto	l7760
 18884  2B4E                     u8530:	
 18885  2B4E                     l7768:	
 18886  2B4E  082E               	movf	(___wmul@product+1)^(0+1664),w
 18887  2B4F  00AA               	movwf	(?___wmul+1)^(0+1664)
 18888  2B50  082D               	movf	___wmul@product^(0+1664),w
 18889  2B51  00A9               	movwf	?___wmul^(0+1664)
 18890  2B52                     l1395:	
 18891  2B52  0008               	return
 18892  2B53                     __end_of___wmul:	
 18893                           
 18894                           	psect	text28
 18895  22D8                     __ptext28:	
 18896 ;; *************** function _OLED_DrawPixel *****************
 18897 ;; Defined at:
 18898 ;;		line 574 in file "OLED.c"
 18899 ;; Parameters:    Size  Location     Type
 18900 ;;  x               2    9[BANK13] short 
 18901 ;;  y               2   11[BANK13] short 
 18902 ;;  color           1   13[BANK13] unsigned char 
 18903 ;; Auto vars:     Size  Location     Type
 18904 ;;		None
 18905 ;; Return value:  Size  Location     Type
 18906 ;;                  1    wreg      void 
 18907 ;; Registers used:
 18908 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18909 ;; Tracked objects:
 18910 ;;		On entry : 0/0
 18911 ;;		On exit  : 0/0
 18912 ;;		Unchanged: 0/0
 18913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       5       0       0       0       0       0       0       0       0       0       0       0       0
 18915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       8       0       0       0       0       0       0       0       0       0       0       0       0
 18917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0      13       0       0       0       0       0       0       0       0       0       0       0       0
 18918 ;;Total ram usage:       13 bytes
 18919 ;; Hardware stack levels used:    1
 18920 ;; Hardware stack levels required when called:    5
 18921 ;; This function calls:
 18922 ;;		___awdiv
 18923 ;;		_height
 18924 ;;		_width
 18925 ;; This function is called by:
 18926 ;;		_OLED_Write
 18927 ;; This function uses a non-reentrant model
 18928 ;;
 18929                           
 18930                           
 18931                           ;psect for function _OLED_DrawPixel
 18932  22D8                     _OLED_DrawPixel:	
 18933  22D8                     l7692:	
 18934                           ;incstack = 0
 18935                           ; Regs used in _OLED_DrawPixel: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18936                           
 18937                           
 18938                           ;OLED.c: 575:     if ((x < 0) || (x >= width()) || (y < 0) || (y >= height()))
 18939  22D8  002D               	movlb	13	; select bank13
 18940  22D9  1BAA               	btfsc	(OLED_DrawPixel@x+1)^(0+1664),7
 18941  22DA  2ADC               	goto	u8361
 18942  22DB  2ADD               	goto	u8360
 18943  22DC                     u8361:	
 18944  22DC  2BB5               	goto	l1177
 18945  22DD                     u8360:	
 18946  22DD                     l7694:	
 18947  22DD  3180  2002  31A2   	fcall	_width
 18948  22E0  002D               	movlb	13	; select bank13
 18949  22E1  00AE               	movwf	??_OLED_DrawPixel^(0+1664)
 18950  22E2  082A               	movf	(OLED_DrawPixel@x+1)^(0+1664),w
 18951  22E3  3A80               	xorlw	128
 18952  22E4  00AF               	movwf	(??_OLED_DrawPixel+1)^(0+1664)
 18953  22E5  3080               	movlw	128
 18954  22E6  022F               	subwf	(??_OLED_DrawPixel+1)^(0+1664),w
 18955  22E7  1D03               	skipz
 18956  22E8  2AEB               	goto	u8375
 18957  22E9  082E               	movf	??_OLED_DrawPixel^(0+1664),w
 18958  22EA  0229               	subwf	OLED_DrawPixel@x^(0+1664),w
 18959  22EB                     u8375:	
 18960  22EB  1803               	skipnc
 18961  22EC  2AEE               	goto	u8371
 18962  22ED  2AEF               	goto	u8370
 18963  22EE                     u8371:	
 18964  22EE  2BB5               	goto	l1177
 18965  22EF                     u8370:	
 18966  22EF                     l7696:	
 18967  22EF  002D               	movlb	13	; select bank13
 18968  22F0  1BAC               	btfsc	(OLED_DrawPixel@y+1)^(0+1664),7
 18969  22F1  2AF3               	goto	u8381
 18970  22F2  2AF4               	goto	u8380
 18971  22F3                     u8381:	
 18972  22F3  2BB5               	goto	l1177
 18973  22F4                     u8380:	
 18974  22F4                     l7698:	
 18975  22F4  3198  2000  31A2   	fcall	_height
 18976  22F7  002D               	movlb	13	; select bank13
 18977  22F8  00AE               	movwf	??_OLED_DrawPixel^(0+1664)
 18978  22F9  082C               	movf	(OLED_DrawPixel@y+1)^(0+1664),w
 18979  22FA  3A80               	xorlw	128
 18980  22FB  00AF               	movwf	(??_OLED_DrawPixel+1)^(0+1664)
 18981  22FC  3080               	movlw	128
 18982  22FD  022F               	subwf	(??_OLED_DrawPixel+1)^(0+1664),w
 18983  22FE  1D03               	skipz
 18984  22FF  2B02               	goto	u8395
 18985  2300  082E               	movf	??_OLED_DrawPixel^(0+1664),w
 18986  2301  022B               	subwf	OLED_DrawPixel@y^(0+1664),w
 18987  2302                     u8395:	
 18988  2302  1C03               	skipc
 18989  2303  2B05               	goto	u8391
 18990  2304  2B06               	goto	u8390
 18991  2305                     u8391:	
 18992  2305  2BA1               	goto	l7708
 18993  2306                     u8390:	
 18994  2306  2BB5               	goto	l1177
 18995  2307                     l7700:	
 18996  2307  3001               	movlw	1
 18997  2308  00AE               	movwf	??_OLED_DrawPixel^(0+1664)
 18998  2309  082B               	movf	OLED_DrawPixel@y^(0+1664),w
 18999  230A  3907               	andlw	7
 19000  230B  0A89               	incf	9,f
 19001  230C  2B0E               	goto	u8404
 19002  230D                     u8405:	
 19003  230D  35AE               	lslf	??_OLED_DrawPixel^(0+1664),f
 19004  230E                     u8404:	
 19005  230E  0B89               	decfsz	9,f
 19006  230F  2B0D               	goto	u8405
 19007  2310  082E               	movf	??_OLED_DrawPixel^(0+1664),w
 19008  2311  00AF               	movwf	(??_OLED_DrawPixel+1)^(0+1664)
 19009  2312  3008               	movlw	8
 19010  2313  00A0               	movwf	___awdiv@divisor^(0+1664)
 19011  2314  3000               	movlw	0
 19012  2315  00A1               	movwf	(___awdiv@divisor^(0+1664)+1)
 19013  2316  082C               	movf	(OLED_DrawPixel@y+1)^(0+1664),w
 19014  2317  00A3               	movwf	(___awdiv@dividend+1)^(0+1664)
 19015  2318  082B               	movf	OLED_DrawPixel@y^(0+1664),w
 19016  2319  00A2               	movwf	___awdiv@dividend^(0+1664)
 19017  231A  31AF  27A0  31A2   	fcall	___awdiv
 19018  231D  002D               	movlb	13	; select bank13
 19019  231E  0820               	movf	?___awdiv^(0+1664),w
 19020  231F  00B0               	movwf	(??_OLED_DrawPixel+2)^(0+1664)
 19021  2320  0821               	movf	(?___awdiv+1)^(0+1664),w
 19022  2321  00B1               	movwf	((??_OLED_DrawPixel+2)^(0+1664)+1)
 19023  2322  3007               	movlw	7
 19024  2323                     u8415:	
 19025  2323  35B0               	lslf	(??_OLED_DrawPixel+2)^(0+1664),f
 19026  2324  0DB1               	rlf	((??_OLED_DrawPixel+2)^(0+1664)+1),f
 19027  2325  0B89               	decfsz	9,f
 19028  2326  2B23               	goto	u8415
 19029  2327  3000               	movlw	0
 19030  2328  00B2               	movwf	(??_OLED_DrawPixel+4)^(0+1664)
 19031  2329  3020               	movlw	32
 19032  232A  00B3               	movwf	((??_OLED_DrawPixel+4)^(0+1664)+1)
 19033  232B  0830               	movf	(??_OLED_DrawPixel+2)^(0+1664),w
 19034  232C  0732               	addwf	(??_OLED_DrawPixel+4)^(0+1664),w
 19035  232D  00B4               	movwf	(??_OLED_DrawPixel+6)^(0+1664)
 19036  232E  0831               	movf	(??_OLED_DrawPixel+3)^(0+1664),w
 19037  232F  3D33               	addwfc	(??_OLED_DrawPixel+5)^(0+1664),w
 19038  2330  00B5               	movwf	(??_OLED_DrawPixel+7)^(0+1664)
 19039  2331  0829               	movf	OLED_DrawPixel@x^(0+1664),w
 19040  2332  0734               	addwf	(??_OLED_DrawPixel+6)^(0+1664),w
 19041  2333  0086               	movwf	6
 19042  2334  082A               	movf	(OLED_DrawPixel@x+1)^(0+1664),w
 19043  2335  3D35               	addwfc	(??_OLED_DrawPixel+7)^(0+1664),w
 19044  2336  0087               	movwf	7
 19045  2337  082F               	movf	(??_OLED_DrawPixel+1)^(0+1664),w
 19046  2338  0481               	iorwf	1,f
 19047                           
 19048                           ;OLED.c: 580:             break;
 19049  2339  2BB5               	goto	l1177
 19050  233A                     l7702:	
 19051  233A  3001               	movlw	1
 19052  233B  00AE               	movwf	??_OLED_DrawPixel^(0+1664)
 19053  233C  082B               	movf	OLED_DrawPixel@y^(0+1664),w
 19054  233D  3907               	andlw	7
 19055  233E  0A89               	incf	9,f
 19056  233F  2B41               	goto	u8424
 19057  2340                     u8425:	
 19058  2340  35AE               	lslf	??_OLED_DrawPixel^(0+1664),f
 19059  2341                     u8424:	
 19060  2341  0B89               	decfsz	9,f
 19061  2342  2B40               	goto	u8425
 19062  2343  082E               	movf	??_OLED_DrawPixel^(0+1664),w
 19063  2344  3AFF               	xorlw	255
 19064  2345  00AF               	movwf	(??_OLED_DrawPixel+1)^(0+1664)
 19065  2346  3008               	movlw	8
 19066  2347  00A0               	movwf	___awdiv@divisor^(0+1664)
 19067  2348  3000               	movlw	0
 19068  2349  00A1               	movwf	(___awdiv@divisor^(0+1664)+1)
 19069  234A  082C               	movf	(OLED_DrawPixel@y+1)^(0+1664),w
 19070  234B  00A3               	movwf	(___awdiv@dividend+1)^(0+1664)
 19071  234C  082B               	movf	OLED_DrawPixel@y^(0+1664),w
 19072  234D  00A2               	movwf	___awdiv@dividend^(0+1664)
 19073  234E  31AF  27A0  31A2   	fcall	___awdiv
 19074  2351  002D               	movlb	13	; select bank13
 19075  2352  0820               	movf	?___awdiv^(0+1664),w
 19076  2353  00B0               	movwf	(??_OLED_DrawPixel+2)^(0+1664)
 19077  2354  0821               	movf	(?___awdiv+1)^(0+1664),w
 19078  2355  00B1               	movwf	((??_OLED_DrawPixel+2)^(0+1664)+1)
 19079  2356  3007               	movlw	7
 19080  2357                     u8435:	
 19081  2357  35B0               	lslf	(??_OLED_DrawPixel+2)^(0+1664),f
 19082  2358  0DB1               	rlf	((??_OLED_DrawPixel+2)^(0+1664)+1),f
 19083  2359  0B89               	decfsz	9,f
 19084  235A  2B57               	goto	u8435
 19085  235B  3000               	movlw	0
 19086  235C  00B2               	movwf	(??_OLED_DrawPixel+4)^(0+1664)
 19087  235D  3020               	movlw	32
 19088  235E  00B3               	movwf	((??_OLED_DrawPixel+4)^(0+1664)+1)
 19089  235F  0830               	movf	(??_OLED_DrawPixel+2)^(0+1664),w
 19090  2360  0732               	addwf	(??_OLED_DrawPixel+4)^(0+1664),w
 19091  2361  00B4               	movwf	(??_OLED_DrawPixel+6)^(0+1664)
 19092  2362  0831               	movf	(??_OLED_DrawPixel+3)^(0+1664),w
 19093  2363  3D33               	addwfc	(??_OLED_DrawPixel+5)^(0+1664),w
 19094  2364  00B5               	movwf	(??_OLED_DrawPixel+7)^(0+1664)
 19095  2365  0829               	movf	OLED_DrawPixel@x^(0+1664),w
 19096  2366  0734               	addwf	(??_OLED_DrawPixel+6)^(0+1664),w
 19097  2367  0086               	movwf	6
 19098  2368  082A               	movf	(OLED_DrawPixel@x+1)^(0+1664),w
 19099  2369  3D35               	addwfc	(??_OLED_DrawPixel+7)^(0+1664),w
 19100  236A  0087               	movwf	7
 19101  236B  082F               	movf	(??_OLED_DrawPixel+1)^(0+1664),w
 19102  236C  0581               	andwf	1,f
 19103                           
 19104                           ;OLED.c: 582:             break;
 19105  236D  2BB5               	goto	l1177
 19106  236E                     l7704:	
 19107  236E  3001               	movlw	1
 19108  236F  00AE               	movwf	??_OLED_DrawPixel^(0+1664)
 19109  2370  082B               	movf	OLED_DrawPixel@y^(0+1664),w
 19110  2371  3907               	andlw	7
 19111  2372  0A89               	incf	9,f
 19112  2373  2B75               	goto	u8444
 19113  2374                     u8445:	
 19114  2374  35AE               	lslf	??_OLED_DrawPixel^(0+1664),f
 19115  2375                     u8444:	
 19116  2375  0B89               	decfsz	9,f
 19117  2376  2B74               	goto	u8445
 19118  2377  082E               	movf	??_OLED_DrawPixel^(0+1664),w
 19119  2378  00AF               	movwf	(??_OLED_DrawPixel+1)^(0+1664)
 19120  2379  3008               	movlw	8
 19121  237A  00A0               	movwf	___awdiv@divisor^(0+1664)
 19122  237B  3000               	movlw	0
 19123  237C  00A1               	movwf	(___awdiv@divisor^(0+1664)+1)
 19124  237D  082C               	movf	(OLED_DrawPixel@y+1)^(0+1664),w
 19125  237E  00A3               	movwf	(___awdiv@dividend+1)^(0+1664)
 19126  237F  082B               	movf	OLED_DrawPixel@y^(0+1664),w
 19127  2380  00A2               	movwf	___awdiv@dividend^(0+1664)
 19128  2381  31AF  27A0  31A2   	fcall	___awdiv
 19129  2384  002D               	movlb	13	; select bank13
 19130  2385  0820               	movf	?___awdiv^(0+1664),w
 19131  2386  00B0               	movwf	(??_OLED_DrawPixel+2)^(0+1664)
 19132  2387  0821               	movf	(?___awdiv+1)^(0+1664),w
 19133  2388  00B1               	movwf	((??_OLED_DrawPixel+2)^(0+1664)+1)
 19134  2389  3007               	movlw	7
 19135  238A                     u8455:	
 19136  238A  35B0               	lslf	(??_OLED_DrawPixel+2)^(0+1664),f
 19137  238B  0DB1               	rlf	((??_OLED_DrawPixel+2)^(0+1664)+1),f
 19138  238C  0B89               	decfsz	9,f
 19139  238D  2B8A               	goto	u8455
 19140  238E  3000               	movlw	0
 19141  238F  00B2               	movwf	(??_OLED_DrawPixel+4)^(0+1664)
 19142  2390  3020               	movlw	32
 19143  2391  00B3               	movwf	((??_OLED_DrawPixel+4)^(0+1664)+1)
 19144  2392  0830               	movf	(??_OLED_DrawPixel+2)^(0+1664),w
 19145  2393  0732               	addwf	(??_OLED_DrawPixel+4)^(0+1664),w
 19146  2394  00B4               	movwf	(??_OLED_DrawPixel+6)^(0+1664)
 19147  2395  0831               	movf	(??_OLED_DrawPixel+3)^(0+1664),w
 19148  2396  3D33               	addwfc	(??_OLED_DrawPixel+5)^(0+1664),w
 19149  2397  00B5               	movwf	(??_OLED_DrawPixel+7)^(0+1664)
 19150  2398  0829               	movf	OLED_DrawPixel@x^(0+1664),w
 19151  2399  0734               	addwf	(??_OLED_DrawPixel+6)^(0+1664),w
 19152  239A  0086               	movwf	6
 19153  239B  082A               	movf	(OLED_DrawPixel@x+1)^(0+1664),w
 19154  239C  3D35               	addwfc	(??_OLED_DrawPixel+7)^(0+1664),w
 19155  239D  0087               	movwf	7
 19156  239E  082F               	movf	(??_OLED_DrawPixel+1)^(0+1664),w
 19157  239F  0681               	xorwf	1,f
 19158                           
 19159                           ;OLED.c: 584:             break;
 19160  23A0  2BB5               	goto	l1177
 19161  23A1                     l7708:	
 19162  23A1  002D               	movlb	13	; select bank13
 19163  23A2  082D               	movf	OLED_DrawPixel@color^(0+1664),w
 19164  23A3  00AE               	movwf	??_OLED_DrawPixel^(0+1664)
 19165  23A4  01AF               	clrf	(??_OLED_DrawPixel^(0+1664)+1)
 19166                           
 19167                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19168                           ; Switch size 1, requested type "simple"
 19169                           ; Number of cases is 1, Range of values is 0 to 0
 19170                           ; switch strategies available:
 19171                           ; Name         Instructions Cycles
 19172                           ; simple_byte            4     3 (average)
 19173                           ; direct_byte            8     6 (fixed)
 19174                           ; jumptable            260     6 (fixed)
 19175                           ;	Chosen strategy is simple_byte
 19176  23A5  082F               	movf	(??_OLED_DrawPixel+1)^(0+1664),w
 19177  23A6  3A00               	xorlw	0	; case 0
 19178  23A7  1903               	skipnz
 19179  23A8  2BAA               	goto	l9356
 19180  23A9  2BB5               	goto	l1177
 19181  23AA                     l9356:	
 19182                           
 19183                           ; Switch size 1, requested type "simple"
 19184                           ; Number of cases is 3, Range of values is 0 to 2
 19185                           ; switch strategies available:
 19186                           ; Name         Instructions Cycles
 19187                           ; simple_byte           10     6 (average)
 19188                           ; direct_byte           12     6 (fixed)
 19189                           ; jumptable            260     6 (fixed)
 19190                           ;	Chosen strategy is simple_byte
 19191  23AA  082E               	movf	??_OLED_DrawPixel^(0+1664),w
 19192  23AB  3A00               	xorlw	0	; case 0
 19193  23AC  1903               	skipnz
 19194  23AD  2B3A               	goto	l7702
 19195  23AE  3A01               	xorlw	1	; case 1
 19196  23AF  1903               	skipnz
 19197  23B0  2B07               	goto	l7700
 19198  23B1  3A03               	xorlw	3	; case 2
 19199  23B2  1903               	skipnz
 19200  23B3  2B6E               	goto	l7704
 19201  23B4  2BB5               	goto	l1177
 19202  23B5                     l1177:	
 19203  23B5  0008               	return
 19204  23B6                     __end_of_OLED_DrawPixel:	
 19205                           
 19206                           	psect	text29
 19207  0002                     __ptext29:	
 19208 ;; *************** function _width *****************
 19209 ;; Defined at:
 19210 ;;		line 961 in file "OLED.c"
 19211 ;; Parameters:    Size  Location     Type
 19212 ;;		None
 19213 ;; Auto vars:     Size  Location     Type
 19214 ;;		None
 19215 ;; Return value:  Size  Location     Type
 19216 ;;                  1    wreg      unsigned char 
 19217 ;; Registers used:
 19218 ;;		wreg
 19219 ;; Tracked objects:
 19220 ;;		On entry : 0/0
 19221 ;;		On exit  : 0/0
 19222 ;;		Unchanged: 0/0
 19223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19228 ;;Total ram usage:        0 bytes
 19229 ;; Hardware stack levels used:    1
 19230 ;; Hardware stack levels required when called:    4
 19231 ;; This function calls:
 19232 ;;		Nothing
 19233 ;; This function is called by:
 19234 ;;		_OLED_DrawPixel
 19235 ;; This function uses a non-reentrant model
 19236 ;;
 19237                           
 19238                           
 19239                           ;psect for function _width
 19240  0002                     _width:	
 19241  0002                     l7566:	
 19242                           ;incstack = 0
 19243                           ; Regs used in _width: [wreg]
 19244                           
 19245                           
 19246                           ;OLED.c: 962:     return 128;
 19247  0002  3080               	movlw	128
 19248  0003                     l1231:	
 19249  0003  0008               	return
 19250  0004                     __end_of_width:	
 19251                           
 19252                           	psect	text30
 19253  1800                     __ptext30:	
 19254 ;; *************** function _height *****************
 19255 ;; Defined at:
 19256 ;;		line 970 in file "OLED.c"
 19257 ;; Parameters:    Size  Location     Type
 19258 ;;		None
 19259 ;; Auto vars:     Size  Location     Type
 19260 ;;		None
 19261 ;; Return value:  Size  Location     Type
 19262 ;;                  1    wreg      unsigned char 
 19263 ;; Registers used:
 19264 ;;		wreg
 19265 ;; Tracked objects:
 19266 ;;		On entry : 0/0
 19267 ;;		On exit  : 0/0
 19268 ;;		Unchanged: 0/0
 19269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19274 ;;Total ram usage:        0 bytes
 19275 ;; Hardware stack levels used:    1
 19276 ;; Hardware stack levels required when called:    4
 19277 ;; This function calls:
 19278 ;;		Nothing
 19279 ;; This function is called by:
 19280 ;;		_OLED_DrawPixel
 19281 ;; This function uses a non-reentrant model
 19282 ;;
 19283                           
 19284                           
 19285                           ;psect for function _height
 19286  1800                     _height:	
 19287  1800                     l7570:	
 19288                           ;incstack = 0
 19289                           ; Regs used in _height: [wreg]
 19290                           
 19291                           
 19292                           ;OLED.c: 971:     return 64;
 19293  1800  3040               	movlw	64
 19294  1801                     l1234:	
 19295  1801  0008               	return
 19296  1802                     __end_of_height:	
 19297                           
 19298                           	psect	text31
 19299  2FA0                     __ptext31:	
 19300 ;; *************** function ___awdiv *****************
 19301 ;; Defined at:
 19302 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 19303 ;; Parameters:    Size  Location     Type
 19304 ;;  divisor         2    0[BANK13] int 
 19305 ;;  dividend        2    2[BANK13] int 
 19306 ;; Auto vars:     Size  Location     Type
 19307 ;;  quotient        2    7[BANK13] int 
 19308 ;;  sign            1    6[BANK13] unsigned char 
 19309 ;;  counter         1    5[BANK13] unsigned char 
 19310 ;; Return value:  Size  Location     Type
 19311 ;;                  2    0[BANK13] int 
 19312 ;; Registers used:
 19313 ;;		wreg, status,2, status,0
 19314 ;; Tracked objects:
 19315 ;;		On entry : 0/0
 19316 ;;		On exit  : 0/0
 19317 ;;		Unchanged: 0/0
 19318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       4       0       0       0       0       0       0       0       0       0       0       0       0
 19320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       4       0       0       0       0       0       0       0       0       0       0       0       0
 19321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       1       0       0       0       0       0       0       0       0       0       0       0       0
 19322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       9       0       0       0       0       0       0       0       0       0       0       0       0
 19323 ;;Total ram usage:        9 bytes
 19324 ;; Hardware stack levels used:    1
 19325 ;; Hardware stack levels required when called:    4
 19326 ;; This function calls:
 19327 ;;		Nothing
 19328 ;; This function is called by:
 19329 ;;		_main
 19330 ;;		_OLED_DrawPixel
 19331 ;;		_OLED_Write
 19332 ;;		_OLED_Write_Text
 19333 ;; This function uses a non-reentrant model
 19334 ;;
 19335                           
 19336                           
 19337                           ;psect for function ___awdiv
 19338  2FA0                     ___awdiv:	
 19339  2FA0                     l7632:	
 19340                           ;incstack = 0
 19341                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 19342                           
 19343  2FA0  002D               	movlb	13	; select bank13
 19344  2FA1  01A6               	clrf	___awdiv@sign^(0+1664)
 19345  2FA2                     l7634:	
 19346  2FA2  1FA1               	btfss	(___awdiv@divisor+1)^(0+1664),7
 19347  2FA3  2FA5               	goto	u8261
 19348  2FA4  2FA6               	goto	u8260
 19349  2FA5                     u8261:	
 19350  2FA5  2FAD               	goto	l7640
 19351  2FA6                     u8260:	
 19352  2FA6                     l7636:	
 19353  2FA6  09A0               	comf	___awdiv@divisor^(0+1664),f
 19354  2FA7  09A1               	comf	(___awdiv@divisor+1)^(0+1664),f
 19355  2FA8  0AA0               	incf	___awdiv@divisor^(0+1664),f
 19356  2FA9  1903               	skipnz
 19357  2FAA  0AA1               	incf	(___awdiv@divisor+1)^(0+1664),f
 19358  2FAB                     l7638:	
 19359  2FAB  01A6               	clrf	___awdiv@sign^(0+1664)
 19360  2FAC  0AA6               	incf	___awdiv@sign^(0+1664),f
 19361  2FAD                     l7640:	
 19362  2FAD  1FA3               	btfss	(___awdiv@dividend+1)^(0+1664),7
 19363  2FAE  2FB0               	goto	u8271
 19364  2FAF  2FB1               	goto	u8270
 19365  2FB0                     u8271:	
 19366  2FB0  2FBA               	goto	l7646
 19367  2FB1                     u8270:	
 19368  2FB1                     l7642:	
 19369  2FB1  09A2               	comf	___awdiv@dividend^(0+1664),f
 19370  2FB2  09A3               	comf	(___awdiv@dividend+1)^(0+1664),f
 19371  2FB3  0AA2               	incf	___awdiv@dividend^(0+1664),f
 19372  2FB4  1903               	skipnz
 19373  2FB5  0AA3               	incf	(___awdiv@dividend+1)^(0+1664),f
 19374  2FB6                     l7644:	
 19375  2FB6  3001               	movlw	1
 19376  2FB7  00A4               	movwf	??___awdiv^(0+1664)
 19377  2FB8  0824               	movf	??___awdiv^(0+1664),w
 19378  2FB9  06A6               	xorwf	___awdiv@sign^(0+1664),f
 19379  2FBA                     l7646:	
 19380  2FBA  01A7               	clrf	___awdiv@quotient^(0+1664)
 19381  2FBB  01A8               	clrf	(___awdiv@quotient+1)^(0+1664)
 19382  2FBC                     l7648:	
 19383  2FBC  0820               	movf	___awdiv@divisor^(0+1664),w
 19384  2FBD  0421               	iorwf	(___awdiv@divisor+1)^(0+1664),w
 19385  2FBE  1903               	btfsc	3,2
 19386  2FBF  2FC1               	goto	u8281
 19387  2FC0  2FC2               	goto	u8280
 19388  2FC1                     u8281:	
 19389  2FC1  2FF1               	goto	l7668
 19390  2FC2                     u8280:	
 19391  2FC2                     l7650:	
 19392  2FC2  01A5               	clrf	___awdiv@counter^(0+1664)
 19393  2FC3  0AA5               	incf	___awdiv@counter^(0+1664),f
 19394  2FC4  2FCE               	goto	l7656
 19395  2FC5                     l7652:	
 19396  2FC5  3001               	movlw	1
 19397  2FC6                     u8295:	
 19398  2FC6  35A0               	lslf	___awdiv@divisor^(0+1664),f
 19399  2FC7  0DA1               	rlf	(___awdiv@divisor+1)^(0+1664),f
 19400  2FC8  0B89               	decfsz	9,f
 19401  2FC9  2FC6               	goto	u8295
 19402  2FCA                     l7654:	
 19403  2FCA  3001               	movlw	1
 19404  2FCB  00A4               	movwf	??___awdiv^(0+1664)
 19405  2FCC  0824               	movf	??___awdiv^(0+1664),w
 19406  2FCD  07A5               	addwf	___awdiv@counter^(0+1664),f
 19407  2FCE                     l7656:	
 19408  2FCE  1FA1               	btfss	(___awdiv@divisor+1)^(0+1664),7
 19409  2FCF  2FD1               	goto	u8301
 19410  2FD0  2FD2               	goto	u8300
 19411  2FD1                     u8301:	
 19412  2FD1  2FC5               	goto	l7652
 19413  2FD2                     u8300:	
 19414  2FD2                     l7658:	
 19415  2FD2  3001               	movlw	1
 19416  2FD3                     u8315:	
 19417  2FD3  35A7               	lslf	___awdiv@quotient^(0+1664),f
 19418  2FD4  0DA8               	rlf	(___awdiv@quotient+1)^(0+1664),f
 19419  2FD5  0B89               	decfsz	9,f
 19420  2FD6  2FD3               	goto	u8315
 19421  2FD7  0821               	movf	(___awdiv@divisor+1)^(0+1664),w
 19422  2FD8  0223               	subwf	(___awdiv@dividend+1)^(0+1664),w
 19423  2FD9  1D03               	skipz
 19424  2FDA  2FDD               	goto	u8325
 19425  2FDB  0820               	movf	___awdiv@divisor^(0+1664),w
 19426  2FDC  0222               	subwf	___awdiv@dividend^(0+1664),w
 19427  2FDD                     u8325:	
 19428  2FDD  1C03               	skipc
 19429  2FDE  2FE0               	goto	u8321
 19430  2FDF  2FE1               	goto	u8320
 19431  2FE0                     u8321:	
 19432  2FE0  2FE6               	goto	l7664
 19433  2FE1                     u8320:	
 19434  2FE1                     l7660:	
 19435  2FE1  0820               	movf	___awdiv@divisor^(0+1664),w
 19436  2FE2  02A2               	subwf	___awdiv@dividend^(0+1664),f
 19437  2FE3  0821               	movf	(___awdiv@divisor+1)^(0+1664),w
 19438  2FE4  3BA3               	subwfb	(___awdiv@dividend+1)^(0+1664),f
 19439  2FE5                     l7662:	
 19440  2FE5  1427               	bsf	___awdiv@quotient^(0+1664),0
 19441  2FE6                     l7664:	
 19442  2FE6  3001               	movlw	1
 19443  2FE7                     u8335:	
 19444  2FE7  36A1               	lsrf	(___awdiv@divisor+1)^(0+1664),f
 19445  2FE8  0CA0               	rrf	___awdiv@divisor^(0+1664),f
 19446  2FE9  0B89               	decfsz	9,f
 19447  2FEA  2FE7               	goto	u8335
 19448  2FEB                     l7666:	
 19449  2FEB  3001               	movlw	1
 19450  2FEC  02A5               	subwf	___awdiv@counter^(0+1664),f
 19451  2FED  1D03               	btfss	3,2
 19452  2FEE  2FF0               	goto	u8341
 19453  2FEF  2FF1               	goto	u8340
 19454  2FF0                     u8341:	
 19455  2FF0  2FD2               	goto	l7658
 19456  2FF1                     u8340:	
 19457  2FF1                     l7668:	
 19458  2FF1  0826               	movf	___awdiv@sign^(0+1664),w
 19459  2FF2  1903               	btfsc	3,2
 19460  2FF3  2FF5               	goto	u8351
 19461  2FF4  2FF6               	goto	u8350
 19462  2FF5                     u8351:	
 19463  2FF5  2FFB               	goto	l7672
 19464  2FF6                     u8350:	
 19465  2FF6                     l7670:	
 19466  2FF6  09A7               	comf	___awdiv@quotient^(0+1664),f
 19467  2FF7  09A8               	comf	(___awdiv@quotient+1)^(0+1664),f
 19468  2FF8  0AA7               	incf	___awdiv@quotient^(0+1664),f
 19469  2FF9  1903               	skipnz
 19470  2FFA  0AA8               	incf	(___awdiv@quotient+1)^(0+1664),f
 19471  2FFB                     l7672:	
 19472  2FFB  0828               	movf	(___awdiv@quotient+1)^(0+1664),w
 19473  2FFC  00A1               	movwf	(?___awdiv+1)^(0+1664)
 19474  2FFD  0827               	movf	___awdiv@quotient^(0+1664),w
 19475  2FFE  00A0               	movwf	?___awdiv^(0+1664)
 19476  2FFF                     l1546:	
 19477  2FFF  0008               	return
 19478  3000                     __end_of___awdiv:	
 19479                           
 19480                           	psect	text32
 19481  20BA                     __ptext32:	
 19482 ;; *************** function _OLED_Update_Partial *****************
 19483 ;; Defined at:
 19484 ;;		line 488 in file "OLED.c"
 19485 ;; Parameters:    Size  Location     Type
 19486 ;;  page            1    wreg     unsigned char 
 19487 ;; Auto vars:     Size  Location     Type
 19488 ;;  page            1   10[BANK13] unsigned char 
 19489 ;;  i               2    7[BANK13] unsigned short 
 19490 ;;  x               1    9[BANK13] unsigned char 
 19491 ;; Return value:  Size  Location     Type
 19492 ;;                  1    wreg      void 
 19493 ;; Registers used:
 19494 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19495 ;; Tracked objects:
 19496 ;;		On entry : 0/0
 19497 ;;		On exit  : 0/0
 19498 ;;		Unchanged: 0/0
 19499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       4       0       0       0       0       0       0       0       0       0       0       0       0
 19502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       4       0       0       0       0       0       0       0       0       0       0       0       0
 19503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       8       0       0       0       0       0       0       0       0       0       0       0       0
 19504 ;;Total ram usage:        8 bytes
 19505 ;; Hardware stack levels used:    1
 19506 ;; Hardware stack levels required when called:    8
 19507 ;; This function calls:
 19508 ;;		_I2C_Send
 19509 ;;		_I2C_Start
 19510 ;;		_I2C_Stop
 19511 ;;		_ssd1306_command
 19512 ;; This function is called by:
 19513 ;;		_UpdateScreen
 19514 ;; This function uses a non-reentrant model
 19515 ;;
 19516                           
 19517                           
 19518                           ;psect for function _OLED_Update_Partial
 19519  20BA                     _OLED_Update_Partial:	
 19520                           
 19521                           ;incstack = 0
 19522                           ; Regs used in _OLED_Update_Partial: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19523                           ;OLED_Update_Partial@page stored from wreg
 19524  20BA  002D               	movlb	13	; select bank13
 19525  20BB  00AA               	movwf	OLED_Update_Partial@page^(0+1664)
 19526  20BC                     l7966:	
 19527                           
 19528                           ;OLED.c: 491:     uint8_t x = 0;
 19529  20BC  01A9               	clrf	OLED_Update_Partial@x^(0+1664)
 19530  20BD                     l7968:	
 19531                           
 19532                           ;OLED.c: 492:     ssd1306_command(0x21);
 19533  20BD  3021               	movlw	33
 19534  20BE  31AA  2257  31A0   	fcall	_ssd1306_command
 19535  20C1                     l7970:	
 19536                           
 19537                           ;OLED.c: 493:     ssd1306_command(0);
 19538  20C1  3000               	movlw	0
 19539  20C2  31AA  2257  31A0   	fcall	_ssd1306_command
 19540  20C5                     l7972:	
 19541                           
 19542                           ;OLED.c: 494:     ssd1306_command(128 - 1);
 19543  20C5  307F               	movlw	127
 19544  20C6  31AA  2257  31A0   	fcall	_ssd1306_command
 19545  20C9                     l7974:	
 19546                           
 19547                           ;OLED.c: 496:     ssd1306_command(0x22);
 19548  20C9  3022               	movlw	34
 19549  20CA  31AA  2257  31A0   	fcall	_ssd1306_command
 19550  20CD                     l7976:	
 19551                           
 19552                           ;OLED.c: 497:     ssd1306_command(page);
 19553  20CD  002D               	movlb	13	; select bank13
 19554  20CE  082A               	movf	OLED_Update_Partial@page^(0+1664),w
 19555  20CF  31AA  2257  31A0   	fcall	_ssd1306_command
 19556  20D2                     l7978:	
 19557                           
 19558                           ;OLED.c: 499:     ssd1306_command(page + 1);
 19559  20D2  002D               	movlb	13	; select bank13
 19560  20D3  082A               	movf	OLED_Update_Partial@page^(0+1664),w
 19561  20D4  3E01               	addlw	1
 19562  20D5  31AA  2257  31A0   	fcall	_ssd1306_command
 19563  20D8                     l7980:	
 19564                           
 19565                           ;OLED.c: 508:     I2C_Start();
 19566  20D8  31A9  21B4  31A0   	fcall	_I2C_Start
 19567  20DB                     l7982:	
 19568                           
 19569                           ;OLED.c: 509:     I2C_Send(0x3C << 1);
 19570  20DB  3078               	movlw	120
 19571  20DC  31AA  2218  31A0   	fcall	_I2C_Send
 19572  20DF                     l7984:	
 19573                           
 19574                           ;OLED.c: 510:     I2C_Send(0x40);
 19575  20DF  3040               	movlw	64
 19576  20E0  31AA  2218  31A0   	fcall	_I2C_Send
 19577  20E3                     l7986:	
 19578                           
 19579                           ;OLED.c: 511:     for (i = page * 128; i < ((page+2) * 128); ) {
 19580  20E3  002D               	movlb	13	; select bank13
 19581  20E4  082A               	movf	OLED_Update_Partial@page^(0+1664),w
 19582  20E5  00A3               	movwf	??_OLED_Update_Partial^(0+1664)
 19583  20E6  01A4               	clrf	(??_OLED_Update_Partial^(0+1664)+1)
 19584  20E7  3007               	movlw	7
 19585  20E8                     u8595:	
 19586  20E8  35A3               	lslf	??_OLED_Update_Partial^(0+1664),f
 19587  20E9  0DA4               	rlf	(??_OLED_Update_Partial^(0+1664)+1),f
 19588  20EA  0B89               	decfsz	9,f
 19589  20EB  28E8               	goto	u8595
 19590  20EC  0823               	movf	??_OLED_Update_Partial^(0+1664),w
 19591  20ED  00A7               	movwf	OLED_Update_Partial@i^(0+1664)
 19592  20EE  0824               	movf	(??_OLED_Update_Partial+1)^(0+1664),w
 19593  20EF  00A8               	movwf	(OLED_Update_Partial@i+1)^(0+1664)
 19594  20F0  290F               	goto	l8002
 19595  20F1                     l7988:	
 19596                           
 19597                           ;OLED.c: 513:         for (x = 0; x < 16; x++) {
 19598  20F1  01A9               	clrf	OLED_Update_Partial@x^(0+1664)
 19599  20F2                     l7994:	
 19600                           
 19601                           ;OLED.c: 514:             I2C_Send(buffer[i]);
 19602  20F2  3000               	movlw	0
 19603  20F3  00A3               	movwf	??_OLED_Update_Partial^(0+1664)
 19604  20F4  3020               	movlw	32
 19605  20F5  00A4               	movwf	(??_OLED_Update_Partial^(0+1664)+1)
 19606  20F6  0827               	movf	OLED_Update_Partial@i^(0+1664),w
 19607  20F7  0723               	addwf	??_OLED_Update_Partial^(0+1664),w
 19608  20F8  0086               	movwf	6
 19609  20F9  0828               	movf	(OLED_Update_Partial@i+1)^(0+1664),w
 19610  20FA  3D24               	addwfc	(??_OLED_Update_Partial+1)^(0+1664),w
 19611  20FB  0087               	movwf	7
 19612  20FC  0801               	movf	1,w
 19613  20FD  31AA  2218  31A0   	fcall	_I2C_Send
 19614  2100                     l7996:	
 19615                           
 19616                           ;OLED.c: 515:             i++;
 19617  2100  3001               	movlw	1
 19618  2101  002D               	movlb	13	; select bank13
 19619  2102  07A7               	addwf	OLED_Update_Partial@i^(0+1664),f
 19620  2103  3000               	movlw	0
 19621  2104  3DA8               	addwfc	(OLED_Update_Partial@i+1)^(0+1664),f
 19622  2105                     l7998:	
 19623                           
 19624                           ;OLED.c: 516:         }
 19625  2105  3001               	movlw	1
 19626  2106  00A3               	movwf	??_OLED_Update_Partial^(0+1664)
 19627  2107  0823               	movf	??_OLED_Update_Partial^(0+1664),w
 19628  2108  07A9               	addwf	OLED_Update_Partial@x^(0+1664),f
 19629  2109                     l8000:	
 19630  2109  3010               	movlw	16
 19631  210A  0229               	subwf	OLED_Update_Partial@x^(0+1664),w
 19632  210B  1C03               	skipc
 19633  210C  290E               	goto	u8601
 19634  210D  290F               	goto	u8600
 19635  210E                     u8601:	
 19636  210E  28F2               	goto	l7994
 19637  210F                     u8600:	
 19638  210F                     l8002:	
 19639  210F  082A               	movf	OLED_Update_Partial@page^(0+1664),w
 19640  2110  00A3               	movwf	??_OLED_Update_Partial^(0+1664)
 19641  2111  01A4               	clrf	(??_OLED_Update_Partial^(0+1664)+1)
 19642  2112  3007               	movlw	7
 19643  2113                     u8615:	
 19644  2113  35A3               	lslf	??_OLED_Update_Partial^(0+1664),f
 19645  2114  0DA4               	rlf	(??_OLED_Update_Partial^(0+1664)+1),f
 19646  2115  0B89               	decfsz	9,f
 19647  2116  2913               	goto	u8615
 19648  2117  0823               	movf	??_OLED_Update_Partial^(0+1664),w
 19649  2118  3E00               	addlw	0
 19650  2119  00A5               	movwf	(??_OLED_Update_Partial+2)^(0+1664)
 19651  211A  3001               	movlw	1
 19652  211B  3D24               	addwfc	(??_OLED_Update_Partial+1)^(0+1664),w
 19653  211C  00A6               	movwf	(??_OLED_Update_Partial+3)^(0+1664)
 19654  211D  0826               	movf	(??_OLED_Update_Partial+3)^(0+1664),w
 19655  211E  0228               	subwf	(OLED_Update_Partial@i+1)^(0+1664),w
 19656  211F  1D03               	skipz
 19657  2120  2923               	goto	u8625
 19658  2121  0825               	movf	(??_OLED_Update_Partial+2)^(0+1664),w
 19659  2122  0227               	subwf	OLED_Update_Partial@i^(0+1664),w
 19660  2123                     u8625:	
 19661  2123  1C03               	skipc
 19662  2124  2926               	goto	u8621
 19663  2125  2927               	goto	u8620
 19664  2126                     u8621:	
 19665  2126  28F1               	goto	l7988
 19666  2127                     u8620:	
 19667  2127                     l8004:	
 19668                           
 19669                           ;OLED.c: 520:     I2C_Stop();
 19670  2127  31A9  21AD  31A0   	fcall	_I2C_Stop
 19671  212A                     l1165:	
 19672  212A  0008               	return
 19673  212B                     __end_of_OLED_Update_Partial:	
 19674                           
 19675                           	psect	text33
 19676  1802                     __ptext33:	
 19677 ;; *************** function _SYSTEM_Initialize *****************
 19678 ;; Defined at:
 19679 ;;		line 50 in file "mcc_generated_files/mcc.c"
 19680 ;; Parameters:    Size  Location     Type
 19681 ;;		None
 19682 ;; Auto vars:     Size  Location     Type
 19683 ;;		None
 19684 ;; Return value:  Size  Location     Type
 19685 ;;                  1    wreg      void 
 19686 ;; Registers used:
 19687 ;;		wreg, status,2, status,0, pclath, cstack
 19688 ;; Tracked objects:
 19689 ;;		On entry : 0/0
 19690 ;;		On exit  : 0/0
 19691 ;;		Unchanged: 0/0
 19692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19697 ;;Total ram usage:        0 bytes
 19698 ;; Hardware stack levels used:    1
 19699 ;; Hardware stack levels required when called:    6
 19700 ;; This function calls:
 19701 ;;		_ADC_Initialize
 19702 ;;		_DAC1_Initialize
 19703 ;;		_I2C_Initialize
 19704 ;;		_OSCILLATOR_Initialize
 19705 ;;		_PIN_MANAGER_Initialize
 19706 ;;		_TMR0_Initialize
 19707 ;;		_WDT_Initialize
 19708 ;; This function is called by:
 19709 ;;		_main
 19710 ;; This function uses a non-reentrant model
 19711 ;;
 19712                           
 19713                           
 19714                           ;psect for function _SYSTEM_Initialize
 19715  1802                     _SYSTEM_Initialize:	
 19716  1802                     l8112:	
 19717                           ;incstack = 0
 19718                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 19719                           
 19720                           
 19721                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
 19722  1802  31A9  21DE  3198   	fcall	_I2C_Initialize
 19723                           
 19724                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 19725  1805  31AC  2497  3198   	fcall	_PIN_MANAGER_Initialize
 19726                           
 19727                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 19728  1808  31A9  21BB  3198   	fcall	_OSCILLATOR_Initialize
 19729                           
 19730                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
 19731  180B  31A9  21A9  3198   	fcall	_WDT_Initialize
 19732                           
 19733                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
 19734  180E  31AA  2225  3198   	fcall	_ADC_Initialize
 19735                           
 19736                           ;mcc_generated_files/mcc.c: 58:     DAC1_Initialize();
 19737  1811  31A9  21D5  3198   	fcall	_DAC1_Initialize
 19738                           
 19739                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
 19740  1814  31AA  2286  3198   	fcall	_TMR0_Initialize
 19741  1817                     l212:	
 19742  1817  0008               	return
 19743  1818                     __end_of_SYSTEM_Initialize:	
 19744                           
 19745                           	psect	text34
 19746  29A9                     __ptext34:	
 19747 ;; *************** function _WDT_Initialize *****************
 19748 ;; Defined at:
 19749 ;;		line 77 in file "mcc_generated_files/mcc.c"
 19750 ;; Parameters:    Size  Location     Type
 19751 ;;		None
 19752 ;; Auto vars:     Size  Location     Type
 19753 ;;		None
 19754 ;; Return value:  Size  Location     Type
 19755 ;;                  1    wreg      void 
 19756 ;; Registers used:
 19757 ;;		wreg
 19758 ;; Tracked objects:
 19759 ;;		On entry : 0/0
 19760 ;;		On exit  : 0/0
 19761 ;;		Unchanged: 0/0
 19762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19767 ;;Total ram usage:        0 bytes
 19768 ;; Hardware stack levels used:    1
 19769 ;; Hardware stack levels required when called:    4
 19770 ;; This function calls:
 19771 ;;		Nothing
 19772 ;; This function is called by:
 19773 ;;		_SYSTEM_Initialize
 19774 ;; This function uses a non-reentrant model
 19775 ;;
 19776                           
 19777                           
 19778                           ;psect for function _WDT_Initialize
 19779  29A9                     _WDT_Initialize:	
 19780  29A9                     l7822:	
 19781                           ;incstack = 0
 19782                           ; Regs used in _WDT_Initialize: [wreg]
 19783                           
 19784                           
 19785                           ;mcc_generated_files/mcc.c: 80:     WDTCON = 0x16;
 19786  29A9  3016               	movlw	22
 19787  29AA  0021               	movlb	1	; select bank1
 19788  29AB  0099               	movwf	25	;volatile
 19789  29AC                     l218:	
 19790  29AC  0008               	return
 19791  29AD                     __end_of_WDT_Initialize:	
 19792                           
 19793                           	psect	text35
 19794  2A86                     __ptext35:	
 19795 ;; *************** function _TMR0_Initialize *****************
 19796 ;; Defined at:
 19797 ;;		line 64 in file "mcc_generated_files/tmr0.c"
 19798 ;; Parameters:    Size  Location     Type
 19799 ;;		None
 19800 ;; Auto vars:     Size  Location     Type
 19801 ;;		None
 19802 ;; Return value:  Size  Location     Type
 19803 ;;                  1    wreg      void 
 19804 ;; Registers used:
 19805 ;;		wreg, status,2, status,0, pclath, cstack
 19806 ;; Tracked objects:
 19807 ;;		On entry : 0/0
 19808 ;;		On exit  : 0/0
 19809 ;;		Unchanged: 0/0
 19810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       1       0       0       0       0       0       0       0       0       0       0       0       0
 19814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       1       0       0       0       0       0       0       0       0       0       0       0       0
 19815 ;;Total ram usage:        1 bytes
 19816 ;; Hardware stack levels used:    1
 19817 ;; Hardware stack levels required when called:    5
 19818 ;; This function calls:
 19819 ;;		_TMR0_SetInterruptHandler
 19820 ;; This function is called by:
 19821 ;;		_SYSTEM_Initialize
 19822 ;; This function uses a non-reentrant model
 19823 ;;
 19824                           
 19825                           
 19826                           ;psect for function _TMR0_Initialize
 19827  2A86                     _TMR0_Initialize:	
 19828  2A86                     l7834:	
 19829                           ;incstack = 0
 19830                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 19831                           
 19832                           
 19833                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD3 
      +                          & 0x3F));
 19834  2A86  0021               	movlb	1	; select bank1
 19835  2A87  0817               	movf	23,w	;volatile
 19836  2A88  39C0               	andlw	192
 19837  2A89  3813               	iorlw	19
 19838  2A8A  0097               	movwf	23	;volatile
 19839  2A8B                     l7836:	
 19840                           
 19841                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0xC7;
 19842  2A8B  30C7               	movlw	199
 19843  2A8C  0020               	movlb	0	; select bank0
 19844  2A8D  0097               	movwf	23	;volatile
 19845  2A8E                     l7838:	
 19846                           
 19847                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 0xC7;
 19848  2A8E  30C7               	movlw	199
 19849  2A8F  002D               	movlb	13	; select bank13
 19850  2A90  00A2               	movwf	??_TMR0_Initialize^(0+1664)
 19851  2A91  0822               	movf	??_TMR0_Initialize^(0+1664),w
 19852  2A92  002E               	movlb	14	; select bank14
 19853  2A93  00E9               	movwf	_timer0ReloadVal^(0+1792)	;volatile
 19854  2A94                     l7840:	
 19855                           
 19856                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
 19857  2A94  110B               	bcf	11,2	;volatile
 19858  2A95                     l7842:	
 19859                           
 19860                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
 19861  2A95  168B               	bsf	11,5	;volatile
 19862  2A96                     l7844:	
 19863                           
 19864                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 19865  2A96  3000               	movlw	0
 19866  2A97  002D               	movlb	13	; select bank13
 19867  2A98  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+1664)
 19868  2A99  3000               	movlw	0
 19869  2A9A  00A1               	movwf	(TMR0_SetInterruptHandler@InterruptHandler^(0+1664)+1)
 19870  2A9B  3190  2001  31AA   	fcall	_TMR0_SetInterruptHandler
 19871  2A9E                     l260:	
 19872  2A9E  0008               	return
 19873  2A9F                     __end_of_TMR0_Initialize:	
 19874                           
 19875                           	psect	text36
 19876  1001                     __ptext36:	
 19877 ;; *************** function _TMR0_SetInterruptHandler *****************
 19878 ;; Defined at:
 19879 ;;		line 125 in file "mcc_generated_files/tmr0.c"
 19880 ;; Parameters:    Size  Location     Type
 19881 ;;  InterruptHan    2    0[BANK13] PTR FTN()void 
 19882 ;;		 -> TMR0_DefaultInterruptHandler(1), 
 19883 ;; Auto vars:     Size  Location     Type
 19884 ;;		None
 19885 ;; Return value:  Size  Location     Type
 19886 ;;                  1    wreg      void 
 19887 ;; Registers used:
 19888 ;;		wreg
 19889 ;; Tracked objects:
 19890 ;;		On entry : 0/0
 19891 ;;		On exit  : 0/0
 19892 ;;		Unchanged: 0/0
 19893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 19895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 19898 ;;Total ram usage:        2 bytes
 19899 ;; Hardware stack levels used:    1
 19900 ;; Hardware stack levels required when called:    4
 19901 ;; This function calls:
 19902 ;;		Nothing
 19903 ;; This function is called by:
 19904 ;;		_TMR0_Initialize
 19905 ;; This function uses a non-reentrant model
 19906 ;;
 19907                           
 19908                           
 19909                           ;psect for function _TMR0_SetInterruptHandler
 19910  1001                     _TMR0_SetInterruptHandler:	
 19911  1001                     l7676:	
 19912                           ;incstack = 0
 19913                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 19914                           
 19915                           
 19916                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
 19917  1001  002D               	movlb	13	; select bank13
 19918  1002  0821               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+1664),w
 19919  1003  002F               	movlb	15	; select bank15
 19920  1004  00EC               	movwf	(_TMR0_InterruptHandler+1)^(0+1920)
 19921  1005  002D               	movlb	13	; select bank13
 19922  1006  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+1664),w
 19923  1007  002F               	movlb	15	; select bank15
 19924  1008  00EB               	movwf	_TMR0_InterruptHandler^(0+1920)
 19925  1009                     l276:	
 19926  1009  0008               	return
 19927  100A                     __end_of_TMR0_SetInterruptHandler:	
 19928                           
 19929                           	psect	text37
 19930  2C97                     __ptext37:	
 19931 ;; *************** function _PIN_MANAGER_Initialize *****************
 19932 ;; Defined at:
 19933 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 19934 ;; Parameters:    Size  Location     Type
 19935 ;;		None
 19936 ;; Auto vars:     Size  Location     Type
 19937 ;;		None
 19938 ;; Return value:  Size  Location     Type
 19939 ;;                  1    wreg      void 
 19940 ;; Registers used:
 19941 ;;		wreg, status,2
 19942 ;; Tracked objects:
 19943 ;;		On entry : 0/0
 19944 ;;		On exit  : 0/0
 19945 ;;		Unchanged: 0/0
 19946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19951 ;;Total ram usage:        0 bytes
 19952 ;; Hardware stack levels used:    1
 19953 ;; Hardware stack levels required when called:    4
 19954 ;; This function calls:
 19955 ;;		Nothing
 19956 ;; This function is called by:
 19957 ;;		_SYSTEM_Initialize
 19958 ;; This function uses a non-reentrant model
 19959 ;;
 19960                           
 19961                           
 19962                           ;psect for function _PIN_MANAGER_Initialize
 19963  2C97                     _PIN_MANAGER_Initialize:	
 19964  2C97                     l7780:	
 19965                           ;incstack = 0
 19966                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 19967                           
 19968                           
 19969                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 19970  2C97  0022               	movlb	2	; select bank2
 19971  2C98  018C               	clrf	12	;volatile
 19972                           
 19973                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 19974  2C99  018D               	clrf	13	;volatile
 19975                           
 19976                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 19977  2C9A  018E               	clrf	14	;volatile
 19978  2C9B                     l7782:	
 19979                           
 19980                           ;mcc_generated_files/pin_manager.c: 67:     TRISE = 0x08;
 19981  2C9B  3008               	movlw	8
 19982  2C9C  0021               	movlb	1	; select bank1
 19983  2C9D  0090               	movwf	16	;volatile
 19984  2C9E                     l7784:	
 19985                           
 19986                           ;mcc_generated_files/pin_manager.c: 68:     TRISA = 0xB8;
 19987  2C9E  30B8               	movlw	184
 19988  2C9F  008C               	movwf	12	;volatile
 19989  2CA0                     l7786:	
 19990                           
 19991                           ;mcc_generated_files/pin_manager.c: 69:     TRISB = 0xFF;
 19992  2CA0  30FF               	movlw	255
 19993  2CA1  008D               	movwf	13	;volatile
 19994  2CA2                     l7788:	
 19995                           
 19996                           ;mcc_generated_files/pin_manager.c: 70:     TRISC = 0xFF;
 19997  2CA2  30FF               	movlw	255
 19998  2CA3  008E               	movwf	14	;volatile
 19999                           
 20000                           ;mcc_generated_files/pin_manager.c: 75:     ANSELC = 0x00;
 20001  2CA4  0023               	movlb	3	; select bank3
 20002  2CA5  018E               	clrf	14	;volatile
 20003  2CA6                     l7790:	
 20004                           
 20005                           ;mcc_generated_files/pin_manager.c: 76:     ANSELB = 0x08;
 20006  2CA6  3008               	movlw	8
 20007  2CA7  008D               	movwf	13	;volatile
 20008  2CA8                     l7792:	
 20009                           
 20010                           ;mcc_generated_files/pin_manager.c: 77:     ANSELA = 0x04;
 20011  2CA8  3004               	movlw	4
 20012  2CA9  008C               	movwf	12	;volatile
 20013                           
 20014                           ;mcc_generated_files/pin_manager.c: 82:     WPUE = 0x00;
 20015  2CAA  0024               	movlb	4	; select bank4
 20016  2CAB  0190               	clrf	16	;volatile
 20017                           
 20018                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
 20019  2CAC  018D               	clrf	13	;volatile
 20020                           
 20021                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
 20022  2CAD  018C               	clrf	12	;volatile
 20023                           
 20024                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x00;
 20025  2CAE  018E               	clrf	14	;volatile
 20026  2CAF                     l7794:	
 20027                           
 20028                           ;mcc_generated_files/pin_manager.c: 86:     OPTION_REGbits.nWPUEN = 1;
 20029  2CAF  0021               	movlb	1	; select bank1
 20030  2CB0  1797               	bsf	23,7	;volatile
 20031                           
 20032                           ;mcc_generated_files/pin_manager.c: 91:     ODCONA = 0x00;
 20033  2CB1  0025               	movlb	5	; select bank5
 20034  2CB2  018C               	clrf	12	;volatile
 20035                           
 20036                           ;mcc_generated_files/pin_manager.c: 92:     ODCONB = 0x00;
 20037  2CB3  018D               	clrf	13	;volatile
 20038                           
 20039                           ;mcc_generated_files/pin_manager.c: 93:     ODCONC = 0x00;
 20040  2CB4  018E               	clrf	14	;volatile
 20041  2CB5                     l7796:	
 20042                           
 20043                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONA = 0xFF;
 20044  2CB5  30FF               	movlw	255
 20045  2CB6  0026               	movlb	6	; select bank6
 20046  2CB7  008C               	movwf	12	;volatile
 20047  2CB8                     l7798:	
 20048                           
 20049                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONB = 0xFF;
 20050  2CB8  30FF               	movlw	255
 20051  2CB9  008D               	movwf	13	;volatile
 20052  2CBA                     l7800:	
 20053                           
 20054                           ;mcc_generated_files/pin_manager.c: 100:     SLRCONC = 0xFF;
 20055  2CBA  30FF               	movlw	255
 20056  2CBB  008E               	movwf	14	;volatile
 20057  2CBC                     l7802:	
 20058                           
 20059                           ;mcc_generated_files/pin_manager.c: 105:     INLVLA = 0x3F;
 20060  2CBC  303F               	movlw	63
 20061  2CBD  0027               	movlb	7	; select bank7
 20062  2CBE  008C               	movwf	12	;volatile
 20063  2CBF                     l7804:	
 20064                           
 20065                           ;mcc_generated_files/pin_manager.c: 106:     INLVLB = 0xF0;
 20066  2CBF  30F0               	movlw	240
 20067  2CC0  008D               	movwf	13	;volatile
 20068  2CC1                     l7806:	
 20069                           
 20070                           ;mcc_generated_files/pin_manager.c: 107:     INLVLC = 0xFF;
 20071  2CC1  30FF               	movlw	255
 20072  2CC2  008E               	movwf	14	;volatile
 20073  2CC3                     l7808:	
 20074                           
 20075                           ;mcc_generated_files/pin_manager.c: 116:     SSPDATPPS = 0x14;
 20076  2CC3  3014               	movlw	20
 20077  2CC4  003C               	movlb	28	; select bank28
 20078  2CC5  00BB               	movwf	59	;volatile
 20079  2CC6                     l7810:	
 20080                           
 20081                           ;mcc_generated_files/pin_manager.c: 117:     RC3PPS = 0x21;
 20082  2CC6  3021               	movlw	33
 20083  2CC7  003D               	movlb	29	; select bank29
 20084  2CC8  00A3               	movwf	35	;volatile
 20085  2CC9                     l7812:	
 20086                           
 20087                           ;mcc_generated_files/pin_manager.c: 118:     RC4PPS = 0x22;
 20088  2CC9  3022               	movlw	34
 20089  2CCA  00A4               	movwf	36	;volatile
 20090  2CCB                     l7814:	
 20091                           
 20092                           ;mcc_generated_files/pin_manager.c: 119:     SSPCLKPPS = 0x13;
 20093  2CCB  3013               	movlw	19
 20094  2CCC  003C               	movlb	28	; select bank28
 20095  2CCD  00BA               	movwf	58	;volatile
 20096  2CCE                     l717:	
 20097  2CCE  0008               	return
 20098  2CCF                     __end_of_PIN_MANAGER_Initialize:	
 20099                           
 20100                           	psect	text38
 20101  29BB                     __ptext38:	
 20102 ;; *************** function _OSCILLATOR_Initialize *****************
 20103 ;; Defined at:
 20104 ;;		line 62 in file "mcc_generated_files/mcc.c"
 20105 ;; Parameters:    Size  Location     Type
 20106 ;;		None
 20107 ;; Auto vars:     Size  Location     Type
 20108 ;;		None
 20109 ;; Return value:  Size  Location     Type
 20110 ;;                  1    wreg      void 
 20111 ;; Registers used:
 20112 ;;		wreg, status,2
 20113 ;; Tracked objects:
 20114 ;;		On entry : 0/0
 20115 ;;		On exit  : 0/0
 20116 ;;		Unchanged: 0/0
 20117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20122 ;;Total ram usage:        0 bytes
 20123 ;; Hardware stack levels used:    1
 20124 ;; Hardware stack levels required when called:    4
 20125 ;; This function calls:
 20126 ;;		Nothing
 20127 ;; This function is called by:
 20128 ;;		_SYSTEM_Initialize
 20129 ;; This function uses a non-reentrant model
 20130 ;;
 20131                           
 20132                           
 20133                           ;psect for function _OSCILLATOR_Initialize
 20134  29BB                     _OSCILLATOR_Initialize:	
 20135  29BB                     l7816:	
 20136                           ;incstack = 0
 20137                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 20138                           
 20139                           
 20140                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x7A;
 20141  29BB  307A               	movlw	122
 20142  29BC  0021               	movlb	1	; select bank1
 20143  29BD  009B               	movwf	27	;volatile
 20144                           
 20145                           ;mcc_generated_files/mcc.c: 70:     OSCSTAT = 0x80;
 20146  29BE  3080               	movlw	128
 20147  29BF  009C               	movwf	28	;volatile
 20148  29C0                     l7818:	
 20149                           
 20150                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
 20151  29C0  019A               	clrf	26	;volatile
 20152  29C1                     l7820:	
 20153                           
 20154                           ;mcc_generated_files/mcc.c: 74:     BORCON = 0x00;
 20155  29C1  019D               	clrf	29	;volatile
 20156  29C2                     l215:	
 20157  29C2  0008               	return
 20158  29C3                     __end_of_OSCILLATOR_Initialize:	
 20159                           
 20160                           	psect	text39
 20161  29DE                     __ptext39:	
 20162 ;; *************** function _I2C_Initialize *****************
 20163 ;; Defined at:
 20164 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
 20165 ;; Parameters:    Size  Location     Type
 20166 ;;		None
 20167 ;; Auto vars:     Size  Location     Type
 20168 ;;		None
 20169 ;; Return value:  Size  Location     Type
 20170 ;;                  1    wreg      void 
 20171 ;; Registers used:
 20172 ;;		wreg, status,2
 20173 ;; Tracked objects:
 20174 ;;		On entry : 0/0
 20175 ;;		On exit  : 0/0
 20176 ;;		Unchanged: 0/0
 20177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20182 ;;Total ram usage:        0 bytes
 20183 ;; Hardware stack levels used:    1
 20184 ;; Hardware stack levels required when called:    4
 20185 ;; This function calls:
 20186 ;;		Nothing
 20187 ;; This function is called by:
 20188 ;;		_SYSTEM_Initialize
 20189 ;; This function uses a non-reentrant model
 20190 ;;
 20191                           
 20192                           
 20193                           ;psect for function _I2C_Initialize
 20194  29DE                     _I2C_Initialize:	
 20195  29DE                     l7772:	
 20196                           ;incstack = 0
 20197                           ; Regs used in _I2C_Initialize: [wreg+status,2]
 20198                           
 20199                           
 20200                           ;mcc_generated_files/i2c_master.c: 169:     SSP1STAT = 0x00;
 20201  29DE  0024               	movlb	4	; select bank4
 20202  29DF  0194               	clrf	20	;volatile
 20203  29E0                     l7774:	
 20204                           
 20205                           ;mcc_generated_files/i2c_master.c: 170:     SSP1CON1 = 0x08;
 20206  29E0  3008               	movlw	8
 20207  29E1  0095               	movwf	21	;volatile
 20208  29E2                     l7776:	
 20209                           
 20210                           ;mcc_generated_files/i2c_master.c: 171:     SSP1CON2 = 0x00;
 20211  29E2  0196               	clrf	22	;volatile
 20212                           
 20213                           ;mcc_generated_files/i2c_master.c: 172:     SSP1ADD = 0x27;
 20214  29E3  3027               	movlw	39
 20215  29E4  0092               	movwf	18	;volatile
 20216  29E5                     l7778:	
 20217                           
 20218                           ;mcc_generated_files/i2c_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 20219  29E5  1295               	bcf	21,5	;volatile
 20220  29E6                     l428:	
 20221  29E6  0008               	return
 20222  29E7                     __end_of_I2C_Initialize:	
 20223                           
 20224                           	psect	text40
 20225  29D5                     __ptext40:	
 20226 ;; *************** function _DAC1_Initialize *****************
 20227 ;; Defined at:
 20228 ;;		line 68 in file "mcc_generated_files/dac1.c"
 20229 ;; Parameters:    Size  Location     Type
 20230 ;;		None
 20231 ;; Auto vars:     Size  Location     Type
 20232 ;;		None
 20233 ;; Return value:  Size  Location     Type
 20234 ;;                  1    wreg      void 
 20235 ;; Registers used:
 20236 ;;		wreg
 20237 ;; Tracked objects:
 20238 ;;		On entry : 0/0
 20239 ;;		On exit  : 0/0
 20240 ;;		Unchanged: 0/0
 20241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20246 ;;Total ram usage:        0 bytes
 20247 ;; Hardware stack levels used:    1
 20248 ;; Hardware stack levels required when called:    4
 20249 ;; This function calls:
 20250 ;;		Nothing
 20251 ;; This function is called by:
 20252 ;;		_SYSTEM_Initialize
 20253 ;; This function uses a non-reentrant model
 20254 ;;
 20255                           
 20256                           
 20257                           ;psect for function _DAC1_Initialize
 20258  29D5                     _DAC1_Initialize:	
 20259  29D5                     l7830:	
 20260                           ;incstack = 0
 20261                           ; Regs used in _DAC1_Initialize: [wreg]
 20262                           
 20263                           
 20264                           ;mcc_generated_files/dac1.c: 71:     DAC1CON0 = 0xA8;
 20265  29D5  30A8               	movlw	168
 20266  29D6  002B               	movlb	11	; select bank11
 20267  29D7  008E               	movwf	14	;volatile
 20268                           
 20269                           ;mcc_generated_files/dac1.c: 74:     DAC1REFH = 0x03;
 20270  29D8  3003               	movlw	3
 20271  29D9  0090               	movwf	16	;volatile
 20272                           
 20273                           ;mcc_generated_files/dac1.c: 76:     DAC1REFL = 0xFF;
 20274  29DA  30FF               	movlw	255
 20275  29DB  008F               	movwf	15	;volatile
 20276  29DC                     l7832:	
 20277                           
 20278                           ;mcc_generated_files/dac1.c: 78:     (DACLDbits.DAC1LD = 1);
 20279  29DC  140D               	bsf	13,0	;volatile
 20280  29DD                     l231:	
 20281  29DD  0008               	return
 20282  29DE                     __end_of_DAC1_Initialize:	
 20283                           
 20284                           	psect	text41
 20285  2A25                     __ptext41:	
 20286 ;; *************** function _ADC_Initialize *****************
 20287 ;; Defined at:
 20288 ;;		line 67 in file "mcc_generated_files/adc.c"
 20289 ;; Parameters:    Size  Location     Type
 20290 ;;		None
 20291 ;; Auto vars:     Size  Location     Type
 20292 ;;		None
 20293 ;; Return value:  Size  Location     Type
 20294 ;;                  1    wreg      void 
 20295 ;; Registers used:
 20296 ;;		wreg, status,2
 20297 ;; Tracked objects:
 20298 ;;		On entry : 0/0
 20299 ;;		On exit  : 0/0
 20300 ;;		Unchanged: 0/0
 20301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20306 ;;Total ram usage:        0 bytes
 20307 ;; Hardware stack levels used:    1
 20308 ;; Hardware stack levels required when called:    4
 20309 ;; This function calls:
 20310 ;;		Nothing
 20311 ;; This function is called by:
 20312 ;;		_SYSTEM_Initialize
 20313 ;; This function uses a non-reentrant model
 20314 ;;
 20315                           
 20316                           
 20317                           ;psect for function _ADC_Initialize
 20318  2A25                     _ADC_Initialize:	
 20319  2A25                     l7824:	
 20320                           ;incstack = 0
 20321                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 20322                           
 20323                           
 20324                           ;mcc_generated_files/adc.c: 69:     FVRCON = 0b11001111;
 20325  2A25  30CF               	movlw	207
 20326  2A26  0021               	movlb	1	; select bank1
 20327  2A27  009E               	movwf	30	;volatile
 20328                           
 20329                           ;mcc_generated_files/adc.c: 74:     ADCON1 = 0xD3;
 20330  2A28  30D3               	movlw	211
 20331  2A29  0029               	movlb	9	; select bank9
 20332  2A2A  0091               	movwf	17	;volatile
 20333                           
 20334                           ;mcc_generated_files/adc.c: 77:     ADCON2 = 0x02;
 20335  2A2B  3002               	movlw	2
 20336  2A2C  0092               	movwf	18	;volatile
 20337  2A2D                     l7826:	
 20338                           
 20339                           ;mcc_generated_files/adc.c: 80:     ADRESL = 0x00;
 20340  2A2D  018E               	clrf	14	;volatile
 20341  2A2E                     l7828:	
 20342                           
 20343                           ;mcc_generated_files/adc.c: 83:     ADRESH = 0x00;
 20344  2A2E  018F               	clrf	15	;volatile
 20345                           
 20346                           ;mcc_generated_files/adc.c: 86:     ADCON0 = 0x25;
 20347  2A2F  3025               	movlw	37
 20348  2A30  0090               	movwf	16	;volatile
 20349  2A31                     l300:	
 20350  2A31  0008               	return
 20351  2A32                     __end_of_ADC_Initialize:	
 20352                           
 20353                           	psect	text42
 20354  1818                     __ptext42:	
 20355 ;; *************** function _OLED_Init *****************
 20356 ;; Defined at:
 20357 ;;		line 343 in file "OLED.c"
 20358 ;; Parameters:    Size  Location     Type
 20359 ;;		None
 20360 ;; Auto vars:     Size  Location     Type
 20361 ;;		None
 20362 ;; Return value:  Size  Location     Type
 20363 ;;                  1    wreg      void 
 20364 ;; Registers used:
 20365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20366 ;; Tracked objects:
 20367 ;;		On entry : 0/0
 20368 ;;		On exit  : 0/0
 20369 ;;		Unchanged: 0/0
 20370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 20374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 20375 ;;Total ram usage:        2 bytes
 20376 ;; Hardware stack levels used:    1
 20377 ;; Hardware stack levels required when called:    9
 20378 ;; This function calls:
 20379 ;;		_I2C_Init
 20380 ;;		_I2C_Stop
 20381 ;;		_OLED_SetFont
 20382 ;;		_OLED_Update
 20383 ;;		_ssd1306_command
 20384 ;; This function is called by:
 20385 ;;		_main
 20386 ;; This function uses a non-reentrant model
 20387 ;;
 20388                           
 20389                           
 20390                           ;psect for function _OLED_Init
 20391  1818                     _OLED_Init:	
 20392  1818                     l8174:	
 20393                           ;incstack = 0
 20394                           ; Regs used in _OLED_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20395                           
 20396                           
 20397                           ;OLED.c: 344:     I2C_Init(1u);
 20398  1818  3001               	movlw	1
 20399  1819  31AB  2313  3198   	fcall	_I2C_Init
 20400  181C                     l8176:	
 20401                           
 20402                           ;OLED.c: 345:     I2C_Stop();
 20403  181C  31A9  21AD  3198   	fcall	_I2C_Stop
 20404                           
 20405                           ;OLED.c: 346:     _delay((unsigned long)((100)*(16000000/4000.0)));
 20406  181F  3003               	movlw	3
 20407  1820  002D               	movlb	13	; select bank13
 20408  1821  00A9               	movwf	(??_OLED_Init^(0+1664)+1)
 20409  1822  3008               	movlw	8
 20410  1823  00A8               	movwf	??_OLED_Init^(0+1664)
 20411  1824  3077               	movlw	119
 20412  1825                     u10927:	
 20413  1825  0B89               	decfsz	9,f
 20414  1826  2825               	goto	u10927
 20415  1827  0BA8               	decfsz	??_OLED_Init^(0+1664),f
 20416  1828  2825               	goto	u10927
 20417  1829  0BA9               	decfsz	(??_OLED_Init^(0+1664)+1),f
 20418  182A  2825               	goto	u10927
 20419  182B                     l8178:	
 20420                           
 20421                           ;OLED.c: 348:     ssd1306_command(0xAE);
 20422  182B  30AE               	movlw	174
 20423  182C  31AA  2257  3198   	fcall	_ssd1306_command
 20424  182F                     l8180:	
 20425                           
 20426                           ;OLED.c: 349:     ssd1306_command(0xD5);
 20427  182F  30D5               	movlw	213
 20428  1830  31AA  2257  3198   	fcall	_ssd1306_command
 20429  1833                     l8182:	
 20430                           
 20431                           ;OLED.c: 350:     ssd1306_command(0x80);
 20432  1833  3080               	movlw	128
 20433  1834  31AA  2257  3198   	fcall	_ssd1306_command
 20434  1837                     l8184:	
 20435                           
 20436                           ;OLED.c: 351:     ssd1306_command(0xA8);
 20437  1837  30A8               	movlw	168
 20438  1838  31AA  2257  3198   	fcall	_ssd1306_command
 20439  183B                     l8186:	
 20440                           
 20441                           ;OLED.c: 352:     ssd1306_command(64 - 1);
 20442  183B  303F               	movlw	63
 20443  183C  31AA  2257  3198   	fcall	_ssd1306_command
 20444  183F                     l8188:	
 20445                           
 20446                           ;OLED.c: 353:     ssd1306_command(0xD3);
 20447  183F  30D3               	movlw	211
 20448  1840  31AA  2257  3198   	fcall	_ssd1306_command
 20449  1843                     l8190:	
 20450                           
 20451                           ;OLED.c: 354:     ssd1306_command(0x00);
 20452  1843  3000               	movlw	0
 20453  1844  31AA  2257  3198   	fcall	_ssd1306_command
 20454  1847                     l8192:	
 20455                           
 20456                           ;OLED.c: 355:     ssd1306_command(0x40 | 0x00);
 20457  1847  3040               	movlw	64
 20458  1848  31AA  2257  3198   	fcall	_ssd1306_command
 20459  184B                     l8194:	
 20460                           
 20461                           ;OLED.c: 356:     ssd1306_command(0x8D);
 20462  184B  308D               	movlw	141
 20463  184C  31AA  2257  3198   	fcall	_ssd1306_command
 20464  184F                     l8196:	
 20465                           
 20466                           ;OLED.c: 359:     ssd1306_command(0x14);
 20467  184F  3014               	movlw	20
 20468  1850  31AA  2257  3198   	fcall	_ssd1306_command
 20469  1853                     l8198:	
 20470                           
 20471                           ;OLED.c: 360:     ssd1306_command(0x20);
 20472  1853  3020               	movlw	32
 20473  1854  31AA  2257  3198   	fcall	_ssd1306_command
 20474  1857                     l8200:	
 20475                           
 20476                           ;OLED.c: 361:     ssd1306_command(0x00);
 20477  1857  3000               	movlw	0
 20478  1858  31AA  2257  3198   	fcall	_ssd1306_command
 20479  185B                     l8202:	
 20480                           
 20481                           ;OLED.c: 362:     ssd1306_command(0xA0 | 0x01);
 20482  185B  30A1               	movlw	161
 20483  185C  31AA  2257  3198   	fcall	_ssd1306_command
 20484  185F                     l8204:	
 20485                           
 20486                           ;OLED.c: 363:     ssd1306_command(0xC8);
 20487  185F  30C8               	movlw	200
 20488  1860  31AA  2257  3198   	fcall	_ssd1306_command
 20489  1863                     l8206:	
 20490                           
 20491                           ;OLED.c: 373:     ssd1306_command(0xDA);
 20492  1863  30DA               	movlw	218
 20493  1864  31AA  2257  3198   	fcall	_ssd1306_command
 20494  1867                     l8208:	
 20495                           
 20496                           ;OLED.c: 374:     ssd1306_command(0x12);
 20497  1867  3012               	movlw	18
 20498  1868  31AA  2257  3198   	fcall	_ssd1306_command
 20499  186B                     l8210:	
 20500                           
 20501                           ;OLED.c: 375:     ssd1306_command(0x81);
 20502  186B  3081               	movlw	129
 20503  186C  31AA  2257  3198   	fcall	_ssd1306_command
 20504  186F                     l8212:	
 20505                           
 20506                           ;OLED.c: 377:     ssd1306_command(0xCF);
 20507  186F  30CF               	movlw	207
 20508  1870  31AA  2257  3198   	fcall	_ssd1306_command
 20509  1873                     l8214:	
 20510                           
 20511                           ;OLED.c: 380:     ssd1306_command(0xD9);
 20512  1873  30D9               	movlw	217
 20513  1874  31AA  2257  3198   	fcall	_ssd1306_command
 20514  1877                     l8216:	
 20515                           
 20516                           ;OLED.c: 382:     ssd1306_command(0xF1);
 20517  1877  30F1               	movlw	241
 20518  1878  31AA  2257  3198   	fcall	_ssd1306_command
 20519  187B                     l8218:	
 20520                           
 20521                           ;OLED.c: 383:     ssd1306_command(0xDB);
 20522  187B  30DB               	movlw	219
 20523  187C  31AA  2257  3198   	fcall	_ssd1306_command
 20524  187F                     l8220:	
 20525                           
 20526                           ;OLED.c: 384:     ssd1306_command(0x40);
 20527  187F  3040               	movlw	64
 20528  1880  31AA  2257  3198   	fcall	_ssd1306_command
 20529  1883                     l8222:	
 20530                           
 20531                           ;OLED.c: 385:     ssd1306_command(0xA4);
 20532  1883  30A4               	movlw	164
 20533  1884  31AA  2257  3198   	fcall	_ssd1306_command
 20534  1887                     l8224:	
 20535                           
 20536                           ;OLED.c: 386:     ssd1306_command(0xA6);
 20537  1887  30A6               	movlw	166
 20538  1888  31AA  2257  3198   	fcall	_ssd1306_command
 20539  188B                     l8226:	
 20540                           
 20541                           ;OLED.c: 387:     ssd1306_command(0x2E);
 20542  188B  302E               	movlw	46
 20543  188C  31AA  2257  3198   	fcall	_ssd1306_command
 20544  188F                     l8228:	
 20545                           
 20546                           ;OLED.c: 388:     ssd1306_command(0xAF);
 20547  188F  30AF               	movlw	175
 20548  1890  31AA  2257  3198   	fcall	_ssd1306_command
 20549  1893                     l8230:	
 20550                           
 20551                           ;OLED.c: 392:     OLED_SetFont(BIG_FONTS);
 20552  1893  302A               	movlw	low (_BIG_FONTS| (0+32768))
 20553  1894  002D               	movlb	13	; select bank13
 20554  1895  00A0               	movwf	OLED_SetFont@font^(0+1664)
 20555  1896  3081               	movlw	high (_BIG_FONTS| (0+32768))
 20556  1897  00A1               	movwf	(OLED_SetFont@font^(0+1664)+1)
 20557  1898  31AD  2549  3198   	fcall	_OLED_SetFont
 20558  189B                     l8232:	
 20559                           
 20560                           ;OLED.c: 393:     _delay((unsigned long)((100)*(16000000/4000.0)));
 20561  189B  3003               	movlw	3
 20562  189C  002D               	movlb	13	; select bank13
 20563  189D  00A9               	movwf	(??_OLED_Init^(0+1664)+1)
 20564  189E  3008               	movlw	8
 20565  189F  00A8               	movwf	??_OLED_Init^(0+1664)
 20566  18A0  3077               	movlw	119
 20567  18A1                     u10937:	
 20568  18A1  0B89               	decfsz	9,f
 20569  18A2  28A1               	goto	u10937
 20570  18A3  0BA8               	decfsz	??_OLED_Init^(0+1664),f
 20571  18A4  28A1               	goto	u10937
 20572  18A5  0BA9               	decfsz	(??_OLED_Init^(0+1664)+1),f
 20573  18A6  28A1               	goto	u10937
 20574  18A7                     l8234:	
 20575                           
 20576                           ;OLED.c: 394:     OLED_Update();
 20577  18A7  31AE  262F  3198   	fcall	_OLED_Update
 20578  18AA                     l1147:	
 20579  18AA  0008               	return
 20580  18AB                     __end_of_OLED_Init:	
 20581                           
 20582                           	psect	text43
 20583  2E2F                     __ptext43:	
 20584 ;; *************** function _OLED_Update *****************
 20585 ;; Defined at:
 20586 ;;		line 449 in file "OLED.c"
 20587 ;; Parameters:    Size  Location     Type
 20588 ;;		None
 20589 ;; Auto vars:     Size  Location     Type
 20590 ;;  i               2    6[BANK13] unsigned short 
 20591 ;;  x               1    5[BANK13] unsigned char 
 20592 ;; Return value:  Size  Location     Type
 20593 ;;                  1    wreg      void 
 20594 ;; Registers used:
 20595 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20596 ;; Tracked objects:
 20597 ;;		On entry : 0/0
 20598 ;;		On exit  : 0/0
 20599 ;;		Unchanged: 0/0
 20600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       3       0       0       0       0       0       0       0       0       0       0       0       0
 20603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 20604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       5       0       0       0       0       0       0       0       0       0       0       0       0
 20605 ;;Total ram usage:        5 bytes
 20606 ;; Hardware stack levels used:    1
 20607 ;; Hardware stack levels required when called:    8
 20608 ;; This function calls:
 20609 ;;		_I2C_Send
 20610 ;;		_I2C_Start
 20611 ;;		_I2C_Stop
 20612 ;;		_ssd1306_command
 20613 ;; This function is called by:
 20614 ;;		_OLED_Init
 20615 ;; This function uses a non-reentrant model
 20616 ;;
 20617                           
 20618                           
 20619                           ;psect for function _OLED_Update
 20620  2E2F                     _OLED_Update:	
 20621  2E2F                     l7922:	
 20622                           ;incstack = 0
 20623                           ; Regs used in _OLED_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20624                           
 20625                           
 20626                           ;OLED.c: 451:     uint8_t x = 0;
 20627  2E2F  002D               	movlb	13	; select bank13
 20628  2E30  01A5               	clrf	OLED_Update@x^(0+1664)
 20629  2E31                     l7924:	
 20630                           
 20631                           ;OLED.c: 452:     ssd1306_command(0x21);
 20632  2E31  3021               	movlw	33
 20633  2E32  31AA  2257  31AE   	fcall	_ssd1306_command
 20634  2E35                     l7926:	
 20635                           
 20636                           ;OLED.c: 453:     ssd1306_command(0);
 20637  2E35  3000               	movlw	0
 20638  2E36  31AA  2257  31AE   	fcall	_ssd1306_command
 20639  2E39                     l7928:	
 20640                           
 20641                           ;OLED.c: 454:     ssd1306_command(128 - 1);
 20642  2E39  307F               	movlw	127
 20643  2E3A  31AA  2257  31AE   	fcall	_ssd1306_command
 20644  2E3D                     l7930:	
 20645                           
 20646                           ;OLED.c: 456:     ssd1306_command(0x22);
 20647  2E3D  3022               	movlw	34
 20648  2E3E  31AA  2257  31AE   	fcall	_ssd1306_command
 20649  2E41                     l7932:	
 20650                           
 20651                           ;OLED.c: 457:     ssd1306_command(0);
 20652  2E41  3000               	movlw	0
 20653  2E42  31AA  2257  31AE   	fcall	_ssd1306_command
 20654  2E45                     l7934:	
 20655                           
 20656                           ;OLED.c: 459:     ssd1306_command(7);
 20657  2E45  3007               	movlw	7
 20658  2E46  31AA  2257  31AE   	fcall	_ssd1306_command
 20659  2E49                     l7936:	
 20660                           
 20661                           ;OLED.c: 468:     I2C_Start();
 20662  2E49  31A9  21B4  31AE   	fcall	_I2C_Start
 20663  2E4C                     l7938:	
 20664                           
 20665                           ;OLED.c: 469:     I2C_Send(0x3C << 1);
 20666  2E4C  3078               	movlw	120
 20667  2E4D  31AA  2218  31AE   	fcall	_I2C_Send
 20668  2E50                     l7940:	
 20669                           
 20670                           ;OLED.c: 470:     I2C_Send(0x40);
 20671  2E50  3040               	movlw	64
 20672  2E51  31AA  2218  31AE   	fcall	_I2C_Send
 20673  2E54                     l7942:	
 20674                           
 20675                           ;OLED.c: 471:     for (i = 0; i < (128 * 64 / 8); i++) {
 20676  2E54  002D               	movlb	13	; select bank13
 20677  2E55  01A6               	clrf	OLED_Update@i^(0+1664)
 20678  2E56  01A7               	clrf	(OLED_Update@i+1)^(0+1664)
 20679  2E57                     l7948:	
 20680                           
 20681                           ;OLED.c: 473:         for (x = 0; x < 16; x++) {
 20682  2E57  01A5               	clrf	OLED_Update@x^(0+1664)
 20683  2E58                     l7954:	
 20684                           
 20685                           ;OLED.c: 474:             I2C_Send(buffer[i]);
 20686  2E58  3000               	movlw	0
 20687  2E59  00A3               	movwf	??_OLED_Update^(0+1664)
 20688  2E5A  3020               	movlw	32
 20689  2E5B  00A4               	movwf	(??_OLED_Update^(0+1664)+1)
 20690  2E5C  0826               	movf	OLED_Update@i^(0+1664),w
 20691  2E5D  0723               	addwf	??_OLED_Update^(0+1664),w
 20692  2E5E  0086               	movwf	6
 20693  2E5F  0827               	movf	(OLED_Update@i+1)^(0+1664),w
 20694  2E60  3D24               	addwfc	(??_OLED_Update+1)^(0+1664),w
 20695  2E61  0087               	movwf	7
 20696  2E62  0801               	movf	1,w
 20697  2E63  31AA  2218  31AE   	fcall	_I2C_Send
 20698  2E66                     l7956:	
 20699                           
 20700                           ;OLED.c: 475:             i++;
 20701  2E66  3001               	movlw	1
 20702  2E67  002D               	movlb	13	; select bank13
 20703  2E68  07A6               	addwf	OLED_Update@i^(0+1664),f
 20704  2E69  3000               	movlw	0
 20705  2E6A  3DA7               	addwfc	(OLED_Update@i+1)^(0+1664),f
 20706  2E6B                     l7958:	
 20707                           
 20708                           ;OLED.c: 476:         }
 20709  2E6B  3001               	movlw	1
 20710  2E6C  00A3               	movwf	??_OLED_Update^(0+1664)
 20711  2E6D  0823               	movf	??_OLED_Update^(0+1664),w
 20712  2E6E  07A5               	addwf	OLED_Update@x^(0+1664),f
 20713  2E6F                     l7960:	
 20714  2E6F  3010               	movlw	16
 20715  2E70  0225               	subwf	OLED_Update@x^(0+1664),w
 20716  2E71  1C03               	skipc
 20717  2E72  2E74               	goto	u8571
 20718  2E73  2E75               	goto	u8570
 20719  2E74                     u8571:	
 20720  2E74  2E58               	goto	l7954
 20721  2E75                     u8570:	
 20722  2E75                     l7962:	
 20723                           
 20724                           ;OLED.c: 477:         i--;
 20725  2E75  3001               	movlw	1
 20726  2E76  02A6               	subwf	OLED_Update@i^(0+1664),f
 20727  2E77  3000               	movlw	0
 20728  2E78  3BA7               	subwfb	(OLED_Update@i+1)^(0+1664),f
 20729                           
 20730                           ;OLED.c: 478:     }
 20731  2E79  3001               	movlw	1
 20732  2E7A  07A6               	addwf	OLED_Update@i^(0+1664),f
 20733  2E7B  3000               	movlw	0
 20734  2E7C  3DA7               	addwfc	(OLED_Update@i+1)^(0+1664),f
 20735  2E7D  3004               	movlw	4
 20736  2E7E  0227               	subwf	(OLED_Update@i+1)^(0+1664),w
 20737  2E7F  3000               	movlw	0
 20738  2E80  1903               	skipnz
 20739  2E81  0226               	subwf	OLED_Update@i^(0+1664),w
 20740  2E82  1C03               	skipc
 20741  2E83  2E85               	goto	u8581
 20742  2E84  2E86               	goto	u8580
 20743  2E85                     u8581:	
 20744  2E85  2E57               	goto	l7948
 20745  2E86                     u8580:	
 20746  2E86                     l7964:	
 20747                           
 20748                           ;OLED.c: 480:     I2C_Stop();
 20749  2E86  31A9  21AD  31AE   	fcall	_I2C_Stop
 20750  2E89                     l1157:	
 20751  2E89  0008               	return
 20752  2E8A                     __end_of_OLED_Update:	
 20753                           
 20754                           	psect	text44
 20755  2A57                     __ptext44:	
 20756 ;; *************** function _ssd1306_command *****************
 20757 ;; Defined at:
 20758 ;;		line 933 in file "OLED.c"
 20759 ;; Parameters:    Size  Location     Type
 20760 ;;  command         1    wreg     unsigned char 
 20761 ;; Auto vars:     Size  Location     Type
 20762 ;;  command         1    1[BANK13] unsigned char 
 20763 ;;  control         1    0        unsigned char 
 20764 ;; Return value:  Size  Location     Type
 20765 ;;                  1    wreg      void 
 20766 ;; Registers used:
 20767 ;;		wreg, status,2, status,0, pclath, cstack
 20768 ;; Tracked objects:
 20769 ;;		On entry : 0/0
 20770 ;;		On exit  : 0/0
 20771 ;;		Unchanged: 0/0
 20772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 20775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 20777 ;;Total ram usage:        2 bytes
 20778 ;; Hardware stack levels used:    1
 20779 ;; Hardware stack levels required when called:    7
 20780 ;; This function calls:
 20781 ;;		_I2C_Send
 20782 ;;		_I2C_Start
 20783 ;;		_I2C_Stop
 20784 ;; This function is called by:
 20785 ;;		_OLED_Init
 20786 ;;		_OLED_Update
 20787 ;;		_OLED_Update_Partial
 20788 ;;		_OLED_SetContrast
 20789 ;; This function uses a non-reentrant model
 20790 ;;
 20791                           
 20792                           
 20793                           ;psect for function _ssd1306_command
 20794  2A57                     _ssd1306_command:	
 20795                           
 20796                           ;incstack = 0
 20797                           ; Regs used in _ssd1306_command: [wreg+status,2+status,0+pclath+cstack]
 20798                           ;ssd1306_command@command stored from wreg
 20799  2A57  002D               	movlb	13	; select bank13
 20800  2A58  00A1               	movwf	ssd1306_command@command^(0+1664)
 20801  2A59                     l7680:	
 20802  2A59                     l7682:	
 20803                           
 20804                           ;OLED.c: 935:     I2C_Start();
 20805  2A59  31A9  21B4  31AA   	fcall	_I2C_Start
 20806  2A5C                     l7684:	
 20807                           
 20808                           ;OLED.c: 936:     I2C_Send(0x3C << 1);
 20809  2A5C  3078               	movlw	120
 20810  2A5D  31AA  2218  31AA   	fcall	_I2C_Send
 20811  2A60                     l7686:	
 20812                           
 20813                           ;OLED.c: 937:     I2C_Send(control);
 20814  2A60  3000               	movlw	0
 20815  2A61  31AA  2218  31AA   	fcall	_I2C_Send
 20816  2A64                     l7688:	
 20817                           
 20818                           ;OLED.c: 938:     I2C_Send(command);
 20819  2A64  002D               	movlb	13	; select bank13
 20820  2A65  0821               	movf	ssd1306_command@command^(0+1664),w
 20821  2A66  31AA  2218  31AA   	fcall	_I2C_Send
 20822  2A69                     l7690:	
 20823                           
 20824                           ;OLED.c: 939:     I2C_Stop();
 20825  2A69  31A9  21AD  31AA   	fcall	_I2C_Stop
 20826  2A6C                     l1225:	
 20827  2A6C  0008               	return
 20828  2A6D                     __end_of_ssd1306_command:	
 20829                           
 20830                           	psect	text45
 20831  29B4                     __ptext45:	
 20832 ;; *************** function _I2C_Start *****************
 20833 ;; Defined at:
 20834 ;;		line 59 in file "I2C.c"
 20835 ;; Parameters:    Size  Location     Type
 20836 ;;		None
 20837 ;; Auto vars:     Size  Location     Type
 20838 ;;		None
 20839 ;; Return value:  Size  Location     Type
 20840 ;;                  1    wreg      void 
 20841 ;; Registers used:
 20842 ;;		None
 20843 ;; Tracked objects:
 20844 ;;		On entry : 0/0
 20845 ;;		On exit  : 0/0
 20846 ;;		Unchanged: 0/0
 20847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20852 ;;Total ram usage:        0 bytes
 20853 ;; Hardware stack levels used:    1
 20854 ;; Hardware stack levels required when called:    4
 20855 ;; This function calls:
 20856 ;;		Nothing
 20857 ;; This function is called by:
 20858 ;;		_OLED_Update
 20859 ;;		_OLED_Update_Partial
 20860 ;;		_ssd1306_command
 20861 ;;		_ssd1306_data
 20862 ;; This function uses a non-reentrant model
 20863 ;;
 20864                           
 20865                           
 20866                           ;psect for function _I2C_Start
 20867  29B4                     _I2C_Start:	
 20868  29B4                     l7560:	
 20869                           ;incstack = 0
 20870                           ; Regs used in _I2C_Start: []
 20871                           
 20872                           
 20873                           ;I2C.c: 62:   SSP1CON2bits.SEN = 1;
 20874  29B4  0024               	movlb	4	; select bank4
 20875  29B5  1416               	bsf	22,0	;volatile
 20876  29B6                     l1053:	
 20877                           ;I2C.c: 66:   }
 20878                           
 20879                           
 20880                           ;I2C.c: 64:   while (SSP1CON2bits.SEN == 1){
 20881  29B6  1816               	btfsc	22,0	;volatile
 20882  29B7  29B9               	goto	u8081
 20883  29B8  29BA               	goto	u8080
 20884  29B9                     u8081:	
 20885  29B9  29B6               	goto	l1053
 20886  29BA                     u8080:	
 20887  29BA                     l1056:	
 20888  29BA  0008               	return
 20889  29BB                     __end_of_I2C_Start:	
 20890                           
 20891                           	psect	text46
 20892  2A18                     __ptext46:	
 20893 ;; *************** function _I2C_Send *****************
 20894 ;; Defined at:
 20895 ;;		line 111 in file "I2C.c"
 20896 ;; Parameters:    Size  Location     Type
 20897 ;;  data            1    wreg     unsigned char 
 20898 ;; Auto vars:     Size  Location     Type
 20899 ;;  data            1    0[BANK13] unsigned char 
 20900 ;; Return value:  Size  Location     Type
 20901 ;;                  1    wreg      void 
 20902 ;; Registers used:
 20903 ;;		wreg, status,2, status,0, pclath, cstack
 20904 ;; Tracked objects:
 20905 ;;		On entry : 0/0
 20906 ;;		On exit  : 0/0
 20907 ;;		Unchanged: 0/0
 20908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       1       0       0       0       0       0       0       0       0       0       0       0       0
 20911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       1       0       0       0       0       0       0       0       0       0       0       0       0
 20913 ;;Total ram usage:        1 bytes
 20914 ;; Hardware stack levels used:    1
 20915 ;; Hardware stack levels required when called:    6
 20916 ;; This function calls:
 20917 ;;		_I2C_Wait
 20918 ;; This function is called by:
 20919 ;;		_OLED_Update
 20920 ;;		_OLED_Update_Partial
 20921 ;;		_ssd1306_command
 20922 ;;		_ssd1306_data
 20923 ;; This function uses a non-reentrant model
 20924 ;;
 20925                           
 20926                           
 20927                           ;psect for function _I2C_Send
 20928  2A18                     _I2C_Send:	
 20929                           
 20930                           ;incstack = 0
 20931                           ; Regs used in _I2C_Send: [wreg+status,2+status,0+pclath+cstack]
 20932                           ;I2C_Send@data stored from wreg
 20933  2A18  002D               	movlb	13	; select bank13
 20934  2A19  00A0               	movwf	I2C_Send@data^(0+1664)
 20935  2A1A                     l7562:	
 20936                           
 20937                           ;I2C.c: 111: void I2C_Send( uint8_t data );I2C.c: 112: {;I2C.c: 113:   SSP1BUF = data;
 20938  2A1A  0820               	movf	I2C_Send@data^(0+1664),w
 20939  2A1B  0024               	movlb	4	; select bank4
 20940  2A1C  0091               	movwf	17	;volatile
 20941  2A1D                     l1078:	
 20942                           ;I2C.c: 114:   while(SSP1STATbits.BF);
 20943                           
 20944  2A1D  1814               	btfsc	20,0	;volatile
 20945  2A1E  2A20               	goto	u8091
 20946  2A1F  2A21               	goto	u8090
 20947  2A20                     u8091:	
 20948  2A20  2A1D               	goto	l1078
 20949  2A21                     u8090:	
 20950  2A21                     l7564:	
 20951                           
 20952                           ;I2C.c: 115:   I2C_Wait();
 20953  2A21  31AA  220B  31AA   	fcall	_I2C_Wait
 20954  2A24                     l1081:	
 20955  2A24  0008               	return
 20956  2A25                     __end_of_I2C_Send:	
 20957                           
 20958                           	psect	text47
 20959  2A0B                     __ptext47:	
 20960 ;; *************** function _I2C_Wait *****************
 20961 ;; Defined at:
 20962 ;;		line 95 in file "I2C.c"
 20963 ;; Parameters:    Size  Location     Type
 20964 ;;		None
 20965 ;; Auto vars:     Size  Location     Type
 20966 ;;		None
 20967 ;; Return value:  Size  Location     Type
 20968 ;;                  1    wreg      void 
 20969 ;; Registers used:
 20970 ;;		status,2, status,0, pclath, cstack
 20971 ;; Tracked objects:
 20972 ;;		On entry : 0/0
 20973 ;;		On exit  : 0/0
 20974 ;;		Unchanged: 0/0
 20975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20980 ;;Total ram usage:        0 bytes
 20981 ;; Hardware stack levels used:    1
 20982 ;; Hardware stack levels required when called:    5
 20983 ;; This function calls:
 20984 ;;		_I2C_Stop
 20985 ;; This function is called by:
 20986 ;;		_I2C_Send
 20987 ;;		_I2C_Read
 20988 ;; This function uses a non-reentrant model
 20989 ;;
 20990                           
 20991                           
 20992                           ;psect for function _I2C_Wait
 20993  2A0B                     _I2C_Wait:	
 20994  2A0B                     l7462:	
 20995                           ;incstack = 0
 20996                           ; Regs used in _I2C_Wait: [status,2+status,0+pclath+cstack]
 20997                           
 20998  2A0B                     l1071:	
 20999                           ;I2C.c: 98:   while( SSP1STATbits.R_nW == 1 )
 21000                           
 21001                           
 21002                           ;I2C.c: 98:   while( SSP1STATbits.R_nW == 1 )
 21003  2A0B  0024               	movlb	4	; select bank4
 21004  2A0C  1914               	btfsc	20,2	;volatile
 21005  2A0D  2A0F               	goto	u7801
 21006  2A0E  2A10               	goto	u7800
 21007  2A0F                     u7801:	
 21008  2A0F  2A0B               	goto	l1071
 21009  2A10                     u7800:	
 21010  2A10                     l1073:	
 21011                           
 21012                           ;I2C.c: 101:   if( SSP1CON2bits.ACKSTAT == 1 )
 21013  2A10  1F16               	btfss	22,6	;volatile
 21014  2A11  2A13               	goto	u7811
 21015  2A12  2A14               	goto	u7810
 21016  2A13                     u7811:	
 21017  2A13  2A17               	goto	l1075
 21018  2A14                     u7810:	
 21019  2A14                     l7464:	
 21020                           
 21021                           ;I2C.c: 102:   {;I2C.c: 103:     I2C_Stop();
 21022  2A14  31A9  21AD  31AA   	fcall	_I2C_Stop
 21023  2A17                     l1075:	
 21024  2A17  0008               	return
 21025  2A18                     __end_of_I2C_Wait:	
 21026                           
 21027                           	psect	text48
 21028  29AD                     __ptext48:	
 21029 ;; *************** function _I2C_Stop *****************
 21030 ;; Defined at:
 21031 ;;		line 84 in file "I2C.c"
 21032 ;; Parameters:    Size  Location     Type
 21033 ;;		None
 21034 ;; Auto vars:     Size  Location     Type
 21035 ;;		None
 21036 ;; Return value:  Size  Location     Type
 21037 ;;                  1    wreg      void 
 21038 ;; Registers used:
 21039 ;;		None
 21040 ;; Tracked objects:
 21041 ;;		On entry : 0/0
 21042 ;;		On exit  : 0/0
 21043 ;;		Unchanged: 0/0
 21044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21049 ;;Total ram usage:        0 bytes
 21050 ;; Hardware stack levels used:    1
 21051 ;; Hardware stack levels required when called:    4
 21052 ;; This function calls:
 21053 ;;		Nothing
 21054 ;; This function is called by:
 21055 ;;		_I2C_Wait
 21056 ;;		_OLED_Init
 21057 ;;		_OLED_Update
 21058 ;;		_OLED_Update_Partial
 21059 ;;		_ssd1306_command
 21060 ;;		_ssd1306_data
 21061 ;; This function uses a non-reentrant model
 21062 ;;
 21063                           
 21064                           
 21065                           ;psect for function _I2C_Stop
 21066  29AD                     _I2C_Stop:	
 21067  29AD                     l7442:	
 21068                           ;incstack = 0
 21069                           ; Regs used in _I2C_Stop: []
 21070                           
 21071                           
 21072                           ;I2C.c: 87:   SSP1CON2bits.PEN = 1;
 21073  29AD  0024               	movlb	4	; select bank4
 21074  29AE  1516               	bsf	22,2	;volatile
 21075  29AF                     l1065:	
 21076                           ;I2C.c: 88:   while(SSP1CON2bits.PEN==1)
 21077                           
 21078                           
 21079                           ;I2C.c: 88:   while(SSP1CON2bits.PEN==1)
 21080  29AF  1916               	btfsc	22,2	;volatile
 21081  29B0  29B2               	goto	u7771
 21082  29B1  29B3               	goto	u7770
 21083  29B2                     u7771:	
 21084  29B2  29AF               	goto	l1065
 21085  29B3                     u7770:	
 21086  29B3                     l1068:	
 21087  29B3  0008               	return
 21088  29B4                     __end_of_I2C_Stop:	
 21089                           
 21090                           	psect	text49
 21091  2D49                     __ptext49:	
 21092 ;; *************** function _OLED_SetFont *****************
 21093 ;; Defined at:
 21094 ;;		line 422 in file "OLED.c"
 21095 ;; Parameters:    Size  Location     Type
 21096 ;;  font            2    0[BANK13] PTR const unsigned char 
 21097 ;;		 -> BIG_FONTS(3044), 
 21098 ;; Auto vars:     Size  Location     Type
 21099 ;;		None
 21100 ;; Return value:  Size  Location     Type
 21101 ;;                  1    wreg      void 
 21102 ;; Registers used:
 21103 ;;		wreg, fsr0l, fsr0h, status,2, pclath
 21104 ;; Tracked objects:
 21105 ;;		On entry : 0/0
 21106 ;;		On exit  : 0/0
 21107 ;;		Unchanged: 0/0
 21108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 21110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       3       0       0       0       0       0       0       0       0       0       0       0       0
 21112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       5       0       0       0       0       0       0       0       0       0       0       0       0
 21113 ;;Total ram usage:        5 bytes
 21114 ;; Hardware stack levels used:    1
 21115 ;; Hardware stack levels required when called:    4
 21116 ;; This function calls:
 21117 ;;		Nothing
 21118 ;; This function is called by:
 21119 ;;		_OLED_Init
 21120 ;; This function uses a non-reentrant model
 21121 ;;
 21122                           
 21123                           
 21124                           ;psect for function _OLED_SetFont
 21125  2D49                     _OLED_SetFont:	
 21126  2D49                     l7910:	
 21127                           ;incstack = 0
 21128                           ; Regs used in _OLED_SetFont: [wreg-fsr0h+status,2+pclath]
 21129                           
 21130                           
 21131                           ;OLED.c: 423:     cfont.font = font;
 21132  2D49  002D               	movlb	13	; select bank13
 21133  2D4A  0821               	movf	(OLED_SetFont@font+1)^(0+1664),w
 21134  2D4B  002E               	movlb	14	; select bank14
 21135  2D4C  00A1               	movwf	(_cfont+1)^(0+1792)
 21136  2D4D  002D               	movlb	13	; select bank13
 21137  2D4E  0820               	movf	OLED_SetFont@font^(0+1664),w
 21138  2D4F  002E               	movlb	14	; select bank14
 21139  2D50  00A0               	movwf	_cfont^(0+1792)
 21140  2D51                     l7912:	
 21141                           
 21142                           ;OLED.c: 424:     cfont.x_size = *(font + 0);
 21143  2D51  002D               	movlb	13	; select bank13
 21144  2D52  0820               	movf	OLED_SetFont@font^(0+1664),w
 21145  2D53  0084               	movwf	4
 21146  2D54  0821               	movf	(OLED_SetFont@font+1)^(0+1664),w
 21147  2D55  0085               	movwf	5
 21148  2D56  0800               	movf	0,w	;code access
 21149  2D57  00A2               	movwf	??_OLED_SetFont^(0+1664)
 21150  2D58  0822               	movf	??_OLED_SetFont^(0+1664),w
 21151  2D59  002E               	movlb	14	; select bank14
 21152  2D5A  00A2               	movwf	(_cfont^(0+1792)+2)
 21153  2D5B                     l7914:	
 21154                           
 21155                           ;OLED.c: 425:     cfont.y_size = *(font + 1);
 21156  2D5B  002D               	movlb	13	; select bank13
 21157  2D5C  0821               	movf	(OLED_SetFont@font+1)^(0+1664),w
 21158  2D5D  00A3               	movwf	(??_OLED_SetFont^(0+1664)+1)
 21159  2D5E  0820               	movf	OLED_SetFont@font^(0+1664),w
 21160  2D5F  00A2               	movwf	??_OLED_SetFont^(0+1664)
 21161  2D60  3001               	movlw	1
 21162  2D61  0722               	addwf	??_OLED_SetFont^(0+1664),w
 21163  2D62  0084               	movwf	4
 21164  2D63  0823               	movf	(??_OLED_SetFont^(0+1664)+1),w
 21165  2D64  1803               	skipnc
 21166  2D65  0A23               	incf	(??_OLED_SetFont^(0+1664)+1),w
 21167  2D66  0085               	movwf	5
 21168  2D67  0800               	movf	0,w	;code access
 21169  2D68  00A4               	movwf	(??_OLED_SetFont+2)^(0+1664)
 21170  2D69  0824               	movf	(??_OLED_SetFont+2)^(0+1664),w
 21171  2D6A  002E               	movlb	14	; select bank14
 21172  2D6B  00A3               	movwf	(_cfont^(0+1792)+3)
 21173  2D6C                     l7916:	
 21174                           
 21175                           ;OLED.c: 426:     cfont.offset = *(font + 2);
 21176  2D6C  002D               	movlb	13	; select bank13
 21177  2D6D  0821               	movf	(OLED_SetFont@font+1)^(0+1664),w
 21178  2D6E  00A3               	movwf	(??_OLED_SetFont^(0+1664)+1)
 21179  2D6F  0820               	movf	OLED_SetFont@font^(0+1664),w
 21180  2D70  00A2               	movwf	??_OLED_SetFont^(0+1664)
 21181  2D71  3002               	movlw	2
 21182  2D72  0722               	addwf	??_OLED_SetFont^(0+1664),w
 21183  2D73  0084               	movwf	4
 21184  2D74  0823               	movf	(??_OLED_SetFont^(0+1664)+1),w
 21185  2D75  1803               	skipnc
 21186  2D76  0A23               	incf	(??_OLED_SetFont^(0+1664)+1),w
 21187  2D77  0085               	movwf	5
 21188  2D78  0800               	movf	0,w	;code access
 21189  2D79  00A4               	movwf	(??_OLED_SetFont+2)^(0+1664)
 21190  2D7A  0824               	movf	(??_OLED_SetFont+2)^(0+1664),w
 21191  2D7B  002E               	movlb	14	; select bank14
 21192  2D7C  00A4               	movwf	(_cfont^(0+1792)+4)
 21193  2D7D                     l7918:	
 21194                           
 21195                           ;OLED.c: 427:     cfont.numchars = *(font + 3);
 21196  2D7D  002D               	movlb	13	; select bank13
 21197  2D7E  0821               	movf	(OLED_SetFont@font+1)^(0+1664),w
 21198  2D7F  00A3               	movwf	(??_OLED_SetFont^(0+1664)+1)
 21199  2D80  0820               	movf	OLED_SetFont@font^(0+1664),w
 21200  2D81  00A2               	movwf	??_OLED_SetFont^(0+1664)
 21201  2D82  3003               	movlw	3
 21202  2D83  0722               	addwf	??_OLED_SetFont^(0+1664),w
 21203  2D84  0084               	movwf	4
 21204  2D85  0823               	movf	(??_OLED_SetFont^(0+1664)+1),w
 21205  2D86  1803               	skipnc
 21206  2D87  0A23               	incf	(??_OLED_SetFont^(0+1664)+1),w
 21207  2D88  0085               	movwf	5
 21208  2D89  0800               	movf	0,w	;code access
 21209  2D8A  00A4               	movwf	(??_OLED_SetFont+2)^(0+1664)
 21210  2D8B  0824               	movf	(??_OLED_SetFont+2)^(0+1664),w
 21211  2D8C  002E               	movlb	14	; select bank14
 21212  2D8D  00A5               	movwf	(_cfont^(0+1792)+5)
 21213  2D8E                     l7920:	
 21214                           
 21215                           ;OLED.c: 428:     cfont.inverted = 0;
 21216  2D8E  01A6               	clrf	(_cfont^(0+1792)+6)
 21217  2D8F                     l1150:	
 21218  2D8F  0008               	return
 21219  2D90                     __end_of_OLED_SetFont:	
 21220                           
 21221                           	psect	text50
 21222  2B13                     __ptext50:	
 21223 ;; *************** function _I2C_Init *****************
 21224 ;; Defined at:
 21225 ;;		line 26 in file "I2C.c"
 21226 ;; Parameters:    Size  Location     Type
 21227 ;;  speed           1    wreg     unsigned char 
 21228 ;; Auto vars:     Size  Location     Type
 21229 ;;  speed           1    1[BANK13] unsigned char 
 21230 ;; Return value:  Size  Location     Type
 21231 ;;                  1    wreg      void 
 21232 ;; Registers used:
 21233 ;;		wreg, status,2, status,0
 21234 ;; Tracked objects:
 21235 ;;		On entry : 0/0
 21236 ;;		On exit  : 0/0
 21237 ;;		Unchanged: 0/0
 21238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       1       0       0       0       0       0       0       0       0       0       0       0       0
 21241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       1       0       0       0       0       0       0       0       0       0       0       0       0
 21242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 21243 ;;Total ram usage:        2 bytes
 21244 ;; Hardware stack levels used:    1
 21245 ;; Hardware stack levels required when called:    4
 21246 ;; This function calls:
 21247 ;;		Nothing
 21248 ;; This function is called by:
 21249 ;;		_OLED_Init
 21250 ;; This function uses a non-reentrant model
 21251 ;;
 21252                           
 21253                           
 21254                           ;psect for function _I2C_Init
 21255  2B13                     _I2C_Init:	
 21256                           
 21257                           ;incstack = 0
 21258                           ; Regs used in _I2C_Init: [wreg+status,2+status,0]
 21259                           ;I2C_Init@speed stored from wreg
 21260  2B13  002D               	movlb	13	; select bank13
 21261  2B14  00A1               	movwf	I2C_Init@speed^(0+1664)
 21262  2B15                     l7900:	
 21263                           
 21264                           ;I2C.c: 26: void I2C_Init( uint8_t speed );I2C.c: 27: {;I2C.c: 33:   TRISC |= 0b00011000
      +                          ;
 21265  2B15  3018               	movlw	24
 21266  2B16  00A0               	movwf	??_I2C_Init^(0+1664)
 21267  2B17  0820               	movf	??_I2C_Init^(0+1664),w
 21268  2B18  0021               	movlb	1	; select bank1
 21269  2B19  048E               	iorwf	14,f	;volatile
 21270                           
 21271                           ;I2C.c: 35:   if( speed == 1u )
 21272  2B1A  002D               	movlb	13	; select bank13
 21273  2B1B  0321               	decf	I2C_Init@speed^(0+1664),w
 21274  2B1C  1D03               	btfss	3,2
 21275  2B1D  2B1F               	goto	u8561
 21276  2B1E  2B20               	goto	u8560
 21277  2B1F                     u8561:	
 21278  2B1F  2B23               	goto	l7904
 21279  2B20                     u8560:	
 21280  2B20                     l7902:	
 21281                           
 21282                           ;I2C.c: 36:   {;I2C.c: 37:     SSP1STAT |= 0x80;
 21283  2B20  0024               	movlb	4	; select bank4
 21284  2B21  1794               	bsf	20,7	;volatile
 21285                           
 21286                           ;I2C.c: 38:   }
 21287  2B22  2B28               	goto	l7906
 21288  2B23                     l7904:	
 21289                           
 21290                           ;I2C.c: 40:   {;I2C.c: 41:     SSP1STAT &= ~0x80;
 21291  2B23  307F               	movlw	127
 21292  2B24  00A0               	movwf	??_I2C_Init^(0+1664)
 21293  2B25  0820               	movf	??_I2C_Init^(0+1664),w
 21294  2B26  0024               	movlb	4	; select bank4
 21295  2B27  0594               	andwf	20,f	;volatile
 21296  2B28                     l7906:	
 21297                           
 21298                           ;I2C.c: 51:   SSP1CON1 = 0b00101000;
 21299  2B28  3028               	movlw	40
 21300  2B29  0095               	movwf	21	;volatile
 21301  2B2A                     l7908:	
 21302                           
 21303                           ;I2C.c: 52:   SSP1ADD = 19u;
 21304  2B2A  3013               	movlw	19
 21305  2B2B  0092               	movwf	18	;volatile
 21306                           
 21307                           ;I2C.c: 53:   SSP1CON3 &= 0b11110111;
 21308  2B2C  30F7               	movlw	247
 21309  2B2D  002D               	movlb	13	; select bank13
 21310  2B2E  00A0               	movwf	??_I2C_Init^(0+1664)
 21311  2B2F  0820               	movf	??_I2C_Init^(0+1664),w
 21312  2B30  0024               	movlb	4	; select bank4
 21313  2B31  0597               	andwf	23,f	;volatile
 21314  2B32                     l1050:	
 21315  2B32  0008               	return
 21316  2B33                     __end_of_I2C_Init:	
 21317                           
 21318                           	psect	text51
 21319  2059                     __ptext51:	
 21320 ;; *************** function _HEFLASH_writeBlock *****************
 21321 ;; Defined at:
 21322 ;;		line 15 in file "HEFlash.c"
 21323 ;; Parameters:    Size  Location     Type
 21324 ;;  radd            1    wreg     unsigned char 
 21325 ;;  data            1    6[BANK13] PTR unsigned char 
 21326 ;;		 -> frmn_speed(1), speed(1), mode(1), 
 21327 ;;  count           1    7[BANK13] unsigned char 
 21328 ;; Auto vars:     Size  Location     Type
 21329 ;;  radd            1   10[BANK13] unsigned char 
 21330 ;;  add             2   11[BANK13] unsigned int 
 21331 ;; Return value:  Size  Location     Type
 21332 ;;                  1    wreg      unsigned char 
 21333 ;; Registers used:
 21334 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21335 ;; Tracked objects:
 21336 ;;		On entry : 0/0
 21337 ;;		On exit  : 0/0
 21338 ;;		Unchanged: 0/0
 21339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 21341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       3       0       0       0       0       0       0       0       0       0       0       0       0
 21342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 21343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       7       0       0       0       0       0       0       0       0       0       0       0       0
 21344 ;;Total ram usage:        7 bytes
 21345 ;; Hardware stack levels used:    1
 21346 ;; Hardware stack levels required when called:    6
 21347 ;; This function calls:
 21348 ;;		_FLASH_erase
 21349 ;;		_FLASH_write
 21350 ;; This function is called by:
 21351 ;;		_main
 21352 ;; This function uses a non-reentrant model
 21353 ;;
 21354                           
 21355                           
 21356                           ;psect for function _HEFLASH_writeBlock
 21357  2059                     _HEFLASH_writeBlock:	
 21358                           
 21359                           ;incstack = 0
 21360                           ; Regs used in _HEFLASH_writeBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21361                           ;HEFLASH_writeBlock@radd stored from wreg
 21362  2059  002D               	movlb	13	; select bank13
 21363  205A  00AA               	movwf	HEFLASH_writeBlock@radd^(0+1664)
 21364  205B                     l8122:	
 21365                           
 21366                           ;HEFlash.c: 15: char HEFLASH_writeBlock (char radd, char *data, char count);HEFlash.c: 1
      +                          6: {;HEFlash.c: 18:     unsigned add = radd * 32 + 0x3F80;
 21367  205B  082A               	movf	HEFLASH_writeBlock@radd^(0+1664),w
 21368  205C  00A8               	movwf	??_HEFLASH_writeBlock^(0+1664)
 21369  205D  01A9               	clrf	(??_HEFLASH_writeBlock^(0+1664)+1)
 21370  205E  3005               	movlw	5
 21371  205F                     u8825:	
 21372  205F  35A8               	lslf	??_HEFLASH_writeBlock^(0+1664),f
 21373  2060  0DA9               	rlf	(??_HEFLASH_writeBlock^(0+1664)+1),f
 21374  2061  0B89               	decfsz	9,f
 21375  2062  285F               	goto	u8825
 21376  2063  0828               	movf	??_HEFLASH_writeBlock^(0+1664),w
 21377  2064  3E80               	addlw	128
 21378  2065  00AB               	movwf	HEFLASH_writeBlock@add^(0+1664)
 21379  2066  303F               	movlw	63
 21380  2067  3D29               	addwfc	(??_HEFLASH_writeBlock+1)^(0+1664),w
 21381  2068  00AC               	movwf	(HEFLASH_writeBlock@add+1)^(0+1664)
 21382  2069                     l8124:	
 21383                           
 21384                           ;HEFlash.c: 20:     if ((count > 32)||(radd >= ((0x3FFF -0x3F80 +1)/32)))
 21385  2069  3021               	movlw	33
 21386  206A  0227               	subwf	HEFLASH_writeBlock@count^(0+1664),w
 21387  206B  1803               	skipnc
 21388  206C  286E               	goto	u8831
 21389  206D  286F               	goto	u8830
 21390  206E                     u8831:	
 21391  206E  28B9               	goto	l767
 21392  206F                     u8830:	
 21393  206F                     l8126:	
 21394  206F  3004               	movlw	4
 21395  2070  022A               	subwf	HEFLASH_writeBlock@radd^(0+1664),w
 21396  2071  1C03               	skipc
 21397  2072  2874               	goto	u8841
 21398  2073  2875               	goto	u8840
 21399  2074                     u8841:	
 21400  2074  2876               	goto	l8128
 21401  2075                     u8840:	
 21402  2075  28B9               	goto	l767
 21403  2076                     l8128:	
 21404                           
 21405                           ;HEFlash.c: 23:     FLASH_erase (add);
 21406  2076  082C               	movf	(HEFLASH_writeBlock@add+1)^(0+1664),w
 21407  2077  00A1               	movwf	(FLASH_erase@address+1)^(0+1664)
 21408  2078  082B               	movf	HEFLASH_writeBlock@add^(0+1664),w
 21409  2079  00A0               	movwf	FLASH_erase@address^(0+1664)
 21410  207A  31AA  22D6  31A0   	fcall	_FLASH_erase
 21411                           
 21412                           ;HEFlash.c: 25:     while (count > 1)
 21413  207D  289D               	goto	l8138
 21414  207E                     l8130:	
 21415                           
 21416                           ;HEFlash.c: 26:     {;HEFlash.c: 28:         FLASH_write (add++, (unsigned) *data++, 1);
 21417  207E  082C               	movf	(HEFLASH_writeBlock@add+1)^(0+1664),w
 21418  207F  00A1               	movwf	(FLASH_write@address+1)^(0+1664)
 21419  2080  082B               	movf	HEFLASH_writeBlock@add^(0+1664),w
 21420  2081  00A0               	movwf	FLASH_write@address^(0+1664)
 21421  2082  0826               	movf	HEFLASH_writeBlock@data^(0+1664),w
 21422  2083  0086               	movwf	6
 21423  2084  3007               	movlw	7	; select bank14/15
 21424  2085  0087               	movwf	7
 21425  2086  0801               	movf	1,w
 21426  2087  00A8               	movwf	??_HEFLASH_writeBlock^(0+1664)
 21427  2088  01A9               	clrf	(??_HEFLASH_writeBlock^(0+1664)+1)
 21428  2089  0828               	movf	??_HEFLASH_writeBlock^(0+1664),w
 21429  208A  00A2               	movwf	FLASH_write@data^(0+1664)
 21430  208B  0829               	movf	(??_HEFLASH_writeBlock+1)^(0+1664),w
 21431  208C  00A3               	movwf	(FLASH_write@data+1)^(0+1664)
 21432  208D  01A4               	clrf	FLASH_write@latch^(0+1664)
 21433  208E  0AA4               	incf	FLASH_write@latch^(0+1664),f
 21434  208F  31AC  2402  31A0   	fcall	_FLASH_write
 21435  2092                     l8132:	
 21436  2092  3001               	movlw	1
 21437  2093  002D               	movlb	13	; select bank13
 21438  2094  00A8               	movwf	??_HEFLASH_writeBlock^(0+1664)
 21439  2095  0828               	movf	??_HEFLASH_writeBlock^(0+1664),w
 21440  2096  07A6               	addwf	HEFLASH_writeBlock@data^(0+1664),f
 21441  2097                     l8134:	
 21442  2097  3001               	movlw	1
 21443  2098  07AB               	addwf	HEFLASH_writeBlock@add^(0+1664),f
 21444  2099  3000               	movlw	0
 21445  209A  3DAC               	addwfc	(HEFLASH_writeBlock@add+1)^(0+1664),f
 21446  209B                     l8136:	
 21447                           
 21448                           ;HEFlash.c: 29:         count--;
 21449  209B  3001               	movlw	1
 21450  209C  02A7               	subwf	HEFLASH_writeBlock@count^(0+1664),f
 21451  209D                     l8138:	
 21452                           
 21453                           ;HEFlash.c: 25:     while (count > 1)
 21454  209D  3002               	movlw	2
 21455  209E  002D               	movlb	13	; select bank13
 21456  209F  0227               	subwf	HEFLASH_writeBlock@count^(0+1664),w
 21457  20A0  1803               	skipnc
 21458  20A1  28A3               	goto	u8851
 21459  20A2  28A4               	goto	u8850
 21460  20A3                     u8851:	
 21461  20A3  287E               	goto	l8130
 21462  20A4                     u8850:	
 21463  20A4                     l8140:	
 21464                           
 21465                           ;HEFlash.c: 33:     FLASH_write (add, (unsigned) *data, 0);
 21466  20A4  082C               	movf	(HEFLASH_writeBlock@add+1)^(0+1664),w
 21467  20A5  00A1               	movwf	(FLASH_write@address+1)^(0+1664)
 21468  20A6  082B               	movf	HEFLASH_writeBlock@add^(0+1664),w
 21469  20A7  00A0               	movwf	FLASH_write@address^(0+1664)
 21470  20A8  0826               	movf	HEFLASH_writeBlock@data^(0+1664),w
 21471  20A9  0086               	movwf	6
 21472  20AA  3007               	movlw	7	; select bank14/15
 21473  20AB  0087               	movwf	7
 21474  20AC  0801               	movf	1,w
 21475  20AD  00A8               	movwf	??_HEFLASH_writeBlock^(0+1664)
 21476  20AE  01A9               	clrf	(??_HEFLASH_writeBlock^(0+1664)+1)
 21477  20AF  0828               	movf	??_HEFLASH_writeBlock^(0+1664),w
 21478  20B0  00A2               	movwf	FLASH_write@data^(0+1664)
 21479  20B1  0829               	movf	(??_HEFLASH_writeBlock+1)^(0+1664),w
 21480  20B2  00A3               	movwf	(FLASH_write@data+1)^(0+1664)
 21481  20B3  01A4               	clrf	FLASH_write@latch^(0+1664)
 21482  20B4  31AC  2402  31A0   	fcall	_FLASH_write
 21483  20B7                     l8142:	
 21484                           
 21485                           ;HEFlash.c: 36:     return PMCON1bits.WRERR;;	Return value of _HEFLASH_writeBlock is nev
      +                          er used
 21486  20B7  0023               	movlb	3	; select bank3
 21487  20B8  0815               	movf	21,w	;volatile
 21488  20B9                     l767:	
 21489  20B9  0008               	return
 21490  20BA                     __end_of_HEFLASH_writeBlock:	
 21491                           
 21492                           	psect	text52
 21493  2C02                     __ptext52:	
 21494 ;; *************** function _FLASH_write *****************
 21495 ;; Defined at:
 21496 ;;		line 71 in file "Flash.c"
 21497 ;; Parameters:    Size  Location     Type
 21498 ;;  address         2    0[BANK13] unsigned int 
 21499 ;;  data            2    2[BANK13] unsigned int 
 21500 ;;  latch           1    4[BANK13] unsigned char 
 21501 ;; Auto vars:     Size  Location     Type
 21502 ;;  temp            1    5[BANK13] unsigned char 
 21503 ;; Return value:  Size  Location     Type
 21504 ;;                  1    wreg      void 
 21505 ;; Registers used:
 21506 ;;		wreg, status,2, status,0, pclath, cstack
 21507 ;; Tracked objects:
 21508 ;;		On entry : 0/0
 21509 ;;		On exit  : 0/0
 21510 ;;		Unchanged: 0/0
 21511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       5       0       0       0       0       0       0       0       0       0       0       0       0
 21513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       1       0       0       0       0       0       0       0       0       0       0       0       0
 21514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       6       0       0       0       0       0       0       0       0       0       0       0       0
 21516 ;;Total ram usage:        6 bytes
 21517 ;; Hardware stack levels used:    1
 21518 ;; Hardware stack levels required when called:    5
 21519 ;; This function calls:
 21520 ;;		__unlock
 21521 ;; This function is called by:
 21522 ;;		_HEFLASH_writeBlock
 21523 ;; This function uses a non-reentrant model
 21524 ;;
 21525                           
 21526                           
 21527                           ;psect for function _FLASH_write
 21528  2C02                     _FLASH_write:	
 21529  2C02                     l7858:	
 21530                           ;incstack = 0
 21531                           ; Regs used in _FLASH_write: [wreg+status,2+status,0+pclath+cstack]
 21532                           
 21533                           
 21534                           ;Flash.c: 71: void FLASH_write (unsigned address, unsigned data, char latch);Flash.c: 72
      +                          : {;Flash.c: 74:     char temp = INTCONbits.GIE;
 21535  2C02  3000               	movlw	0
 21536  2C03  1B8B               	btfsc	11,7	;volatile
 21537  2C04  3001               	movlw	1
 21538  2C05  002D               	movlb	13	; select bank13
 21539  2C06  00A5               	movwf	FLASH_write@temp^(0+1664)
 21540  2C07                     l7860:	
 21541                           
 21542                           ;Flash.c: 75:     INTCONbits.GIE = 0;
 21543  2C07  138B               	bcf	11,7	;volatile
 21544  2C08                     l7862:	
 21545                           
 21546                           ;Flash.c: 77:     PMADR = address;
 21547  2C08  0821               	movf	(FLASH_write@address+1)^(0+1664),w
 21548  2C09  0023               	movlb	3	; select bank3
 21549  2C0A  0092               	movwf	18	;volatile
 21550  2C0B  002D               	movlb	13	; select bank13
 21551  2C0C  0820               	movf	FLASH_write@address^(0+1664),w
 21552  2C0D  0023               	movlb	3	; select bank3
 21553  2C0E  0091               	movwf	17	;volatile
 21554  2C0F                     l7864:	
 21555                           
 21556                           ;Flash.c: 78:     PMDAT = data;
 21557  2C0F  002D               	movlb	13	; select bank13
 21558  2C10  0823               	movf	(FLASH_write@data+1)^(0+1664),w
 21559  2C11  0023               	movlb	3	; select bank3
 21560  2C12  0094               	movwf	20	;volatile
 21561  2C13  002D               	movlb	13	; select bank13
 21562  2C14  0822               	movf	FLASH_write@data^(0+1664),w
 21563  2C15  0023               	movlb	3	; select bank3
 21564  2C16  0093               	movwf	19	;volatile
 21565  2C17                     l7866:	
 21566                           
 21567                           ;Flash.c: 79:     PMCON1bits.LWLO = latch;
 21568  2C17  002D               	movlb	13	; select bank13
 21569  2C18  0C24               	rrf	FLASH_write@latch^(0+1664),w
 21570  2C19  0023               	movlb	3	; select bank3
 21571  2C1A  1C03               	skipc
 21572  2C1B  1295               	bcf	21,5	;volatile
 21573  2C1C  1803               	skipnc
 21574  2C1D  1695               	bsf	21,5	;volatile
 21575  2C1E                     l7868:	
 21576                           
 21577                           ;Flash.c: 80:     PMCON1bits.CFGS = 0;
 21578  2C1E  1315               	bcf	21,6	;volatile
 21579  2C1F                     l7870:	
 21580                           
 21581                           ;Flash.c: 81:     PMCON1bits.FREE = 0;
 21582  2C1F  1215               	bcf	21,4	;volatile
 21583  2C20                     l7872:	
 21584                           
 21585                           ;Flash.c: 82:     PMCON1bits.WREN = 1;
 21586  2C20  1515               	bsf	21,2	;volatile
 21587  2C21                     l7874:	
 21588                           
 21589                           ;Flash.c: 84:     _unlock();
 21590  2C21  31A9  21CC  31AC   	fcall	__unlock
 21591  2C24                     l7876:	
 21592                           
 21593                           ;Flash.c: 86:     if (temp)
 21594  2C24  002D               	movlb	13	; select bank13
 21595  2C25  0825               	movf	FLASH_write@temp^(0+1664),w
 21596  2C26  1903               	btfsc	3,2
 21597  2C27  2C29               	goto	u8541
 21598  2C28  2C2A               	goto	u8540
 21599  2C29                     u8541:	
 21600  2C29  2C2B               	goto	l749
 21601  2C2A                     u8540:	
 21602  2C2A                     l7878:	
 21603                           
 21604                           ;Flash.c: 87:     INTCONbits.GIE = 1;
 21605  2C2A  178B               	bsf	11,7	;volatile
 21606  2C2B                     l749:	
 21607  2C2B  0008               	return
 21608  2C2C                     __end_of_FLASH_write:	
 21609                           
 21610                           	psect	text53
 21611  2AD6                     __ptext53:	
 21612 ;; *************** function _FLASH_erase *****************
 21613 ;; Defined at:
 21614 ;;		line 89 in file "Flash.c"
 21615 ;; Parameters:    Size  Location     Type
 21616 ;;  address         2    0[BANK13] unsigned int 
 21617 ;; Auto vars:     Size  Location     Type
 21618 ;;  temp            1    2[BANK13] unsigned char 
 21619 ;; Return value:  Size  Location     Type
 21620 ;;                  1    wreg      void 
 21621 ;; Registers used:
 21622 ;;		wreg, status,2, status,0, pclath, cstack
 21623 ;; Tracked objects:
 21624 ;;		On entry : 0/0
 21625 ;;		On exit  : 0/0
 21626 ;;		Unchanged: 0/0
 21627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 21629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       1       0       0       0       0       0       0       0       0       0       0       0       0
 21630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       3       0       0       0       0       0       0       0       0       0       0       0       0
 21632 ;;Total ram usage:        3 bytes
 21633 ;; Hardware stack levels used:    1
 21634 ;; Hardware stack levels required when called:    5
 21635 ;; This function calls:
 21636 ;;		__unlock
 21637 ;; This function is called by:
 21638 ;;		_HEFLASH_writeBlock
 21639 ;; This function uses a non-reentrant model
 21640 ;;
 21641                           
 21642                           
 21643                           ;psect for function _FLASH_erase
 21644  2AD6                     _FLASH_erase:	
 21645  2AD6                     l7880:	
 21646                           ;incstack = 0
 21647                           ; Regs used in _FLASH_erase: [wreg+status,2+status,0+pclath+cstack]
 21648                           
 21649                           
 21650                           ;Flash.c: 89: void FLASH_erase (unsigned address);Flash.c: 90: {;Flash.c: 92:     char t
      +                          emp = INTCONbits.GIE;
 21651  2AD6  3000               	movlw	0
 21652  2AD7  1B8B               	btfsc	11,7	;volatile
 21653  2AD8  3001               	movlw	1
 21654  2AD9  002D               	movlb	13	; select bank13
 21655  2ADA  00A2               	movwf	FLASH_erase@temp^(0+1664)
 21656  2ADB                     l7882:	
 21657                           
 21658                           ;Flash.c: 93:     INTCONbits.GIE = 0;
 21659  2ADB  138B               	bcf	11,7	;volatile
 21660  2ADC                     l7884:	
 21661                           
 21662                           ;Flash.c: 95:     PMADR = address;
 21663  2ADC  0821               	movf	(FLASH_erase@address+1)^(0+1664),w
 21664  2ADD  0023               	movlb	3	; select bank3
 21665  2ADE  0092               	movwf	18	;volatile
 21666  2ADF  002D               	movlb	13	; select bank13
 21667  2AE0  0820               	movf	FLASH_erase@address^(0+1664),w
 21668  2AE1  0023               	movlb	3	; select bank3
 21669  2AE2  0091               	movwf	17	;volatile
 21670  2AE3                     l7886:	
 21671                           
 21672                           ;Flash.c: 96:     PMCON1bits.CFGS = 0;
 21673  2AE3  1315               	bcf	21,6	;volatile
 21674  2AE4                     l7888:	
 21675                           
 21676                           ;Flash.c: 97:     PMCON1bits.FREE = 1;
 21677  2AE4  1615               	bsf	21,4	;volatile
 21678  2AE5                     l7890:	
 21679                           
 21680                           ;Flash.c: 98:     PMCON1bits.WREN = 1;
 21681  2AE5  1515               	bsf	21,2	;volatile
 21682  2AE6                     l7892:	
 21683                           
 21684                           ;Flash.c: 100:     _unlock();
 21685  2AE6  31A9  21CC  31AA   	fcall	__unlock
 21686  2AE9                     l7894:	
 21687                           
 21688                           ;Flash.c: 102:     PMCON1bits.WREN = 0;
 21689  2AE9  0023               	movlb	3	; select bank3
 21690  2AEA  1115               	bcf	21,2	;volatile
 21691  2AEB                     l7896:	
 21692                           
 21693                           ;Flash.c: 103:     if (temp)
 21694  2AEB  002D               	movlb	13	; select bank13
 21695  2AEC  0822               	movf	FLASH_erase@temp^(0+1664),w
 21696  2AED  1903               	btfsc	3,2
 21697  2AEE  2AF0               	goto	u8551
 21698  2AEF  2AF1               	goto	u8550
 21699  2AF0                     u8551:	
 21700  2AF0  2AF2               	goto	l753
 21701  2AF1                     u8550:	
 21702  2AF1                     l7898:	
 21703                           
 21704                           ;Flash.c: 104:     {;Flash.c: 105:         INTCONbits.GIE = 1;
 21705  2AF1  178B               	bsf	11,7	;volatile
 21706  2AF2                     l753:	
 21707  2AF2  0008               	return
 21708  2AF3                     __end_of_FLASH_erase:	
 21709                           
 21710                           	psect	text54
 21711  29CC                     __ptext54:	
 21712 ;; *************** function __unlock *****************
 21713 ;; Defined at:
 21714 ;;		line 47 in file "Flash.c"
 21715 ;; Parameters:    Size  Location     Type
 21716 ;;		None
 21717 ;; Auto vars:     Size  Location     Type
 21718 ;;		None
 21719 ;; Return value:  Size  Location     Type
 21720 ;;                  1    wreg      void 
 21721 ;; Registers used:
 21722 ;;		None
 21723 ;; Tracked objects:
 21724 ;;		On entry : 0/0
 21725 ;;		On exit  : 0/0
 21726 ;;		Unchanged: 0/0
 21727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21732 ;;Total ram usage:        0 bytes
 21733 ;; Hardware stack levels used:    1
 21734 ;; Hardware stack levels required when called:    4
 21735 ;; This function calls:
 21736 ;;		Nothing
 21737 ;; This function is called by:
 21738 ;;		_FLASH_write
 21739 ;;		_FLASH_erase
 21740 ;; This function uses a non-reentrant model
 21741 ;;
 21742                           
 21743                           
 21744                           ;psect for function __unlock
 21745  29CC                     __unlock:	
 21746  29CC                     l7678:	
 21747                           ;incstack = 0
 21748                           ; Regs used in __unlock: []
 21749                           
 21750  29CC  0023               	banksel	406	;# 
 21751  29CD  3055               	movlw	85	;# 
 21752  29CE  0096               	movwf	22	;# 
 21753  29CF  30AA               	movlw	170	;# 
 21754  29D0  0096               	movwf	22	;# 
 21755  29D1  1495               	bsf	21,1	; set WR bit ;# 
 21756  29D2  0000               	nop	;# 
 21757  29D3  0000               	nop	;# 
 21758  29D4                     l745:	
 21759  29D4  0008               	return
 21760  29D5                     __end_of__unlock:	
 21761                           
 21762                           	psect	text55
 21763  2CCF                     __ptext55:	
 21764 ;; *************** function _HEFLASH_readBlock *****************
 21765 ;; Defined at:
 21766 ;;		line 39 in file "HEFlash.c"
 21767 ;; Parameters:    Size  Location     Type
 21768 ;;  buffer          1    wreg     PTR unsigned char 
 21769 ;;		 -> frmn_speed(1), speed(1), mode(1), 
 21770 ;;  radd            1    2[BANK13] unsigned char 
 21771 ;;  count           1    3[BANK13] unsigned char 
 21772 ;; Auto vars:     Size  Location     Type
 21773 ;;  buffer          1    8[BANK13] PTR unsigned char 
 21774 ;;		 -> frmn_speed(1), speed(1), mode(1), 
 21775 ;;  add             2    6[BANK13] unsigned int 
 21776 ;; Return value:  Size  Location     Type
 21777 ;;                  1    wreg      unsigned char 
 21778 ;; Registers used:
 21779 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21780 ;; Tracked objects:
 21781 ;;		On entry : 0/0
 21782 ;;		On exit  : 0/0
 21783 ;;		Unchanged: 0/0
 21784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 21786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       3       0       0       0       0       0       0       0       0       0       0       0       0
 21787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 21788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       7       0       0       0       0       0       0       0       0       0       0       0       0
 21789 ;;Total ram usage:        7 bytes
 21790 ;; Hardware stack levels used:    1
 21791 ;; Hardware stack levels required when called:    5
 21792 ;; This function calls:
 21793 ;;		_FLASH_read
 21794 ;; This function is called by:
 21795 ;;		_main
 21796 ;; This function uses a non-reentrant model
 21797 ;;
 21798                           
 21799                           
 21800                           ;psect for function _HEFLASH_readBlock
 21801  2CCF                     _HEFLASH_readBlock:	
 21802                           
 21803                           ;incstack = 0
 21804                           ; Regs used in _HEFLASH_readBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21805                           ;HEFLASH_readBlock@buffer stored from wreg
 21806  2CCF  002D               	movlb	13	; select bank13
 21807  2CD0  00A8               	movwf	HEFLASH_readBlock@buffer^(0+1664)
 21808  2CD1                     l8146:	
 21809                           
 21810                           ;HEFlash.c: 39: char HEFLASH_readBlock (char *buffer, char radd, char count);HEFlash.c: 
      +                          40: {;HEFlash.c: 42:     unsigned add = radd * 32 + 0x3F80;
 21811  2CD1  0822               	movf	HEFLASH_readBlock@radd^(0+1664),w
 21812  2CD2  00A4               	movwf	??_HEFLASH_readBlock^(0+1664)
 21813  2CD3  01A5               	clrf	(??_HEFLASH_readBlock^(0+1664)+1)
 21814  2CD4  3005               	movlw	5
 21815  2CD5                     u8865:	
 21816  2CD5  35A4               	lslf	??_HEFLASH_readBlock^(0+1664),f
 21817  2CD6  0DA5               	rlf	(??_HEFLASH_readBlock^(0+1664)+1),f
 21818  2CD7  0B89               	decfsz	9,f
 21819  2CD8  2CD5               	goto	u8865
 21820  2CD9  0824               	movf	??_HEFLASH_readBlock^(0+1664),w
 21821  2CDA  3E80               	addlw	128
 21822  2CDB  00A6               	movwf	HEFLASH_readBlock@add^(0+1664)
 21823  2CDC  303F               	movlw	63
 21824  2CDD  3D25               	addwfc	(??_HEFLASH_readBlock+1)^(0+1664),w
 21825  2CDE  00A7               	movwf	(HEFLASH_readBlock@add+1)^(0+1664)
 21826  2CDF                     l8148:	
 21827                           
 21828                           ;HEFlash.c: 44:     if ((count > 32)||(radd >= ((0x3FFF -0x3F80 +1)/32)))
 21829  2CDF  3021               	movlw	33
 21830  2CE0  0223               	subwf	HEFLASH_readBlock@count^(0+1664),w
 21831  2CE1  1803               	skipnc
 21832  2CE2  2CE4               	goto	u8871
 21833  2CE3  2CE5               	goto	u8870
 21834  2CE4                     u8871:	
 21835  2CE4  2D0B               	goto	l776
 21836  2CE5                     u8870:	
 21837  2CE5                     l8150:	
 21838  2CE5  3004               	movlw	4
 21839  2CE6  0222               	subwf	HEFLASH_readBlock@radd^(0+1664),w
 21840  2CE7  1C03               	skipc
 21841  2CE8  2CEA               	goto	u8881
 21842  2CE9  2CEB               	goto	u8880
 21843  2CEA                     u8881:	
 21844  2CEA  2D06               	goto	l8160
 21845  2CEB                     u8880:	
 21846  2CEB  2D0B               	goto	l776
 21847  2CEC                     l8152:	
 21848                           
 21849                           ;HEFlash.c: 48:     {;HEFlash.c: 49:         *buffer++ = (char) FLASH_read (add++);
 21850  2CEC  0827               	movf	(HEFLASH_readBlock@add+1)^(0+1664),w
 21851  2CED  00A1               	movwf	(FLASH_read@address+1)^(0+1664)
 21852  2CEE  0826               	movf	HEFLASH_readBlock@add^(0+1664),w
 21853  2CEF  00A0               	movwf	FLASH_read@address^(0+1664)
 21854  2CF0  31AA  2242  31AC   	fcall	_FLASH_read
 21855  2CF3  002D               	movlb	13	; select bank13
 21856  2CF4  0820               	movf	?_FLASH_read^(0+1664),w
 21857  2CF5  00A4               	movwf	??_HEFLASH_readBlock^(0+1664)
 21858  2CF6  0828               	movf	HEFLASH_readBlock@buffer^(0+1664),w
 21859  2CF7  0086               	movwf	6
 21860  2CF8  3007               	movlw	7	; select bank14/15
 21861  2CF9  0087               	movwf	7
 21862  2CFA  0824               	movf	??_HEFLASH_readBlock^(0+1664),w
 21863  2CFB  0081               	movwf	1
 21864  2CFC                     l8154:	
 21865  2CFC  3001               	movlw	1
 21866  2CFD  07A6               	addwf	HEFLASH_readBlock@add^(0+1664),f
 21867  2CFE  3000               	movlw	0
 21868  2CFF  3DA7               	addwfc	(HEFLASH_readBlock@add+1)^(0+1664),f
 21869  2D00                     l8156:	
 21870  2D00  3001               	movlw	1
 21871  2D01  00A4               	movwf	??_HEFLASH_readBlock^(0+1664)
 21872  2D02  0824               	movf	??_HEFLASH_readBlock^(0+1664),w
 21873  2D03  07A8               	addwf	HEFLASH_readBlock@buffer^(0+1664),f
 21874  2D04                     l8158:	
 21875                           
 21876                           ;HEFlash.c: 50:         count--;
 21877  2D04  3001               	movlw	1
 21878  2D05  02A3               	subwf	HEFLASH_readBlock@count^(0+1664),f
 21879  2D06                     l8160:	
 21880                           
 21881                           ;HEFlash.c: 47:     while (count > 0)
 21882  2D06  0823               	movf	HEFLASH_readBlock@count^(0+1664),w
 21883  2D07  1D03               	btfss	3,2
 21884  2D08  2D0A               	goto	u8891
 21885  2D09  2D0B               	goto	u8890
 21886  2D0A                     u8891:	
 21887  2D0A  2CEC               	goto	l8152
 21888  2D0B                     u8890:	
 21889  2D0B                     l776:	
 21890  2D0B  0008               	return
 21891  2D0C                     __end_of_HEFLASH_readBlock:	
 21892                           
 21893                           	psect	text56
 21894  2A42                     __ptext56:	
 21895 ;; *************** function _FLASH_read *****************
 21896 ;; Defined at:
 21897 ;;		line 25 in file "Flash.c"
 21898 ;; Parameters:    Size  Location     Type
 21899 ;;  address         2    0[BANK13] unsigned int 
 21900 ;; Auto vars:     Size  Location     Type
 21901 ;;		None
 21902 ;; Return value:  Size  Location     Type
 21903 ;;                  2    0[BANK13] unsigned int 
 21904 ;; Registers used:
 21905 ;;		wreg
 21906 ;; Tracked objects:
 21907 ;;		On entry : 0/0
 21908 ;;		On exit  : 0/0
 21909 ;;		Unchanged: 0/0
 21910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 21912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 21915 ;;Total ram usage:        2 bytes
 21916 ;; Hardware stack levels used:    1
 21917 ;; Hardware stack levels required when called:    4
 21918 ;; This function calls:
 21919 ;;		Nothing
 21920 ;; This function is called by:
 21921 ;;		_HEFLASH_readBlock
 21922 ;;		_FLASH_readBlock
 21923 ;;		_HEFLASH_readByte
 21924 ;; This function uses a non-reentrant model
 21925 ;;
 21926                           
 21927                           
 21928                           ;psect for function _FLASH_read
 21929  2A42                     _FLASH_read:	
 21930  2A42                     l7846:	
 21931                           ;incstack = 0
 21932                           ; Regs used in _FLASH_read: [wreg]
 21933                           
 21934                           
 21935                           ;Flash.c: 25: unsigned FLASH_read (unsigned address);Flash.c: 26: {;Flash.c: 28:     PMA
      +                          DR = address;
 21936  2A42  002D               	movlb	13	; select bank13
 21937  2A43  0821               	movf	(FLASH_read@address+1)^(0+1664),w
 21938  2A44  0023               	movlb	3	; select bank3
 21939  2A45  0092               	movwf	18	;volatile
 21940  2A46  002D               	movlb	13	; select bank13
 21941  2A47  0820               	movf	FLASH_read@address^(0+1664),w
 21942  2A48  0023               	movlb	3	; select bank3
 21943  2A49  0091               	movwf	17	;volatile
 21944  2A4A                     l7848:	
 21945                           
 21946                           ;Flash.c: 29:     PMCON1bits.CFGS = 0;
 21947  2A4A  1315               	bcf	21,6	;volatile
 21948  2A4B                     l7850:	
 21949                           
 21950                           ;Flash.c: 30:     PMCON1bits.RD = 1;
 21951  2A4B  1415               	bsf	21,0	;volatile
 21952  2A4C                     l7852:	
 21953                           
 21954                           ;Flash.c: 31:     __nop();
 21955  2A4C  0000               	nop
 21956  2A4D                     l7854:	
 21957                           
 21958                           ;Flash.c: 32:     __nop();
 21959  2A4D  0000               	nop
 21960                           
 21961                           ;Flash.c: 34:     return PMDAT;
 21962  2A4E  0023               	movlb	3	; select bank3
 21963  2A4F  0814               	movf	20,w	;volatile
 21964  2A50  002D               	movlb	13	; select bank13
 21965  2A51  00A1               	movwf	(?_FLASH_read+1)^(0+1664)
 21966  2A52  0023               	movlb	3	; select bank3
 21967  2A53  0813               	movf	19,w	;volatile
 21968  2A54  002D               	movlb	13	; select bank13
 21969  2A55  00A0               	movwf	?_FLASH_read^(0+1664)
 21970  2A56                     l736:	
 21971  2A56  0008               	return
 21972  2A57                     __end_of_FLASH_read:	
 21973                           
 21974                           	psect	text57
 21975  29E7                     __ptext57:	
 21976 ;; *************** function _DAC1_Load10bitInputData *****************
 21977 ;; Defined at:
 21978 ;;		line 95 in file "mcc_generated_files/dac1.c"
 21979 ;; Parameters:    Size  Location     Type
 21980 ;;  input10BitDa    2   60[BANK13] unsigned short 
 21981 ;; Auto vars:     Size  Location     Type
 21982 ;;		None
 21983 ;; Return value:  Size  Location     Type
 21984 ;;                  1    wreg      void 
 21985 ;; Registers used:
 21986 ;;		wreg, status,2
 21987 ;; Tracked objects:
 21988 ;;		On entry : 0/0
 21989 ;;		On exit  : 0/0
 21990 ;;		Unchanged: 0/0
 21991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 21993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       2       0       0       0       0       0       0       0       0       0       0       0       0
 21996 ;;Total ram usage:        2 bytes
 21997 ;; Hardware stack levels used:    1
 21998 ;; Hardware stack levels required when called:    4
 21999 ;; This function calls:
 22000 ;;		Nothing
 22001 ;; This function is called by:
 22002 ;;		_main
 22003 ;; This function uses a non-reentrant model
 22004 ;;
 22005                           
 22006                           
 22007                           ;psect for function _DAC1_Load10bitInputData
 22008  29E7                     _DAC1_Load10bitInputData:	
 22009  29E7                     l8114:	
 22010                           ;incstack = 0
 22011                           ; Regs used in _DAC1_Load10bitInputData: [wreg+status,2]
 22012                           
 22013                           
 22014                           ;mcc_generated_files/dac1.c: 95: void DAC1_Load10bitInputData(uint16_t input10BitData);m
      +                          cc_generated_files/dac1.c: 96: {;mcc_generated_files/dac1.c: 99:     DAC1CON0bits.DAC1FM
      +                           = 0;
 22015  29E7  002B               	movlb	11	; select bank11
 22016  29E8  130E               	bcf	14,6	;volatile
 22017  29E9                     l8116:	
 22018                           
 22019                           ;mcc_generated_files/dac1.c: 102:     DAC1REFL = (uint8_t) input10BitData;
 22020  29E9  002D               	movlb	13	; select bank13
 22021  29EA  085C               	movf	DAC1_Load10bitInputData@input10BitData^(0+1664),w
 22022  29EB  002B               	movlb	11	; select bank11
 22023  29EC  008F               	movwf	15	;volatile
 22024  29ED                     l8118:	
 22025                           
 22026                           ;mcc_generated_files/dac1.c: 103:     DAC1REFH = (uint8_t)(input10BitData >> 8);
 22027  29ED  002D               	movlb	13	; select bank13
 22028  29EE  085D               	movf	(DAC1_Load10bitInputData@input10BitData+1)^(0+1664),w
 22029  29EF  002B               	movlb	11	; select bank11
 22030  29F0  0090               	movwf	16	;volatile
 22031  29F1                     l8120:	
 22032                           
 22033                           ;mcc_generated_files/dac1.c: 105:     (DACLDbits.DAC1LD = 1);
 22034  29F1  140D               	bsf	13,0	;volatile
 22035  29F2                     l237:	
 22036  29F2  0008               	return
 22037  29F3                     __end_of_DAC1_Load10bitInputData:	
 22038                           
 22039                           	psect	intentry
 22040  0004                     __pintentry:	
 22041 ;; *************** function ___ISR *****************
 22042 ;; Defined at:
 22043 ;;		line 649 in file "main.c"
 22044 ;; Parameters:    Size  Location     Type
 22045 ;;		None
 22046 ;; Auto vars:     Size  Location     Type
 22047 ;;		None
 22048 ;; Return value:  Size  Location     Type
 22049 ;;                  1    wreg      void 
 22050 ;; Registers used:
 22051 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22052 ;; Tracked objects:
 22053 ;;		On entry : 0/0
 22054 ;;		On exit  : 0/0
 22055 ;;		Unchanged: 0/0
 22056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22059 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22060 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22061 ;;Total ram usage:        1 bytes
 22062 ;; Hardware stack levels used:    1
 22063 ;; Hardware stack levels required when called:    3
 22064 ;; This function calls:
 22065 ;;		i1_HEFLASH_writeBlock
 22066 ;; This function is called by:
 22067 ;;		Interrupt level 1
 22068 ;; This function uses a non-reentrant model
 22069 ;;
 22070                           
 22071  0004                     ___ISR:	
 22072                           
 22073                           ;incstack = 0
 22074  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 22075                           
 22076                           ; Regs used in ___ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22077  0005  3180               	pagesel	$
 22078  0006                     i1l7268:	
 22079                           
 22080                           ;main.c: 651:     if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 22081  0006  1E8B               	btfss	11,5	;volatile
 22082  0007  2809               	goto	u749_21
 22083  0008  280A               	goto	u749_20
 22084  0009                     u749_21:	
 22085  0009  28BF               	goto	i1l1029
 22086  000A                     u749_20:	
 22087  000A                     i1l7270:	
 22088  000A  1D0B               	btfss	11,2	;volatile
 22089  000B  280D               	goto	u750_21
 22090  000C  280E               	goto	u750_20
 22091  000D                     u750_21:	
 22092  000D  28BF               	goto	i1l1029
 22093  000E                     u750_20:	
 22094  000E                     i1l7272:	
 22095                           
 22096                           ;main.c: 652:     {;main.c: 654:         INTCONbits.TMR0IF = 0;
 22097  000E  110B               	bcf	11,2	;volatile
 22098  000F                     i1l7274:	
 22099                           
 22100                           ;main.c: 657:         if((RB4 != wet_state)||(RA3 != dry_state)){
 22101  000F  3000               	movlw	0
 22102  0010  0020               	movlb	0	; select bank0
 22103  0011  1A0D               	btfsc	13,4	;volatile
 22104  0012  3001               	movlw	1
 22105  0013  002E               	movlb	14	; select bank14
 22106  0014  0637               	xorwf	_wet_state^(0+1792),w	;volatile
 22107  0015  1D03               	skipz
 22108  0016  2818               	goto	u751_21
 22109  0017  2819               	goto	u751_20
 22110  0018                     u751_21:	
 22111  0018  2823               	goto	i1l7278
 22112  0019                     u751_20:	
 22113  0019                     i1l7276:	
 22114  0019  3000               	movlw	0
 22115  001A  0020               	movlb	0	; select bank0
 22116  001B  198C               	btfsc	12,3	;volatile
 22117  001C  3001               	movlw	1
 22118  001D  002E               	movlb	14	; select bank14
 22119  001E  0638               	xorwf	_dry_state^(0+1792),w	;volatile
 22120  001F  1903               	skipnz
 22121  0020  2822               	goto	u752_21
 22122  0021  2823               	goto	u752_20
 22123  0022                     u752_21:	
 22124  0022  2827               	goto	i1l7280
 22125  0023                     u752_20:	
 22126  0023                     i1l7278:	
 22127                           
 22128                           ;main.c: 658:             ext_ref_flag = 1;
 22129  0023  3001               	movlw	1
 22130  0024  00FD               	movwf	??___ISR
 22131  0025  087D               	movf	??___ISR,w
 22132  0026  00B9               	movwf	_ext_ref_flag^(0+1792)	;volatile
 22133  0027                     i1l7280:	
 22134                           
 22135                           ;main.c: 660:         dry_state = RA3;
 22136  0027  3000               	movlw	0
 22137  0028  0020               	movlb	0	; select bank0
 22138  0029  198C               	btfsc	12,3	;volatile
 22139  002A  3001               	movlw	1
 22140  002B  002E               	movlb	14	; select bank14
 22141  002C  00B8               	movwf	_dry_state^(0+1792)	;volatile
 22142  002D                     i1l7282:	
 22143                           
 22144                           ;main.c: 661:         wet_state = RB4;
 22145  002D  3000               	movlw	0
 22146  002E  0020               	movlb	0	; select bank0
 22147  002F  1A0D               	btfsc	13,4	;volatile
 22148  0030  3001               	movlw	1
 22149  0031  002E               	movlb	14	; select bank14
 22150  0032  00B7               	movwf	_wet_state^(0+1792)	;volatile
 22151  0033                     i1l7284:	
 22152                           
 22153                           ;main.c: 664:         if(fireman_set){
 22154  0033  083B               	movf	_fireman_set^(0+1792),w
 22155  0034  1903               	btfsc	3,2
 22156  0035  2837               	goto	u753_21
 22157  0036  2838               	goto	u753_20
 22158  0037                     u753_21:	
 22159  0037  2842               	goto	i1l7290
 22160  0038                     u753_20:	
 22161  0038                     i1l7286:	
 22162                           
 22163                           ;main.c: 665:             if(fireman_inc){
 22164  0038  085B               	movf	_fireman_inc^(0+1792),w	;volatile
 22165  0039  045C               	iorwf	(_fireman_inc+1)^(0+1792),w	;volatile
 22166  003A  1903               	btfsc	3,2
 22167  003B  283D               	goto	u754_21
 22168  003C  283E               	goto	u754_20
 22169  003D                     u754_21:	
 22170  003D  2842               	goto	i1l7290
 22171  003E                     u754_20:	
 22172  003E                     i1l7288:	
 22173                           
 22174                           ;main.c: 666:                 fireman_inc--;
 22175  003E  30FF               	movlw	255
 22176  003F  07DB               	addwf	_fireman_inc^(0+1792),f	;volatile
 22177  0040  30FF               	movlw	255
 22178  0041  3DDC               	addwfc	(_fireman_inc+1)^(0+1792),f	;volatile
 22179  0042                     i1l7290:	
 22180                           
 22181                           ;main.c: 670:         if(mode_btn_debounce && (!(increase_btn_debounce || decrease_btn_d
      +                          ebounce))){
 22182  0042  085F               	movf	_mode_btn_debounce^(0+1792),w	;volatile
 22183  0043  0460               	iorwf	(_mode_btn_debounce+1)^(0+1792),w	;volatile
 22184  0044  1903               	btfsc	3,2
 22185  0045  2847               	goto	u755_21
 22186  0046  2848               	goto	u755_20
 22187  0047                     u755_21:	
 22188  0047  287A               	goto	i1l7310
 22189  0048                     u755_20:	
 22190  0048                     i1l7292:	
 22191  0048  0863               	movf	_increase_btn_debounce^(0+1792),w	;volatile
 22192  0049  0464               	iorwf	(_increase_btn_debounce+1)^(0+1792),w	;volatile
 22193  004A  1D03               	btfss	3,2
 22194  004B  284D               	goto	u756_21
 22195  004C  284E               	goto	u756_20
 22196  004D                     u756_21:	
 22197  004D  287A               	goto	i1l7310
 22198  004E                     u756_20:	
 22199  004E                     i1l7294:	
 22200  004E  0861               	movf	_decrease_btn_debounce^(0+1792),w	;volatile
 22201  004F  0462               	iorwf	(_decrease_btn_debounce+1)^(0+1792),w	;volatile
 22202  0050  1D03               	btfss	3,2
 22203  0051  2853               	goto	u757_21
 22204  0052  2854               	goto	u757_20
 22205  0053                     u757_21:	
 22206  0053  287A               	goto	i1l7310
 22207  0054                     u757_20:	
 22208  0054                     i1l7296:	
 22209                           
 22210                           ;main.c: 671:             if(fireman_set_debounce){
 22211  0054  0859               	movf	_fireman_set_debounce^(0+1792),w
 22212  0055  045A               	iorwf	(_fireman_set_debounce+1)^(0+1792),w
 22213  0056  1903               	btfsc	3,2
 22214  0057  2859               	goto	u758_21
 22215  0058  285A               	goto	u758_20
 22216  0059                     u758_21:	
 22217  0059  287E               	goto	i1l7312
 22218  005A                     u758_20:	
 22219  005A                     i1l7298:	
 22220                           
 22221                           ;main.c: 672:                 fireman_set_debounce--;
 22222  005A  3001               	movlw	1
 22223  005B  02D9               	subwf	_fireman_set_debounce^(0+1792),f
 22224  005C  3000               	movlw	0
 22225  005D  3BDA               	subwfb	(_fireman_set_debounce+1)^(0+1792),f
 22226  005E                     i1l7300:	
 22227                           
 22228                           ;main.c: 673:                 if(!fireman_set_debounce){
 22229  005E  0859               	movf	_fireman_set_debounce^(0+1792),w
 22230  005F  045A               	iorwf	(_fireman_set_debounce+1)^(0+1792),w
 22231  0060  1D03               	btfss	3,2
 22232  0061  2863               	goto	u759_21
 22233  0062  2864               	goto	u759_20
 22234  0063                     u759_21:	
 22235  0063  287E               	goto	i1l7312
 22236  0064                     u759_20:	
 22237  0064                     i1l7302:	
 22238                           
 22239                           ;main.c: 674:                     fireman_inc = 30000;
 22240  0064  3030               	movlw	48
 22241  0065  00DB               	movwf	_fireman_inc^(0+1792)	;volatile
 22242  0066  3075               	movlw	117
 22243  0067  00DC               	movwf	(_fireman_inc^(0+1792)+1)	;volatile
 22244  0068                     i1l7304:	
 22245                           
 22246                           ;main.c: 675:                     fireman_set = 1;
 22247  0068  01BB               	clrf	_fireman_set^(0+1792)
 22248  0069  0ABB               	incf	_fireman_set^(0+1792),f
 22249  006A                     i1l7306:	
 22250                           
 22251                           ;main.c: 676:                     HEFLASH_writeBlock(0, &mode, sizeof(mode));
 22252  006A  3040               	movlw	(low (_mode| (0+1792)))& (0+255)
 22253  006B  00FD               	movwf	??___ISR
 22254  006C  087D               	movf	??___ISR,w
 22255  006D  00F6               	movwf	i1HEFLASH_writeBlock@data
 22256  006E  01F7               	clrf	i1HEFLASH_writeBlock@count
 22257  006F  0AF7               	incf	i1HEFLASH_writeBlock@count,f
 22258  0070  3000               	movlw	0
 22259  0071  31AF  2742  3180   	fcall	i1_HEFLASH_writeBlock
 22260  0074                     i1l7308:	
 22261                           
 22262                           ;main.c: 677:                     mode = 4;
 22263  0074  3004               	movlw	4
 22264  0075  00FD               	movwf	??___ISR
 22265  0076  087D               	movf	??___ISR,w
 22266  0077  002E               	movlb	14	; select bank14
 22267  0078  00C0               	movwf	_mode^(0+1792)
 22268  0079  287E               	goto	i1l7312
 22269  007A                     i1l7310:	
 22270                           
 22271                           ;main.c: 681:             fireman_set_debounce = 3000;
 22272  007A  30B8               	movlw	184
 22273  007B  00D9               	movwf	_fireman_set_debounce^(0+1792)
 22274  007C  300B               	movlw	11
 22275  007D  00DA               	movwf	(_fireman_set_debounce^(0+1792)+1)
 22276  007E                     i1l7312:	
 22277                           
 22278                           ;main.c: 684:         if(increase_btn_debounce && !(decrease_btn_debounce || mode_btn_de
      +                          bounce)){
 22279  007E  0863               	movf	_increase_btn_debounce^(0+1792),w	;volatile
 22280  007F  0464               	iorwf	(_increase_btn_debounce+1)^(0+1792),w	;volatile
 22281  0080  1903               	btfsc	3,2
 22282  0081  2883               	goto	u760_21
 22283  0082  2884               	goto	u760_20
 22284  0083                     u760_21:	
 22285  0083  289B               	goto	i1l7322
 22286  0084                     u760_20:	
 22287  0084                     i1l7314:	
 22288  0084  0861               	movf	_decrease_btn_debounce^(0+1792),w	;volatile
 22289  0085  0462               	iorwf	(_decrease_btn_debounce+1)^(0+1792),w	;volatile
 22290  0086  1D03               	btfss	3,2
 22291  0087  2889               	goto	u761_21
 22292  0088  288A               	goto	u761_20
 22293  0089                     u761_21:	
 22294  0089  289B               	goto	i1l7322
 22295  008A                     u761_20:	
 22296  008A                     i1l7316:	
 22297  008A  085F               	movf	_mode_btn_debounce^(0+1792),w	;volatile
 22298  008B  0460               	iorwf	(_mode_btn_debounce+1)^(0+1792),w	;volatile
 22299  008C  1D03               	btfss	3,2
 22300  008D  288F               	goto	u762_21
 22301  008E  2890               	goto	u762_20
 22302  008F                     u762_21:	
 22303  008F  289B               	goto	i1l7322
 22304  0090                     u762_20:	
 22305  0090                     i1l7318:	
 22306                           
 22307                           ;main.c: 685:             if(factory_reset_dec){
 22308  0090  085D               	movf	_factory_reset_dec^(0+1792),w	;volatile
 22309  0091  045E               	iorwf	(_factory_reset_dec+1)^(0+1792),w	;volatile
 22310  0092  1903               	btfsc	3,2
 22311  0093  2895               	goto	u763_21
 22312  0094  2896               	goto	u763_20
 22313  0095                     u763_21:	
 22314  0095  289F               	goto	i1l7324
 22315  0096                     u763_20:	
 22316  0096                     i1l7320:	
 22317                           
 22318                           ;main.c: 686:                 factory_reset_dec--;
 22319  0096  30FF               	movlw	255
 22320  0097  07DD               	addwf	_factory_reset_dec^(0+1792),f	;volatile
 22321  0098  30FF               	movlw	255
 22322  0099  3DDE               	addwfc	(_factory_reset_dec+1)^(0+1792),f	;volatile
 22323  009A  289F               	goto	i1l7324
 22324  009B                     i1l7322:	
 22325                           
 22326                           ;main.c: 690:             factory_reset_dec = 3000;
 22327  009B  30B8               	movlw	184
 22328  009C  00DD               	movwf	_factory_reset_dec^(0+1792)	;volatile
 22329  009D  300B               	movlw	11
 22330  009E  00DE               	movwf	(_factory_reset_dec^(0+1792)+1)	;volatile
 22331  009F                     i1l7324:	
 22332                           
 22333                           ;main.c: 692:         if(increase_btn_debounce && decrease_btn_debounce && mode_btn_debo
      +                          unce){
 22334  009F  0863               	movf	_increase_btn_debounce^(0+1792),w	;volatile
 22335  00A0  0464               	iorwf	(_increase_btn_debounce+1)^(0+1792),w	;volatile
 22336  00A1  1903               	btfsc	3,2
 22337  00A2  28A4               	goto	u764_21
 22338  00A3  28A5               	goto	u764_20
 22339  00A4                     u764_21:	
 22340  00A4  28B5               	goto	i1l7332
 22341  00A5                     u764_20:	
 22342  00A5                     i1l7326:	
 22343  00A5  0861               	movf	_decrease_btn_debounce^(0+1792),w	;volatile
 22344  00A6  0462               	iorwf	(_decrease_btn_debounce+1)^(0+1792),w	;volatile
 22345  00A7  1903               	btfsc	3,2
 22346  00A8  28AA               	goto	u765_21
 22347  00A9  28AB               	goto	u765_20
 22348  00AA                     u765_21:	
 22349  00AA  28B5               	goto	i1l7332
 22350  00AB                     u765_20:	
 22351  00AB                     i1l7328:	
 22352  00AB  085F               	movf	_mode_btn_debounce^(0+1792),w	;volatile
 22353  00AC  0460               	iorwf	(_mode_btn_debounce+1)^(0+1792),w	;volatile
 22354  00AD  1903               	btfsc	3,2
 22355  00AE  28B0               	goto	u766_21
 22356  00AF  28B1               	goto	u766_20
 22357  00B0                     u766_21:	
 22358  00B0  28B5               	goto	i1l7332
 22359  00B1                     u766_20:	
 22360  00B1                     i1l7330:	
 22361                           
 22362                           ;main.c: 693:             speedChangeTimer = 0;
 22363  00B1  01AB               	clrf	_speedChangeTimer^(0+1792)
 22364  00B2  01AC               	clrf	(_speedChangeTimer+1)^(0+1792)
 22365                           
 22366                           ;main.c: 694:             speedChangeState = 0;
 22367  00B3  01AF               	clrf	_speedChangeState^(0+1792)
 22368                           
 22369                           ;main.c: 695:             mode_change_flag = 0;
 22370  00B4  01BC               	clrf	_mode_change_flag^(0+1792)
 22371  00B5                     i1l7332:	
 22372                           
 22373                           ;main.c: 698:         if(speedChangeTimer){
 22374  00B5  082B               	movf	_speedChangeTimer^(0+1792),w
 22375  00B6  042C               	iorwf	(_speedChangeTimer+1)^(0+1792),w
 22376  00B7  1903               	btfsc	3,2
 22377  00B8  28BA               	goto	u767_21
 22378  00B9  28BB               	goto	u767_20
 22379  00BA                     u767_21:	
 22380  00BA  28BF               	goto	i1l1029
 22381  00BB                     u767_20:	
 22382  00BB                     i1l7334:	
 22383                           
 22384                           ;main.c: 699:             speedChangeTimer--;
 22385  00BB  3001               	movlw	1
 22386  00BC  02AB               	subwf	_speedChangeTimer^(0+1792),f
 22387  00BD  3000               	movlw	0
 22388  00BE  3BAC               	subwfb	(_speedChangeTimer+1)^(0+1792),f
 22389  00BF                     i1l1029:	
 22390  00BF  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 22391  00C0  0009               	retfie
 22392  00C1                     __end_of___ISR:	
 22393                           
 22394                           	psect	text59
 22395  2F42                     __ptext59:	
 22396 ;; *************** function i1_HEFLASH_writeBlock *****************
 22397 ;; Defined at:
 22398 ;;		line 15 in file "HEFlash.c"
 22399 ;; Parameters:    Size  Location     Type
 22400 ;;  radd            1    wreg     unsigned char 
 22401 ;;  data            1    6[COMMON] PTR unsigned char 
 22402 ;;		 -> frmn_speed(1), speed(1), mode(1), 
 22403 ;;  count           1    7[COMMON] unsigned char 
 22404 ;; Auto vars:     Size  Location     Type
 22405 ;;  radd            1   10[COMMON] unsigned char 
 22406 ;;  HEFLASH_writ    2   11[COMMON] unsigned int 
 22407 ;; Return value:  Size  Location     Type
 22408 ;;                  1    wreg      unsigned char 
 22409 ;; Registers used:
 22410 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22411 ;; Tracked objects:
 22412 ;;		On entry : 0/0
 22413 ;;		On exit  : 0/0
 22414 ;;		Unchanged: 0/0
 22415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22417 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22418 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22419 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22420 ;;Total ram usage:        7 bytes
 22421 ;; Hardware stack levels used:    1
 22422 ;; Hardware stack levels required when called:    2
 22423 ;; This function calls:
 22424 ;;		i1_FLASH_erase
 22425 ;;		i1_FLASH_write
 22426 ;; This function is called by:
 22427 ;;		___ISR
 22428 ;; This function uses a non-reentrant model
 22429 ;;
 22430                           
 22431                           
 22432                           ;psect for function i1_HEFLASH_writeBlock
 22433  2F42                     i1_HEFLASH_writeBlock:	
 22434                           
 22435                           ;incstack = 0
 22436                           ; Regs used in i1_HEFLASH_writeBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22437                           ;i1HEFLASH_writeBlock@radd stored from wreg
 22438  2F42  00FA               	movwf	i1HEFLASH_writeBlock@radd
 22439  2F43                     i1l6280:	
 22440                           
 22441                           ;HEFlash.c: 15: char HEFLASH_writeBlock (char radd, char *data, char count);HEFlash.c: 1
      +                          6: {;HEFlash.c: 18:     unsigned add = radd * 32 + 0x3F80;
 22442  2F43  087A               	movf	i1HEFLASH_writeBlock@radd,w
 22443  2F44  00F8               	movwf	??i1_HEFLASH_writeBlock
 22444  2F45  01F9               	clrf	??i1_HEFLASH_writeBlock+1
 22445  2F46  3005               	movlw	5
 22446  2F47                     u641_25:	
 22447  2F47  35F8               	lslf	??i1_HEFLASH_writeBlock,f
 22448  2F48  0DF9               	rlf	??i1_HEFLASH_writeBlock+1,f
 22449  2F49  0B89               	decfsz	9,f
 22450  2F4A  2F47               	goto	u641_25
 22451  2F4B  0878               	movf	??i1_HEFLASH_writeBlock,w
 22452  2F4C  3E80               	addlw	128
 22453  2F4D  00FB               	movwf	i1HEFLASH_writeBlock@add
 22454  2F4E  303F               	movlw	63
 22455  2F4F  3D79               	addwfc	??i1_HEFLASH_writeBlock+1,w
 22456  2F50  00FC               	movwf	i1HEFLASH_writeBlock@add+1
 22457  2F51                     i1l6282:	
 22458                           
 22459                           ;HEFlash.c: 20:     if ((count > 32)||(radd >= ((0x3FFF -0x3F80 +1)/32)))
 22460  2F51  3021               	movlw	33
 22461  2F52  0277               	subwf	i1HEFLASH_writeBlock@count,w
 22462  2F53  1803               	skipnc
 22463  2F54  2F56               	goto	u642_21
 22464  2F55  2F57               	goto	u642_20
 22465  2F56                     u642_21:	
 22466  2F56  2F9F               	goto	i1l767
 22467  2F57                     u642_20:	
 22468  2F57                     i1l6284:	
 22469  2F57  3004               	movlw	4
 22470  2F58  027A               	subwf	i1HEFLASH_writeBlock@radd,w
 22471  2F59  1C03               	skipc
 22472  2F5A  2F5C               	goto	u643_21
 22473  2F5B  2F5D               	goto	u643_20
 22474  2F5C                     u643_21:	
 22475  2F5C  2F5E               	goto	i1l6286
 22476  2F5D                     u643_20:	
 22477  2F5D  2F9F               	goto	i1l767
 22478  2F5E                     i1l6286:	
 22479                           
 22480                           ;HEFlash.c: 23:     FLASH_erase (add);
 22481  2F5E  087C               	movf	i1HEFLASH_writeBlock@add+1,w
 22482  2F5F  00F1               	movwf	i1FLASH_erase@address+1
 22483  2F60  087B               	movf	i1HEFLASH_writeBlock@add,w
 22484  2F61  00F0               	movwf	i1FLASH_erase@address
 22485  2F62  31AA  226D  31AF   	fcall	i1_FLASH_erase
 22486                           
 22487                           ;HEFlash.c: 25:     while (count > 1)
 22488  2F65  2F84               	goto	i1l6296
 22489  2F66                     i1l6288:	
 22490                           
 22491                           ;HEFlash.c: 26:     {;HEFlash.c: 28:         FLASH_write (add++, (unsigned) *data++, 1);
 22492  2F66  087C               	movf	i1HEFLASH_writeBlock@add+1,w
 22493  2F67  00F1               	movwf	i1FLASH_write@address+1
 22494  2F68  087B               	movf	i1HEFLASH_writeBlock@add,w
 22495  2F69  00F0               	movwf	i1FLASH_write@address
 22496  2F6A  0876               	movf	i1HEFLASH_writeBlock@data,w
 22497  2F6B  0086               	movwf	6
 22498  2F6C  3007               	movlw	7	; select bank14/15
 22499  2F6D  0087               	movwf	7
 22500  2F6E  0801               	movf	1,w
 22501  2F6F  00F8               	movwf	??i1_HEFLASH_writeBlock
 22502  2F70  01F9               	clrf	??i1_HEFLASH_writeBlock+1
 22503  2F71  0878               	movf	??i1_HEFLASH_writeBlock,w
 22504  2F72  00F2               	movwf	i1FLASH_write@data
 22505  2F73  0879               	movf	??i1_HEFLASH_writeBlock+1,w
 22506  2F74  00F3               	movwf	i1FLASH_write@data+1
 22507  2F75  01F4               	clrf	i1FLASH_write@latch
 22508  2F76  0AF4               	incf	i1FLASH_write@latch,f
 22509  2F77  31AA  22F3  31AF   	fcall	i1_FLASH_write
 22510  2F7A                     i1l6290:	
 22511  2F7A  3001               	movlw	1
 22512  2F7B  00F8               	movwf	??i1_HEFLASH_writeBlock
 22513  2F7C  0878               	movf	??i1_HEFLASH_writeBlock,w
 22514  2F7D  07F6               	addwf	i1HEFLASH_writeBlock@data,f
 22515  2F7E                     i1l6292:	
 22516  2F7E  3001               	movlw	1
 22517  2F7F  07FB               	addwf	i1HEFLASH_writeBlock@add,f
 22518  2F80  3000               	movlw	0
 22519  2F81  3DFC               	addwfc	i1HEFLASH_writeBlock@add+1,f
 22520  2F82                     i1l6294:	
 22521                           
 22522                           ;HEFlash.c: 29:         count--;
 22523  2F82  3001               	movlw	1
 22524  2F83  02F7               	subwf	i1HEFLASH_writeBlock@count,f
 22525  2F84                     i1l6296:	
 22526                           
 22527                           ;HEFlash.c: 25:     while (count > 1)
 22528  2F84  3002               	movlw	2
 22529  2F85  0277               	subwf	i1HEFLASH_writeBlock@count,w
 22530  2F86  1803               	skipnc
 22531  2F87  2F89               	goto	u644_21
 22532  2F88  2F8A               	goto	u644_20
 22533  2F89                     u644_21:	
 22534  2F89  2F66               	goto	i1l6288
 22535  2F8A                     u644_20:	
 22536  2F8A                     i1l6298:	
 22537                           
 22538                           ;HEFlash.c: 33:     FLASH_write (add, (unsigned) *data, 0);
 22539  2F8A  087C               	movf	i1HEFLASH_writeBlock@add+1,w
 22540  2F8B  00F1               	movwf	i1FLASH_write@address+1
 22541  2F8C  087B               	movf	i1HEFLASH_writeBlock@add,w
 22542  2F8D  00F0               	movwf	i1FLASH_write@address
 22543  2F8E  0876               	movf	i1HEFLASH_writeBlock@data,w
 22544  2F8F  0086               	movwf	6
 22545  2F90  3007               	movlw	7	; select bank14/15
 22546  2F91  0087               	movwf	7
 22547  2F92  0801               	movf	1,w
 22548  2F93  00F8               	movwf	??i1_HEFLASH_writeBlock
 22549  2F94  01F9               	clrf	??i1_HEFLASH_writeBlock+1
 22550  2F95  0878               	movf	??i1_HEFLASH_writeBlock,w
 22551  2F96  00F2               	movwf	i1FLASH_write@data
 22552  2F97  0879               	movf	??i1_HEFLASH_writeBlock+1,w
 22553  2F98  00F3               	movwf	i1FLASH_write@data+1
 22554  2F99  01F4               	clrf	i1FLASH_write@latch
 22555  2F9A  31AA  22F3  31AF   	fcall	i1_FLASH_write
 22556  2F9D                     i1l6300:	
 22557                           
 22558                           ;HEFlash.c: 36:     return PMCON1bits.WRERR;;	Return value of i1_HEFLASH_writeBlock is n
      +                          ever used
 22559  2F9D  0023               	movlb	3	; select bank3
 22560  2F9E  0815               	movf	21,w	;volatile
 22561  2F9F                     i1l767:	
 22562  2F9F  0008               	return
 22563  2FA0                     __end_ofi1_HEFLASH_writeBlock:	
 22564                           
 22565                           	psect	text60
 22566  2AF3                     __ptext60:	
 22567 ;; *************** function i1_FLASH_write *****************
 22568 ;; Defined at:
 22569 ;;		line 71 in file "Flash.c"
 22570 ;; Parameters:    Size  Location     Type
 22571 ;;  address         2    0[COMMON] unsigned int 
 22572 ;;  data            2    2[COMMON] unsigned int 
 22573 ;;  latch           1    4[COMMON] unsigned char 
 22574 ;; Auto vars:     Size  Location     Type
 22575 ;;  FLASH_write     1    5[COMMON] unsigned char 
 22576 ;; Return value:  Size  Location     Type
 22577 ;;                  1    wreg      void 
 22578 ;; Registers used:
 22579 ;;		wreg, status,2, status,0, pclath, cstack
 22580 ;; Tracked objects:
 22581 ;;		On entry : 0/0
 22582 ;;		On exit  : 0/0
 22583 ;;		Unchanged: 0/0
 22584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22585 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22586 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22588 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22589 ;;Total ram usage:        6 bytes
 22590 ;; Hardware stack levels used:    1
 22591 ;; Hardware stack levels required when called:    1
 22592 ;; This function calls:
 22593 ;;		i1__unlock
 22594 ;; This function is called by:
 22595 ;;		i1_HEFLASH_writeBlock
 22596 ;; This function uses a non-reentrant model
 22597 ;;
 22598                           
 22599                           
 22600                           ;psect for function i1_FLASH_write
 22601  2AF3                     i1_FLASH_write:	
 22602  2AF3                     i1l5396:	
 22603                           ;incstack = 0
 22604                           ; Regs used in i1_FLASH_write: [wreg+status,2+status,0+pclath+cstack]
 22605                           
 22606                           
 22607                           ;Flash.c: 71: void FLASH_write (unsigned address, unsigned data, char latch);Flash.c: 72
      +                          : {;Flash.c: 74:     char temp = INTCONbits.GIE;
 22608  2AF3  3000               	movlw	0
 22609  2AF4  1B8B               	btfsc	11,7	;volatile
 22610  2AF5  3001               	movlw	1
 22611  2AF6  00F5               	movwf	i1FLASH_write@temp
 22612  2AF7                     i1l5398:	
 22613                           
 22614                           ;Flash.c: 75:     INTCONbits.GIE = 0;
 22615  2AF7  138B               	bcf	11,7	;volatile
 22616  2AF8                     i1l5400:	
 22617                           
 22618                           ;Flash.c: 77:     PMADR = address;
 22619  2AF8  0871               	movf	i1FLASH_write@address+1,w
 22620  2AF9  0023               	movlb	3	; select bank3
 22621  2AFA  0092               	movwf	18	;volatile
 22622  2AFB  0870               	movf	i1FLASH_write@address,w
 22623  2AFC  0091               	movwf	17	;volatile
 22624  2AFD                     i1l5402:	
 22625                           
 22626                           ;Flash.c: 78:     PMDAT = data;
 22627  2AFD  0873               	movf	i1FLASH_write@data+1,w
 22628  2AFE  0094               	movwf	20	;volatile
 22629  2AFF  0872               	movf	i1FLASH_write@data,w
 22630  2B00  0093               	movwf	19	;volatile
 22631  2B01                     i1l5404:	
 22632                           
 22633                           ;Flash.c: 79:     PMCON1bits.LWLO = latch;
 22634  2B01  0C74               	rrf	i1FLASH_write@latch,w
 22635  2B02  1C03               	skipc
 22636  2B03  1295               	bcf	21,5	;volatile
 22637  2B04  1803               	skipnc
 22638  2B05  1695               	bsf	21,5	;volatile
 22639  2B06                     i1l5406:	
 22640                           
 22641                           ;Flash.c: 80:     PMCON1bits.CFGS = 0;
 22642  2B06  1315               	bcf	21,6	;volatile
 22643  2B07                     i1l5408:	
 22644                           
 22645                           ;Flash.c: 81:     PMCON1bits.FREE = 0;
 22646  2B07  1215               	bcf	21,4	;volatile
 22647  2B08                     i1l5410:	
 22648                           
 22649                           ;Flash.c: 82:     PMCON1bits.WREN = 1;
 22650  2B08  1515               	bsf	21,2	;volatile
 22651  2B09                     i1l5412:	
 22652                           
 22653                           ;Flash.c: 84:     _unlock();
 22654  2B09  31A9  21C3  31AA   	fcall	i1__unlock
 22655  2B0C                     i1l5414:	
 22656                           
 22657                           ;Flash.c: 86:     if (temp)
 22658  2B0C  0875               	movf	i1FLASH_write@temp,w
 22659  2B0D  1903               	btfsc	3,2
 22660  2B0E  2B10               	goto	u499_21
 22661  2B0F  2B11               	goto	u499_20
 22662  2B10                     u499_21:	
 22663  2B10  2B12               	goto	i1l749
 22664  2B11                     u499_20:	
 22665  2B11                     i1l5416:	
 22666                           
 22667                           ;Flash.c: 87:     INTCONbits.GIE = 1;
 22668  2B11  178B               	bsf	11,7	;volatile
 22669  2B12                     i1l749:	
 22670  2B12  0008               	return
 22671  2B13                     __end_ofi1_FLASH_write:	
 22672                           
 22673                           	psect	text61
 22674  2A6D                     __ptext61:	
 22675 ;; *************** function i1_FLASH_erase *****************
 22676 ;; Defined at:
 22677 ;;		line 89 in file "Flash.c"
 22678 ;; Parameters:    Size  Location     Type
 22679 ;;  address         2    0[COMMON] unsigned int 
 22680 ;; Auto vars:     Size  Location     Type
 22681 ;;  FLASH_erase     1    2[COMMON] unsigned char 
 22682 ;; Return value:  Size  Location     Type
 22683 ;;                  1    wreg      void 
 22684 ;; Registers used:
 22685 ;;		wreg, status,2, status,0, pclath, cstack
 22686 ;; Tracked objects:
 22687 ;;		On entry : 0/0
 22688 ;;		On exit  : 0/0
 22689 ;;		Unchanged: 0/0
 22690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22691 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22692 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22694 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22695 ;;Total ram usage:        3 bytes
 22696 ;; Hardware stack levels used:    1
 22697 ;; Hardware stack levels required when called:    1
 22698 ;; This function calls:
 22699 ;;		i1__unlock
 22700 ;; This function is called by:
 22701 ;;		i1_HEFLASH_writeBlock
 22702 ;; This function uses a non-reentrant model
 22703 ;;
 22704                           
 22705                           
 22706                           ;psect for function i1_FLASH_erase
 22707  2A6D                     i1_FLASH_erase:	
 22708  2A6D                     i1l5418:	
 22709                           ;incstack = 0
 22710                           ; Regs used in i1_FLASH_erase: [wreg+status,2+status,0+pclath+cstack]
 22711                           
 22712                           
 22713                           ;Flash.c: 89: void FLASH_erase (unsigned address);Flash.c: 90: {;Flash.c: 92:     char t
      +                          emp = INTCONbits.GIE;
 22714  2A6D  3000               	movlw	0
 22715  2A6E  1B8B               	btfsc	11,7	;volatile
 22716  2A6F  3001               	movlw	1
 22717  2A70  00F2               	movwf	i1FLASH_erase@temp
 22718  2A71                     i1l5420:	
 22719                           
 22720                           ;Flash.c: 93:     INTCONbits.GIE = 0;
 22721  2A71  138B               	bcf	11,7	;volatile
 22722  2A72                     i1l5422:	
 22723                           
 22724                           ;Flash.c: 95:     PMADR = address;
 22725  2A72  0871               	movf	i1FLASH_erase@address+1,w
 22726  2A73  0023               	movlb	3	; select bank3
 22727  2A74  0092               	movwf	18	;volatile
 22728  2A75  0870               	movf	i1FLASH_erase@address,w
 22729  2A76  0091               	movwf	17	;volatile
 22730  2A77                     i1l5424:	
 22731                           
 22732                           ;Flash.c: 96:     PMCON1bits.CFGS = 0;
 22733  2A77  1315               	bcf	21,6	;volatile
 22734  2A78                     i1l5426:	
 22735                           
 22736                           ;Flash.c: 97:     PMCON1bits.FREE = 1;
 22737  2A78  1615               	bsf	21,4	;volatile
 22738  2A79                     i1l5428:	
 22739                           
 22740                           ;Flash.c: 98:     PMCON1bits.WREN = 1;
 22741  2A79  1515               	bsf	21,2	;volatile
 22742  2A7A                     i1l5430:	
 22743                           
 22744                           ;Flash.c: 100:     _unlock();
 22745  2A7A  31A9  21C3  31AA   	fcall	i1__unlock
 22746  2A7D                     i1l5432:	
 22747                           
 22748                           ;Flash.c: 102:     PMCON1bits.WREN = 0;
 22749  2A7D  0023               	movlb	3	; select bank3
 22750  2A7E  1115               	bcf	21,2	;volatile
 22751  2A7F                     i1l5434:	
 22752                           
 22753                           ;Flash.c: 103:     if (temp)
 22754  2A7F  0872               	movf	i1FLASH_erase@temp,w
 22755  2A80  1903               	btfsc	3,2
 22756  2A81  2A83               	goto	u500_21
 22757  2A82  2A84               	goto	u500_20
 22758  2A83                     u500_21:	
 22759  2A83  2A85               	goto	i1l753
 22760  2A84                     u500_20:	
 22761  2A84                     i1l5436:	
 22762                           
 22763                           ;Flash.c: 104:     {;Flash.c: 105:         INTCONbits.GIE = 1;
 22764  2A84  178B               	bsf	11,7	;volatile
 22765  2A85                     i1l753:	
 22766  2A85  0008               	return
 22767  2A86                     __end_ofi1_FLASH_erase:	
 22768                           
 22769                           	psect	text62
 22770  29C3                     __ptext62:	
 22771 ;; *************** function i1__unlock *****************
 22772 ;; Defined at:
 22773 ;;		line 47 in file "Flash.c"
 22774 ;; Parameters:    Size  Location     Type
 22775 ;;		None
 22776 ;; Auto vars:     Size  Location     Type
 22777 ;;		None
 22778 ;; Return value:  Size  Location     Type
 22779 ;;                  1    wreg      void 
 22780 ;; Registers used:
 22781 ;;		None
 22782 ;; Tracked objects:
 22783 ;;		On entry : 0/0
 22784 ;;		On exit  : 0/0
 22785 ;;		Unchanged: 0/0
 22786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22791 ;;Total ram usage:        0 bytes
 22792 ;; Hardware stack levels used:    1
 22793 ;; This function calls:
 22794 ;;		Nothing
 22795 ;; This function is called by:
 22796 ;;		i1_FLASH_write
 22797 ;;		i1_FLASH_erase
 22798 ;; This function uses a non-reentrant model
 22799 ;;
 22800                           
 22801                           
 22802                           ;psect for function i1__unlock
 22803  29C3                     i1__unlock:	
 22804  29C3                     i1l5046:	
 22805                           ;incstack = 0
 22806                           ; Regs used in i1__unlock: []
 22807                           
 22808  29C3  0023               	banksel	406	;# 
 22809  29C4  3055               	movlw	85	;# 
 22810  29C5  0096               	movwf	22	;# 
 22811  29C6  30AA               	movlw	170	;# 
 22812  29C7  0096               	movwf	22	;# 
 22813  29C8  1495               	bsf	21,1	; set WR bit ;# 
 22814  29C9  0000               	nop	;# 
 22815  29CA  0000               	nop	;# 
 22816  29CB                     i1l745:	
 22817  29CB  0008               	return
 22818  29CC                     __end_ofi1__unlock:	
 22819  007E                     btemp	set	126	;btemp
 22820  007E                     int$flags	set	126
 22821  007E                     wtemp0	set	126
 22822  2000                     
 22823                           	psect	maintext_split_1
 22824  0D39                     l8930:	
 22825                           
 22826                           ;main.c: 233:                 if(power_led_flash_counter){
 22827  0D39  002F               	movlb	15	; select bank15
 22828  0D3A  0867               	movf	main@power_led_flash_counter^(0+1920),w
 22829  0D3B  0468               	iorwf	(main@power_led_flash_counter+1)^(0+1920),w
 22830  0D3C  1903               	btfsc	3,2
 22831  0D3D  2D3F               	goto	u10271
 22832  0D3E  2D40               	goto	u10270
 22833  0D3F                     u10271:	
 22834  0D3F  2D45               	goto	l8934
 22835  0D40                     u10270:	
 22836  0D40                     l8932:	
 22837                           
 22838                           ;main.c: 234:                     power_led_flash_counter--;
 22839  0D40  3001               	movlw	1
 22840  0D41  02E7               	subwf	main@power_led_flash_counter^(0+1920),f
 22841  0D42  3000               	movlw	0
 22842  0D43  3BE8               	subwfb	(main@power_led_flash_counter+1)^(0+1920),f
 22843                           
 22844                           ;main.c: 235:                 }else{
 22845  0D44  2D49               	goto	l919
 22846  0D45                     l8934:	
 22847                           
 22848                           ;main.c: 236:                     power_led_flash_counter = 1000;
 22849  0D45  30E8               	movlw	232
 22850  0D46  00E7               	movwf	main@power_led_flash_counter^(0+1920)
 22851  0D47  3003               	movlw	3
 22852  0D48  00E8               	movwf	(main@power_led_flash_counter^(0+1920)+1)
 22853  0D49                     l919:	
 22854                           ;main.c: 237:                 }
 22855                           
 22856                           
 22857                           ;main.c: 238:                 if(power_led_flash_counter>500){
 22858  0D49  3001               	movlw	1
 22859  0D4A  0268               	subwf	(main@power_led_flash_counter+1)^(0+1920),w
 22860  0D4B  30F5               	movlw	245
 22861  0D4C  1903               	skipnz
 22862  0D4D  0267               	subwf	main@power_led_flash_counter^(0+1920),w
 22863  0D4E  1C03               	skipc
 22864  0D4F  2D51               	goto	u10281
 22865  0D50  2D52               	goto	u10280
 22866  0D51                     u10281:	
 22867  0D51  2D55               	goto	l920
 22868  0D52                     u10280:	
 22869  0D52                     l8936:	
 22870                           
 22871                           ;main.c: 239:                     RA6 = 0;
 22872  0D52  0020               	movlb	0	; select bank0
 22873  0D53  130C               	bcf	12,6	;volatile
 22874                           
 22875                           ;main.c: 240:                 }else{
 22876  0D54  2D57               	goto	l8938
 22877  0D55                     l920:	
 22878                           
 22879                           ;main.c: 241:                     RA6 = 1;
 22880  0D55  0020               	movlb	0	; select bank0
 22881  0D56  170C               	bsf	12,6	;volatile
 22882  0D57                     l8938:	
 22883                           
 22884                           ;main.c: 243:                 _delay((unsigned long)((1)*(16000000/4000.0)));
 22885  0D57  3006               	movlw	6
 22886  0D58  002E               	movlb	14	; select bank14
 22887  0D59  00D5               	movwf	??_main^(0+1792)
 22888  0D5A  3030               	movlw	48
 22889  0D5B                     u10917:	
 22890  0D5B  0B89               	decfsz	9,f
 22891  0D5C  2D5B               	goto	u10917
 22892  0D5D  0BD5               	decfsz	??_main^(0+1792),f
 22893  0D5E  2D5B               	goto	u10917
 22894  0D5F  0000               	nop
 22895  0D60                     l8940:	
 22896                           
 22897                           ;main.c: 232:             while(RB5 == 0){
 22898  0D60  0020               	movlb	0	; select bank0
 22899  0D61  1E8D               	btfss	13,5	;volatile
 22900  0D62  2D64               	goto	u10291
 22901  0D63  2D65               	goto	u10290
 22902  0D64                     u10291:	
 22903  0D64  2D39               	goto	l8930
 22904  0D65                     u10290:	
 22905  0D65                     l911:	
 22906                           ;main.c: 245:         }
 22907                           
 22908                           
 22909                           ;main.c: 246:         RA6 = 1;
 22910  0D65  170C               	bsf	12,6	;volatile
 22911  0D66                     l8942:	
 22912                           
 22913                           ;main.c: 247:         fireman_out = 0;
 22914  0D66  002E               	movlb	14	; select bank14
 22915  0D67  01BA               	clrf	_fireman_out^(0+1792)
 22916  0D68                     l8944:	
 22917                           
 22918                           ;main.c: 249:         clearText(newTextLine1);
 22919  0D68  30D3               	movlw	low _newTextLine1
 22920  0D69  002D               	movlb	13	; select bank13
 22921  0D6A  00A0               	movwf	clearText@textToClear^(0+1664)
 22922  0D6B  3007               	movlw	high _newTextLine1
 22923  0D6C  00A1               	movwf	(clearText@textToClear+1)^(0+1664)
 22924  0D6D  31AB  2393  318D   	fcall	_clearText
 22925  0D70                     l8946:	
 22926                           
 22927                           ;main.c: 250:         clearText(newTextLine2);
 22928  0D70  3060               	movlw	low _newTextLine2
 22929  0D71  002D               	movlb	13	; select bank13
 22930  0D72  00A0               	movwf	clearText@textToClear^(0+1664)
 22931  0D73  3008               	movlw	high _newTextLine2
 22932  0D74  00A1               	movwf	(clearText@textToClear+1)^(0+1664)
 22933  0D75  31AB  2393  318D   	fcall	_clearText
 22934  0D78                     l8948:	
 22935                           
 22936                           ;main.c: 251:         clearText(newTextLine3);
 22937  0D78  3050               	movlw	low _newTextLine3
 22938  0D79  002D               	movlb	13	; select bank13
 22939  0D7A  00A0               	movwf	clearText@textToClear^(0+1664)
 22940  0D7B  3008               	movlw	high _newTextLine3
 22941  0D7C  00A1               	movwf	(clearText@textToClear+1)^(0+1664)
 22942  0D7D  31AB  2393  318D   	fcall	_clearText
 22943  0D80                     l8950:	
 22944                           
 22945                           ;main.c: 252:         clearText(newTextLine4);
 22946  0D80  30C3               	movlw	low _newTextLine4
 22947  0D81  002D               	movlb	13	; select bank13
 22948  0D82  00A0               	movwf	clearText@textToClear^(0+1664)
 22949  0D83  3007               	movlw	high _newTextLine4
 22950  0D84  00A1               	movwf	(clearText@textToClear+1)^(0+1664)
 22951  0D85  31AB  2393  318D   	fcall	_clearText
 22952                           
 22953                           ;main.c: 256:         switch(mode)
 22954  0D88  3195  2DE9         	goto	l9092
 22955  0D8A                     l8952:	
 22956                           
 22957                           ;main.c: 262:                 sprintf(newTextLine1,"OFF");
 22958  0D8A  30D3               	movlw	low _newTextLine1
 22959  0D8B  00C4               	movwf	sprintf@s^(0+1792)
 22960  0D8C  3007               	movlw	high _newTextLine1
 22961  0D8D  00C5               	movwf	(sprintf@s+1)^(0+1792)
 22962  0D8E  3082               	movlw	low (STR_3| (0+32768))
 22963  0D8F  00C6               	movwf	sprintf@fmt^(0+1792)
 22964  0D90  30B0               	movlw	high (STR_3| (0+32768))
 22965  0D91  00C7               	movwf	(sprintf@fmt^(0+1792)+1)
 22966  0D92  318D  250E  318D   	fcall	_sprintf
 22967  0D95                     l8954:	
 22968                           
 22969                           ;main.c: 265:                 DAC1_Load10bitInputData(0);
 22970  0D95  3000               	movlw	0
 22971  0D96  002D               	movlb	13	; select bank13
 22972  0D97  00DC               	movwf	DAC1_Load10bitInputData@input10BitData^(0+1664)
 22973  0D98  00DD               	movwf	(DAC1_Load10bitInputData@input10BitData+1)^(0+1664)
 22974  0D99  31A9  21E7  318D   	fcall	_DAC1_Load10bitInputData
 22975  0D9C                     l8956:	
 22976                           
 22977                           ;main.c: 268:                 RA0 = 0;
 22978  0D9C  0020               	movlb	0	; select bank0
 22979  0D9D  100C               	bcf	12,0	;volatile
 22980  0D9E                     l8958:	
 22981                           
 22982                           ;main.c: 270:                 RA1 = 0;
 22983  0D9E  0020               	movlb	0	; select bank0
 22984  0D9F  108C               	bcf	12,1	;volatile
 22985  0DA0                     L1:	
 22986                           
 22987                           ;main.c: 272:             break;
 22988  0DA0  3196  2E05         	goto	l9094
 22989  0DA2                     l8960:	
 22990                           
 22991                           ;main.c: 276:                 HEFLASH_readBlock(&speed, 1, sizeof(speed));
 22992  0DA2  002D               	movlb	13	; select bank13
 22993  0DA3  01A2               	clrf	HEFLASH_readBlock@radd^(0+1664)
 22994  0DA4  0AA2               	incf	HEFLASH_readBlock@radd^(0+1664),f
 22995  0DA5  01A3               	clrf	HEFLASH_readBlock@count^(0+1664)
 22996  0DA6  0AA3               	incf	HEFLASH_readBlock@count^(0+1664),f
 22997  0DA7  3068               	movlw	(low (_speed| (0+1792)))& (0+255)
 22998  0DA8  31AC  24CF  318D   	fcall	_HEFLASH_readBlock
 22999  0DAB                     l8962:	
 23000                           
 23001                           ;main.c: 279:                 sprintf(newTextLine1,"HAND");
 23002  0DAB  30D3               	movlw	low _newTextLine1
 23003  0DAC  002E               	movlb	14	; select bank14
 23004  0DAD  00C4               	movwf	sprintf@s^(0+1792)
 23005  0DAE  3007               	movlw	high _newTextLine1
 23006  0DAF  00C5               	movwf	(sprintf@s+1)^(0+1792)
 23007  0DB0  307D               	movlw	low (STR_4| (0+32768))
 23008  0DB1  00C6               	movwf	sprintf@fmt^(0+1792)
 23009  0DB2  30B0               	movlw	high (STR_4| (0+32768))
 23010  0DB3  00C7               	movwf	(sprintf@fmt^(0+1792)+1)
 23011  0DB4  318D  250E  318D   	fcall	_sprintf
 23012  0DB7                     l8964:	
 23013                           
 23014                           ;main.c: 282:                 sprintf(newTextLine4,"SET:%d.%dV", speed/10, (speed%10));
 23015  0DB7  30C3               	movlw	low _newTextLine4
 23016  0DB8  002E               	movlb	14	; select bank14
 23017  0DB9  00C4               	movwf	sprintf@s^(0+1792)
 23018  0DBA  3007               	movlw	high _newTextLine4
 23019  0DBB  00C5               	movwf	(sprintf@s+1)^(0+1792)
 23020  0DBC  304E               	movlw	low (STR_2| (0+32768))
 23021  0DBD  00C6               	movwf	sprintf@fmt^(0+1792)
 23022  0DBE  30B0               	movlw	high (STR_2| (0+32768))
 23023  0DBF  00C7               	movwf	(sprintf@fmt^(0+1792)+1)
 23024  0DC0  300A               	movlw	10
 23025  0DC1  002D               	movlb	13	; select bank13
 23026  0DC2  00A0               	movwf	___awdiv@divisor^(0+1664)
 23027  0DC3  3000               	movlw	0
 23028  0DC4  00A1               	movwf	(___awdiv@divisor^(0+1664)+1)
 23029  0DC5  002E               	movlb	14	; select bank14
 23030  0DC6  0868               	movf	_speed^(0+1792),w
 23031  0DC7  00D5               	movwf	??_main^(0+1792)
 23032  0DC8  01D6               	clrf	(??_main^(0+1792)+1)
 23033  0DC9  0855               	movf	??_main^(0+1792),w
 23034  0DCA  002D               	movlb	13	; select bank13
 23035  0DCB  00A2               	movwf	___awdiv@dividend^(0+1664)
 23036  0DCC  002E               	movlb	14	; select bank14
 23037  0DCD  0856               	movf	(??_main+1)^(0+1792),w
 23038  0DCE  002D               	movlb	13	; select bank13
 23039  0DCF  00A3               	movwf	(___awdiv@dividend+1)^(0+1664)
 23040  0DD0  31AF  27A0  318D   	fcall	___awdiv
 23041  0DD3  002D               	movlb	13	; select bank13
 23042  0DD4  0821               	movf	(?___awdiv+1)^(0+1664),w
 23043  0DD5  002E               	movlb	14	; select bank14
 23044  0DD6  00C9               	movwf	((?_sprintf+1)^(0+1792)+4)
 23045  0DD7  002D               	movlb	13	; select bank13
 23046  0DD8  0820               	movf	?___awdiv^(0+1664),w
 23047  0DD9  002E               	movlb	14	; select bank14
 23048  0DDA  00C8               	movwf	(?_sprintf^(0+1792)+4)
 23049  0DDB  300A               	movlw	10
 23050  0DDC  002D               	movlb	13	; select bank13
 23051  0DDD  00A0               	movwf	___awmod@divisor^(0+1664)
 23052  0DDE  3000               	movlw	0
 23053  0DDF  00A1               	movwf	(___awmod@divisor^(0+1664)+1)
 23054  0DE0  002E               	movlb	14	; select bank14
 23055  0DE1  0868               	movf	_speed^(0+1792),w
 23056  0DE2  00D7               	movwf	(??_main+2)^(0+1792)
 23057  0DE3  01D8               	clrf	((??_main+2)^(0+1792)+1)
 23058  0DE4  0857               	movf	(??_main+2)^(0+1792),w
 23059  0DE5  002D               	movlb	13	; select bank13
 23060  0DE6  00A2               	movwf	___awmod@dividend^(0+1664)
 23061  0DE7  002E               	movlb	14	; select bank14
 23062  0DE8  0858               	movf	(??_main+3)^(0+1792),w
 23063  0DE9  002D               	movlb	13	; select bank13
 23064  0DEA  00A3               	movwf	(___awmod@dividend+1)^(0+1664)
 23065  0DEB  31AD  25DB  318D   	fcall	___awmod
 23066  0DEE  002D               	movlb	13	; select bank13
 23067  0DEF  0821               	movf	(?___awmod+1)^(0+1664),w
 23068  0DF0  002E               	movlb	14	; select bank14
 23069  0DF1  00CB               	movwf	((?_sprintf+1)^(0+1792)+6)
 23070  0DF2  002D               	movlb	13	; select bank13
 23071  0DF3  0820               	movf	?___awmod^(0+1664),w
 23072  0DF4  002E               	movlb	14	; select bank14
 23073  0DF5  00CA               	movwf	(?_sprintf^(0+1792)+6)
 23074  0DF6  318D  250E  318D   	fcall	_sprintf
 23075  0DF9                     l8966:	
 23076                           
 23077                           ;main.c: 285:                 DAC1_Load10bitInputData((float)speed *((float)1000/104));
 23078  0DF9  002E               	movlb	14	; select bank14
 23079  0DFA  0868               	movf	_speed^(0+1792),w
 23080  0DFB  00D5               	movwf	??_main^(0+1792)
 23081  0DFC  01D6               	clrf	(??_main^(0+1792)+1)
 23082  0DFD  01D7               	clrf	(??_main^(0+1792)+2)
 23083  0DFE  01D8               	clrf	(??_main^(0+1792)+3)
 23084  0DFF  0858               	movf	(??_main+3)^(0+1792),w
 23085  0E00  002D               	movlb	13	; select bank13
 23086  0E01  00AC               	movwf	(___xxtofl@val+3)^(0+1664)
 23087  0E02  002E               	movlb	14	; select bank14
 23088  0E03  0857               	movf	(??_main+2)^(0+1792),w
 23089  0E04  002D               	movlb	13	; select bank13
 23090  0E05  00AB               	movwf	(___xxtofl@val+2)^(0+1664)
 23091  0E06  002E               	movlb	14	; select bank14
 23092  0E07  0856               	movf	(??_main+1)^(0+1792),w
 23093  0E08  002D               	movlb	13	; select bank13
 23094  0E09  00AA               	movwf	(___xxtofl@val+1)^(0+1664)
 23095  0E0A  002E               	movlb	14	; select bank14
 23096  0E0B  0855               	movf	??_main^(0+1792),w
 23097  0E0C  002D               	movlb	13	; select bank13
 23098  0E0D  00A9               	movwf	___xxtofl@val^(0+1664)
 23099  0E0E  3000               	movlw	0
 23100  0E0F  31A2  222B  318D   	fcall	___xxtofl
 23101  0E12  002D               	movlb	13	; select bank13
 23102  0E13  082C               	movf	(?___xxtofl+3)^(0+1664),w
 23103  0E14  00BE               	movwf	(___flmul@a+3)^(0+1664)
 23104  0E15  082B               	movf	(?___xxtofl+2)^(0+1664),w
 23105  0E16  00BD               	movwf	(___flmul@a+2)^(0+1664)
 23106  0E17  082A               	movf	(?___xxtofl+1)^(0+1664),w
 23107  0E18  00BC               	movwf	(___flmul@a+1)^(0+1664)
 23108  0E19  0829               	movf	?___xxtofl^(0+1664),w
 23109  0E1A  00BB               	movwf	___flmul@a^(0+1664)
 23110  0E1B  3041               	movlw	65
 23111  0E1C  00BA               	movwf	(___flmul@b+3)^(0+1664)
 23112  0E1D  3019               	movlw	25
 23113  0E1E  00B9               	movwf	(___flmul@b+2)^(0+1664)
 23114  0E1F  30D8               	movlw	216
 23115  0E20  00B8               	movwf	(___flmul@b+1)^(0+1664)
 23116  0E21  309E               	movlw	158
 23117  0E22  00B7               	movwf	___flmul@b^(0+1664)
 23118  0E23  3190  200A  318D   	fcall	___flmul
 23119  0E26  002D               	movlb	13	; select bank13
 23120  0E27  083A               	movf	(?___flmul+3)^(0+1664),w
 23121  0E28  00D4               	movwf	(___fltol@f1+3)^(0+1664)
 23122  0E29  0839               	movf	(?___flmul+2)^(0+1664),w
 23123  0E2A  00D3               	movwf	(___fltol@f1+2)^(0+1664)
 23124  0E2B  0838               	movf	(?___flmul+1)^(0+1664),w
 23125  0E2C  00D2               	movwf	(___fltol@f1+1)^(0+1664)
 23126  0E2D  0837               	movf	?___flmul^(0+1664),w
 23127  0E2E  00D1               	movwf	___fltol@f1^(0+1664)
 23128  0E2F  31A1  212B  318D   	fcall	___fltol
 23129  0E32  002D               	movlb	13	; select bank13
 23130  0E33  0852               	movf	(?___fltol+1)^(0+1664),w
 23131  0E34  00DD               	movwf	(DAC1_Load10bitInputData@input10BitData+1)^(0+1664)
 23132  0E35  0851               	movf	?___fltol^(0+1664),w
 23133  0E36  00DC               	movwf	DAC1_Load10bitInputData@input10BitData^(0+1664)
 23134  0E37  31A9  21E7  318D   	fcall	_DAC1_Load10bitInputData
 23135  0E3A                     l8968:	
 23136                           
 23137                           ;main.c: 287:                 if((float)speed/10 > 1.85)
 23138  0E3A  303F               	movlw	63
 23139  0E3B  002D               	movlb	13	; select bank13
 23140  0E3C  00D4               	movwf	(___flge@ff1+3)^(0+1664)
 23141  0E3D  30EC               	movlw	236
 23142  0E3E  00D3               	movwf	(___flge@ff1+2)^(0+1664)
 23143  0E3F  30CC               	movlw	204
 23144  0E40  00D2               	movwf	(___flge@ff1+1)^(0+1664)
 23145  0E41  30CD               	movlw	205
 23146  0E42  00D1               	movwf	___flge@ff1^(0+1664)
 23147  0E43  3041               	movlw	65
 23148  0E44  00BA               	movwf	(___fldiv@a+3)^(0+1664)
 23149  0E45  3020               	movlw	32
 23150  0E46  00B9               	movwf	(___fldiv@a+2)^(0+1664)
 23151  0E47  3000               	movlw	0
 23152  0E48  00B8               	movwf	(___fldiv@a+1)^(0+1664)
 23153  0E49  3000               	movlw	0
 23154  0E4A  00B7               	movwf	___fldiv@a^(0+1664)
 23155  0E4B  002E               	movlb	14	; select bank14
 23156  0E4C  0868               	movf	_speed^(0+1792),w
 23157  0E4D  00D5               	movwf	??_main^(0+1792)
 23158  0E4E  01D6               	clrf	(??_main^(0+1792)+1)
 23159  0E4F  01D7               	clrf	(??_main^(0+1792)+2)
 23160  0E50  01D8               	clrf	(??_main^(0+1792)+3)
 23161  0E51  0858               	movf	(??_main+3)^(0+1792),w
 23162  0E52  002D               	movlb	13	; select bank13
 23163  0E53  00AC               	movwf	(___xxtofl@val+3)^(0+1664)
 23164  0E54  002E               	movlb	14	; select bank14
 23165  0E55  0857               	movf	(??_main+2)^(0+1792),w
 23166  0E56  002D               	movlb	13	; select bank13
 23167  0E57  00AB               	movwf	(___xxtofl@val+2)^(0+1664)
 23168  0E58  002E               	movlb	14	; select bank14
 23169  0E59  0856               	movf	(??_main+1)^(0+1792),w
 23170  0E5A  002D               	movlb	13	; select bank13
 23171  0E5B  00AA               	movwf	(___xxtofl@val+1)^(0+1664)
 23172  0E5C  002E               	movlb	14	; select bank14
 23173  0E5D  0855               	movf	??_main^(0+1792),w
 23174  0E5E  002D               	movlb	13	; select bank13
 23175  0E5F  00A9               	movwf	___xxtofl@val^(0+1664)
 23176  0E60  3000               	movlw	0
 23177  0E61  31A2  222B  318D   	fcall	___xxtofl
 23178  0E64  002D               	movlb	13	; select bank13
 23179  0E65  082C               	movf	(?___xxtofl+3)^(0+1664),w
 23180  0E66  00BE               	movwf	(___fldiv@b+3)^(0+1664)
 23181  0E67  082B               	movf	(?___xxtofl+2)^(0+1664),w
 23182  0E68  00BD               	movwf	(___fldiv@b+2)^(0+1664)
 23183  0E69  082A               	movf	(?___xxtofl+1)^(0+1664),w
 23184  0E6A  00BC               	movwf	(___fldiv@b+1)^(0+1664)
 23185  0E6B  0829               	movf	?___xxtofl^(0+1664),w
 23186  0E6C  00BB               	movwf	___fldiv@b^(0+1664)
 23187  0E6D  319A  225C  318D   	fcall	___fldiv
 23188  0E70  002D               	movlb	13	; select bank13
 23189  0E71  083A               	movf	(?___fldiv+3)^(0+1664),w
 23190  0E72  00D8               	movwf	(___flge@ff2+3)^(0+1664)
 23191  0E73  0839               	movf	(?___fldiv+2)^(0+1664),w
 23192  0E74  00D7               	movwf	(___flge@ff2+2)^(0+1664)
 23193  0E75  0838               	movf	(?___fldiv+1)^(0+1664),w
 23194  0E76  00D6               	movwf	(___flge@ff2+1)^(0+1664)
 23195  0E77  0837               	movf	?___fldiv^(0+1664),w
 23196  0E78  00D5               	movwf	___flge@ff2^(0+1664)
 23197  0E79  31A1  21A0  318D   	fcall	___flge
 23198  0E7C  1803               	btfsc	3,0
 23199  0E7D  2E7F               	goto	u10301
 23200  0E7E  2E80               	goto	u10300
 23201  0E7F                     u10301:	
 23202  0E7F  2E83               	goto	l927
 23203  0E80                     u10300:	
 23204  0E80                     l8970:	
 23205                           
 23206                           ;main.c: 288:                 {;main.c: 290:                     RA0 = 1;
 23207  0E80  0020               	movlb	0	; select bank0
 23208  0E81  140C               	bsf	12,0	;volatile
 23209                           
 23210                           ;main.c: 291:                 }
 23211  0E82  2E85               	goto	l8972
 23212  0E83                     l927:	
 23213                           ;main.c: 292:                 else
 23214                           
 23215                           
 23216                           ;main.c: 293:                 {;main.c: 295:                     RA0 = 0;
 23217  0E83  0020               	movlb	0	; select bank0
 23218  0E84  100C               	bcf	12,0	;volatile
 23219  0E85                     l8972:	
 23220                           
 23221                           ;main.c: 298:                 if(speed/10 >= 2.0)
 23222  0E85  002E               	movlb	14	; select bank14
 23223  0E86  0868               	movf	_speed^(0+1792),w
 23224  0E87  00D5               	movwf	??_main^(0+1792)
 23225  0E88  01D6               	clrf	(??_main^(0+1792)+1)
 23226  0E89  0855               	movf	??_main^(0+1792),w
 23227  0E8A  002D               	movlb	13	; select bank13
 23228  0E8B  00A2               	movwf	___awdiv@dividend^(0+1664)
 23229  0E8C  002E               	movlb	14	; select bank14
 23230  0E8D  0856               	movf	(??_main+1)^(0+1792),w
 23231  0E8E  002D               	movlb	13	; select bank13
 23232  0E8F  00A3               	movwf	(___awdiv@dividend+1)^(0+1664)
 23233  0E90  300A               	movlw	10
 23234  0E91  00A0               	movwf	___awdiv@divisor^(0+1664)
 23235  0E92  3000               	movlw	0
 23236  0E93  00A1               	movwf	(___awdiv@divisor^(0+1664)+1)
 23237  0E94  31AF  27A0  318D   	fcall	___awdiv
 23238  0E97  002D               	movlb	13	; select bank13
 23239  0E98  0820               	movf	?___awdiv^(0+1664),w
 23240  0E99  00A9               	movwf	___xxtofl@val^(0+1664)
 23241  0E9A  0821               	movf	(?___awdiv+1)^(0+1664),w
 23242  0E9B  00AA               	movwf	(___xxtofl@val+1)^(0+1664)
 23243  0E9C  0D89               	rlf	9,f
 23244  0E9D  3B89               	subwfb	9,f
 23245  0E9E  0989               	comf	9,f
 23246  0E9F  00AB               	movwf	(___xxtofl@val+2)^(0+1664)
 23247  0EA0  00AC               	movwf	(___xxtofl@val+3)^(0+1664)
 23248  0EA1  3001               	movlw	1
 23249  0EA2  31A2  222B  318D   	fcall	___xxtofl
 23250  0EA5  002D               	movlb	13	; select bank13
 23251  0EA6  082C               	movf	(?___xxtofl+3)^(0+1664),w
 23252  0EA7  00D4               	movwf	(___flge@ff1+3)^(0+1664)
 23253  0EA8  082B               	movf	(?___xxtofl+2)^(0+1664),w
 23254  0EA9  00D3               	movwf	(___flge@ff1+2)^(0+1664)
 23255  0EAA  082A               	movf	(?___xxtofl+1)^(0+1664),w
 23256  0EAB  00D2               	movwf	(___flge@ff1+1)^(0+1664)
 23257  0EAC  0829               	movf	?___xxtofl^(0+1664),w
 23258  0EAD  00D1               	movwf	___flge@ff1^(0+1664)
 23259  0EAE  3040               	movlw	64
 23260  0EAF  00D8               	movwf	(___flge@ff2+3)^(0+1664)
 23261  0EB0  3000               	movlw	0
 23262  0EB1  00D7               	movwf	(___flge@ff2+2)^(0+1664)
 23263  0EB2  3000               	movlw	0
 23264  0EB3  00D6               	movwf	(___flge@ff2+1)^(0+1664)
 23265  0EB4  3000               	movlw	0
 23266  0EB5  00D5               	movwf	___flge@ff2^(0+1664)
 23267  0EB6  31A1  21A0  318D   	fcall	___flge
 23268  0EB9  1C03               	btfss	3,0
 23269  0EBA  2EBC               	goto	u10311
 23270  0EBB  2EBD               	goto	u10310
 23271  0EBC                     u10311:	
 23272  0EBC  2D9E               	goto	l8958
 23273  0EBD                     u10310:	
 23274  0EBD                     l8974:	
 23275                           
 23276                           ;main.c: 299:                 {;main.c: 301:                     RA1 = 1;
 23277  0EBD  0020               	movlb	0	; select bank0
 23278  0EBE  148C               	bsf	12,1	;volatile
 23279                           
 23280                           ;main.c: 302:                 }
 23281  0EBF  2DA0               	goto	L1
 23282  0EC0                     l8976:	
 23283                           
 23284                           ;main.c: 313:                 HEFLASH_readBlock(&speed, 3, sizeof(speed));
 23285  0EC0  3003               	movlw	3
 23286  0EC1  00D5               	movwf	??_main^(0+1792)
 23287  0EC2  0855               	movf	??_main^(0+1792),w
 23288  0EC3  002D               	movlb	13	; select bank13
 23289  0EC4  00A2               	movwf	HEFLASH_readBlock@radd^(0+1664)
 23290  0EC5  01A3               	clrf	HEFLASH_readBlock@count^(0+1664)
 23291  0EC6  0AA3               	incf	HEFLASH_readBlock@count^(0+1664),f
 23292  0EC7  3068               	movlw	(low (_speed| (0+1792)))& (0+255)
 23293  0EC8  31AC  24CF  318D   	fcall	_HEFLASH_readBlock
 23294  0ECB                     l8978:	
 23295                           
 23296                           ;main.c: 315:                 sprintf(newTextLine1,"AUTO LOCAL");
 23297  0ECB  30D3               	movlw	low _newTextLine1
 23298  0ECC  002E               	movlb	14	; select bank14
 23299  0ECD  00C4               	movwf	sprintf@s^(0+1792)
 23300  0ECE  3007               	movlw	high _newTextLine1
 23301  0ECF  00C5               	movwf	(sprintf@s+1)^(0+1792)
 23302  0ED0  3038               	movlw	low (STR_6| (0+32768))
 23303  0ED1  00C6               	movwf	sprintf@fmt^(0+1792)
 23304  0ED2  30B0               	movlw	high (STR_6| (0+32768))
 23305  0ED3  00C7               	movwf	(sprintf@fmt^(0+1792)+1)
 23306  0ED4  318D  250E  318D   	fcall	_sprintf
 23307  0ED7                     l8980:	
 23308                           
 23309                           ;main.c: 318:                 sprintf(newTextLine4,"SET:%d.%dV", speed/10, (speed%10));
 23310  0ED7  30C3               	movlw	low _newTextLine4
 23311  0ED8  002E               	movlb	14	; select bank14
 23312  0ED9  00C4               	movwf	sprintf@s^(0+1792)
 23313  0EDA  3007               	movlw	high _newTextLine4
 23314  0EDB  00C5               	movwf	(sprintf@s+1)^(0+1792)
 23315  0EDC  304E               	movlw	low (STR_2| (0+32768))
 23316  0EDD  00C6               	movwf	sprintf@fmt^(0+1792)
 23317  0EDE  30B0               	movlw	high (STR_2| (0+32768))
 23318  0EDF  00C7               	movwf	(sprintf@fmt^(0+1792)+1)
 23319  0EE0  300A               	movlw	10
 23320  0EE1  002D               	movlb	13	; select bank13
 23321  0EE2  00A0               	movwf	___awdiv@divisor^(0+1664)
 23322  0EE3  3000               	movlw	0
 23323  0EE4  00A1               	movwf	(___awdiv@divisor^(0+1664)+1)
 23324  0EE5  002E               	movlb	14	; select bank14
 23325  0EE6  0868               	movf	_speed^(0+1792),w
 23326  0EE7  00D5               	movwf	??_main^(0+1792)
 23327  0EE8  01D6               	clrf	(??_main^(0+1792)+1)
 23328  0EE9  0855               	movf	??_main^(0+1792),w
 23329  0EEA  002D               	movlb	13	; select bank13
 23330  0EEB  00A2               	movwf	___awdiv@dividend^(0+1664)
 23331  0EEC  002E               	movlb	14	; select bank14
 23332  0EED  0856               	movf	(??_main+1)^(0+1792),w
 23333  0EEE  002D               	movlb	13	; select bank13
 23334  0EEF  00A3               	movwf	(___awdiv@dividend+1)^(0+1664)
 23335  0EF0  31AF  27A0  318D   	fcall	___awdiv
 23336  0EF3  002D               	movlb	13	; select bank13
 23337  0EF4  0821               	movf	(?___awdiv+1)^(0+1664),w
 23338  0EF5  002E               	movlb	14	; select bank14
 23339  0EF6  00C9               	movwf	((?_sprintf+1)^(0+1792)+4)
 23340  0EF7  002D               	movlb	13	; select bank13
 23341  0EF8  0820               	movf	?___awdiv^(0+1664),w
 23342  0EF9  002E               	movlb	14	; select bank14
 23343  0EFA  00C8               	movwf	(?_sprintf^(0+1792)+4)
 23344  0EFB  300A               	movlw	10
 23345  0EFC  002D               	movlb	13	; select bank13
 23346  0EFD  00A0               	movwf	___awmod@divisor^(0+1664)
 23347  0EFE  3000               	movlw	0
 23348  0EFF  00A1               	movwf	(___awmod@divisor^(0+1664)+1)
 23349  0F00  002E               	movlb	14	; select bank14
 23350  0F01  0868               	movf	_speed^(0+1792),w
 23351  0F02  00D7               	movwf	(??_main+2)^(0+1792)
 23352  0F03  01D8               	clrf	((??_main+2)^(0+1792)+1)
 23353  0F04  0857               	movf	(??_main+2)^(0+1792),w
 23354  0F05  002D               	movlb	13	; select bank13
 23355  0F06  00A2               	movwf	___awmod@dividend^(0+1664)
 23356  0F07  002E               	movlb	14	; select bank14
 23357  0F08  0858               	movf	(??_main+3)^(0+1792),w
 23358  0F09  002D               	movlb	13	; select bank13
 23359  0F0A  00A3               	movwf	(___awmod@dividend+1)^(0+1664)
 23360  0F0B  31AD  25DB  318D   	fcall	___awmod
 23361  0F0E  002D               	movlb	13	; select bank13
 23362  0F0F  0821               	movf	(?___awmod+1)^(0+1664),w
 23363  0F10  002E               	movlb	14	; select bank14
 23364  0F11  00CB               	movwf	((?_sprintf+1)^(0+1792)+6)
 23365  0F12  002D               	movlb	13	; select bank13
 23366  0F13  0820               	movf	?___awmod^(0+1664),w
 23367  0F14  002E               	movlb	14	; select bank14
 23368  0F15  00CA               	movwf	(?_sprintf^(0+1792)+6)
 23369  0F16  318D  250E  318D   	fcall	_sprintf
 23370  0F19                     l8982:	
 23371                           
 23372                           ;main.c: 320:                 if( (RB4 == 0) || (RA3 == 1) )
 23373  0F19  0020               	movlb	0	; select bank0
 23374  0F1A  1E0D               	btfss	13,4	;volatile
 23375  0F1B  2F1D               	goto	u10321
 23376  0F1C  2F1E               	goto	u10320
 23377  0F1D                     u10321:	
 23378  0F1D  2F22               	goto	l8986
 23379  0F1E                     u10320:	
 23380  0F1E                     l8984:	
 23381  0F1E  1D8C               	btfss	12,3	;volatile
 23382  0F1F  2F21               	goto	u10331
 23383  0F20  2F22               	goto	u10330
 23384  0F21                     u10331:	
 23385  0F21  2FF3               	goto	l8998
 23386  0F22                     u10330:	
 23387  0F22                     l8986:	
 23388                           
 23389                           ;main.c: 321:                 {;main.c: 324:                     sprintf(newTextLine2,"E
      +                          nabled");
 23390  0F22  3060               	movlw	low _newTextLine2
 23391  0F23  002E               	movlb	14	; select bank14
 23392  0F24  00C4               	movwf	sprintf@s^(0+1792)
 23393  0F25  3008               	movlw	high _newTextLine2
 23394  0F26  00C5               	movwf	(sprintf@s+1)^(0+1792)
 23395  0F27  3075               	movlw	low (STR_8| (0+32768))
 23396  0F28  00C6               	movwf	sprintf@fmt^(0+1792)
 23397  0F29  30B0               	movlw	high (STR_8| (0+32768))
 23398  0F2A  00C7               	movwf	(sprintf@fmt^(0+1792)+1)
 23399  0F2B  318D  250E  318D   	fcall	_sprintf
 23400  0F2E                     l8988:	
 23401                           
 23402                           ;main.c: 327:                     DAC1_Load10bitInputData((float)speed *((float)1000/104
      +                          ));
 23403  0F2E  002E               	movlb	14	; select bank14
 23404  0F2F  0868               	movf	_speed^(0+1792),w
 23405  0F30  00D5               	movwf	??_main^(0+1792)
 23406  0F31  01D6               	clrf	(??_main^(0+1792)+1)
 23407  0F32  01D7               	clrf	(??_main^(0+1792)+2)
 23408  0F33  01D8               	clrf	(??_main^(0+1792)+3)
 23409  0F34  0858               	movf	(??_main+3)^(0+1792),w
 23410  0F35  002D               	movlb	13	; select bank13
 23411  0F36  00AC               	movwf	(___xxtofl@val+3)^(0+1664)
 23412  0F37  002E               	movlb	14	; select bank14
 23413  0F38  0857               	movf	(??_main+2)^(0+1792),w
 23414  0F39  002D               	movlb	13	; select bank13
 23415  0F3A  00AB               	movwf	(___xxtofl@val+2)^(0+1664)
 23416  0F3B  002E               	movlb	14	; select bank14
 23417  0F3C  0856               	movf	(??_main+1)^(0+1792),w
 23418  0F3D  002D               	movlb	13	; select bank13
 23419  0F3E  00AA               	movwf	(___xxtofl@val+1)^(0+1664)
 23420  0F3F  002E               	movlb	14	; select bank14
 23421  0F40  0855               	movf	??_main^(0+1792),w
 23422  0F41  002D               	movlb	13	; select bank13
 23423  0F42  00A9               	movwf	___xxtofl@val^(0+1664)
 23424  0F43  3000               	movlw	0
 23425  0F44  31A2  222B  318D   	fcall	___xxtofl
 23426  0F47  002D               	movlb	13	; select bank13
 23427  0F48  082C               	movf	(?___xxtofl+3)^(0+1664),w
 23428  0F49  00BE               	movwf	(___flmul@a+3)^(0+1664)
 23429  0F4A  082B               	movf	(?___xxtofl+2)^(0+1664),w
 23430  0F4B  00BD               	movwf	(___flmul@a+2)^(0+1664)
 23431  0F4C  082A               	movf	(?___xxtofl+1)^(0+1664),w
 23432  0F4D  00BC               	movwf	(___flmul@a+1)^(0+1664)
 23433  0F4E  0829               	movf	?___xxtofl^(0+1664),w
 23434  0F4F  00BB               	movwf	___flmul@a^(0+1664)
 23435  0F50  3041               	movlw	65
 23436  0F51  00BA               	movwf	(___flmul@b+3)^(0+1664)
 23437  0F52  3019               	movlw	25
 23438  0F53  00B9               	movwf	(___flmul@b+2)^(0+1664)
 23439  0F54  30D8               	movlw	216
 23440  0F55  00B8               	movwf	(___flmul@b+1)^(0+1664)
 23441  0F56  309E               	movlw	158
 23442  0F57  00B7               	movwf	___flmul@b^(0+1664)
 23443  0F58  3190  200A  318D   	fcall	___flmul
 23444  0F5B  002D               	movlb	13	; select bank13
 23445  0F5C  083A               	movf	(?___flmul+3)^(0+1664),w
 23446  0F5D  00D4               	movwf	(___fltol@f1+3)^(0+1664)
 23447  0F5E  0839               	movf	(?___flmul+2)^(0+1664),w
 23448  0F5F  00D3               	movwf	(___fltol@f1+2)^(0+1664)
 23449  0F60  0838               	movf	(?___flmul+1)^(0+1664),w
 23450  0F61  00D2               	movwf	(___fltol@f1+1)^(0+1664)
 23451  0F62  0837               	movf	?___flmul^(0+1664),w
 23452  0F63  00D1               	movwf	___fltol@f1^(0+1664)
 23453  0F64  31A1  212B  318D   	fcall	___fltol
 23454  0F67  002D               	movlb	13	; select bank13
 23455  0F68  0852               	movf	(?___fltol+1)^(0+1664),w
 23456  0F69  00DD               	movwf	(DAC1_Load10bitInputData@input10BitData+1)^(0+1664)
 23457  0F6A  0851               	movf	?___fltol^(0+1664),w
 23458  0F6B  00DC               	movwf	DAC1_Load10bitInputData@input10BitData^(0+1664)
 23459  0F6C  31A9  21E7  318D   	fcall	_DAC1_Load10bitInputData
 23460  0F6F                     l8990:	
 23461                           
 23462                           ;main.c: 329:                     if((float)speed/10 > 1.85)
 23463  0F6F  303F               	movlw	63
 23464  0F70  002D               	movlb	13	; select bank13
 23465  0F71  00D4               	movwf	(___flge@ff1+3)^(0+1664)
 23466  0F72  30EC               	movlw	236
 23467  0F73  00D3               	movwf	(___flge@ff1+2)^(0+1664)
 23468  0F74  30CC               	movlw	204
 23469  0F75  00D2               	movwf	(___flge@ff1+1)^(0+1664)
 23470  0F76  30CD               	movlw	205
 23471  0F77  00D1               	movwf	___flge@ff1^(0+1664)
 23472  0F78  3041               	movlw	65
 23473  0F79  00BA               	movwf	(___fldiv@a+3)^(0+1664)
 23474  0F7A  3020               	movlw	32
 23475  0F7B  00B9               	movwf	(___fldiv@a+2)^(0+1664)
 23476  0F7C  3000               	movlw	0
 23477  0F7D  00B8               	movwf	(___fldiv@a+1)^(0+1664)
 23478  0F7E  3000               	movlw	0
 23479  0F7F  00B7               	movwf	___fldiv@a^(0+1664)
 23480  0F80  002E               	movlb	14	; select bank14
 23481  0F81  0868               	movf	_speed^(0+1792),w
 23482  0F82  00D5               	movwf	??_main^(0+1792)
 23483  0F83  01D6               	clrf	(??_main^(0+1792)+1)
 23484  0F84  01D7               	clrf	(??_main^(0+1792)+2)
 23485  0F85  01D8               	clrf	(??_main^(0+1792)+3)
 23486  0F86  0858               	movf	(??_main+3)^(0+1792),w
 23487  0F87  002D               	movlb	13	; select bank13
 23488  0F88  00AC               	movwf	(___xxtofl@val+3)^(0+1664)
 23489  0F89  002E               	movlb	14	; select bank14
 23490  0F8A  0857               	movf	(??_main+2)^(0+1792),w
 23491  0F8B  002D               	movlb	13	; select bank13
 23492  0F8C  00AB               	movwf	(___xxtofl@val+2)^(0+1664)
 23493  0F8D  002E               	movlb	14	; select bank14
 23494  0F8E  0856               	movf	(??_main+1)^(0+1792),w
 23495  0F8F  002D               	movlb	13	; select bank13
 23496  0F90  00AA               	movwf	(___xxtofl@val+1)^(0+1664)
 23497  0F91  002E               	movlb	14	; select bank14
 23498  0F92  0855               	movf	??_main^(0+1792),w
 23499  0F93  002D               	movlb	13	; select bank13
 23500  0F94  00A9               	movwf	___xxtofl@val^(0+1664)
 23501  0F95  3000               	movlw	0
 23502  0F96  31A2  222B  318D   	fcall	___xxtofl
 23503  0F99  002D               	movlb	13	; select bank13
 23504  0F9A  082C               	movf	(?___xxtofl+3)^(0+1664),w
 23505  0F9B  00BE               	movwf	(___fldiv@b+3)^(0+1664)
 23506  0F9C  082B               	movf	(?___xxtofl+2)^(0+1664),w
 23507  0F9D  00BD               	movwf	(___fldiv@b+2)^(0+1664)
 23508  0F9E  082A               	movf	(?___xxtofl+1)^(0+1664),w
 23509  0F9F  00BC               	movwf	(___fldiv@b+1)^(0+1664)
 23510  0FA0  0829               	movf	?___xxtofl^(0+1664),w
 23511  0FA1  00BB               	movwf	___fldiv@b^(0+1664)
 23512  0FA2  319A  225C  318D   	fcall	___fldiv
 23513  0FA5  002D               	movlb	13	; select bank13
 23514  0FA6  083A               	movf	(?___fldiv+3)^(0+1664),w
 23515  0FA7  00D8               	movwf	(___flge@ff2+3)^(0+1664)
 23516  0FA8  0839               	movf	(?___fldiv+2)^(0+1664),w
 23517  0FA9  00D7               	movwf	(___flge@ff2+2)^(0+1664)
 23518  0FAA  0838               	movf	(?___fldiv+1)^(0+1664),w
 23519  0FAB  00D6               	movwf	(___flge@ff2+1)^(0+1664)
 23520  0FAC  0837               	movf	?___fldiv^(0+1664),w
 23521  0FAD  00D5               	movwf	___flge@ff2^(0+1664)
 23522  0FAE  31A1  21A0  318D   	fcall	___flge
 23523  0FB1  1803               	btfsc	3,0
 23524  0FB2  2FB4               	goto	u10341
 23525  0FB3  2FB5               	goto	u10340
 23526  0FB4                     u10341:	
 23527  0FB4  2FB8               	goto	l935
 23528  0FB5                     u10340:	
 23529  0FB5                     l8992:	
 23530                           
 23531                           ;main.c: 330:                     {;main.c: 332:                         RA0 = 1;
 23532  0FB5  0020               	movlb	0	; select bank0
 23533  0FB6  140C               	bsf	12,0	;volatile
 23534                           
 23535                           ;main.c: 333:                     }
 23536  0FB7  2FBA               	goto	l8994
 23537  0FB8                     l935:	
 23538                           ;main.c: 334:                     else
 23539                           
 23540                           
 23541                           ;main.c: 335:                     {;main.c: 337:                         RA0 = 0;
 23542  0FB8  0020               	movlb	0	; select bank0
 23543  0FB9  100C               	bcf	12,0	;volatile
 23544  0FBA                     l8994:	
 23545                           
 23546                           ;main.c: 340:                     if(speed/10 >= 2.0)
 23547  0FBA  002E               	movlb	14	; select bank14
 23548  0FBB  0868               	movf	_speed^(0+1792),w
 23549  0FBC  00D5               	movwf	??_main^(0+1792)
 23550  0FBD  01D6               	clrf	(??_main^(0+1792)+1)
 23551  0FBE  0855               	movf	??_main^(0+1792),w
 23552  0FBF  002D               	movlb	13	; select bank13
 23553  0FC0  00A2               	movwf	___awdiv@dividend^(0+1664)
 23554  0FC1  002E               	movlb	14	; select bank14
 23555  0FC2  0856               	movf	(??_main+1)^(0+1792),w
 23556  0FC3  002D               	movlb	13	; select bank13
 23557  0FC4  00A3               	movwf	(___awdiv@dividend+1)^(0+1664)
 23558  0FC5  300A               	movlw	10
 23559  0FC6  00A0               	movwf	___awdiv@divisor^(0+1664)
 23560  0FC7  3000               	movlw	0
 23561  0FC8  00A1               	movwf	(___awdiv@divisor^(0+1664)+1)
 23562  0FC9  31AF  27A0  318D   	fcall	___awdiv
 23563  0FCC  002D               	movlb	13	; select bank13
 23564  0FCD  0820               	movf	?___awdiv^(0+1664),w
 23565  0FCE  00A9               	movwf	___xxtofl@val^(0+1664)
 23566  0FCF  0821               	movf	(?___awdiv+1)^(0+1664),w
 23567  0FD0  00AA               	movwf	(___xxtofl@val+1)^(0+1664)
 23568  0FD1  0D89               	rlf	9,f
 23569  0FD2  3B89               	subwfb	9,f
 23570  0FD3  0989               	comf	9,f
 23571  0FD4  00AB               	movwf	(___xxtofl@val+2)^(0+1664)
 23572  0FD5  00AC               	movwf	(___xxtofl@val+3)^(0+1664)
 23573  0FD6  3001               	movlw	1
 23574  0FD7  31A2  222B  318D   	fcall	___xxtofl
 23575  0FDA  002D               	movlb	13	; select bank13
 23576  0FDB  082C               	movf	(?___xxtofl+3)^(0+1664),w
 23577  0FDC  00D4               	movwf	(___flge@ff1+3)^(0+1664)
 23578  0FDD  082B               	movf	(?___xxtofl+2)^(0+1664),w
 23579  0FDE  00D3               	movwf	(___flge@ff1+2)^(0+1664)
 23580  0FDF  082A               	movf	(?___xxtofl+1)^(0+1664),w
 23581  0FE0  00D2               	movwf	(___flge@ff1+1)^(0+1664)
 23582  0FE1  0829               	movf	?___xxtofl^(0+1664),w
 23583  0FE2  00D1               	movwf	___flge@ff1^(0+1664)
 23584  0FE3  3040               	movlw	64
 23585  0FE4  00D8               	movwf	(___flge@ff2+3)^(0+1664)
 23586  0FE5  3000               	movlw	0
 23587  0FE6  00D7               	movwf	(___flge@ff2+2)^(0+1664)
 23588  0FE7  3000               	movlw	0
 23589  0FE8  00D6               	movwf	(___flge@ff2+1)^(0+1664)
 23590  0FE9  3000               	movlw	0
 23591  0FEA  00D5               	movwf	___flge@ff2^(0+1664)
 23592  0FEB  31A1  21A0  318D   	fcall	___flge
 23593  0FEE  1C03               	btfss	3,0
 23594  0FEF  2FF1               	goto	u10351
 23595  0FF0  2FF2               	goto	u10350
 23596  0FF1                     u10351:	
 23597  0FF1  2D9E               	goto	l8958
 23598  0FF2                     u10350:	
 23599  0FF2  2EBD               	goto	l8974
 23600  0FF3                     l8998:	
 23601                           
 23602                           ;main.c: 352:                 {;main.c: 354:                     sprintf(newTextLine2,"D
      +                          isabled");
 23603  0FF3  3060               	movlw	low _newTextLine2
 23604  0FF4  002E               	movlb	14	; select bank14
 23605  0FF5  00C4               	movwf	sprintf@s^(0+1792)
 23606  0FF6  3008               	movlw	high _newTextLine2
 23607  0FF7  00C5               	movwf	(sprintf@s+1)^(0+1792)
 23608  0FF8  3064               	movlw	low (STR_9| (0+32768))
 23609  0FF9  00C6               	movwf	sprintf@fmt^(0+1792)
 23610  0FFA  30B0               	movlw	high (STR_9| (0+32768))
 23611  0FFB  00C7               	movwf	(sprintf@fmt^(0+1792)+1)
 23612  0FFC  318D  250E  318D   	fcall	_sprintf
 23613  0FFF  2D95               	goto	l8954
 23614                           
 23615                           	psect	maintext_split_2
 23616  1261                     l9006:	
 23617                           
 23618                           ;main.c: 369:                 ext_speed = (((unsigned int)ADRESH<<8) + (unsigned int)ADR
      +                          ESL);
 23619  1261  0029               	movlb	9	; select bank9
 23620  1262  080F               	movf	15,w	;volatile
 23621  1263  002E               	movlb	14	; select bank14
 23622  1264  00AE               	movwf	(_ext_speed+1)^(0+1792)
 23623  1265  0029               	movlb	9	; select bank9
 23624  1266  080E               	movf	14,w	;volatile
 23625  1267  002E               	movlb	14	; select bank14
 23626  1268  00AD               	movwf	_ext_speed^(0+1792)
 23627  1269                     l9008:	
 23628                           
 23629                           ;main.c: 370:                 ext_speed = (float)ext_speed*1.05;
 23630  1269  082D               	movf	_ext_speed^(0+1792),w
 23631  126A  002D               	movlb	13	; select bank13
 23632  126B  00A9               	movwf	___xxtofl@val^(0+1664)
 23633  126C  002E               	movlb	14	; select bank14
 23634  126D  082E               	movf	(_ext_speed+1)^(0+1792),w
 23635  126E  002D               	movlb	13	; select bank13
 23636  126F  00AA               	movwf	(___xxtofl@val^(0+1664)+1)
 23637  1270  01AB               	clrf	(___xxtofl@val^(0+1664)+2)
 23638  1271  01AC               	clrf	(___xxtofl@val^(0+1664)+3)
 23639  1272  3000               	movlw	0
 23640  1273  31A2  222B  3192   	fcall	___xxtofl
 23641  1276  002D               	movlb	13	; select bank13
 23642  1277  082C               	movf	(?___xxtofl+3)^(0+1664),w
 23643  1278  00BE               	movwf	(___flmul@a+3)^(0+1664)
 23644  1279  082B               	movf	(?___xxtofl+2)^(0+1664),w
 23645  127A  00BD               	movwf	(___flmul@a+2)^(0+1664)
 23646  127B  082A               	movf	(?___xxtofl+1)^(0+1664),w
 23647  127C  00BC               	movwf	(___flmul@a+1)^(0+1664)
 23648  127D  0829               	movf	?___xxtofl^(0+1664),w
 23649  127E  00BB               	movwf	___flmul@a^(0+1664)
 23650  127F  303F               	movlw	63
 23651  1280  00BA               	movwf	(___flmul@b+3)^(0+1664)
 23652  1281  3086               	movlw	134
 23653  1282  00B9               	movwf	(___flmul@b+2)^(0+1664)
 23654  1283  3066               	movlw	102
 23655  1284  00B8               	movwf	(___flmul@b+1)^(0+1664)
 23656  1285  3066               	movlw	102
 23657  1286  00B7               	movwf	___flmul@b^(0+1664)
 23658  1287  3190  200A  3192   	fcall	___flmul
 23659  128A  002D               	movlb	13	; select bank13
 23660  128B  083A               	movf	(?___flmul+3)^(0+1664),w
 23661  128C  00D4               	movwf	(___fltol@f1+3)^(0+1664)
 23662  128D  0839               	movf	(?___flmul+2)^(0+1664),w
 23663  128E  00D3               	movwf	(___fltol@f1+2)^(0+1664)
 23664  128F  0838               	movf	(?___flmul+1)^(0+1664),w
 23665  1290  00D2               	movwf	(___fltol@f1+1)^(0+1664)
 23666  1291  0837               	movf	?___flmul^(0+1664),w
 23667  1292  00D1               	movwf	___fltol@f1^(0+1664)
 23668  1293  31A1  212B  3192   	fcall	___fltol
 23669  1296  002D               	movlb	13	; select bank13
 23670  1297  0852               	movf	(?___fltol+1)^(0+1664),w
 23671  1298  002E               	movlb	14	; select bank14
 23672  1299  00AE               	movwf	(_ext_speed+1)^(0+1792)
 23673  129A  002D               	movlb	13	; select bank13
 23674  129B  0851               	movf	?___fltol^(0+1664),w
 23675  129C  002E               	movlb	14	; select bank14
 23676  129D  00AD               	movwf	_ext_speed^(0+1792)
 23677  129E                     l9010:	
 23678                           
 23679                           ;main.c: 371:                 unsigned int integer = ext_speed*10/1000;
 23680  129E  30E8               	movlw	232
 23681  129F  002D               	movlb	13	; select bank13
 23682  12A0  00AF               	movwf	___lwdiv@divisor^(0+1664)
 23683  12A1  3003               	movlw	3
 23684  12A2  00B0               	movwf	(___lwdiv@divisor^(0+1664)+1)
 23685  12A3  002E               	movlb	14	; select bank14
 23686  12A4  082E               	movf	(_ext_speed+1)^(0+1792),w
 23687  12A5  002D               	movlb	13	; select bank13
 23688  12A6  00AA               	movwf	(___wmul@multiplier+1)^(0+1664)
 23689  12A7  002E               	movlb	14	; select bank14
 23690  12A8  082D               	movf	_ext_speed^(0+1792),w
 23691  12A9  002D               	movlb	13	; select bank13
 23692  12AA  00A9               	movwf	___wmul@multiplier^(0+1664)
 23693  12AB  300A               	movlw	10
 23694  12AC  00AB               	movwf	___wmul@multiplicand^(0+1664)
 23695  12AD  3000               	movlw	0
 23696  12AE  00AC               	movwf	(___wmul@multiplicand^(0+1664)+1)
 23697  12AF  31AB  2333  3192   	fcall	___wmul
 23698  12B2  002D               	movlb	13	; select bank13
 23699  12B3  082A               	movf	(?___wmul+1)^(0+1664),w
 23700  12B4  00B2               	movwf	(___lwdiv@dividend+1)^(0+1664)
 23701  12B5  0829               	movf	?___wmul^(0+1664),w
 23702  12B6  00B1               	movwf	___lwdiv@dividend^(0+1664)
 23703  12B7  31AD  250C  3192   	fcall	___lwdiv
 23704  12BA  002D               	movlb	13	; select bank13
 23705  12BB  0830               	movf	(?___lwdiv+1)^(0+1664),w
 23706  12BC  002F               	movlb	15	; select bank15
 23707  12BD  00E4               	movwf	(main@integer+1)^(0+1920)
 23708  12BE  002D               	movlb	13	; select bank13
 23709  12BF  082F               	movf	?___lwdiv^(0+1664),w
 23710  12C0  002F               	movlb	15	; select bank15
 23711  12C1  00E3               	movwf	main@integer^(0+1920)
 23712  12C2                     l9012:	
 23713                           
 23714                           ;main.c: 372:                 unsigned int decimal = ((unsigned long)ext_speed*100/1000)
      +                           % 10;
 23715  12C2  3000               	movlw	0
 23716  12C3  002D               	movlb	13	; select bank13
 23717  12C4  00BD               	movwf	(___llmod@divisor+3)^(0+1664)
 23718  12C5  3000               	movlw	0
 23719  12C6  00BC               	movwf	(___llmod@divisor+2)^(0+1664)
 23720  12C7  3000               	movlw	0
 23721  12C8  00BB               	movwf	(___llmod@divisor+1)^(0+1664)
 23722  12C9  300A               	movlw	10
 23723  12CA  00BA               	movwf	___llmod@divisor^(0+1664)
 23724  12CB  3000               	movlw	0
 23725  12CC  00AF               	movwf	(___lldiv@divisor+3)^(0+1664)
 23726  12CD  3000               	movlw	0
 23727  12CE  00AE               	movwf	(___lldiv@divisor+2)^(0+1664)
 23728  12CF  3003               	movlw	3
 23729  12D0  00AD               	movwf	(___lldiv@divisor+1)^(0+1664)
 23730  12D1  30E8               	movlw	232
 23731  12D2  00AC               	movwf	___lldiv@divisor^(0+1664)
 23732  12D3  002E               	movlb	14	; select bank14
 23733  12D4  082D               	movf	_ext_speed^(0+1792),w
 23734  12D5  002D               	movlb	13	; select bank13
 23735  12D6  00A0               	movwf	___lmul@multiplier^(0+1664)
 23736  12D7  002E               	movlb	14	; select bank14
 23737  12D8  082E               	movf	(_ext_speed+1)^(0+1792),w
 23738  12D9  002D               	movlb	13	; select bank13
 23739  12DA  00A1               	movwf	(___lmul@multiplier^(0+1664)+1)
 23740  12DB  01A2               	clrf	(___lmul@multiplier^(0+1664)+2)
 23741  12DC  01A3               	clrf	(___lmul@multiplier^(0+1664)+3)
 23742  12DD  3000               	movlw	0
 23743  12DE  00A7               	movwf	(___lmul@multiplicand+3)^(0+1664)
 23744  12DF  3000               	movlw	0
 23745  12E0  00A6               	movwf	(___lmul@multiplicand+2)^(0+1664)
 23746  12E1  3000               	movlw	0
 23747  12E2  00A5               	movwf	(___lmul@multiplicand+1)^(0+1664)
 23748  12E3  3064               	movlw	100
 23749  12E4  00A4               	movwf	___lmul@multiplicand^(0+1664)
 23750  12E5  31AC  242C  3192   	fcall	___lmul
 23751  12E8  002D               	movlb	13	; select bank13
 23752  12E9  0823               	movf	(?___lmul+3)^(0+1664),w
 23753  12EA  00B3               	movwf	(___lldiv@dividend+3)^(0+1664)
 23754  12EB  0822               	movf	(?___lmul+2)^(0+1664),w
 23755  12EC  00B2               	movwf	(___lldiv@dividend+2)^(0+1664)
 23756  12ED  0821               	movf	(?___lmul+1)^(0+1664),w
 23757  12EE  00B1               	movwf	(___lldiv@dividend+1)^(0+1664)
 23758  12EF  0820               	movf	?___lmul^(0+1664),w
 23759  12F0  00B0               	movwf	___lldiv@dividend^(0+1664)
 23760  12F1  31AE  268A  3192   	fcall	___lldiv
 23761  12F4  002D               	movlb	13	; select bank13
 23762  12F5  082F               	movf	(?___lldiv+3)^(0+1664),w
 23763  12F6  00C1               	movwf	(___llmod@dividend+3)^(0+1664)
 23764  12F7  082E               	movf	(?___lldiv+2)^(0+1664),w
 23765  12F8  00C0               	movwf	(___llmod@dividend+2)^(0+1664)
 23766  12F9  082D               	movf	(?___lldiv+1)^(0+1664),w
 23767  12FA  00BF               	movwf	(___llmod@dividend+1)^(0+1664)
 23768  12FB  082C               	movf	?___lldiv^(0+1664),w
 23769  12FC  00BE               	movwf	___llmod@dividend^(0+1664)
 23770  12FD  31AD  2590  3192   	fcall	___llmod
 23771  1300  002D               	movlb	13	; select bank13
 23772  1301  083B               	movf	(?___llmod+1)^(0+1664),w
 23773  1302  002F               	movlb	15	; select bank15
 23774  1303  00E6               	movwf	(main@decimal+1)^(0+1920)
 23775  1304  002D               	movlb	13	; select bank13
 23776  1305  083A               	movf	?___llmod^(0+1664),w
 23777  1306  002F               	movlb	15	; select bank15
 23778  1307  00E5               	movwf	main@decimal^(0+1920)
 23779  1308                     l9014:	
 23780                           
 23781                           ;main.c: 375:                 sprintf(newTextLine1,"AUTO REMOTE");
 23782  1308  30D3               	movlw	low _newTextLine1
 23783  1309  002E               	movlb	14	; select bank14
 23784  130A  00C4               	movwf	sprintf@s^(0+1792)
 23785  130B  3007               	movlw	high _newTextLine1
 23786  130C  00C5               	movwf	(sprintf@s+1)^(0+1792)
 23787  130D  3020               	movlw	low (STR_10| (0+32768))
 23788  130E  00C6               	movwf	sprintf@fmt^(0+1792)
 23789  130F  30B0               	movlw	high (STR_10| (0+32768))
 23790  1310  00C7               	movwf	(sprintf@fmt^(0+1792)+1)
 23791  1311  318D  250E  3192   	fcall	_sprintf
 23792  1314                     l9016:	
 23793                           
 23794                           ;main.c: 378:                 sprintf(newTextLine3," ");
 23795  1314  3050               	movlw	low _newTextLine3
 23796  1315  002E               	movlb	14	; select bank14
 23797  1316  00C4               	movwf	sprintf@s^(0+1792)
 23798  1317  3008               	movlw	high _newTextLine3
 23799  1318  00C5               	movwf	(sprintf@s+1)^(0+1792)
 23800  1319  3086               	movlw	low (STR_11| (0+32768))
 23801  131A  00C6               	movwf	sprintf@fmt^(0+1792)
 23802  131B  30B0               	movlw	high (STR_11| (0+32768))
 23803  131C  00C7               	movwf	(sprintf@fmt^(0+1792)+1)
 23804  131D  318D  250E  3192   	fcall	_sprintf
 23805  1320                     l9018:	
 23806                           
 23807                           ;main.c: 382:                 if(!updateAutoRemoteDelay){
 23808  1320  002E               	movlb	14	; select bank14
 23809  1321  0830               	movf	_updateAutoRemoteDelay^(0+1792),w
 23810  1322  1D03               	btfss	3,2
 23811  1323  2B25               	goto	u10361
 23812  1324  2B26               	goto	u10360
 23813  1325                     u10361:	
 23814  1325  2B46               	goto	l9024
 23815  1326                     u10360:	
 23816  1326                     l9020:	
 23817                           
 23818                           ;main.c: 383:                     updateAutoRemoteDelay = 20;
 23819  1326  3014               	movlw	20
 23820  1327  00D5               	movwf	??_main^(0+1792)
 23821  1328  0855               	movf	??_main^(0+1792),w
 23822  1329  00B0               	movwf	_updateAutoRemoteDelay^(0+1792)
 23823  132A                     l9022:	
 23824                           
 23825                           ;main.c: 384:                     sprintf(newTextLine4,"READ:%d.%dV", (unsigned int)inte
      +                          ger, (unsigned int)decimal);
 23826  132A  30C3               	movlw	low _newTextLine4
 23827  132B  00C4               	movwf	sprintf@s^(0+1792)
 23828  132C  3007               	movlw	high _newTextLine4
 23829  132D  00C5               	movwf	(sprintf@s+1)^(0+1792)
 23830  132E  302C               	movlw	low (STR_12| (0+32768))
 23831  132F  00C6               	movwf	sprintf@fmt^(0+1792)
 23832  1330  30B0               	movlw	high (STR_12| (0+32768))
 23833  1331  00C7               	movwf	(sprintf@fmt^(0+1792)+1)
 23834  1332  002F               	movlb	15	; select bank15
 23835  1333  0864               	movf	(main@integer+1)^(0+1920),w
 23836  1334  002E               	movlb	14	; select bank14
 23837  1335  00C9               	movwf	((?_sprintf+1)^(0+1792)+4)
 23838  1336  002F               	movlb	15	; select bank15
 23839  1337  0863               	movf	main@integer^(0+1920),w
 23840  1338  002E               	movlb	14	; select bank14
 23841  1339  00C8               	movwf	(?_sprintf^(0+1792)+4)
 23842  133A  002F               	movlb	15	; select bank15
 23843  133B  0866               	movf	(main@decimal+1)^(0+1920),w
 23844  133C  002E               	movlb	14	; select bank14
 23845  133D  00CB               	movwf	((?_sprintf+1)^(0+1792)+6)
 23846  133E  002F               	movlb	15	; select bank15
 23847  133F  0865               	movf	main@decimal^(0+1920),w
 23848  1340  002E               	movlb	14	; select bank14
 23849  1341  00CA               	movwf	(?_sprintf^(0+1792)+6)
 23850  1342  318D  250E  3192   	fcall	_sprintf
 23851                           
 23852                           ;main.c: 385:                 }else{
 23853  1345  2B71               	goto	l942
 23854  1346                     l9024:	
 23855                           
 23856                           ;main.c: 387:                     for(int i = 0; i < 16;i++){
 23857  1346  002F               	movlb	15	; select bank15
 23858  1347  01E9               	clrf	main@i^(0+1920)
 23859  1348  01EA               	clrf	(main@i+1)^(0+1920)
 23860  1349                     l9026:	
 23861  1349  086A               	movf	(main@i+1)^(0+1920),w
 23862  134A  3A80               	xorlw	128
 23863  134B  002E               	movlb	14	; select bank14
 23864  134C  00D5               	movwf	??_main^(0+1792)
 23865  134D  3080               	movlw	128
 23866  134E  0255               	subwf	??_main^(0+1792),w
 23867  134F  1D03               	skipz
 23868  1350  2B54               	goto	u10375
 23869  1351  3010               	movlw	16
 23870  1352  002F               	movlb	15	; select bank15
 23871  1353  0269               	subwf	main@i^(0+1920),w
 23872  1354                     u10375:	
 23873  1354  1C03               	skipc
 23874  1355  2B57               	goto	u10371
 23875  1356  2B58               	goto	u10370
 23876  1357                     u10371:	
 23877  1357  2B59               	goto	l9030
 23878  1358                     u10370:	
 23879  1358  2B71               	goto	l942
 23880  1359                     l9030:	
 23881                           
 23882                           ;main.c: 388:                         newTextLine4[i] = textLine4[i];
 23883  1359  002F               	movlb	15	; select bank15
 23884  135A  0869               	movf	main@i^(0+1920),w
 23885  135B  3E20               	addlw	(low (_textLine4| (0+2048)))& (0+255)
 23886  135C  0086               	movwf	6
 23887  135D  3008               	movlw	8	; select bank16/17
 23888  135E  0087               	movwf	7
 23889  135F  0801               	movf	1,w
 23890  1360  002E               	movlb	14	; select bank14
 23891  1361  00D5               	movwf	??_main^(0+1792)
 23892  1362  002F               	movlb	15	; select bank15
 23893  1363  0869               	movf	main@i^(0+1920),w
 23894  1364  3EC3               	addlw	(low (_newTextLine4| (0+1792)))& (0+255)
 23895  1365  0086               	movwf	6
 23896  1366  3007               	movlw	7	; select bank15/16
 23897  1367  0087               	movwf	7
 23898  1368  002E               	movlb	14	; select bank14
 23899  1369  0855               	movf	??_main^(0+1792),w
 23900  136A  0081               	movwf	1
 23901  136B                     l9032:	
 23902                           
 23903                           ;main.c: 389:                     }
 23904  136B  3001               	movlw	1
 23905  136C  002F               	movlb	15	; select bank15
 23906  136D  07E9               	addwf	main@i^(0+1920),f
 23907  136E  3000               	movlw	0
 23908  136F  3DEA               	addwfc	(main@i+1)^(0+1920),f
 23909  1370  2B49               	goto	l9026
 23910  1371                     l942:	
 23911                           ;main.c: 390:                 }
 23912                           
 23913                           
 23914                           ;main.c: 392:                 if( (RB4 == 0) || (RA3 == 1) ){
 23915  1371  0020               	movlb	0	; select bank0
 23916  1372  1E0D               	btfss	13,4	;volatile
 23917  1373  2B75               	goto	u10381
 23918  1374  2B76               	goto	u10380
 23919  1375                     u10381:	
 23920  1375  2B7A               	goto	l9038
 23921  1376                     u10380:	
 23922  1376                     l9036:	
 23923  1376  1D8C               	btfss	12,3	;volatile
 23924  1377  2B79               	goto	u10391
 23925  1378  2B7A               	goto	u10390
 23926  1379                     u10391:	
 23927  1379  2CB1               	goto	l9058
 23928  137A                     u10390:	
 23929  137A                     l9038:	
 23930                           
 23931                           ;main.c: 395:                     sprintf(newTextLine2,"Enabled");
 23932  137A  3060               	movlw	low _newTextLine2
 23933  137B  002E               	movlb	14	; select bank14
 23934  137C  00C4               	movwf	sprintf@s^(0+1792)
 23935  137D  3008               	movlw	high _newTextLine2
 23936  137E  00C5               	movwf	(sprintf@s+1)^(0+1792)
 23937  137F  3075               	movlw	low (STR_8| (0+32768))
 23938  1380  00C6               	movwf	sprintf@fmt^(0+1792)
 23939  1381  30B0               	movlw	high (STR_8| (0+32768))
 23940  1382  00C7               	movwf	(sprintf@fmt^(0+1792)+1)
 23941  1383  318D  250E  3192   	fcall	_sprintf
 23942  1386                     l9040:	
 23943                           
 23944                           ;main.c: 398:                     DAC1_Load10bitInputData(((float)ext_speed/1.05) );
 23945  1386  002E               	movlb	14	; select bank14
 23946  1387  082D               	movf	_ext_speed^(0+1792),w
 23947  1388  002D               	movlb	13	; select bank13
 23948  1389  00A9               	movwf	___xxtofl@val^(0+1664)
 23949  138A  002E               	movlb	14	; select bank14
 23950  138B  082E               	movf	(_ext_speed+1)^(0+1792),w
 23951  138C  002D               	movlb	13	; select bank13
 23952  138D  00AA               	movwf	(___xxtofl@val^(0+1664)+1)
 23953  138E  01AB               	clrf	(___xxtofl@val^(0+1664)+2)
 23954  138F  01AC               	clrf	(___xxtofl@val^(0+1664)+3)
 23955  1390  3000               	movlw	0
 23956  1391  31A2  222B  3192   	fcall	___xxtofl
 23957  1394  002D               	movlb	13	; select bank13
 23958  1395  082C               	movf	(?___xxtofl+3)^(0+1664),w
 23959  1396  00BE               	movwf	(___fldiv@b+3)^(0+1664)
 23960  1397  082B               	movf	(?___xxtofl+2)^(0+1664),w
 23961  1398  00BD               	movwf	(___fldiv@b+2)^(0+1664)
 23962  1399  082A               	movf	(?___xxtofl+1)^(0+1664),w
 23963  139A  00BC               	movwf	(___fldiv@b+1)^(0+1664)
 23964  139B  0829               	movf	?___xxtofl^(0+1664),w
 23965  139C  00BB               	movwf	___fldiv@b^(0+1664)
 23966  139D  303F               	movlw	63
 23967  139E  00BA               	movwf	(___fldiv@a+3)^(0+1664)
 23968  139F  3086               	movlw	134
 23969  13A0  00B9               	movwf	(___fldiv@a+2)^(0+1664)
 23970  13A1  3066               	movlw	102
 23971  13A2  00B8               	movwf	(___fldiv@a+1)^(0+1664)
 23972  13A3  3066               	movlw	102
 23973  13A4  00B7               	movwf	___fldiv@a^(0+1664)
 23974  13A5  319A  225C  3192   	fcall	___fldiv
 23975  13A8  002D               	movlb	13	; select bank13
 23976  13A9  083A               	movf	(?___fldiv+3)^(0+1664),w
 23977  13AA  00D4               	movwf	(___fltol@f1+3)^(0+1664)
 23978  13AB  0839               	movf	(?___fldiv+2)^(0+1664),w
 23979  13AC  00D3               	movwf	(___fltol@f1+2)^(0+1664)
 23980  13AD  0838               	movf	(?___fldiv+1)^(0+1664),w
 23981  13AE  00D2               	movwf	(___fltol@f1+1)^(0+1664)
 23982  13AF  0837               	movf	?___fldiv^(0+1664),w
 23983  13B0  00D1               	movwf	___fltol@f1^(0+1664)
 23984  13B1  31A1  212B  3192   	fcall	___fltol
 23985  13B4  002D               	movlb	13	; select bank13
 23986  13B5  0852               	movf	(?___fltol+1)^(0+1664),w
 23987  13B6  00DD               	movwf	(DAC1_Load10bitInputData@input10BitData+1)^(0+1664)
 23988  13B7  0851               	movf	?___fltol^(0+1664),w
 23989  13B8  00DC               	movwf	DAC1_Load10bitInputData@input10BitData^(0+1664)
 23990  13B9  31A9  21E7  3192   	fcall	_DAC1_Load10bitInputData
 23991  13BC                     l9042:	
 23992                           
 23993                           ;main.c: 402:                     if((float)ext_speed/100 > 1.9)
 23994  13BC  303F               	movlw	63
 23995  13BD  002D               	movlb	13	; select bank13
 23996  13BE  00D4               	movwf	(___flge@ff1+3)^(0+1664)
 23997  13BF  30F3               	movlw	243
 23998  13C0  00D3               	movwf	(___flge@ff1+2)^(0+1664)
 23999  13C1  3033               	movlw	51
 24000  13C2  00D2               	movwf	(___flge@ff1+1)^(0+1664)
 24001  13C3  3033               	movlw	51
 24002  13C4  00D1               	movwf	___flge@ff1^(0+1664)
 24003  13C5  3042               	movlw	66
 24004  13C6  00BA               	movwf	(___fldiv@a+3)^(0+1664)
 24005  13C7  30C8               	movlw	200
 24006  13C8  00B9               	movwf	(___fldiv@a+2)^(0+1664)
 24007  13C9  3000               	movlw	0
 24008  13CA  00B8               	movwf	(___fldiv@a+1)^(0+1664)
 24009  13CB  3000               	movlw	0
 24010  13CC  00B7               	movwf	___fldiv@a^(0+1664)
 24011  13CD  002E               	movlb	14	; select bank14
 24012  13CE  082D               	movf	_ext_speed^(0+1792),w
 24013  13CF  002D               	movlb	13	; select bank13
 24014  13D0  00A9               	movwf	___xxtofl@val^(0+1664)
 24015  13D1  002E               	movlb	14	; select bank14
 24016  13D2  082E               	movf	(_ext_speed+1)^(0+1792),w
 24017  13D3  002D               	movlb	13	; select bank13
 24018  13D4  00AA               	movwf	(___xxtofl@val^(0+1664)+1)
 24019  13D5  01AB               	clrf	(___xxtofl@val^(0+1664)+2)
 24020  13D6  01AC               	clrf	(___xxtofl@val^(0+1664)+3)
 24021  13D7  3000               	movlw	0
 24022  13D8  31A2  222B  3192   	fcall	___xxtofl
 24023  13DB  002D               	movlb	13	; select bank13
 24024  13DC  082C               	movf	(?___xxtofl+3)^(0+1664),w
 24025  13DD  00BE               	movwf	(___fldiv@b+3)^(0+1664)
 24026  13DE  082B               	movf	(?___xxtofl+2)^(0+1664),w
 24027  13DF  00BD               	movwf	(___fldiv@b+2)^(0+1664)
 24028  13E0  082A               	movf	(?___xxtofl+1)^(0+1664),w
 24029  13E1  00BC               	movwf	(___fldiv@b+1)^(0+1664)
 24030  13E2  0829               	movf	?___xxtofl^(0+1664),w
 24031  13E3  00BB               	movwf	___fldiv@b^(0+1664)
 24032  13E4  319A  225C  3192   	fcall	___fldiv
 24033  13E7  002D               	movlb	13	; select bank13
 24034  13E8  083A               	movf	(?___fldiv+3)^(0+1664),w
 24035  13E9  00D8               	movwf	(___flge@ff2+3)^(0+1664)
 24036  13EA  0839               	movf	(?___fldiv+2)^(0+1664),w
 24037  13EB  00D7               	movwf	(___flge@ff2+2)^(0+1664)
 24038  13EC  0838               	movf	(?___fldiv+1)^(0+1664),w
 24039  13ED  00D6               	movwf	(___flge@ff2+1)^(0+1664)
 24040  13EE  0837               	movf	?___fldiv^(0+1664),w
 24041  13EF  00D5               	movwf	___flge@ff2^(0+1664)
 24042  13F0  31A1  21A0  3192   	fcall	___flge
 24043  13F3  1803               	btfsc	3,0
 24044  13F4  2BF6               	goto	u10401
 24045  13F5  2BF7               	goto	u10400
 24046  13F6                     u10401:	
 24047  13F6  2BFA               	goto	l9046
 24048  13F7                     u10400:	
 24049  13F7                     l9044:	
 24050                           
 24051                           ;main.c: 403:                     {;main.c: 405:                         RA0 = 1;
 24052  13F7  0020               	movlb	0	; select bank0
 24053  13F8  140C               	bsf	12,0	;volatile
 24054                           
 24055                           ;main.c: 406:                     }
 24056  13F9  2C37               	goto	l9050
 24057  13FA                     l9046:	
 24058  13FA  3042               	movlw	66
 24059  13FB  002D               	movlb	13	; select bank13
 24060  13FC  00BA               	movwf	(___fldiv@a+3)^(0+1664)
 24061  13FD  30C8               	movlw	200
 24062  13FE  00B9               	movwf	(___fldiv@a+2)^(0+1664)
 24063  13FF  3000               	movlw	0
 24064  1400  00B8               	movwf	(___fldiv@a+1)^(0+1664)
 24065  1401  3000               	movlw	0
 24066  1402  00B7               	movwf	___fldiv@a^(0+1664)
 24067  1403  002E               	movlb	14	; select bank14
 24068  1404  082D               	movf	_ext_speed^(0+1792),w
 24069  1405  002D               	movlb	13	; select bank13
 24070  1406  00A9               	movwf	___xxtofl@val^(0+1664)
 24071  1407  002E               	movlb	14	; select bank14
 24072  1408  082E               	movf	(_ext_speed+1)^(0+1792),w
 24073  1409  002D               	movlb	13	; select bank13
 24074  140A  00AA               	movwf	(___xxtofl@val^(0+1664)+1)
 24075  140B  01AB               	clrf	(___xxtofl@val^(0+1664)+2)
 24076  140C  01AC               	clrf	(___xxtofl@val^(0+1664)+3)
 24077  140D  3000               	movlw	0
 24078  140E  31A2  222B  3192   	fcall	___xxtofl
 24079  1411  002D               	movlb	13	; select bank13
 24080  1412  082C               	movf	(?___xxtofl+3)^(0+1664),w
 24081  1413  00BE               	movwf	(___fldiv@b+3)^(0+1664)
 24082  1414  082B               	movf	(?___xxtofl+2)^(0+1664),w
 24083  1415  00BD               	movwf	(___fldiv@b+2)^(0+1664)
 24084  1416  082A               	movf	(?___xxtofl+1)^(0+1664),w
 24085  1417  00BC               	movwf	(___fldiv@b+1)^(0+1664)
 24086  1418  0829               	movf	?___xxtofl^(0+1664),w
 24087  1419  00BB               	movwf	___fldiv@b^(0+1664)
 24088  141A  319A  225C  3192   	fcall	___fldiv
 24089  141D  002D               	movlb	13	; select bank13
 24090  141E  083A               	movf	(?___fldiv+3)^(0+1664),w
 24091  141F  00D4               	movwf	(___flge@ff1+3)^(0+1664)
 24092  1420  0839               	movf	(?___fldiv+2)^(0+1664),w
 24093  1421  00D3               	movwf	(___flge@ff1+2)^(0+1664)
 24094  1422  0838               	movf	(?___fldiv+1)^(0+1664),w
 24095  1423  00D2               	movwf	(___flge@ff1+1)^(0+1664)
 24096  1424  0837               	movf	?___fldiv^(0+1664),w
 24097  1425  00D1               	movwf	___flge@ff1^(0+1664)
 24098  1426  303F               	movlw	63
 24099  1427  00D8               	movwf	(___flge@ff2+3)^(0+1664)
 24100  1428  30E6               	movlw	230
 24101  1429  00D7               	movwf	(___flge@ff2+2)^(0+1664)
 24102  142A  3066               	movlw	102
 24103  142B  00D6               	movwf	(___flge@ff2+1)^(0+1664)
 24104  142C  3066               	movlw	102
 24105  142D  00D5               	movwf	___flge@ff2^(0+1664)
 24106  142E  31A1  21A0  3192   	fcall	___flge
 24107  1431  1803               	btfsc	3,0
 24108  1432  2C34               	goto	u10411
 24109  1433  2C35               	goto	u10410
 24110  1434                     u10411:	
 24111  1434  2C37               	goto	l9050
 24112  1435                     u10410:	
 24113  1435                     l9048:	
 24114                           
 24115                           ;main.c: 408:                     {;main.c: 410:                         RA0 = 0;
 24116  1435  0020               	movlb	0	; select bank0
 24117  1436  100C               	bcf	12,0	;volatile
 24118  1437                     l9050:	
 24119                           
 24120                           ;main.c: 415:                     if((float)ext_speed/100 > 2.05)
 24121  1437  3040               	movlw	64
 24122  1438  002D               	movlb	13	; select bank13
 24123  1439  00D4               	movwf	(___flge@ff1+3)^(0+1664)
 24124  143A  3003               	movlw	3
 24125  143B  00D3               	movwf	(___flge@ff1+2)^(0+1664)
 24126  143C  3033               	movlw	51
 24127  143D  00D2               	movwf	(___flge@ff1+1)^(0+1664)
 24128  143E  3033               	movlw	51
 24129  143F  00D1               	movwf	___flge@ff1^(0+1664)
 24130  1440  3042               	movlw	66
 24131  1441  00BA               	movwf	(___fldiv@a+3)^(0+1664)
 24132  1442  30C8               	movlw	200
 24133  1443  00B9               	movwf	(___fldiv@a+2)^(0+1664)
 24134  1444  3000               	movlw	0
 24135  1445  00B8               	movwf	(___fldiv@a+1)^(0+1664)
 24136  1446  3000               	movlw	0
 24137  1447  00B7               	movwf	___fldiv@a^(0+1664)
 24138  1448  002E               	movlb	14	; select bank14
 24139  1449  082D               	movf	_ext_speed^(0+1792),w
 24140  144A  002D               	movlb	13	; select bank13
 24141  144B  00A9               	movwf	___xxtofl@val^(0+1664)
 24142  144C  002E               	movlb	14	; select bank14
 24143  144D  082E               	movf	(_ext_speed+1)^(0+1792),w
 24144  144E  002D               	movlb	13	; select bank13
 24145  144F  00AA               	movwf	(___xxtofl@val^(0+1664)+1)
 24146  1450  01AB               	clrf	(___xxtofl@val^(0+1664)+2)
 24147  1451  01AC               	clrf	(___xxtofl@val^(0+1664)+3)
 24148  1452  3000               	movlw	0
 24149  1453  31A2  222B  3192   	fcall	___xxtofl
 24150  1456  002D               	movlb	13	; select bank13
 24151  1457  082C               	movf	(?___xxtofl+3)^(0+1664),w
 24152  1458  00BE               	movwf	(___fldiv@b+3)^(0+1664)
 24153  1459  082B               	movf	(?___xxtofl+2)^(0+1664),w
 24154  145A  00BD               	movwf	(___fldiv@b+2)^(0+1664)
 24155  145B  082A               	movf	(?___xxtofl+1)^(0+1664),w
 24156  145C  00BC               	movwf	(___fldiv@b+1)^(0+1664)
 24157  145D  0829               	movf	?___xxtofl^(0+1664),w
 24158  145E  00BB               	movwf	___fldiv@b^(0+1664)
 24159  145F  319A  225C  3192   	fcall	___fldiv
 24160  1462  002D               	movlb	13	; select bank13
 24161  1463  083A               	movf	(?___fldiv+3)^(0+1664),w
 24162  1464  00D8               	movwf	(___flge@ff2+3)^(0+1664)
 24163  1465  0839               	movf	(?___fldiv+2)^(0+1664),w
 24164  1466  00D7               	movwf	(___flge@ff2+2)^(0+1664)
 24165  1467  0838               	movf	(?___fldiv+1)^(0+1664),w
 24166  1468  00D6               	movwf	(___flge@ff2+1)^(0+1664)
 24167  1469  0837               	movf	?___fldiv^(0+1664),w
 24168  146A  00D5               	movwf	___flge@ff2^(0+1664)
 24169  146B  31A1  21A0  3192   	fcall	___flge
 24170  146E  1803               	btfsc	3,0
 24171  146F  2C71               	goto	u10421
 24172  1470  2C72               	goto	u10420
 24173  1471                     u10421:	
 24174  1471  2C74               	goto	l9054
 24175  1472                     u10420:	
 24176  1472  318E  2EBD         	goto	l8974
 24177  1474                     l9054:	
 24178  1474  3042               	movlw	66
 24179  1475  002D               	movlb	13	; select bank13
 24180  1476  00BA               	movwf	(___fldiv@a+3)^(0+1664)
 24181  1477  30C8               	movlw	200
 24182  1478  00B9               	movwf	(___fldiv@a+2)^(0+1664)
 24183  1479  3000               	movlw	0
 24184  147A  00B8               	movwf	(___fldiv@a+1)^(0+1664)
 24185  147B  3000               	movlw	0
 24186  147C  00B7               	movwf	___fldiv@a^(0+1664)
 24187  147D  002E               	movlb	14	; select bank14
 24188  147E  082D               	movf	_ext_speed^(0+1792),w
 24189  147F  002D               	movlb	13	; select bank13
 24190  1480  00A9               	movwf	___xxtofl@val^(0+1664)
 24191  1481  002E               	movlb	14	; select bank14
 24192  1482  082E               	movf	(_ext_speed+1)^(0+1792),w
 24193  1483  002D               	movlb	13	; select bank13
 24194  1484  00AA               	movwf	(___xxtofl@val^(0+1664)+1)
 24195  1485  01AB               	clrf	(___xxtofl@val^(0+1664)+2)
 24196  1486  01AC               	clrf	(___xxtofl@val^(0+1664)+3)
 24197  1487  3000               	movlw	0
 24198  1488  31A2  222B  3192   	fcall	___xxtofl
 24199  148B  002D               	movlb	13	; select bank13
 24200  148C  082C               	movf	(?___xxtofl+3)^(0+1664),w
 24201  148D  00BE               	movwf	(___fldiv@b+3)^(0+1664)
 24202  148E  082B               	movf	(?___xxtofl+2)^(0+1664),w
 24203  148F  00BD               	movwf	(___fldiv@b+2)^(0+1664)
 24204  1490  082A               	movf	(?___xxtofl+1)^(0+1664),w
 24205  1491  00BC               	movwf	(___fldiv@b+1)^(0+1664)
 24206  1492  0829               	movf	?___xxtofl^(0+1664),w
 24207  1493  00BB               	movwf	___fldiv@b^(0+1664)
 24208  1494  319A  225C  3192   	fcall	___fldiv
 24209  1497  002D               	movlb	13	; select bank13
 24210  1498  083A               	movf	(?___fldiv+3)^(0+1664),w
 24211  1499  00D4               	movwf	(___flge@ff1+3)^(0+1664)
 24212  149A  0839               	movf	(?___fldiv+2)^(0+1664),w
 24213  149B  00D3               	movwf	(___flge@ff1+2)^(0+1664)
 24214  149C  0838               	movf	(?___fldiv+1)^(0+1664),w
 24215  149D  00D2               	movwf	(___flge@ff1+1)^(0+1664)
 24216  149E  0837               	movf	?___fldiv^(0+1664),w
 24217  149F  00D1               	movwf	___flge@ff1^(0+1664)
 24218  14A0  303F               	movlw	63
 24219  14A1  00D8               	movwf	(___flge@ff2+3)^(0+1664)
 24220  14A2  30F9               	movlw	249
 24221  14A3  00D7               	movwf	(___flge@ff2+2)^(0+1664)
 24222  14A4  3099               	movlw	153
 24223  14A5  00D6               	movwf	(___flge@ff2+1)^(0+1664)
 24224  14A6  309A               	movlw	154
 24225  14A7  00D5               	movwf	___flge@ff2^(0+1664)
 24226  14A8  31A1  21A0  3192   	fcall	___flge
 24227  14AB  1803               	btfsc	3,0
 24228  14AC  2CAE               	goto	u10431
 24229  14AD  2CAF               	goto	u10430
 24230  14AE                     u10431:	
 24231  14AE  2E05               	goto	l9094
 24232  14AF                     u10430:	
 24233  14AF  318D  2D9E         	goto	l8958
 24234  14B1                     l9058:	
 24235                           
 24236                           ;main.c: 427:                 {;main.c: 429:                     sprintf(newTextLine2,"D
      +                          isabled");
 24237  14B1  3060               	movlw	low _newTextLine2
 24238  14B2  002E               	movlb	14	; select bank14
 24239  14B3  00C4               	movwf	sprintf@s^(0+1792)
 24240  14B4  3008               	movlw	high _newTextLine2
 24241  14B5  00C5               	movwf	(sprintf@s+1)^(0+1792)
 24242  14B6  3064               	movlw	low (STR_9| (0+32768))
 24243  14B7  00C6               	movwf	sprintf@fmt^(0+1792)
 24244  14B8  30B0               	movlw	high (STR_9| (0+32768))
 24245  14B9  00C7               	movwf	(sprintf@fmt^(0+1792)+1)
 24246  14BA  318D  250E  3192   	fcall	_sprintf
 24247  14BD                     L2:	
 24248  14BD  318D  2D95         	goto	l8954
 24249  14BF                     l9066:	
 24250                           
 24251                           ;main.c: 443:                 HEFLASH_readBlock(&frmn_speed, 2, sizeof(frmn_speed));
 24252  14BF  3002               	movlw	2
 24253  14C0  00D5               	movwf	??_main^(0+1792)
 24254  14C1  0855               	movf	??_main^(0+1792),w
 24255  14C2  002D               	movlb	13	; select bank13
 24256  14C3  00A2               	movwf	HEFLASH_readBlock@radd^(0+1664)
 24257  14C4  01A3               	clrf	HEFLASH_readBlock@count^(0+1664)
 24258  14C5  0AA3               	incf	HEFLASH_readBlock@count^(0+1664),f
 24259  14C6  3067               	movlw	(low (_frmn_speed| (0+1792)))& (0+255)
 24260  14C7  31AC  24CF  3192   	fcall	_HEFLASH_readBlock
 24261  14CA                     l9068:	
 24262                           
 24263                           ;main.c: 445:                 sprintf(newTextLine1,"FIREMANSET");
 24264  14CA  30D3               	movlw	low _newTextLine1
 24265  14CB  002E               	movlb	14	; select bank14
 24266  14CC  00C4               	movwf	sprintf@s^(0+1792)
 24267  14CD  3007               	movlw	high _newTextLine1
 24268  14CE  00C5               	movwf	(sprintf@s+1)^(0+1792)
 24269  14CF  3043               	movlw	low (STR_15| (0+32768))
 24270  14D0  00C6               	movwf	sprintf@fmt^(0+1792)
 24271  14D1  30B0               	movlw	high (STR_15| (0+32768))
 24272  14D2  00C7               	movwf	(sprintf@fmt^(0+1792)+1)
 24273  14D3  318D  250E  3192   	fcall	_sprintf
 24274  14D6                     l9070:	
 24275                           
 24276                           ;main.c: 447:                 sprintf(newTextLine4,"SET:%d.%dV", frmn_speed/10, (frmn_sp
      +                          eed%10));
 24277  14D6  30C3               	movlw	low _newTextLine4
 24278  14D7  002E               	movlb	14	; select bank14
 24279  14D8  00C4               	movwf	sprintf@s^(0+1792)
 24280  14D9  3007               	movlw	high _newTextLine4
 24281  14DA  00C5               	movwf	(sprintf@s+1)^(0+1792)
 24282  14DB  304E               	movlw	low (STR_2| (0+32768))
 24283  14DC  00C6               	movwf	sprintf@fmt^(0+1792)
 24284  14DD  30B0               	movlw	high (STR_2| (0+32768))
 24285  14DE  00C7               	movwf	(sprintf@fmt^(0+1792)+1)
 24286  14DF  300A               	movlw	10
 24287  14E0  002D               	movlb	13	; select bank13
 24288  14E1  00A0               	movwf	___awdiv@divisor^(0+1664)
 24289  14E2  3000               	movlw	0
 24290  14E3  00A1               	movwf	(___awdiv@divisor^(0+1664)+1)
 24291  14E4  002E               	movlb	14	; select bank14
 24292  14E5  0867               	movf	_frmn_speed^(0+1792),w
 24293  14E6  00D5               	movwf	??_main^(0+1792)
 24294  14E7  01D6               	clrf	(??_main^(0+1792)+1)
 24295  14E8  0855               	movf	??_main^(0+1792),w
 24296  14E9  002D               	movlb	13	; select bank13
 24297  14EA  00A2               	movwf	___awdiv@dividend^(0+1664)
 24298  14EB  002E               	movlb	14	; select bank14
 24299  14EC  0856               	movf	(??_main+1)^(0+1792),w
 24300  14ED  002D               	movlb	13	; select bank13
 24301  14EE  00A3               	movwf	(___awdiv@dividend+1)^(0+1664)
 24302  14EF  31AF  27A0  3192   	fcall	___awdiv
 24303  14F2  002D               	movlb	13	; select bank13
 24304  14F3  0821               	movf	(?___awdiv+1)^(0+1664),w
 24305  14F4  002E               	movlb	14	; select bank14
 24306  14F5  00C9               	movwf	((?_sprintf+1)^(0+1792)+4)
 24307  14F6  002D               	movlb	13	; select bank13
 24308  14F7  0820               	movf	?___awdiv^(0+1664),w
 24309  14F8  002E               	movlb	14	; select bank14
 24310  14F9  00C8               	movwf	(?_sprintf^(0+1792)+4)
 24311  14FA  300A               	movlw	10
 24312  14FB  002D               	movlb	13	; select bank13
 24313  14FC  00A0               	movwf	___awmod@divisor^(0+1664)
 24314  14FD  3000               	movlw	0
 24315  14FE  00A1               	movwf	(___awmod@divisor^(0+1664)+1)
 24316  14FF  002E               	movlb	14	; select bank14
 24317  1500  0867               	movf	_frmn_speed^(0+1792),w
 24318  1501  00D7               	movwf	(??_main+2)^(0+1792)
 24319  1502  01D8               	clrf	((??_main+2)^(0+1792)+1)
 24320  1503  0857               	movf	(??_main+2)^(0+1792),w
 24321  1504  002D               	movlb	13	; select bank13
 24322  1505  00A2               	movwf	___awmod@dividend^(0+1664)
 24323  1506  002E               	movlb	14	; select bank14
 24324  1507  0858               	movf	(??_main+3)^(0+1792),w
 24325  1508  002D               	movlb	13	; select bank13
 24326  1509  00A3               	movwf	(___awmod@dividend+1)^(0+1664)
 24327  150A  31AD  25DB  3192   	fcall	___awmod
 24328  150D  002D               	movlb	13	; select bank13
 24329  150E  0821               	movf	(?___awmod+1)^(0+1664),w
 24330  150F  002E               	movlb	14	; select bank14
 24331  1510  00CB               	movwf	((?_sprintf+1)^(0+1792)+6)
 24332  1511  002D               	movlb	13	; select bank13
 24333  1512  0820               	movf	?___awmod^(0+1664),w
 24334  1513  002E               	movlb	14	; select bank14
 24335  1514  00CA               	movwf	(?_sprintf^(0+1792)+6)
 24336  1515  318D  250E  3192   	fcall	_sprintf
 24337  1518                     l9072:	
 24338                           
 24339                           ;main.c: 450:                 DAC1_Load10bitInputData((float)frmn_speed *((float)1000/10
      +                          4));
 24340  1518  002E               	movlb	14	; select bank14
 24341  1519  0867               	movf	_frmn_speed^(0+1792),w
 24342  151A  00D5               	movwf	??_main^(0+1792)
 24343  151B  01D6               	clrf	(??_main^(0+1792)+1)
 24344  151C  01D7               	clrf	(??_main^(0+1792)+2)
 24345  151D  01D8               	clrf	(??_main^(0+1792)+3)
 24346  151E  0858               	movf	(??_main+3)^(0+1792),w
 24347  151F  002D               	movlb	13	; select bank13
 24348  1520  00AC               	movwf	(___xxtofl@val+3)^(0+1664)
 24349  1521  002E               	movlb	14	; select bank14
 24350  1522  0857               	movf	(??_main+2)^(0+1792),w
 24351  1523  002D               	movlb	13	; select bank13
 24352  1524  00AB               	movwf	(___xxtofl@val+2)^(0+1664)
 24353  1525  002E               	movlb	14	; select bank14
 24354  1526  0856               	movf	(??_main+1)^(0+1792),w
 24355  1527  002D               	movlb	13	; select bank13
 24356  1528  00AA               	movwf	(___xxtofl@val+1)^(0+1664)
 24357  1529  002E               	movlb	14	; select bank14
 24358  152A  0855               	movf	??_main^(0+1792),w
 24359  152B  002D               	movlb	13	; select bank13
 24360  152C  00A9               	movwf	___xxtofl@val^(0+1664)
 24361  152D  3000               	movlw	0
 24362  152E  31A2  222B  3192   	fcall	___xxtofl
 24363  1531  002D               	movlb	13	; select bank13
 24364  1532  082C               	movf	(?___xxtofl+3)^(0+1664),w
 24365  1533  00BE               	movwf	(___flmul@a+3)^(0+1664)
 24366  1534  082B               	movf	(?___xxtofl+2)^(0+1664),w
 24367  1535  00BD               	movwf	(___flmul@a+2)^(0+1664)
 24368  1536  082A               	movf	(?___xxtofl+1)^(0+1664),w
 24369  1537  00BC               	movwf	(___flmul@a+1)^(0+1664)
 24370  1538  0829               	movf	?___xxtofl^(0+1664),w
 24371  1539  00BB               	movwf	___flmul@a^(0+1664)
 24372  153A  3041               	movlw	65
 24373  153B  00BA               	movwf	(___flmul@b+3)^(0+1664)
 24374  153C  3019               	movlw	25
 24375  153D  00B9               	movwf	(___flmul@b+2)^(0+1664)
 24376  153E  30D8               	movlw	216
 24377  153F  00B8               	movwf	(___flmul@b+1)^(0+1664)
 24378  1540  309E               	movlw	158
 24379  1541  00B7               	movwf	___flmul@b^(0+1664)
 24380  1542  3190  200A  3192   	fcall	___flmul
 24381  1545  002D               	movlb	13	; select bank13
 24382  1546  083A               	movf	(?___flmul+3)^(0+1664),w
 24383  1547  00D4               	movwf	(___fltol@f1+3)^(0+1664)
 24384  1548  0839               	movf	(?___flmul+2)^(0+1664),w
 24385  1549  00D3               	movwf	(___fltol@f1+2)^(0+1664)
 24386  154A  0838               	movf	(?___flmul+1)^(0+1664),w
 24387  154B  00D2               	movwf	(___fltol@f1+1)^(0+1664)
 24388  154C  0837               	movf	?___flmul^(0+1664),w
 24389  154D  00D1               	movwf	___fltol@f1^(0+1664)
 24390  154E  31A1  212B  3192   	fcall	___fltol
 24391  1551  002D               	movlb	13	; select bank13
 24392  1552  0852               	movf	(?___fltol+1)^(0+1664),w
 24393  1553  00DD               	movwf	(DAC1_Load10bitInputData@input10BitData+1)^(0+1664)
 24394  1554  0851               	movf	?___fltol^(0+1664),w
 24395  1555  00DC               	movwf	DAC1_Load10bitInputData@input10BitData^(0+1664)
 24396  1556  31A9  21E7  3192   	fcall	_DAC1_Load10bitInputData
 24397  1559                     l9074:	
 24398                           
 24399                           ;main.c: 452:                 if((float)frmn_speed/10 > 1.85)
 24400  1559  303F               	movlw	63
 24401  155A  002D               	movlb	13	; select bank13
 24402  155B  00D4               	movwf	(___flge@ff1+3)^(0+1664)
 24403  155C  30EC               	movlw	236
 24404  155D  00D3               	movwf	(___flge@ff1+2)^(0+1664)
 24405  155E  30CC               	movlw	204
 24406  155F  00D2               	movwf	(___flge@ff1+1)^(0+1664)
 24407  1560  30CD               	movlw	205
 24408  1561  00D1               	movwf	___flge@ff1^(0+1664)
 24409  1562  3041               	movlw	65
 24410  1563  00BA               	movwf	(___fldiv@a+3)^(0+1664)
 24411  1564  3020               	movlw	32
 24412  1565  00B9               	movwf	(___fldiv@a+2)^(0+1664)
 24413  1566  3000               	movlw	0
 24414  1567  00B8               	movwf	(___fldiv@a+1)^(0+1664)
 24415  1568  3000               	movlw	0
 24416  1569  00B7               	movwf	___fldiv@a^(0+1664)
 24417  156A  002E               	movlb	14	; select bank14
 24418  156B  0867               	movf	_frmn_speed^(0+1792),w
 24419  156C  00D5               	movwf	??_main^(0+1792)
 24420  156D  01D6               	clrf	(??_main^(0+1792)+1)
 24421  156E  01D7               	clrf	(??_main^(0+1792)+2)
 24422  156F  01D8               	clrf	(??_main^(0+1792)+3)
 24423  1570  0858               	movf	(??_main+3)^(0+1792),w
 24424  1571  002D               	movlb	13	; select bank13
 24425  1572  00AC               	movwf	(___xxtofl@val+3)^(0+1664)
 24426  1573  002E               	movlb	14	; select bank14
 24427  1574  0857               	movf	(??_main+2)^(0+1792),w
 24428  1575  002D               	movlb	13	; select bank13
 24429  1576  00AB               	movwf	(___xxtofl@val+2)^(0+1664)
 24430  1577  002E               	movlb	14	; select bank14
 24431  1578  0856               	movf	(??_main+1)^(0+1792),w
 24432  1579  002D               	movlb	13	; select bank13
 24433  157A  00AA               	movwf	(___xxtofl@val+1)^(0+1664)
 24434  157B  002E               	movlb	14	; select bank14
 24435  157C  0855               	movf	??_main^(0+1792),w
 24436  157D  002D               	movlb	13	; select bank13
 24437  157E  00A9               	movwf	___xxtofl@val^(0+1664)
 24438  157F  3000               	movlw	0
 24439  1580  31A2  222B  3192   	fcall	___xxtofl
 24440  1583  002D               	movlb	13	; select bank13
 24441  1584  082C               	movf	(?___xxtofl+3)^(0+1664),w
 24442  1585  00BE               	movwf	(___fldiv@b+3)^(0+1664)
 24443  1586  082B               	movf	(?___xxtofl+2)^(0+1664),w
 24444  1587  00BD               	movwf	(___fldiv@b+2)^(0+1664)
 24445  1588  082A               	movf	(?___xxtofl+1)^(0+1664),w
 24446  1589  00BC               	movwf	(___fldiv@b+1)^(0+1664)
 24447  158A  0829               	movf	?___xxtofl^(0+1664),w
 24448  158B  00BB               	movwf	___fldiv@b^(0+1664)
 24449  158C  319A  225C  3192   	fcall	___fldiv
 24450  158F  002D               	movlb	13	; select bank13
 24451  1590  083A               	movf	(?___fldiv+3)^(0+1664),w
 24452  1591  00D8               	movwf	(___flge@ff2+3)^(0+1664)
 24453  1592  0839               	movf	(?___fldiv+2)^(0+1664),w
 24454  1593  00D7               	movwf	(___flge@ff2+2)^(0+1664)
 24455  1594  0838               	movf	(?___fldiv+1)^(0+1664),w
 24456  1595  00D6               	movwf	(___flge@ff2+1)^(0+1664)
 24457  1596  0837               	movf	?___fldiv^(0+1664),w
 24458  1597  00D5               	movwf	___flge@ff2^(0+1664)
 24459  1598  31A1  21A0  3192   	fcall	___flge
 24460  159B  1803               	btfsc	3,0
 24461  159C  2D9E               	goto	u10441
 24462  159D  2D9F               	goto	u10440
 24463  159E                     u10441:	
 24464  159E  2DA2               	goto	l956
 24465  159F                     u10440:	
 24466  159F                     l9076:	
 24467                           
 24468                           ;main.c: 453:                 {;main.c: 455:                     RA0 = 1;
 24469  159F  0020               	movlb	0	; select bank0
 24470  15A0  140C               	bsf	12,0	;volatile
 24471                           
 24472                           ;main.c: 456:                 }
 24473  15A1  2DA4               	goto	l9078
 24474  15A2                     l956:	
 24475                           ;main.c: 457:                 else
 24476                           
 24477                           
 24478                           ;main.c: 458:                 {;main.c: 460:                     RA0 = 0;
 24479  15A2  0020               	movlb	0	; select bank0
 24480  15A3  100C               	bcf	12,0	;volatile
 24481  15A4                     l9078:	
 24482                           
 24483                           ;main.c: 463:                 if(frmn_speed/10 >= 2.0)
 24484  15A4  002E               	movlb	14	; select bank14
 24485  15A5  0867               	movf	_frmn_speed^(0+1792),w
 24486  15A6  00D5               	movwf	??_main^(0+1792)
 24487  15A7  01D6               	clrf	(??_main^(0+1792)+1)
 24488  15A8  0855               	movf	??_main^(0+1792),w
 24489  15A9  002D               	movlb	13	; select bank13
 24490  15AA  00A2               	movwf	___awdiv@dividend^(0+1664)
 24491  15AB  002E               	movlb	14	; select bank14
 24492  15AC  0856               	movf	(??_main+1)^(0+1792),w
 24493  15AD  002D               	movlb	13	; select bank13
 24494  15AE  00A3               	movwf	(___awdiv@dividend+1)^(0+1664)
 24495  15AF  300A               	movlw	10
 24496  15B0  00A0               	movwf	___awdiv@divisor^(0+1664)
 24497  15B1  3000               	movlw	0
 24498  15B2  00A1               	movwf	(___awdiv@divisor^(0+1664)+1)
 24499  15B3  31AF  27A0  3192   	fcall	___awdiv
 24500  15B6  002D               	movlb	13	; select bank13
 24501  15B7  0820               	movf	?___awdiv^(0+1664),w
 24502  15B8  00A9               	movwf	___xxtofl@val^(0+1664)
 24503  15B9  0821               	movf	(?___awdiv+1)^(0+1664),w
 24504  15BA  00AA               	movwf	(___xxtofl@val+1)^(0+1664)
 24505  15BB  0D89               	rlf	9,f
 24506  15BC  3B89               	subwfb	9,f
 24507  15BD  0989               	comf	9,f
 24508  15BE  00AB               	movwf	(___xxtofl@val+2)^(0+1664)
 24509  15BF  00AC               	movwf	(___xxtofl@val+3)^(0+1664)
 24510  15C0  3001               	movlw	1
 24511  15C1  31A2  222B  3192   	fcall	___xxtofl
 24512  15C4  002D               	movlb	13	; select bank13
 24513  15C5  082C               	movf	(?___xxtofl+3)^(0+1664),w
 24514  15C6  00D4               	movwf	(___flge@ff1+3)^(0+1664)
 24515  15C7  082B               	movf	(?___xxtofl+2)^(0+1664),w
 24516  15C8  00D3               	movwf	(___flge@ff1+2)^(0+1664)
 24517  15C9  082A               	movf	(?___xxtofl+1)^(0+1664),w
 24518  15CA  00D2               	movwf	(___flge@ff1+1)^(0+1664)
 24519  15CB  0829               	movf	?___xxtofl^(0+1664),w
 24520  15CC  00D1               	movwf	___flge@ff1^(0+1664)
 24521  15CD  3040               	movlw	64
 24522  15CE  00D8               	movwf	(___flge@ff2+3)^(0+1664)
 24523  15CF  3000               	movlw	0
 24524  15D0  00D7               	movwf	(___flge@ff2+2)^(0+1664)
 24525  15D1  3000               	movlw	0
 24526  15D2  00D6               	movwf	(___flge@ff2+1)^(0+1664)
 24527  15D3  3000               	movlw	0
 24528  15D4  00D5               	movwf	___flge@ff2^(0+1664)
 24529  15D5  31A1  21A0  3192   	fcall	___flge
 24530  15D8  1C03               	btfss	3,0
 24531  15D9  2DDB               	goto	u10451
 24532  15DA  2DDC               	goto	u10450
 24533  15DB                     u10451:	
 24534  15DB  2CAF               	goto	u10430
 24535  15DC                     u10450:	
 24536  15DC  2C72               	goto	u10420
 24537  15DD                     l9082:	
 24538                           
 24539                           ;main.c: 479:                 sprintf(newTextLine1,"Press Mode");
 24540  15DD  30D3               	movlw	low _newTextLine1
 24541  15DE  00C4               	movwf	sprintf@s^(0+1792)
 24542  15DF  3007               	movlw	high _newTextLine1
 24543  15E0  00C5               	movwf	(sprintf@s+1)^(0+1792)
 24544  15E1  3059               	movlw	low (STR_17| (0+32768))
 24545  15E2  00C6               	movwf	sprintf@fmt^(0+1792)
 24546  15E3  30B0               	movlw	high (STR_17| (0+32768))
 24547  15E4  00C7               	movwf	(sprintf@fmt^(0+1792)+1)
 24548  15E5  318D  250E  3192   	fcall	_sprintf
 24549  15E8  2CBD               	goto	L2
 24550  15E9                     l9092:	
 24551  15E9  002E               	movlb	14	; select bank14
 24552  15EA  0840               	movf	_mode^(0+1792),w
 24553  15EB  00D5               	movwf	??_main^(0+1792)
 24554  15EC  01D6               	clrf	(??_main^(0+1792)+1)
 24555                           
 24556                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24557                           ; Switch size 1, requested type "simple"
 24558                           ; Number of cases is 1, Range of values is 0 to 0
 24559                           ; switch strategies available:
 24560                           ; Name         Instructions Cycles
 24561                           ; simple_byte            4     3 (average)
 24562                           ; direct_byte            8     6 (fixed)
 24563                           ; jumptable            260     6 (fixed)
 24564                           ;	Chosen strategy is simple_byte
 24565  15ED  0856               	movf	(??_main+1)^(0+1792),w
 24566  15EE  3A00               	xorlw	0	; case 0
 24567  15EF  1903               	skipnz
 24568  15F0  2DF2               	goto	l9354
 24569  15F1  2DDD               	goto	l9082
 24570  15F2                     l9354:	
 24571                           
 24572                           ; Switch size 1, requested type "simple"
 24573                           ; Number of cases is 5, Range of values is 0 to 4
 24574                           ; switch strategies available:
 24575                           ; Name         Instructions Cycles
 24576                           ; direct_byte           16     6 (fixed)
 24577                           ; simple_byte           16     9 (average)
 24578                           ; jumptable            260     6 (fixed)
 24579                           ;	Chosen strategy is simple_byte
 24580  15F2  0855               	movf	??_main^(0+1792),w
 24581  15F3  3A00               	xorlw	0	; case 0
 24582  15F4  318D  1903         	skipnz
 24583  15F6  2DA2               	goto	l8960
 24584  15F7  3A01               	xorlw	1	; case 1
 24585  15F8  1903               	skipnz
 24586  15F9  2D8A  3192         	goto	l8952
 24587  15FB  3A03               	xorlw	3	; case 2
 24588  15FC  1903               	skipnz
 24589  15FD  2FFE               	goto	L3
 24590  15FE  3A01               	xorlw	1	; case 3
 24591  15FF  1903               	skipnz
 24592  1600  2A61               	goto	l9006
 24593  1601  3A07               	xorlw	7	; case 4
 24594  1602  1903               	skipnz
 24595  1603  2CBF               	goto	l9066
 24596  1604  2DDD               	goto	l9082
 24597  1605                     l9094:	
 24598                           
 24599                           ;main.c: 492:         UpdateScreen();
 24600  1605  3198  20AB  3192   	fcall	_UpdateScreen
 24601  1608                     l9096:	
 24602                           
 24603                           ;main.c: 494:         btn_count = 0;
 24604  1608  002E               	movlb	14	; select bank14
 24605  1609  01B1               	clrf	_btn_count^(0+1792)
 24606  160A                     l9098:	
 24607                           
 24608                           ;main.c: 496:         if((!RB1)){
 24609  160A  0020               	movlb	0	; select bank0
 24610  160B  188D               	btfsc	13,1	;volatile
 24611  160C  2E0E               	goto	u10461
 24612  160D  2E0F               	goto	u10460
 24613  160E                     u10461:	
 24614  160E  2E1F               	goto	l9104
 24615  160F                     u10460:	
 24616  160F                     l9100:	
 24617                           
 24618                           ;main.c: 497:             btn_count++;
 24619  160F  3001               	movlw	1
 24620  1610  002E               	movlb	14	; select bank14
 24621  1611  00D5               	movwf	??_main^(0+1792)
 24622  1612  0855               	movf	??_main^(0+1792),w
 24623  1613  07B1               	addwf	_btn_count^(0+1792),f
 24624                           
 24625                           ;main.c: 498:             if(increase_btn_debounce){
 24626  1614  0863               	movf	_increase_btn_debounce^(0+1792),w	;volatile
 24627  1615  0464               	iorwf	(_increase_btn_debounce+1)^(0+1792),w	;volatile
 24628  1616  1903               	btfsc	3,2
 24629  1617  2E19               	goto	u10471
 24630  1618  2E1A               	goto	u10470
 24631  1619                     u10471:	
 24632  1619  2E24               	goto	l9106
 24633  161A                     u10470:	
 24634  161A                     l9102:	
 24635                           
 24636                           ;main.c: 499:                 increase_btn_debounce--;
 24637  161A  30FF               	movlw	255
 24638  161B  07E3               	addwf	_increase_btn_debounce^(0+1792),f	;volatile
 24639  161C  30FF               	movlw	255
 24640  161D  3DE4               	addwfc	(_increase_btn_debounce+1)^(0+1792),f	;volatile
 24641  161E  2E24               	goto	l9106
 24642  161F                     l9104:	
 24643                           
 24644                           ;main.c: 502:             increase_btn_debounce = 20;
 24645  161F  3014               	movlw	20
 24646  1620  002E               	movlb	14	; select bank14
 24647  1621  00E3               	movwf	_increase_btn_debounce^(0+1792)	;volatile
 24648  1622  3000               	movlw	0
 24649  1623  00E4               	movwf	(_increase_btn_debounce^(0+1792)+1)	;volatile
 24650  1624                     l9106:	
 24651                           
 24652                           ;main.c: 505:         if((!RB2)){
 24653  1624  0020               	movlb	0	; select bank0
 24654  1625  190D               	btfsc	13,2	;volatile
 24655  1626  2E28               	goto	u10481
 24656  1627  2E29               	goto	u10480
 24657  1628                     u10481:	
 24658  1628  2E39               	goto	l9112
 24659  1629                     u10480:	
 24660  1629                     l9108:	
 24661                           
 24662                           ;main.c: 506:             btn_count++;
 24663  1629  3001               	movlw	1
 24664  162A  002E               	movlb	14	; select bank14
 24665  162B  00D5               	movwf	??_main^(0+1792)
 24666  162C  0855               	movf	??_main^(0+1792),w
 24667  162D  07B1               	addwf	_btn_count^(0+1792),f
 24668                           
 24669                           ;main.c: 507:             if(decrease_btn_debounce){
 24670  162E  0861               	movf	_decrease_btn_debounce^(0+1792),w	;volatile
 24671  162F  0462               	iorwf	(_decrease_btn_debounce+1)^(0+1792),w	;volatile
 24672  1630  1903               	btfsc	3,2
 24673  1631  2E33               	goto	u10491
 24674  1632  2E34               	goto	u10490
 24675  1633                     u10491:	
 24676  1633  2E3E               	goto	l9114
 24677  1634                     u10490:	
 24678  1634                     l9110:	
 24679                           
 24680                           ;main.c: 508:                 decrease_btn_debounce--;
 24681  1634  30FF               	movlw	255
 24682  1635  07E1               	addwf	_decrease_btn_debounce^(0+1792),f	;volatile
 24683  1636  30FF               	movlw	255
 24684  1637  3DE2               	addwfc	(_decrease_btn_debounce+1)^(0+1792),f	;volatile
 24685  1638  2E3E               	goto	l9114
 24686  1639                     l9112:	
 24687                           
 24688                           ;main.c: 511:             decrease_btn_debounce = 20;
 24689  1639  3014               	movlw	20
 24690  163A  002E               	movlb	14	; select bank14
 24691  163B  00E1               	movwf	_decrease_btn_debounce^(0+1792)	;volatile
 24692  163C  3000               	movlw	0
 24693  163D  00E2               	movwf	(_decrease_btn_debounce^(0+1792)+1)	;volatile
 24694  163E                     l9114:	
 24695                           
 24696                           ;main.c: 514:         if((!RB0)){
 24697  163E  0020               	movlb	0	; select bank0
 24698  163F  180D               	btfsc	13,0	;volatile
 24699  1640  2E42               	goto	u10501
 24700  1641  2E43               	goto	u10500
 24701  1642                     u10501:	
 24702  1642  2E53               	goto	l9120
 24703  1643                     u10500:	
 24704  1643                     l9116:	
 24705                           
 24706                           ;main.c: 515:             btn_count++;
 24707  1643  3001               	movlw	1
 24708  1644  002E               	movlb	14	; select bank14
 24709  1645  00D5               	movwf	??_main^(0+1792)
 24710  1646  0855               	movf	??_main^(0+1792),w
 24711  1647  07B1               	addwf	_btn_count^(0+1792),f
 24712                           
 24713                           ;main.c: 516:             if(mode_btn_debounce){
 24714  1648  085F               	movf	_mode_btn_debounce^(0+1792),w	;volatile
 24715  1649  0460               	iorwf	(_mode_btn_debounce+1)^(0+1792),w	;volatile
 24716  164A  1903               	btfsc	3,2
 24717  164B  2E4D               	goto	u10511
 24718  164C  2E4E               	goto	u10510
 24719  164D                     u10511:	
 24720  164D  2E58               	goto	l9122
 24721  164E                     u10510:	
 24722  164E                     l9118:	
 24723                           
 24724                           ;main.c: 517:                 mode_btn_debounce--;
 24725  164E  30FF               	movlw	255
 24726  164F  07DF               	addwf	_mode_btn_debounce^(0+1792),f	;volatile
 24727  1650  30FF               	movlw	255
 24728  1651  3DE0               	addwfc	(_mode_btn_debounce+1)^(0+1792),f	;volatile
 24729  1652  2E58               	goto	l9122
 24730  1653                     l9120:	
 24731                           
 24732                           ;main.c: 520:             mode_btn_debounce = 20;
 24733  1653  3014               	movlw	20
 24734  1654  002E               	movlb	14	; select bank14
 24735  1655  00DF               	movwf	_mode_btn_debounce^(0+1792)	;volatile
 24736  1656  3000               	movlw	0
 24737  1657  00E0               	movwf	(_mode_btn_debounce^(0+1792)+1)	;volatile
 24738  1658                     l9122:	
 24739                           
 24740                           ;main.c: 524:         if(btn_count==1){
 24741  1658  0331               	decf	_btn_count^(0+1792),w
 24742  1659  1D03               	btfss	3,2
 24743  165A  2E5C               	goto	u10521
 24744  165B  2E5D               	goto	u10520
 24745  165C                     u10521:	
 24746  165C  2F94               	goto	l9228
 24747  165D                     u10520:	
 24748  165D                     l9124:	
 24749                           
 24750                           ;main.c: 525:             if(decrement){
 24751  165D  0865               	movf	_decrement^(0+1792),w	;volatile
 24752  165E  0466               	iorwf	(_decrement+1)^(0+1792),w	;volatile
 24753  165F  1903               	btfsc	3,2
 24754  1660  2E62               	goto	u10531
 24755  1661  2E63               	goto	u10530
 24756  1662                     u10531:	
 24757  1662  2E68               	goto	l9128
 24758  1663                     u10530:	
 24759  1663                     l9126:	
 24760                           
 24761                           ;main.c: 526:                 decrement--;
 24762  1663  30FF               	movlw	255
 24763  1664  07E5               	addwf	_decrement^(0+1792),f	;volatile
 24764  1665  30FF               	movlw	255
 24765  1666  3DE6               	addwfc	(_decrement+1)^(0+1792),f	;volatile
 24766                           
 24767                           ;main.c: 527:             }else{
 24768  1667  2F98               	goto	l9230
 24769  1668                     l9128:	
 24770                           
 24771                           ;main.c: 528:                 if(!increase_btn_debounce){
 24772  1668  0863               	movf	_increase_btn_debounce^(0+1792),w	;volatile
 24773  1669  0464               	iorwf	(_increase_btn_debounce+1)^(0+1792),w	;volatile
 24774  166A  1D03               	btfss	3,2
 24775  166B  2E6D               	goto	u10541
 24776  166C  2E6E               	goto	u10540
 24777  166D                     u10541:	
 24778  166D  2ED8               	goto	l9164
 24779  166E                     u10540:	
 24780  166E                     l9130:	
 24781                           
 24782                           ;main.c: 529:                     if((RB5 == 1) && ((!RB2) != 1)){
 24783  166E  0020               	movlb	0	; select bank0
 24784  166F  1E8D               	btfss	13,5	;volatile
 24785  1670  2E72               	goto	u10551
 24786  1671  2E73               	goto	u10550
 24787  1672                     u10551:	
 24788  1672  2ED8               	goto	l9164
 24789  1673                     u10550:	
 24790  1673                     l9132:	
 24791  1673  1D0D               	btfss	13,2	;volatile
 24792  1674  2E76               	goto	u10561
 24793  1675  2E77               	goto	u10560
 24794  1676                     u10561:	
 24795  1676  2ED8               	goto	l9164
 24796  1677                     u10560:	
 24797  1677                     l9134:	
 24798                           
 24799                           ;main.c: 530:                         if(!speedChangeTimer){
 24800  1677  002E               	movlb	14	; select bank14
 24801  1678  082B               	movf	_speedChangeTimer^(0+1792),w
 24802  1679  042C               	iorwf	(_speedChangeTimer+1)^(0+1792),w
 24803  167A  1D03               	btfss	3,2
 24804  167B  2E7D               	goto	u10571
 24805  167C  2E7E               	goto	u10570
 24806  167D                     u10571:	
 24807  167D  2ED8               	goto	l9164
 24808  167E                     u10570:	
 24809  167E                     l9136:	
 24810                           
 24811                           ;main.c: 531:                             if(speedChangeState<4){
 24812  167E  3004               	movlw	4
 24813  167F  022F               	subwf	_speedChangeState^(0+1792),w
 24814  1680  1803               	skipnc
 24815  1681  2E83               	goto	u10581
 24816  1682  2E84               	goto	u10580
 24817  1683                     u10581:	
 24818  1683  2E8C               	goto	l9142
 24819  1684                     u10580:	
 24820  1684                     l9138:	
 24821                           
 24822                           ;main.c: 532:                                 speedChangeState++;
 24823  1684  3001               	movlw	1
 24824  1685  00D5               	movwf	??_main^(0+1792)
 24825  1686  0855               	movf	??_main^(0+1792),w
 24826  1687  07AF               	addwf	_speedChangeState^(0+1792),f
 24827  1688                     l9140:	
 24828                           
 24829                           ;main.c: 533:                                 speedChangeTimer = 300;
 24830  1688  302C               	movlw	44
 24831  1689  00AB               	movwf	_speedChangeTimer^(0+1792)
 24832  168A  3001               	movlw	1
 24833  168B  00AC               	movwf	(_speedChangeTimer^(0+1792)+1)
 24834  168C                     l9142:	
 24835                           
 24836                           ;main.c: 536:                             if(fireman_set){
 24837  168C  083B               	movf	_fireman_set^(0+1792),w
 24838  168D  1903               	btfsc	3,2
 24839  168E  2E90               	goto	u10591
 24840  168F  2E91               	goto	u10590
 24841  1690                     u10591:	
 24842  1690  2EA7               	goto	l9150
 24843  1691                     u10590:	
 24844  1691                     l9144:	
 24845                           
 24846                           ;main.c: 537:                                 if(frmn_speed < 100){
 24847  1691  3064               	movlw	100
 24848  1692  0267               	subwf	_frmn_speed^(0+1792),w
 24849  1693  1803               	skipnc
 24850  1694  2E96               	goto	u10601
 24851  1695  2E97               	goto	u10600
 24852  1696                     u10601:	
 24853  1696  2ED8               	goto	l9164
 24854  1697                     u10600:	
 24855  1697                     l9146:	
 24856                           
 24857                           ;main.c: 538:                                     frmn_speed += 1;
 24858  1697  3001               	movlw	1
 24859  1698  00D5               	movwf	??_main^(0+1792)
 24860  1699  0855               	movf	??_main^(0+1792),w
 24861  169A  07E7               	addwf	_frmn_speed^(0+1792),f
 24862  169B                     l9148:	
 24863                           
 24864                           ;main.c: 539:                                     HEFLASH_writeBlock(2, &frmn_speed, siz
      +                          eof(frmn_speed));
 24865  169B  3067               	movlw	(low (_frmn_speed| (0+1792)))& (0+255)
 24866  169C  00D5               	movwf	??_main^(0+1792)
 24867  169D  0855               	movf	??_main^(0+1792),w
 24868  169E  002D               	movlb	13	; select bank13
 24869  169F  00A6               	movwf	HEFLASH_writeBlock@data^(0+1664)
 24870  16A0  01A7               	clrf	HEFLASH_writeBlock@count^(0+1664)
 24871  16A1  0AA7               	incf	HEFLASH_writeBlock@count^(0+1664),f
 24872  16A2  3002               	movlw	2
 24873  16A3  31A0  2059  3192   	fcall	_HEFLASH_writeBlock
 24874  16A6  2ED8               	goto	l9164
 24875  16A7                     l9150:	
 24876                           
 24877                           ;main.c: 542:                                 if((speed < 100)){
 24878  16A7  3064               	movlw	100
 24879  16A8  0268               	subwf	_speed^(0+1792),w
 24880  16A9  1803               	skipnc
 24881  16AA  2EAC               	goto	u10611
 24882  16AB  2EAD               	goto	u10610
 24883  16AC                     u10611:	
 24884  16AC  2ED8               	goto	l975
 24885  16AD                     u10610:	
 24886  16AD                     l9152:	
 24887                           
 24888                           ;main.c: 543:                                     if(mode == 0){
 24889  16AD  0840               	movf	_mode^(0+1792),w
 24890  16AE  1D03               	btfss	3,2
 24891  16AF  2EB1               	goto	u10621
 24892  16B0  2EB2               	goto	u10620
 24893  16B1                     u10621:	
 24894  16B1  2EC2               	goto	l9158
 24895  16B2                     u10620:	
 24896  16B2                     l9154:	
 24897                           
 24898                           ;main.c: 544:                                         speed += 1;
 24899  16B2  3001               	movlw	1
 24900  16B3  00D5               	movwf	??_main^(0+1792)
 24901  16B4  0855               	movf	??_main^(0+1792),w
 24902  16B5  07E8               	addwf	_speed^(0+1792),f
 24903  16B6                     l9156:	
 24904                           
 24905                           ;main.c: 545:                                         HEFLASH_writeBlock(1, &speed, size
      +                          of(speed));
 24906  16B6  3068               	movlw	(low (_speed| (0+1792)))& (0+255)
 24907  16B7  00D5               	movwf	??_main^(0+1792)
 24908  16B8  0855               	movf	??_main^(0+1792),w
 24909  16B9  002D               	movlb	13	; select bank13
 24910  16BA  00A6               	movwf	HEFLASH_writeBlock@data^(0+1664)
 24911  16BB  01A7               	clrf	HEFLASH_writeBlock@count^(0+1664)
 24912  16BC  0AA7               	incf	HEFLASH_writeBlock@count^(0+1664),f
 24913  16BD  3001               	movlw	1
 24914  16BE  31A0  2059  3192   	fcall	_HEFLASH_writeBlock
 24915                           
 24916                           ;main.c: 546:                                     }else if(mode==2){
 24917  16C1  2ED8               	goto	l9164
 24918  16C2                     l9158:	
 24919  16C2  3002               	movlw	2
 24920  16C3  0640               	xorwf	_mode^(0+1792),w
 24921  16C4  1D03               	btfss	3,2
 24922  16C5  2EC7               	goto	u10631
 24923  16C6  2EC8               	goto	u10630
 24924  16C7                     u10631:	
 24925  16C7  2ED8               	goto	l975
 24926  16C8                     u10630:	
 24927  16C8                     l9160:	
 24928                           
 24929                           ;main.c: 547:                                         speed += 1;
 24930  16C8  3001               	movlw	1
 24931  16C9  00D5               	movwf	??_main^(0+1792)
 24932  16CA  0855               	movf	??_main^(0+1792),w
 24933  16CB  07E8               	addwf	_speed^(0+1792),f
 24934  16CC                     l9162:	
 24935                           
 24936                           ;main.c: 548:                                         HEFLASH_writeBlock(3, &speed, size
      +                          of(speed));
 24937  16CC  3068               	movlw	(low (_speed| (0+1792)))& (0+255)
 24938  16CD  00D5               	movwf	??_main^(0+1792)
 24939  16CE  0855               	movf	??_main^(0+1792),w
 24940  16CF  002D               	movlb	13	; select bank13
 24941  16D0  00A6               	movwf	HEFLASH_writeBlock@data^(0+1664)
 24942  16D1  01A7               	clrf	HEFLASH_writeBlock@count^(0+1664)
 24943  16D2  0AA7               	incf	HEFLASH_writeBlock@count^(0+1664),f
 24944  16D3  3003               	movlw	3
 24945  16D4  31A0  2059  3192   	fcall	_HEFLASH_writeBlock
 24946  16D7  2ED8               	goto	l9164
 24947  16D8                     l975:	
 24948                           ;main.c: 552:                         }
 24949                           
 24950  16D8                     l9164:	
 24951                           
 24952                           ;main.c: 555:                 if(!decrease_btn_debounce){
 24953  16D8  002E               	movlb	14	; select bank14
 24954  16D9  0861               	movf	_decrease_btn_debounce^(0+1792),w	;volatile
 24955  16DA  0462               	iorwf	(_decrease_btn_debounce+1)^(0+1792),w	;volatile
 24956  16DB  1D03               	btfss	3,2
 24957  16DC  2EDE               	goto	u10641
 24958  16DD  2EDF               	goto	u10640
 24959  16DE                     u10641:	
 24960  16DE  2F41               	goto	l9200
 24961  16DF                     u10640:	
 24962  16DF                     l9166:	
 24963                           
 24964                           ;main.c: 556:                     if((RB5 == 1) && ((!RB1) != 1)){
 24965  16DF  0020               	movlb	0	; select bank0
 24966  16E0  1E8D               	btfss	13,5	;volatile
 24967  16E1  2EE3               	goto	u10651
 24968  16E2  2EE4               	goto	u10650
 24969  16E3                     u10651:	
 24970  16E3  2F41               	goto	l9200
 24971  16E4                     u10650:	
 24972  16E4                     l9168:	
 24973  16E4  1C8D               	btfss	13,1	;volatile
 24974  16E5  2EE7               	goto	u10661
 24975  16E6  2EE8               	goto	u10660
 24976  16E7                     u10661:	
 24977  16E7  2F41               	goto	l9200
 24978  16E8                     u10660:	
 24979  16E8                     l9170:	
 24980                           
 24981                           ;main.c: 557:                         if(!speedChangeTimer){
 24982  16E8  002E               	movlb	14	; select bank14
 24983  16E9  082B               	movf	_speedChangeTimer^(0+1792),w
 24984  16EA  042C               	iorwf	(_speedChangeTimer+1)^(0+1792),w
 24985  16EB  1D03               	btfss	3,2
 24986  16EC  2EEE               	goto	u10671
 24987  16ED  2EEF               	goto	u10670
 24988  16EE                     u10671:	
 24989  16EE  2F41               	goto	l9200
 24990  16EF                     u10670:	
 24991  16EF                     l9172:	
 24992                           
 24993                           ;main.c: 558:                             if(speedChangeState<4){
 24994  16EF  3004               	movlw	4
 24995  16F0  022F               	subwf	_speedChangeState^(0+1792),w
 24996  16F1  1803               	skipnc
 24997  16F2  2EF4               	goto	u10681
 24998  16F3  2EF5               	goto	u10680
 24999  16F4                     u10681:	
 25000  16F4  2EFD               	goto	l9178
 25001  16F5                     u10680:	
 25002  16F5                     l9174:	
 25003                           
 25004                           ;main.c: 559:                                 speedChangeState++;
 25005  16F5  3001               	movlw	1
 25006  16F6  00D5               	movwf	??_main^(0+1792)
 25007  16F7  0855               	movf	??_main^(0+1792),w
 25008  16F8  07AF               	addwf	_speedChangeState^(0+1792),f
 25009  16F9                     l9176:	
 25010                           
 25011                           ;main.c: 560:                                 speedChangeTimer = 300;
 25012  16F9  302C               	movlw	44
 25013  16FA  00AB               	movwf	_speedChangeTimer^(0+1792)
 25014  16FB  3001               	movlw	1
 25015  16FC  00AC               	movwf	(_speedChangeTimer^(0+1792)+1)
 25016  16FD                     l9178:	
 25017                           
 25018                           ;main.c: 562:                             if(fireman_set)
 25019  16FD  083B               	movf	_fireman_set^(0+1792),w
 25020  16FE  1903               	btfsc	3,2
 25021  16FF  2F01               	goto	u10691
 25022  1700  2F02               	goto	u10690
 25023  1701                     u10691:	
 25024  1701  2F15               	goto	l9186
 25025  1702                     u10690:	
 25026  1702                     l9180:	
 25027                           
 25028                           ;main.c: 563:                             {;main.c: 564:                                
      +                           if(frmn_speed > 0)
 25029  1702  0867               	movf	_frmn_speed^(0+1792),w
 25030  1703  1903               	btfsc	3,2
 25031  1704  2F06               	goto	u10701
 25032  1705  2F07               	goto	u10700
 25033  1706                     u10701:	
 25034  1706  2F41               	goto	l9200
 25035  1707                     u10700:	
 25036  1707                     l9182:	
 25037                           
 25038                           ;main.c: 565:                                 {;main.c: 566:                            
      +                                   frmn_speed -= 1;
 25039  1707  3001               	movlw	1
 25040  1708  02E7               	subwf	_frmn_speed^(0+1792),f
 25041  1709                     l9184:	
 25042                           
 25043                           ;main.c: 567:                                     HEFLASH_writeBlock(2, &frmn_speed, siz
      +                          eof(frmn_speed));
 25044  1709  3067               	movlw	(low (_frmn_speed| (0+1792)))& (0+255)
 25045  170A  00D5               	movwf	??_main^(0+1792)
 25046  170B  0855               	movf	??_main^(0+1792),w
 25047  170C  002D               	movlb	13	; select bank13
 25048  170D  00A6               	movwf	HEFLASH_writeBlock@data^(0+1664)
 25049  170E  01A7               	clrf	HEFLASH_writeBlock@count^(0+1664)
 25050  170F  0AA7               	incf	HEFLASH_writeBlock@count^(0+1664),f
 25051  1710  3002               	movlw	2
 25052  1711  31A0  2059  3192   	fcall	_HEFLASH_writeBlock
 25053  1714  2F41               	goto	l9200
 25054  1715                     l9186:	
 25055                           
 25056                           ;main.c: 571:                             {;main.c: 572:                                
      +                           if((speed > 0)){
 25057  1715  0868               	movf	_speed^(0+1792),w
 25058  1716  1903               	btfsc	3,2
 25059  1717  2F19               	goto	u10711
 25060  1718  2F1A               	goto	u10710
 25061  1719                     u10711:	
 25062  1719  2F41               	goto	l986
 25063  171A                     u10710:	
 25064  171A                     l9188:	
 25065                           
 25066                           ;main.c: 573:                                     if(mode == 0){
 25067  171A  0840               	movf	_mode^(0+1792),w
 25068  171B  1D03               	btfss	3,2
 25069  171C  2F1E               	goto	u10721
 25070  171D  2F1F               	goto	u10720
 25071  171E                     u10721:	
 25072  171E  2F2D               	goto	l9194
 25073  171F                     u10720:	
 25074  171F                     l9190:	
 25075                           
 25076                           ;main.c: 574:                                         speed -= 1;
 25077  171F  3001               	movlw	1
 25078  1720  02E8               	subwf	_speed^(0+1792),f
 25079  1721                     l9192:	
 25080                           
 25081                           ;main.c: 575:                                         HEFLASH_writeBlock(1, &speed, size
      +                          of(speed));
 25082  1721  3068               	movlw	(low (_speed| (0+1792)))& (0+255)
 25083  1722  00D5               	movwf	??_main^(0+1792)
 25084  1723  0855               	movf	??_main^(0+1792),w
 25085  1724  002D               	movlb	13	; select bank13
 25086  1725  00A6               	movwf	HEFLASH_writeBlock@data^(0+1664)
 25087  1726  01A7               	clrf	HEFLASH_writeBlock@count^(0+1664)
 25088  1727  0AA7               	incf	HEFLASH_writeBlock@count^(0+1664),f
 25089  1728  3001               	movlw	1
 25090  1729  31A0  2059  3192   	fcall	_HEFLASH_writeBlock
 25091                           
 25092                           ;main.c: 576:                                     }else if(mode==2){
 25093  172C  2F41               	goto	l9200
 25094  172D                     l9194:	
 25095  172D  3002               	movlw	2
 25096  172E  0640               	xorwf	_mode^(0+1792),w
 25097  172F  1D03               	btfss	3,2
 25098  1730  2F32               	goto	u10731
 25099  1731  2F33               	goto	u10730
 25100  1732                     u10731:	
 25101  1732  2F41               	goto	l986
 25102  1733                     u10730:	
 25103  1733                     l9196:	
 25104                           
 25105                           ;main.c: 577:                                         speed -= 1;
 25106  1733  3001               	movlw	1
 25107  1734  02E8               	subwf	_speed^(0+1792),f
 25108  1735                     l9198:	
 25109                           
 25110                           ;main.c: 578:                                         HEFLASH_writeBlock(3, &speed, size
      +                          of(speed));
 25111  1735  3068               	movlw	(low (_speed| (0+1792)))& (0+255)
 25112  1736  00D5               	movwf	??_main^(0+1792)
 25113  1737  0855               	movf	??_main^(0+1792),w
 25114  1738  002D               	movlb	13	; select bank13
 25115  1739  00A6               	movwf	HEFLASH_writeBlock@data^(0+1664)
 25116  173A  01A7               	clrf	HEFLASH_writeBlock@count^(0+1664)
 25117  173B  0AA7               	incf	HEFLASH_writeBlock@count^(0+1664),f
 25118  173C  3003               	movlw	3
 25119  173D  31A0  2059  3192   	fcall	_HEFLASH_writeBlock
 25120  1740  2F41               	goto	l9200
 25121  1741                     l986:	
 25122                           ;main.c: 582:                         }
 25123                           
 25124  1741                     l9200:	
 25125                           
 25126                           ;main.c: 585:                 if(!mode_btn_debounce){
 25127  1741  002E               	movlb	14	; select bank14
 25128  1742  085F               	movf	_mode_btn_debounce^(0+1792),w	;volatile
 25129  1743  0460               	iorwf	(_mode_btn_debounce+1)^(0+1792),w	;volatile
 25130  1744  1D03               	btfss	3,2
 25131  1745  2F47               	goto	u10741
 25132  1746  2F48               	goto	u10740
 25133  1747                     u10741:	
 25134  1747  2F98               	goto	l9230
 25135  1748                     u10740:	
 25136  1748                     l9202:	
 25137                           
 25138                           ;main.c: 586:                     if(!mode_change_flag){
 25139  1748  083C               	movf	_mode_change_flag^(0+1792),w
 25140  1749  1D03               	btfss	3,2
 25141  174A  2F4C               	goto	u10751
 25142  174B  2F4D               	goto	u10750
 25143  174C                     u10751:	
 25144  174C  2F98               	goto	l9230
 25145  174D                     u10750:	
 25146  174D                     l9204:	
 25147                           
 25148                           ;main.c: 587:                         mode_change_flag = 1;
 25149  174D  01BC               	clrf	_mode_change_flag^(0+1792)
 25150  174E  0ABC               	incf	_mode_change_flag^(0+1792),f
 25151  174F                     l9206:	
 25152                           
 25153                           ;main.c: 588:                         if(fireman_set){
 25154  174F  083B               	movf	_fireman_set^(0+1792),w
 25155  1750  1903               	btfsc	3,2
 25156  1751  2F53               	goto	u10761
 25157  1752  2F54               	goto	u10760
 25158  1753                     u10761:	
 25159  1753  2F57               	goto	l997
 25160  1754                     u10760:	
 25161  1754                     l9208:	
 25162                           
 25163                           ;main.c: 589:                             fireman_inc = 0;
 25164  1754  01DB               	clrf	_fireman_inc^(0+1792)	;volatile
 25165  1755  01DC               	clrf	(_fireman_inc+1)^(0+1792)	;volatile
 25166                           
 25167                           ;main.c: 590:                         }else{
 25168  1756  2F98               	goto	l9230
 25169  1757                     l997:	
 25170                           
 25171                           ;main.c: 591:                             if(((!RB1) != 1) && ((!RB2) != 1)){
 25172  1757  0020               	movlb	0	; select bank0
 25173  1758  1C8D               	btfss	13,1	;volatile
 25174  1759  2F5B               	goto	u10771
 25175  175A  2F5C               	goto	u10770
 25176  175B                     u10771:	
 25177  175B  2F98               	goto	l9230
 25178  175C                     u10770:	
 25179  175C                     l9210:	
 25180  175C  1D0D               	btfss	13,2	;volatile
 25181  175D  2F5F               	goto	u10781
 25182  175E  2F60               	goto	u10780
 25183  175F                     u10781:	
 25184  175F  2F98               	goto	l9230
 25185  1760                     u10780:	
 25186  1760                     l9212:	
 25187                           
 25188                           ;main.c: 593:                                 if(mode == 4){
 25189  1760  3004               	movlw	4
 25190  1761  002E               	movlb	14	; select bank14
 25191  1762  0640               	xorwf	_mode^(0+1792),w
 25192  1763  1D03               	btfss	3,2
 25193  1764  2F66               	goto	u10791
 25194  1765  2F67               	goto	u10790
 25195  1766                     u10791:	
 25196  1766  2F70               	goto	l9218
 25197  1767                     u10790:	
 25198  1767                     l9214:	
 25199                           
 25200                           ;main.c: 595:                                     fireman_set = 0;
 25201  1767  01BB               	clrf	_fireman_set^(0+1792)
 25202  1768                     l9216:	
 25203                           
 25204                           ;main.c: 596:                                     HEFLASH_readBlock(&mode, 0, sizeof(mod
      +                          e));
 25205  1768  002D               	movlb	13	; select bank13
 25206  1769  01A2               	clrf	HEFLASH_readBlock@radd^(0+1664)
 25207  176A  01A3               	clrf	HEFLASH_readBlock@count^(0+1664)
 25208  176B  0AA3               	incf	HEFLASH_readBlock@count^(0+1664),f
 25209  176C  3040               	movlw	(low (_mode| (0+1792)))& (0+255)
 25210  176D  31AC  24CF  3192   	fcall	_HEFLASH_readBlock
 25211  1770                     l9218:	
 25212                           
 25213                           ;main.c: 598:                                 if(mode < 3)
 25214  1770  3003               	movlw	3
 25215  1771  002E               	movlb	14	; select bank14
 25216  1772  0240               	subwf	_mode^(0+1792),w
 25217  1773  1803               	skipnc
 25218  1774  2F76               	goto	u10801
 25219  1775  2F77               	goto	u10800
 25220  1776                     u10801:	
 25221  1776  2F87               	goto	l9224
 25222  1777                     u10800:	
 25223  1777                     l9220:	
 25224                           
 25225                           ;main.c: 599:                                 {;main.c: 600:                            
      +                                   mode++;
 25226  1777  3001               	movlw	1
 25227  1778  00D5               	movwf	??_main^(0+1792)
 25228  1779  0855               	movf	??_main^(0+1792),w
 25229  177A  07C0               	addwf	_mode^(0+1792),f
 25230  177B                     l9222:	
 25231                           
 25232                           ;main.c: 601:                                     HEFLASH_writeBlock(0, &mode, sizeof(mo
      +                          de));
 25233  177B  3040               	movlw	(low (_mode| (0+1792)))& (0+255)
 25234  177C  00D5               	movwf	??_main^(0+1792)
 25235  177D  0855               	movf	??_main^(0+1792),w
 25236  177E  002D               	movlb	13	; select bank13
 25237  177F  00A6               	movwf	HEFLASH_writeBlock@data^(0+1664)
 25238  1780  01A7               	clrf	HEFLASH_writeBlock@count^(0+1664)
 25239  1781  0AA7               	incf	HEFLASH_writeBlock@count^(0+1664),f
 25240  1782  3000               	movlw	0
 25241  1783  31A0  2059  3192   	fcall	_HEFLASH_writeBlock
 25242                           
 25243                           ;main.c: 602:                                 }
 25244  1786  2F98               	goto	l9230
 25245  1787                     l9224:	
 25246                           
 25247                           ;main.c: 604:                                 {;main.c: 605:                            
      +                                   mode = 0;
 25248  1787  01C0               	clrf	_mode^(0+1792)
 25249  1788                     l9226:	
 25250                           
 25251                           ;main.c: 606:                                     HEFLASH_writeBlock(0, &mode, sizeof(mo
      +                          de));
 25252  1788  3040               	movlw	(low (_mode| (0+1792)))& (0+255)
 25253  1789  00D5               	movwf	??_main^(0+1792)
 25254  178A  0855               	movf	??_main^(0+1792),w
 25255  178B  002D               	movlb	13	; select bank13
 25256  178C  00A6               	movwf	HEFLASH_writeBlock@data^(0+1664)
 25257  178D  01A7               	clrf	HEFLASH_writeBlock@count^(0+1664)
 25258  178E  0AA7               	incf	HEFLASH_writeBlock@count^(0+1664),f
 25259  178F  3000               	movlw	0
 25260  1790  31A0  2059  3192   	fcall	_HEFLASH_writeBlock
 25261  1793  2F98               	goto	l9230
 25262  1794                     l9228:	
 25263                           
 25264                           ;main.c: 614:             decrement = 20;
 25265  1794  3014               	movlw	20
 25266  1795  00E5               	movwf	_decrement^(0+1792)	;volatile
 25267  1796  3000               	movlw	0
 25268  1797  00E6               	movwf	(_decrement^(0+1792)+1)	;volatile
 25269  1798                     l9230:	
 25270                           
 25271                           ;main.c: 617:         if(updateAutoRemoteDelay){
 25272  1798  002E               	movlb	14	; select bank14
 25273  1799  0830               	movf	_updateAutoRemoteDelay^(0+1792),w
 25274  179A  1903               	btfsc	3,2
 25275  179B  2F9D               	goto	u10811
 25276  179C  2F9E               	goto	u10810
 25277  179D                     u10811:	
 25278  179D  2FA0               	goto	l1004
 25279  179E                     u10810:	
 25280  179E                     l9232:	
 25281                           
 25282                           ;main.c: 618:             updateAutoRemoteDelay--;
 25283  179E  3001               	movlw	1
 25284  179F  02B0               	subwf	_updateAutoRemoteDelay^(0+1792),f
 25285  17A0                     l1004:	
 25286                           ;main.c: 619:         }
 25287                           
 25288                           
 25289                           ;main.c: 621:         if(!fireman_inc){
 25290  17A0  085B               	movf	_fireman_inc^(0+1792),w	;volatile
 25291  17A1  045C               	iorwf	(_fireman_inc+1)^(0+1792),w	;volatile
 25292  17A2  1D03               	btfss	3,2
 25293  17A3  2FA5               	goto	u10821
 25294  17A4  2FA6               	goto	u10820
 25295  17A5                     u10821:	
 25296  17A5  2FAF               	goto	l9238
 25297  17A6                     u10820:	
 25298  17A6                     l9234:	
 25299                           
 25300                           ;main.c: 623:             fireman_set = 0;
 25301  17A6  01BB               	clrf	_fireman_set^(0+1792)
 25302  17A7                     l9236:	
 25303                           
 25304                           ;main.c: 624:             HEFLASH_readBlock(&mode, 0, sizeof(mode));
 25305  17A7  002D               	movlb	13	; select bank13
 25306  17A8  01A2               	clrf	HEFLASH_readBlock@radd^(0+1664)
 25307  17A9  01A3               	clrf	HEFLASH_readBlock@count^(0+1664)
 25308  17AA  0AA3               	incf	HEFLASH_readBlock@count^(0+1664),f
 25309  17AB  3040               	movlw	(low (_mode| (0+1792)))& (0+255)
 25310  17AC  31AC  24CF  3192   	fcall	_HEFLASH_readBlock
 25311  17AF                     l9238:	
 25312                           
 25313                           ;main.c: 627:         if(!factory_reset_dec){
 25314  17AF  002E               	movlb	14	; select bank14
 25315  17B0  085D               	movf	_factory_reset_dec^(0+1792),w	;volatile
 25316  17B1  045E               	iorwf	(_factory_reset_dec+1)^(0+1792),w	;volatile
 25317  17B2  1D03               	btfss	3,2
 25318  17B3  2FB5               	goto	u10831
 25319  17B4  2FB7               	goto	u10830
 25320  17B5                     u10831:	
 25321  17B5  319C  2C85         	goto	l8902
 25322  17B7                     u10830:	
 25323  17B7                     l9240:	
 25324                           
 25325                           ;main.c: 628:             fireman_set = 0;
 25326  17B7  01BB               	clrf	_fireman_set^(0+1792)
 25327                           
 25328                           ;main.c: 629:             fireman_inc = 0;
 25329  17B8  01DB               	clrf	_fireman_inc^(0+1792)	;volatile
 25330  17B9  01DC               	clrf	(_fireman_inc+1)^(0+1792)	;volatile
 25331                           
 25332                           ;main.c: 631:             ext_ref_flag = 0;
 25333  17BA  01B9               	clrf	_ext_ref_flag^(0+1792)	;volatile
 25334                           
 25335                           ;main.c: 632:             dry_state = 0;
 25336  17BB  01B8               	clrf	_dry_state^(0+1792)	;volatile
 25337                           
 25338                           ;main.c: 633:             wet_state = 0;
 25339  17BC  01B7               	clrf	_wet_state^(0+1792)	;volatile
 25340                           
 25341                           ;main.c: 634:             press = 0;
 25342  17BD  01B4               	clrf	_press^(0+1792)
 25343  17BE                     l9242:	
 25344                           
 25345                           ;main.c: 636:             mode = 5;
 25346  17BE  3005               	movlw	5
 25347  17BF  00D5               	movwf	??_main^(0+1792)
 25348  17C0  0855               	movf	??_main^(0+1792),w
 25349  17C1  00C0               	movwf	_mode^(0+1792)
 25350  17C2                     l9244:	
 25351                           
 25352                           ;main.c: 637:             speed = 50;
 25353  17C2  3032               	movlw	50
 25354  17C3  00D5               	movwf	??_main^(0+1792)
 25355  17C4  0855               	movf	??_main^(0+1792),w
 25356  17C5  00E8               	movwf	_speed^(0+1792)
 25357  17C6                     l9246:	
 25358                           
 25359                           ;main.c: 638:             frmn_speed = 100;
 25360  17C6  3064               	movlw	100
 25361  17C7  00D5               	movwf	??_main^(0+1792)
 25362  17C8  0855               	movf	??_main^(0+1792),w
 25363  17C9  00E7               	movwf	_frmn_speed^(0+1792)
 25364  17CA                     l9248:	
 25365                           
 25366                           ;main.c: 639:             ext_speed = 0;
 25367  17CA  01AD               	clrf	_ext_speed^(0+1792)
 25368  17CB  01AE               	clrf	(_ext_speed+1)^(0+1792)
 25369  17CC                     l9250:	
 25370                           
 25371                           ;main.c: 641:             HEFLASH_writeBlock(0, &mode, sizeof(mode));
 25372  17CC  3040               	movlw	(low (_mode| (0+1792)))& (0+255)
 25373  17CD  00D5               	movwf	??_main^(0+1792)
 25374  17CE  0855               	movf	??_main^(0+1792),w
 25375  17CF  002D               	movlb	13	; select bank13
 25376  17D0  00A6               	movwf	HEFLASH_writeBlock@data^(0+1664)
 25377  17D1  01A7               	clrf	HEFLASH_writeBlock@count^(0+1664)
 25378  17D2  0AA7               	incf	HEFLASH_writeBlock@count^(0+1664),f
 25379  17D3  3000               	movlw	0
 25380  17D4  31A0  2059  3192   	fcall	_HEFLASH_writeBlock
 25381  17D7                     l9252:	
 25382                           
 25383                           ;main.c: 642:             HEFLASH_writeBlock(1, &speed, sizeof(speed));
 25384  17D7  3068               	movlw	(low (_speed| (0+1792)))& (0+255)
 25385  17D8  002E               	movlb	14	; select bank14
 25386  17D9  00D5               	movwf	??_main^(0+1792)
 25387  17DA  0855               	movf	??_main^(0+1792),w
 25388  17DB  002D               	movlb	13	; select bank13
 25389  17DC  00A6               	movwf	HEFLASH_writeBlock@data^(0+1664)
 25390  17DD  01A7               	clrf	HEFLASH_writeBlock@count^(0+1664)
 25391  17DE  0AA7               	incf	HEFLASH_writeBlock@count^(0+1664),f
 25392  17DF  3001               	movlw	1
 25393  17E0  31A0  2059  3192   	fcall	_HEFLASH_writeBlock
 25394  17E3                     l9254:	
 25395                           
 25396                           ;main.c: 643:             HEFLASH_writeBlock(3, &speed, sizeof(speed));
 25397  17E3  3068               	movlw	(low (_speed| (0+1792)))& (0+255)
 25398  17E4  002E               	movlb	14	; select bank14
 25399  17E5  00D5               	movwf	??_main^(0+1792)
 25400  17E6  0855               	movf	??_main^(0+1792),w
 25401  17E7  002D               	movlb	13	; select bank13
 25402  17E8  00A6               	movwf	HEFLASH_writeBlock@data^(0+1664)
 25403  17E9  01A7               	clrf	HEFLASH_writeBlock@count^(0+1664)
 25404  17EA  0AA7               	incf	HEFLASH_writeBlock@count^(0+1664),f
 25405  17EB  3003               	movlw	3
 25406  17EC  31A0  2059  3192   	fcall	_HEFLASH_writeBlock
 25407  17EF                     l9256:	
 25408                           
 25409                           ;main.c: 644:             HEFLASH_writeBlock(2, &frmn_speed, sizeof(frmn_speed));
 25410  17EF  3067               	movlw	(low (_frmn_speed| (0+1792)))& (0+255)
 25411  17F0  002E               	movlb	14	; select bank14
 25412  17F1  00D5               	movwf	??_main^(0+1792)
 25413  17F2  0855               	movf	??_main^(0+1792),w
 25414  17F3  002D               	movlb	13	; select bank13
 25415  17F4  00A6               	movwf	HEFLASH_writeBlock@data^(0+1664)
 25416  17F5  01A7               	clrf	HEFLASH_writeBlock@count^(0+1664)
 25417  17F6  0AA7               	incf	HEFLASH_writeBlock@count^(0+1664),f
 25418  17F7  3002               	movlw	2
 25419  17F8  31A0  2059  3192   	fcall	_HEFLASH_writeBlock
 25420  17FB  2FB5               	goto	u10831
 25421  17FC  3180  28C1         	ljmp	start
 25422  17FE                     L3:	
 25423  17FE                     __end_of_main:	
 25424  17FE  318E  2EC0         	ljmp	l8976


Data Sizes:
    Strings     104
    Constant    3076
    Data        80
    BSS         165
    Persistent  35
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0             0      0       0
    BANK1             0      0       0
    BANK2             0      0       0
    BANK3             0      0       0
    BANK4             0      0       0
    BANK5             0      0       0
    BANK6             0      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0
    BANK13           80     79      80
    BANK14           80     24      74
    BANK15           80      8      77
    BANK16           80      0      80
    BANK17           80      0      48
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_DO_TX$2312$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), NULL(NULL[0]), 

    S601$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), NULL(NULL[0]), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK17[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK17[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_17(CODE[11]), STR_16(CODE[11]), STR_15(CODE[11]), STR_14(CODE[9]), 
		 -> STR_13(CODE[8]), STR_12(CODE[12]), STR_11(CODE[2]), STR_10(CODE[12]), 
		 -> STR_9(CODE[9]), STR_8(CODE[8]), STR_7(CODE[11]), STR_6(CODE[11]), 
		 -> STR_5(CODE[11]), STR_4(CODE[5]), STR_3(CODE[4]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> newTextLine4(BANK15[16]), newTextLine3(BANK16[16]), newTextLine2(BANK16[16]), newTextLine1(BANK15[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK14[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> newTextLine4(BANK15[16]), newTextLine3(BANK16[16]), newTextLine2(BANK16[16]), newTextLine1(BANK15[16]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK17[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK14[6]), 

    S1941_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> newTextLine4(BANK15[16]), newTextLine3(BANK16[16]), newTextLine2(BANK16[16]), newTextLine1(BANK15[16]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> newTextLine4(BANK15[16]), newTextLine3(BANK16[16]), newTextLine2(BANK16[16]), newTextLine1(BANK15[16]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK14[6]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK14[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK14[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_17(CODE[11]), STR_16(CODE[11]), STR_15(CODE[11]), STR_14(CODE[9]), 
		 -> STR_13(CODE[8]), STR_12(CODE[12]), STR_11(CODE[2]), STR_10(CODE[12]), 
		 -> STR_9(CODE[9]), STR_8(CODE[8]), STR_7(CODE[11]), STR_6(CODE[11]), 
		 -> STR_5(CODE[11]), STR_4(CODE[5]), STR_3(CODE[4]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_17(CODE[11]), STR_16(CODE[11]), STR_15(CODE[11]), STR_14(CODE[9]), 
		 -> STR_13(CODE[8]), STR_12(CODE[12]), STR_11(CODE[2]), STR_10(CODE[12]), 
		 -> STR_9(CODE[9]), STR_8(CODE[8]), STR_7(CODE[11]), STR_6(CODE[11]), 
		 -> STR_5(CODE[11]), STR_4(CODE[5]), STR_3(CODE[4]), STR_2(CODE[11]), 
		 -> STR_1(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK14[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK14[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK14[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK14[6]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK14[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK17[32]), 

    sp__memset	PTR void  size(2) Largest target is 1008
		 -> buffer(BIGRAM[1008]), 

    OLED_SetFont@font	PTR const unsigned char  size(2) Largest target is 3044
		 -> BIG_FONTS(CODE[3044]), 

    S1437_Current_Font_s$font	PTR const unsigned char  size(2) Largest target is 3044
		 -> BIG_FONTS(CODE[3044]), 

    cfont.font	PTR const unsigned char  size(2) Largest target is 3044
		 -> BIG_FONTS(CODE[3044]), 

    clearText@textToClear	PTR unsigned char  size(2) Largest target is 16
		 -> newTextLine4(BANK15[16]), newTextLine3(BANK16[16]), newTextLine2(BANK16[16]), newTextLine1(BANK15[16]), 

    HEFLASH_readBlock@buffer	PTR unsigned char  size(1) Largest target is 1
		 -> frmn_speed(BANK14[1]), speed(BANK14[1]), mode(BANK14[1]), 

    HEFLASH_writeBlock@data	PTR unsigned char  size(1) Largest target is 1
		 -> frmn_speed(BANK14[1]), speed(BANK14[1]), mode(BANK14[1]), 

    S601$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), 
		 -> i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), NULL(NULL[0]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), 
		 -> i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), NULL(NULL[0]), 

    S601$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), NULL(NULL[0]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), NULL(NULL[0]), 

    S601$callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), i2c_master_example@rdBlkRegCompleteHandler(), 
		 -> i2c_master_example@wr2RegCompleteHandler(), wr1RegCompleteHandler(), i2c_master_example@rd2RegCompleteHandler(), i2c_master_example@rd1RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), i2c_master_example@rdBlkRegCompleteHandler(), 
		 -> i2c_master_example@wr2RegCompleteHandler(), wr1RegCompleteHandler(), i2c_master_example@rd2RegCompleteHandler(), i2c_master_example@rd1RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E12405[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    i2c_master_example@rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    d.data	PTR unsigned char  size(1) Largest target is 0

    S72$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under ___ISR in COMMON

    ___ISR->i1_HEFLASH_writeBlock
    i1_HEFLASH_writeBlock->i1_FLASH_write

Critical Paths under _main in BANK0

    None.

Critical Paths under ___ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under ___ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under ___ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under ___ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under ___ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under ___ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under ___ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under ___ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under ___ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under ___ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under ___ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under ___ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under ___ISR in BANK12

    None.

Critical Paths under _main in BANK13

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    ___xxtofl->___awdiv
    ___lwdiv->___wmul
    ___llmod->___lldiv
    ___lldiv->___lmul
    ___fltol->___fldiv
    ___fltol->___flmul
    ___flmul->___xxtofl
    ___flge->___fldiv
    ___fldiv->___xxtofl
    _UpdateScreen->_OLED_Write
    _OLED_Write->_OLED_DrawPixel
    ___wmul->___awdiv
    _OLED_DrawPixel->___awdiv
    _OLED_Update_Partial->_ssd1306_command
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _OLED_Init->_OLED_Update
    _OLED_Update->_ssd1306_command
    _ssd1306_command->_I2C_Send
    _HEFLASH_writeBlock->_FLASH_write
    _HEFLASH_readBlock->_FLASH_read
    _DAC1_Load10bitInputData->___fltol

Critical Paths under ___ISR in BANK13

    None.

Critical Paths under _main in BANK14

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under ___ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under ___ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under ___ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under ___ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under ___ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under ___ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under ___ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under ___ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under ___ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under ___ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under ___ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under ___ISR in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   62032
                                             20 BANK14     4     4      0
                                              0 BANK15     8     8      0
            _DAC1_Load10bitInputData
                  _HEFLASH_readBlock
                 _HEFLASH_writeBlock
                          _OLED_Init
                  _SYSTEM_Initialize
                       _UpdateScreen
                            ___awdiv
                            ___awmod
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___lmul
                            ___lwdiv
                             ___wmul
                           ___xxtofl
                          _clearText
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   10105
                                             78 BANK13     1     1      0
                                              3 BANK14    17     9      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    7589
                                             73 BANK13     5     2      3
                                              0 BANK14     3     3      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    7170
                                             57 BANK13    16    14      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    5449
                                             27 BANK13    30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3237
                                             16 BANK13     9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     202
                                              0 BANK13     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1429
                                              8 BANK13     8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    1037
                                              0 BANK13     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             19 BANK13     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                              0 BANK13    19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     625
                                              0 BANK13    27    11     16
 ---------------------------------------------------------------------------------
 (1) _clearText                                            6     4      2     450
                                              0 BANK13     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4    2096
                                              9 BANK13    14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     421
                                             15 BANK13     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     316
                                              0 BANK13    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___llmod                                             10     2      8     412
                                             26 BANK13    10     2      8
                            ___lldiv (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     421
                                             12 BANK13    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     877
                                             49 BANK13    11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    4073
                                             23 BANK13    26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     980
                                              0 BANK13     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8    2426
                                             49 BANK13    12     4      8
                            ___awdiv (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    3303
                                             23 BANK13    26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    1153
                                              0 BANK13     7     3      4
 ---------------------------------------------------------------------------------
 (1) _UpdateScreen                                        11    11      0   20882
                                             54 BANK13    11    11      0
                _OLED_Update_Partial
                         _OLED_Write
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _OLED_Write                                          32    27      5   15871
                                             22 BANK13    32    27      5
                     _OLED_DrawPixel
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    3466
                                              9 BANK13     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _OLED_DrawPixel                                      13     8      5    5919
                                              9 BANK13    13     8      5
                            ___awdiv
                             _height
                              _width
 ---------------------------------------------------------------------------------
 (4) _width                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _height                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    3325
                                              0 BANK13     9     5      4
 ---------------------------------------------------------------------------------
 (2) _OLED_Update_Partial                                  8     8      0     393
                                              3 BANK13     8     8      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
                    _ssd1306_command
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     121
                     _ADC_Initialize
                    _DAC1_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     121
                                              2 BANK13     1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     121
                                              0 BANK13     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OLED_Init                                            2     2      0     678
                                              8 BANK13     2     2      0
                           _I2C_Init
                           _I2C_Stop
                       _OLED_SetFont
                        _OLED_Update
                    _ssd1306_command
 ---------------------------------------------------------------------------------
 (2) _OLED_Update                                          5     5      0     306
                                              3 BANK13     5     5      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
                    _ssd1306_command
 ---------------------------------------------------------------------------------
 (3) _ssd1306_command                                      2     2      0      96
                                              1 BANK13     2     2      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (4) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Send                                             1     1      0      31
                                              0 BANK13     1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Wait                                             0     0      0       0
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OLED_SetFont                                         5     3      2     245
                                              0 BANK13     5     3      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             2     2      0      31
                                              0 BANK13     2     2      0
 ---------------------------------------------------------------------------------
 (1) _HEFLASH_writeBlock                                   7     5      2    3923
                                              6 BANK13     7     5      2
                        _FLASH_erase
                        _FLASH_write
 ---------------------------------------------------------------------------------
 (2) _FLASH_write                                          6     1      5     667
                                              0 BANK13     6     1      5
                            __unlock
 ---------------------------------------------------------------------------------
 (2) _FLASH_erase                                          3     1      2     155
                                              0 BANK13     3     1      2
                            __unlock
 ---------------------------------------------------------------------------------
 (3) __unlock                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _HEFLASH_readBlock                                    7     5      2    2443
                                              2 BANK13     7     5      2
                         _FLASH_read
 ---------------------------------------------------------------------------------
 (2) _FLASH_read                                           2     0      2     301
                                              0 BANK13     2     0      2
 ---------------------------------------------------------------------------------
 (1) _DAC1_Load10bitInputData                              2     0      2     872
                                             60 BANK13     2     0      2
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) ___ISR                                                1     1      0     570
                                             13 COMMON     1     1      0
               i1_HEFLASH_writeBlock
 ---------------------------------------------------------------------------------
 (10) i1_HEFLASH_writeBlock                                7     5      2     570
                                              6 COMMON     7     5      2
                      i1_FLASH_erase
                      i1_FLASH_write
 ---------------------------------------------------------------------------------
 (11) i1_FLASH_write                                       6     1      5     245
                                              0 COMMON     6     1      5
                          i1__unlock
 ---------------------------------------------------------------------------------
 (11) i1_FLASH_erase                                       3     1      2      71
                                              0 COMMON     3     1      2
                          i1__unlock
 ---------------------------------------------------------------------------------
 (12) i1__unlock                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DAC1_Load10bitInputData
     ___fldiv (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
         ___awdiv (ARG)
     ___fltol (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
           ___awdiv (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
     ___xxtofl (ARG)
       ___awdiv (ARG)
   _HEFLASH_readBlock
     _FLASH_read
   _HEFLASH_writeBlock
     _FLASH_erase
       __unlock
     _FLASH_write
       __unlock
   _OLED_Init
     _I2C_Init
     _I2C_Stop
     _OLED_SetFont
     _OLED_Update
       _I2C_Send
         _I2C_Wait
           _I2C_Stop
       _I2C_Start
       _I2C_Stop
       _ssd1306_command
         _I2C_Send
           _I2C_Wait
             _I2C_Stop
         _I2C_Start
         _I2C_Stop
     _ssd1306_command
       _I2C_Send
         _I2C_Wait
           _I2C_Stop
       _I2C_Start
       _I2C_Stop
   _SYSTEM_Initialize
     _ADC_Initialize
     _DAC1_Initialize
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize
   _UpdateScreen
     _OLED_Update_Partial
       _I2C_Send
         _I2C_Wait
           _I2C_Stop
       _I2C_Start
       _I2C_Stop
       _ssd1306_command
         _I2C_Send
           _I2C_Wait
             _I2C_Stop
         _I2C_Start
         _I2C_Stop
     _OLED_Write
       _OLED_DrawPixel
         ___awdiv
         _height
         _width
       ___awdiv
       ___wmul
         ___awdiv (ARG)
     ___wmul
       ___awdiv (ARG)
   ___awdiv
   ___awmod
   ___fldiv
     ___xxtofl (ARG)
       ___awdiv (ARG)
   ___flge
     ___awdiv (ARG)
     ___fldiv (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
     ___xxtofl (ARG)
       ___awdiv (ARG)
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
       ___awdiv (ARG)
   ___fltol
     ___fldiv (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
         ___awdiv (ARG)
     ___xxtofl (ARG)
       ___awdiv (ARG)
   ___lldiv
     ___lmul (ARG)
   ___llmod
     ___lldiv (ARG)
       ___lmul (ARG)
     ___lmul (ARG)
   ___lmul
   ___lwdiv
     ___wmul (ARG)
       ___awdiv (ARG)
   ___wmul
     ___awdiv (ARG)
   ___xxtofl
     ___awdiv (ARG)
   _clearText
   _sprintf
     ___awdiv (ARG)
     ___awmod (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 ___ISR (ROOT)
   i1_HEFLASH_writeBlock
     i1_FLASH_erase
       i1__unlock
     i1_FLASH_write
       i1__unlock

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           3E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BIGRAM             3F0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITCOMMON            E      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
COMMON               E      E       E       3      100.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
STACK                0      0       0       4        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0                0      0       0       5        0.0%
BITBANK0            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK1                0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK2                0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK3                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
ABS                  0      0     175      13        0.0%
BITBANK4            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK4                0      0       0      15        0.0%
BITBANK5            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK5                0      0       0      17        0.0%
BITBANK6            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK6                0      0       0      19        0.0%
BITBANK7            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK7                0      0       0      21        0.0%
BITBANK8            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK8                0      0       0      23        0.0%
BITBANK9            50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK9                0      0       0      25        0.0%
BITBANK10           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK10               0      0       0      27        0.0%
BITBANK11           50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK11               0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
DATA                 0      0     175      30        0.0%
BITBANK12           30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK12               0      0       0      32        0.0%
BITBANK13           50      0       0      33        0.0%
BANK13              50     4F      50      34      100.0%
BITBANK14           50      0       0      35        0.0%
BANK14              50     18      4A      36       92.5%
BITBANK15           50      0       0      37        0.0%
BANK15              50      8      4D      38       96.3%
BITBANK16           50      0       0      39        0.0%
BANK16              50      0      50      40      100.0%
BITBANK17           50      0       0      41        0.0%
BANK17              50      0      30      42       60.0%
BITBANK18           50      0       0      43        0.0%
BANK18              50      0       0      44        0.0%
BITBANK19           50      0       0      45        0.0%
BANK19              50      0       0      46        0.0%
BITBANK20           50      0       0      47        0.0%
BANK20              50      0       0      48        0.0%
BITBANK21           50      0       0      49        0.0%
BANK21              50      0       0      50        0.0%
BITBANK22           50      0       0      51        0.0%
BANK22              50      0       0      52        0.0%
BITBANK23           50      0       0      53        0.0%
BANK23              50      0       0      54        0.0%
BITBANK24           50      0       0      55        0.0%
BANK24              50      0       0      56        0.0%
BITBANK25           20      0       0      57        0.0%
BANK25              20      0       0      58        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed May 12 08:43:17 2021

                             ___fldiv@aexp 06D0                               ___fldiv@bexp 06CF  
                             ___fldiv@sign 06C8                         __size_of_I2C_Start 0007  
                              __CFG_CP$OFF 0000                               ___awdiv@sign 06A6  
                      ___wmul@multiplicand 06AB                            _timer0ReloadVal 0769  
                      __Umul8_16@word_mpld 06A6                                __CFG_LVP$ON 0000  
                          _DAC1_Initialize 29D5                                        l300 2A31  
                                      l212 1817                                        l231 29DD  
                                      l215 29C2                                        l218 29AC  
                                      l260 2A9E                                        l237 29F2  
                                      l428 29E6                                        l276 1009  
                                      l717 2CCE                                        l903 2BB4  
                                      l911 0D65                                        l736 2A56  
                                      l920 0D55                                        l912 1D91  
                                      l745 29D4                                        l753 2AF2  
                                      l914 1DCE                                        l908 1C60  
                                      l749 2C2B                                        l942 1371  
                                      l767 20B9                                        l935 0FB8  
                                      l927 0E83                                        l919 0D49  
                                      l776 2D0B                                        l956 15A2  
                                      l975 16D8                                        l986 1741  
                                      l997 1757                                        _RA0 0060  
                                      _RA1 0061                                        _RB0 0068  
                                      _RA3 0063                                        _RB1 0069  
                                      _RB2 006A                                        _RA6 0066  
                                      _RB4 006C                                        _RB5 006D  
                                      _abs 2ABA                                        _pad 2000  
                             ___awmod@sign 06A6                               __CFG_BORV$LO 0000  
                                      wreg 0009                __end_of_OLED_Update_Partial 212B  
                             __CFG_IESO$ON 0000                       OLED_Update_Partial@i 06A7  
                             ___flmul@aexp 06C5                               ___flmul@bexp 06CA  
                     OLED_Update_Partial@x 06A9                               ___flmul@sign 06C4  
                             ___flmul@temp 06CF                                main@decimal 07E5  
                             ___flmul@prod 06CB                           _mode_change_flag 073C  
                        FLASH_read@address 06A0                               _I2C_DO_RESET 0000  
                             __CFG_ZCD$OFF 0000                               ___fltol@exp1 06DB  
                                     l1004 17A0                                       l1201 1FF0  
                                     l1050 2B32                                       ?_abs 06B3  
                                     l1053 29B6                                       l1150 2D8F  
                                     l1214 1FFF                                       l1071 2A0B  
                                     l1231 0003                                       l1056 29BA  
                                     l1065 29AF                                       l1073 2A10  
                                     l1081 2A24                                       l1225 2A6C  
                                     l1234 1801                                       l1075 2A17  
                                     l1147 18AA                                       l1068 29B3  
                                     l1157 2E89                                       l1165 212A  
                                     l1253 1A5B                                       l1078 2A1D  
                                     l1407 2C5F                                       l1344 201C  
                                     l1352 26D9                                       l1177 23B5  
                                     l1361 2788                                       l1353 26E2  
                                     l1506 2579                                       l1507 258A  
                                     l1347 203E                                       l1188 1EE1  
                                     l1429 2EE4                                       l1349 2058  
                                     l1357 26FF                                       l1358 2717  
                                     l1382 249D                                       l1623 2DDA  
                                     l1375 27FF                                       l1393 2B3E  
                                     l1546 2FFF                                       l1802 1254  
                                     l1395 2B52                                       l1571 21BD  
                                     l1900 2BC8                                       l1493 267E  
                                     l1389 2C96                                       l1750 1AB3  
                                     l1574 2211                                       l1902 2BD8  
                                     l1830 22D7                                       l1494 268F  
                                     l1559 2E2E                                       l1752 1C0F  
                                     l1673 2D48                                       l1841 22A3  
                                     l1594 218A                                       l1842 22AF  
                                     l1834 2289                                       l1850 2AD5  
                                     l1771 1BDD                                       l1579 222A  
                                     l1587 219F                                       l1772 1BF7  
                                     l1828 224E                                       l1597 219F  
                                     l1774 1C06                                       l1766 1B91  
                                     l1790 1260                                       l1847 2AD5  
                                     l1872 2F41                                       l1880 2C01  
                                     l1890 1000                                       l1796 11DC  
                                     ?_pad 06B0                                       l1887 0D38  
                                     l8000 2109                                       l1896 2AB9  
                                     l8002 210F                                       l8010 1DE6  
                                     l8004 2127                                       l8012 1E21  
                                     l8100 2BB9                                       l8030 1EA0  
                                     l8014 1E24                                       l8006 1DD8  
                                     l8102 2BC0                                       l8120 29F1  
                                     l8200 1857                                       l8112 1802  
                                     l8040 1ED7                                       l8032 1ECB  
                                     l8024 1E58                                       l8016 1E29  
                                     l8008 1DDF                                       l8104 2BC4  
                                     l8114 29E7                                       l8130 207E  
                                     l8122 205B                                       l8210 186B  
                                     l8202 185B                                       l8050 1F51  
                                     l8042 1EDD                                       l8026 1E6E  
                                     l8018 1E57                                       l8106 2BCF  
                                     l9010 129E                                       l8116 29E9  
                                     l8140 20A4                                       l8132 2092  
                                     l8124 2069                                       l8220 187F  
                                     l8212 186F                                       l8204 185F  
                                     l8060 1F84                                       l8052 1F62  
                                     l8044 1EF4                                       l8028 1E74  
                                     l8300 1981                                       l8108 2BD4  
                                     l7500 25C4                                       l9100 160F  
                                     l9020 1326                                       l9012 12C2  
                                     l8118 29ED                                       l8150 2CE5  
                                     l8142 20B7                                       l8134 2097  
                                     l8126 206F                                       l8230 1893  
                                     l8222 1883                                       l8214 1873  
                                     l8206 1863                                       l8062 1F8A  
                                     l8054 1F66                                       l8038 1ED2  
                                     l8046 1EF8                                       l8310 19AA  
                                     l7510 2602                                       l7502 25E3  
                                     l7430 2EF0                                       l9110 1634  
                                     l9102 161A                                       l9030 1359  
                                     l9022 132A                                       l9014 1308  
                                     l9006 1261                                       l8152 2CEC  
                                     l8160 2D06                                       l8136 209B  
                                     l8128 2076                                       l8232 189B  
                                     l8224 1887                                       l8216 1877  
                                     l8208 1867                                       l8080 1FD8  
                                     l8072 1FB6                                       l8064 1F9D  
                                     l8056 1F69                                       l8048 1F14  
                                     l8320 19E2                                       l8312 19BE  
                                     l8400 2DEC                                       l7520 263C  
                                     l7512 260A                                       l7504 25E8  
                                     l7432 2EF5                                       l7600 2753  
                                     l8240 0D1A                                       l9200 1741  
                                     l9120 1653                                       l9112 1639  
                                     l9104 161F                                       l9040 1386  
                                     l9032 136B                                       l9024 1346  
                                     l9016 1314                                       l9008 1269  
                                     l8154 2CFC                                       l8146 2CD1  
                                     l8138 209D                                       l7442 29AD  
                                     l8234 18A7                                       l8226 188B  
                                     l8218 187B                                       l8074 1FBB  
                                     l8066 1FAF                                       l8058 1F6D  
                                     l8082 1FDC                                       l8322 19E8  
                                     l8314 19CD                                       l8306 1984  
                                     l8410 2E03                                       l8402 2DF1  
                                     l8170 2BA3                                       l8162 2B93  
                                     l7522 264C                                       l7514 260E  
                                     l7506 25F3                                       l7530 249E  
                                     l7434 2F00                                       l7426 2EE5  
                                     l7450 2AB3                                       l7610 27B0  
                                     l7602 2757                                       l8090 2C6E  
                                     l8242 0D1C                                       l9210 175C  
                                     l9202 1748                                       l9130 166E  
                                     l9122 1658                                       l9114 163E  
                                     l9106 1624                                       l9050 1437  
                                     l9042 13BC                                       l9026 1349  
                                     l9018 1320                                       l8156 2D00  
                                     l8148 2CDF                                       l8228 188F  
                                     l8180 182F                                       l7700 2307  
                                     l8084 1FEB                                       l8076 1FBF  
                                     l8340 1A3A                                       l8332 19F1  
                                     l8324 19EC                                       l8308 1995  
                                     l8316 19D0                                       l8260 18E7  
                                     l8412 2E07                                       l8404 2DF7  
                                     l8420 2E20                                       l8500 2DD2  
                                     l8172 2BA7                                       l7524 264D  
                                     l7516 2612                                       l7508 25FF  
                                     l7540 24F6                                       l7532 24A0  
                                     l7436 2F20                                       l7428 2EEB  
                                     l7460 2BF1                                       l7444 2AA1  
                                     l7620 27D4                                       l7612 27BE  
                                     l7604 275B                                       l8092 2C84  
                                     l8244 0D2B                                       l8236 0D0E  
                                     l9220 1777                                       l9212 1760  
                                     l9204 174D                                       l9140 1688  
                                     l9132 1673                                       l9124 165D  
                                     l9116 1643                                       l9108 1629  
                                     l9044 13F7                                       l9036 1376  
                                     l8158 2D04                                       l7462 2A0B  
                                     l8190 1843                                       l8182 1833  
                                     l8174 1818                                       l7702 233A  
                                     l8078 1FC7                                       l8350 1A59  
                                     l8334 1A02                                       l8342 1A3D  
                                     l8326 19EE                                       l8318 19D5  
                                     l8270 190F                                       l8262 18F6  
                                     l8254 18AE                                       l8422 2E25  
                                     l8414 2E11                                       l8406 2DFA  
                                     l8430 21B5                                       l8510 2D18  
                                     l7518 261A                                       l7526 265B  
                                     l7550 2516                                       l7542 2503  
                                     l7534 24AA                                       l7438 2F37  
                                     l7454 2BDB                                       l7446 2AA6  
                                     l7470 2010                                       l7622 27DA  
                                     l7606 2796                                       l7614 27C3  
                                     l8094 2C8E                                       l8086 2C62  
                                     l8238 0D18                                       l9222 177B  
                                     l9214 1767                                       l9206 174F  
                                     l9150 16A7                                       l9142 168C  
                                     l9134 1677                                       l9230 1798  
                                     l9126 1663                                       l9118 164E  
                                     l9070 14D6                                       l9054 1474  
                                     l9046 13FA                                       l9038 137A  
                                     l7464 2A14                                       l7560 29B4  
                                     l8192 1847                                       l8184 1837  
                                     l8176 181C                                       l7800 2CBA  
                                     l7640 2FAD                                       l7632 2FA0  
                                     l7704 236E                                       l8344 1A42  
                                     l8336 1A17                                       l8280 1917  
                                     l8272 1913                                       l8256 18BF  
                                     l8264 18F8                                       l8248 18AB  
                                     l8424 2E2A                                       l8416 2E15  
                                     l8408 2DFF                                       l8600 1B23  
                                     l8440 21F9                                       l8432 21D1  
                                     l8360 2C48                                       l8352 2C2C  
                                     l8520 2D38                                       l8512 2D1D  
                                     l8504 2D0C                                       l8168 2B96  
                                     l7528 2660                                       l7552 2538  
                                     l7544 2506                                       l7536 24CC  
                                     l7456 2BDE                                       l7448 2AAA  
                                     l7480 2030                                       l7472 2015  
                                     l7624 27DF                                       l7616 27CA  
                                     l7608 27A3                                       l7720 23D9  
                                     l8088 2C6A                                       l9240 17B7  
                                     l9232 179E                                       l9224 1787  
                                     l9216 1768                                       l9208 1754  
                                     l9160 16C8                                       l9152 16AD  
                                     l9144 1691                                       l9136 167E  
                                     l9128 1668                                       l9072 1518  
                                     l9048 1435                                       l7562 2A1A  
                                     l8194 184B                                       l8186 183B  
                                     l8178 182B                                       l7810 2CC6  
                                     l7802 2CBC                                       l7650 2FC2  
                                     l7642 2FB1                                       l7634 2FA2  
                                     l7570 1800                                       l8346 1A4F  
                                     l8338 1A2B                                       l8282 1928  
                                     l8290 1963                                       l8274 1915  
                                     l8266 18FC                                       l8258 18D4  
                                     l8418 2E1A                                       l8610 1B46  
                                     l8602 1B24                                       l8530 1A5C  
                                     l8442 2227                                       l8434 21D9  
                                     l8098 2BB7                                       l8450 2137  
                                     l8370 2E9E                                       l8362 2C57  
                                     l8354 2C35                                       l8522 2D39  
                                     l8514 2D21                                       l8506 2D0F  
                                     l7554 2548                                       l7546 250E  
                                     l7538 24D7                                       l7490 2AC8  
                                     l7458 2BEC                                       l7482 2043  
                                     l7474 201A                                       l7466 2002  
                                     l7626 27E3                                       l7618 27CF  
                                     l7730 2426                                       l7722 23DD  
                                     l7714 23B8                                       l9250 17CC  
                                     l9242 17BE                                       l9234 17A6  
                                     l9226 1788                                       l9218 1770  
                                     l9170 16E8                                       l9162 16CC  
                                     l9154 16B2                                       l9146 1697  
                                     l9138 1684                                       l9082 15DD  
                                     l9074 1559                                       l9066 14BF  
                                     l9058 14B1                                       l7900 2B15  
                                     l7564 2A21                                       l8196 184F  
                                     l8188 183F                                       l7820 29C1  
                                     l7812 2CC9                                       l7804 2CBF  
                                     l7660 2FE1                                       l7652 2FC5  
                                     l7644 2FB6                                       l7636 2FA6  
                                     l7708 23A1                                       l8348 1A55  
                                     l8292 1968                                       l8284 193D  
                                     l8268 1909                                       l8620 1B61  
                                     l8604 1B2B                                       l8612 1B4A  
                                     l8540 1A70                                       l8532 1A62  
                                     l8444 2229                                       l8436 21DD  
                                     l8428 21A0                                       l8700 104D  
                                     l8460 215C                                       l8380 2ECE  
                                     l8372 2EA9                                       l8356 2C39  
                                     l8524 2D3E                                       l8516 2D25  
                                     l8508 2D15                                       l7492 258B  
                                     l7548 2512                                       l7556 2556  
                                     l7484 204C                                       l7476 201F  
                                     l7468 2007                                       l7628 27EC  
                                     l7580 26BB                                       l7740 2466  
                                     l7724 23F0                                       l7716 23CA  
                                     l9252 17D7                                       l9244 17C2  
                                     l9236 17A7                                       l9180 1702  
                                     l9172 16EF                                       l9156 16B6  
                                     l9148 169B                                       l9164 16D8  
                                     l9228 1794                                       l9076 159F  
                                     l9068 14CA                                       l9092 15E9  
                                     l7902 2B20                                       l7910 2D49  
                                     l8198 1853                                       l7830 29D5  
                                     l7814 2CCB                                       l7806 2CC1  
                                     l7822 29A9                                       l7670 2FF6  
                                     l7662 2FE5                                       l7654 2FCA  
                                     l7646 2FBA                                       l7638 2FAB  
                                     l7566 0002                                       l8294 1975  
                                     l8286 1951                                       l8390 2DDB  
                                     l8630 1B75                                       l8622 1B65  
                                     l8614 1B50                                       l8606 1B3D  
                                     l8550 1A88                                       l8542 1A75  
                                     l8534 1A66                                       l8438 21F5  
                                     l8710 1069                                       l8702 1055  
                                     l8470 216A                                       l8462 215E  
                                     l8454 2140                                       l8382 2ECF  
                                     l8374 2EAD                                       l8366 2E8A  
                                     l8358 2C41                                       l8518 2D34  
                                     l8526 2D44                                       l7494 258D  
                                     l7558 255B                                       l7478 202B  
                                     l7590 270D                                       l7582 26DE  
                                     l7574 2692                                       l7734 2440  
                                     l7726 2402                                       l7718 23D3  
                                     l7750 2478                                       l9254 17E3  
                                     l9246 17C6                                       l9238 17AF  
                                     l9190 171F                                       l9182 1707  
                                     l9174 16F5                                       l9166 16DF  
                                     l9158 16C2                                       l9078 15A4  
                                     l9094 1605                                       l7904 2B23  
                                     l7920 2D8E                                       l7912 2D51  
                                     l7680 2A59                                       l7824 2A25  
                                     l7832 29DC                                       l7816 29BB  
                                     l7808 2CC3                                       l7840 2A94  
                                     l7672 2FFB                                       l7664 2FE6  
                                     l7656 2FCE                                       l7648 2FBC  
                                     l7760 2B36                                       l8296 197B  
                                     l8288 1960                                       l8392 2DDD  
                                     l8640 1B96                                       l8632 1B76  
                                     l8624 1B66                                       l8616 1B58  
                                     l8608 1B3E                                       l8560 1A9B  
                                     l8552 1A8D                                       l8544 1A7D  
                                     l8536 1A6A                                       l8800 124B  
                                     l8720 10A6                                       l8704 1057  
                                     l8480 218F                                       l8464 2162  
                                     l8472 217A                                       l8456 2153  
                                     l8448 212B                                       l8384 2ED6  
                                     l8376 2EB4                                       l8368 2E9B  
                                     l7496 2597                                       l7488 2ABA  
                                     l7592 2712                                       l7584 26F1  
                                     l7576 26A2                                       l7752 2492  
                                     l7736 2452                                       l7744 246C  
                                     l7728 240B                                       l9256 17EF  
                                     l9248 17CA                                       l9192 1721  
                                     l9184 1709                                       l9176 16F9  
                                     l9168 16E4                                       l9096 1608  
                                     l7850 2A4B                                       l7906 2B28  
                                     l7914 2D5B                                       l7690 2A69  
                                     l7682 2A59                                       l7930 2E3D  
                                     l7922 2E2F                                       l7826 2A2D  
                                     l7818 29C0                                       l7842 2A95  
                                     l7834 2A86                                       l7666 2FEB  
                                     l7658 2FD2                                       l7762 2B3A  
                                     l8298 197F                                       l8394 2DE1  
                                     l8642 1B9B                                       l8650 1BC3  
                                     l8634 1B7A                                       l8626 1B6D  
                                     l8618 1B5A                                       l8570 1ABB  
                                     l8562 1AA0                                       l8554 1A91  
                                     l8546 1A7E                                       l8538 1A6B  
                                     l8802 124F                                       l8730 10EE  
                                     l8722 10B3                                       l8714 1072  
                                     l8706 105F                                       l8482 2194  
                                     l8458 2154                                       l8378 2EC6  
                                     l8386 2EDC                                       l8490 2DA7  
                                     l8810 222D                                       l7498 25B9  
                                     l7594 271C                                       l7586 26F7  
                                     l7578 26B5                                       l7746 2475  
                                     l7738 245B                                       l9194 172D  
                                     l9186 1715                                       l9178 16FD  
                                     l9098 160A                                       l9354 15F2  
                                     l7852 2A4C                                       l7860 2C07  
                                     l7908 2B2A                                       l7916 2D6C  
                                     l7684 2A5C                                       l7940 2E50  
                                     l7932 2E41                                       l7924 2E31  
                                     l7828 2A2E                                       l7772 29DE  
                                     l7780 2C97                                       l7676 1001  
                                     l7844 2A96                                       l7836 2A8B  
                                     l7668 2FF1                                       l9356 23AA  
                                     l7692 22D8                                       l7764 2B43  
                                     l8396 2DE6                                       l8660 1BFC  
                                     l8652 1BD0                                       l8644 1BA3  
                                     l8636 1B8E                                       l8628 1B71  
                                     l8580 1AD9                                       l8572 1AC7  
                                     l8564 1AA8                                       l8556 1A95  
                                     l8548 1A80                                       l8804 1250  
                                     l8740 112A                                       l8732 10FB  
                                     l8724 10CD                                       l8716 107F  
                                     l8708 1064                                       l8492 2DAB  
                                     l8484 2D90                                       l8812 2232  
                                     l7596 271F                                       l7588 2707  
                                     l9196 1733                                       l9188 171A  
                                     l8900 1C79                                       l7854 2A4D  
                                     l7846 2A42                                       l7678 29CC  
                                     l7870 2C1F                                       l7862 2C08  
                                     l7918 2D7D                                       l7686 2A60  
                                     l7942 2E54                                       l7934 2E45  
                                     l7926 2E35                                       l7774 29E0  
                                     l7790 2CA6                                       l7782 2C9B  
                                     l7838 2A8E                                       l7694 22DD  
                                     l7766 2B48                                       l7758 2B33  
                                     l8398 2DE8                                       l8662 1C00  
                                     l8654 1BEB                                       l8646 1BA7  
                                     l8590 1B02                                       l8574 1ACB  
                                     l8566 1AA9                                       l8558 1A96  
                                     l8806 1258                                       l8750 117B  
                                     l8742 1131                                       l8734 1102  
                                     l8726 10DA                                       l8718 108C  
                                     l8670 100A                                       l8478 2181  
                                     l8494 2DBD                                       l8486 2D99  
                                     l8830 227A                                       l8822 225F  
                                     l8814 2236                                       l7598 2724  
                                     l9198 1735                                       l8910 1CAD  
                                     l8902 1C85                                       l7848 2A4A  
                                     l7880 2AD6                                       l7872 2C20  
                                     l7864 2C0F                                       l7688 2A64  
                                     l7960 2E6F                                       l7936 2E49  
                                     l7928 2E39                                       l7776 29E2  
                                     l7792 2CA8                                       l7784 2C9E  
                                     l7696 22EF                                       l7768 2B4E  
                                     l8664 1C02                                       l8656 1BEE  
                                     l8648 1BBF                                       l8592 1B0A  
                                     l8584 1AE2                                       l8568 1AAB  
                                     l8760 11B0                                       l8752 1192  
                                     l8744 1145                                       l8736 110F  
                                     l8728 10E7                                       l8680 101E  
                                     l8672 1010                                       l8496 2DC5  
                                     l8488 2D9C                                       l8840 22A7  
                                     l8832 2282                                       l8824 2264  
                                     l8816 2246                                       l8920 1D8E  
                                     l8912 1CB5                                       l8904 1C8B  
                                     l7890 2AE5                                       l7882 2ADB  
                                     l7874 2C21                                       l7866 2C17  
                                     l7858 2C02                                       l7962 2E75  
                                     l7954 2E58                                       l7938 2E4C  
                                     l7778 29E5                                       l7794 2CAF  
                                     l7786 2CA0                                       l7970 20C1  
                                     l7698 22F4                                       l8658 1BF6  
                                     l8594 1B0C                                       l8586 1AF2  
                                     l8578 1AD4                                       l8770 11C1  
                                     l8762 11B1                                       l8754 1199  
                                     l8746 1152                                       l8738 1116  
                                     l8690 103A                                       l8682 1023  
                                     l8674 1014                                       l8498 2DCC  
                                     l8850 22CF                                       l8842 22B1  
                                     l8834 2290                                       l8826 226F  
                                     l8818 2256                                       l8930 0D39  
                                     l8922 1D93                                       l8914 1CBD  
                                     l8906 1C8E                                       l7892 2AE6  
                                     l7884 2ADC                                       l7876 2C24  
                                     l7868 2C1E                                       l7964 2E86  
                                     l7956 2E66                                       l7948 2E57  
                                     l7796 2CB5                                       l7788 2CA2  
                                     l7980 20D8                                       l7972 20C5  
                                     l8596 1B11                                       l8588 1AFA  
                                     l8780 11E6                                       l8772 11C5  
                                     l8764 11B8                                       l8756 11A5  
                                     l8748 1166                                       l8692 103E  
                                     l8684 102B                                       l8676 1018  
                                     l8844 22C5                                       l8836 2299  
                                     l8828 2276                                       l8932 0D40  
                                     l8940 0D60                                       l8924 1DCB  
                                     l8916 1D07                                       l8908 1CA1  
                                     l7894 2AE9                                       l7886 2AE3  
                                     l7878 2C2A                                       l7958 2E6B  
                                     l7798 2CB8                                       l7982 20DB  
                                     l7974 20C9                                       l7966 20BC  
                                     l8598 1B1F                                       l8790 121B  
                                     l8782 11EE                                       l8774 11D9  
                                     l8758 11AC                                       l8766 11BC  
                                     l8694 1042                                       l8686 102D  
                                     l8678 1019                                       l8846 22CA  
                                     l8838 229D                                       l8950 0D80  
                                     l8942 0D66                                       l8934 0D45  
                                     l8926 1DD0                                       l8918 1D48  
                                     l7896 2AEB                                       l7888 2AE4  
                                     l7984 20DF                                       l7976 20CD  
                                     l7968 20BD                                       l8792 1225  
                                     l8784 11F2                                       l8768 11C0  
                                     l8696 1043                                       l8688 1035  
                                     l8848 22CE                                       l8960 0DA2  
                                     l8952 0D8A                                       l8944 0D68  
                                     l8936 0D52                                       l8928 1DD3  
                                     l8880 1C21                                       l8872 1C10  
                                     l7898 2AF1                                       l7994 20F2  
                                     l7986 20E3                                       l7978 20D2  
                                     l8794 1233                                       l8786 120A  
                                     l8778 11E1                                       l8698 1048  
                                     l8970 0E80                                       l8962 0DAB  
                                     l8954 0D95                                       l8946 0D70  
                                     l8938 0D57                                       l8890 1C49  
                                     l8882 1C29                                       l8874 1C13  
                                     l7996 2100                                       l7988 20F1  
                                     l8796 123C                                       l8788 120E  
                                     l8980 0ED7                                       l8972 0E85  
                                     l8964 0DB7                                       l8956 0D9C  
                                     l8948 0D78                                       l8892 1C54  
                                     l8884 1C32                                       l8876 1C14  
                                     l7998 2105                                       l8798 123E  
                                     l8990 0F6F                                       l8982 0F19  
                                     l8974 0EBD                                       l8966 0DF9  
                                     l8958 0D9E                                       l8894 1C67  
                                     l8886 1C3E                                       l8878 1C15  
                                     STR_1 306D                                       l8992 0FB5  
                                     l8984 0F1E                                       l8976 0EC0  
                                     l8968 0E3A                                       l8896 1C6B  
                                     l8888 1C45                                       STR_2 304E  
                                     STR_3 3082                                       l8994 0FBA  
                                     l8986 0F22                                       l8978 0ECB  
                                     l8898 1C76                                       STR_4 307D  
                                     STR_5 304E                                       l8988 0F2E  
                                     STR_6 3038                                       STR_7 304E  
                                     l8998 0FF3                                       STR_8 3075  
                                     STR_9 3064                                       _LATA 010C  
                                     _LATB 010D                                       _LATC 010E  
                                     u8000 24D7                                       u8001 24D6  
                                     u8020 2503                                       u8100 26AD  
                                     u8021 2502                                       u8101 26AB  
                                     u8030 2516                                       u8110 26AE  
                                     u8031 2515                                       u9000 1A02  
                                     u8040 2538                                       u8200 27B0  
                                     u8120 26BB                                       u9001 1A01  
                                     u8041 2537                                       u8201 27AF  
                                     u8121 26BA                                       u9010 1A4F  
                                     u8050 2556                                       u8210 27BE  
                                     u9011 1A4E                                       u8051 2555  
                                     u8211 27BD                                       u8300 2FD2  
                                     u9020 1A55                                       u8060 255B  
                                     u8220 27C3                                       u8140 26DE  
                                     u8301 2FD1                                       u9021 1A54  
                                     u8061 255A                                       u8045 2534  
                                     u8221 27C2                                       u8205 27AC  
                                     u8141 26DD                                       u9110 2EC6  
                                     u9030 2C39                                       u8230 27CA  
                                     u8150 26F1                                       u9015 1A4B  
                                     u9111 2EC5                                       u9031 2C38  
                                     u8231 27C9                                       u8215 27BA  
                                     u8151 26F0                                       u8080 29BA  
                                     u8320 2FE1                                       u8240 27CF  
                                     u8160 270D                                       u8081 29B9  
                                     u8321 2FE0                                       u9105 2EAE  
                                     u8241 27CE                                       u8161 270C  
                                     u8090 2A21                                       u9210 2E20  
                                     u9130 2EDC                                       u8250 27DA  
                                     u8170 2712                                       u8091 2A20  
                                     u8315 2FD3                                       u9211 2E1F  
                                     u9131 2EDB                                       u9115 2EC2  
                                     u8251 27D9                                       u8171 2711  
                                     u8155 26ED                                       u8340 2FF1  
                                     u8260 2FA6                                       u8404 230E  
                                     u8500 2B3A                                       u9220 2E25  
                                     u9140 2DE1                                       u9300 2162  
                                     u9060 2C57                                       u8180 2796  
                                     u8341 2FF0                                       u8325 2FDD  
                                     u8261 2FA5                                       u8405 230D  
                                     u8501 2B39                                       u9221 2E24  
                                     u9205 2E16                                       u9141 2DE0  
                                     u9301 2161                                       u9125 2ED0  
                                     u9061 2C56                                       u9045 2C42  
                                     u8181 2795                                       u8350 2FF6  
                                     u8270 2FB1                                       u9150 2DEC  
                                     u9230 21B5                                       u9310 2169  
                                     u9070 2E9B                                       u8190 27A3  
                                     u8351 2FF5                                       u8335 2FE7  
                                     u8271 2FB0                                       u8415 2323  
                                     u9151 2DEB                                       u9231 21B4  
                                     u9311 2168                                       u9071 2E9A  
                                     u9055 2C49                                       u8191 27A2  
                                     u7800 2A10                                       u8600 210F  
                                     u8280 2FC2                                       u8424 2341  
                                     u8360 22DD                                       u9160 2DF7  
                                     u9240 21D1                                       u9400 2DAB  
                                     u7801 2A0F                                       u8601 210E  
                                     u8281 2FC1                                       u8425 2340  
                                     u8361 22DC                                       u9161 2DF6  
                                     u9241 21D0                                       u9401 2DAA  
                                     u8185 2792                                       u7810 2A14  
                                     u8370 22EF                                       u8530 2B4E  
                                     u9250 21DD                                       u9330 2179  
                                     u9090 2EAD                                       u9410 2DBD  
                                     u7730 2EEB                                       u7811 2A13  
                                     u8435 2357                                       u8371 22EE  
                                     u8531 2B4D                                       u8515 2B3F  
                                     u9251 21DC                                       u9331 2178  
                                     u9091 2EAC                                       u9411 2DBC  
                                     u7731 2EEA                                       u8540 2C2A  
                                     u8620 2127                                       u8444 2375  
                                     u8380 22F4                                       u8700 1F13  
                                     u9180 2E07                                       u9260 21F9  
                                     u9340 2180                                       u9500 2D44  
                                     u7740 2EF0                                       u7820 2007  
                                     u8460 23CA                                       u8541 2C29  
                                     u8621 2126                                       u8445 2374  
                                     u8381 22F3                                       u8525 2B44  
                                     u8701 1F12                                       u9181 2E06  
                                     u9261 21F8                                       u9341 217F  
                                     u9325 216B                                       u9085 2E9F  
                                     u9501 2D43                                       u7741 2EEF  
                                     u7821 2006                                       u8461 23C9  
                                     u8550 2AF1                                       u8390 2306  
                                     u8630 1DE6                                       u9190 2E11  
                                     u9510 1A6A                                       u9270 2227  
                                     u9430 2DD2                                       u7910 25F0  
                                     u7750 2F00                                       u7830 2015  
                                     u8470 23F0                                       u8551 2AF0  
                                     u8615 2113                                       u8295 2FC6  
                                     u8455 238A                                       u8391 2305  
                                     u8375 22EB                                       u8631 1DE5  
                                     u9191 2E10                                       u9175 2DFB  
                                     u9511 1A69                                       u9271 2226  
                                     u9431 2DD1                                       u9415 2DB9  
                                     u7751 2EFF                                       u7831 2014  
                                     u8471 23EF                                       u8560 2B20  
                                     u8720 1F84                                       u9520 1A70  
                                     u9360 218F                                       u9280 2137  
                                     u9440 2D15                                       u7920 25FF  
                                     u7760 2F20                                       u7840 203E  
                                     u8480 2402                 __end_of_HEFLASH_writeBlock 20BA  
                                     u8561 2B1F                                       u8625 2123  
                                     u8721 1F83                                       u8705 1F0F  
                                     u9521 1A6F                                       u9361 218E  
                                     u9281 2136                                       u9425 2DC6  
                                     u9441 2D14                                       u7921 25FE  
                                     u7761 2F1F                                       u7841 203D  
                                     u8481 2401                                       u7770 29B3  
                                     u8570 2E75                                       u8730 1F8A  
                                     u8714 1F76                                       u8650 1E6E  
                                     u9530 1A75                                       u8810 2BD4  
                                     u9370 2194                                       u9290 214D  
                                     u7930 2612                                       u7850 2043  
                                     u8490 2452                                       u7771 29B2  
                                     u8571 2E74                                       u8395 2302  
                                     u8731 1F89                                       u8715 1F74  
                                     u8651 1E6D                                       u9195 2E0D  
                                     u9531 1A74                                       u9275 2223  
                                     u8811 2BD3                                       u9371 2193  
                                     u9355 2182                                       u7931 2611  
                                     u7851 2042                                       u8491 2451  
                                     u8580 2E86                                       u8740 1FB5  
                                     u8660 1E74                                       u8644 1E60  
                                     u9700 1B75                                       u9620 1B23  
                                     u9540 1A95                                       u9380 2D99  
                                     u9460 2D25                                       u8900 2BB4  
                                     u7940 263C                                       u7860 2AC8  
                                     u7780 2AB3                                       u8581 2E85  
                                     u8741 1FB4                                       u8661 1E73  
                                     u8645 1E5E                                       u9701 1B74  
                                     u9621 1B22                                       u9605 1B12  
                                     u9541 1A94                                       u8805 2BC9  
                                     u9381 2D98                                       u9461 2D24  
                                     u8901 2BB3                                       u7941 263B  
                                     u7861 2AC7                                       u7765 2F1C  
                                     u7781 2AB2                                       u7845 203A  
                                     u8830 206F                                       u8750 1FBF  
                                     u8670 1ED1                                       u8910 18BF  
                                     u9710 1B7A                                       u9550 1A9B  
                                     u7950 265B                                       u7870 2597  
                                     u7790 2C01                                       u8831 206E  
                                     u8751 1FBE                                       u8671 1ED0  
                                     u8911 18BE                                       u9711 1B79  
                                     u9615 1B19                                       u9551 1A9A  
                                     u9295 2149                                       u9455 2D19  
                                     u7951 265A                                       u7871 2596  
                                     u7791 2C00                                       u8840 2075  
                                     u8760 1FEB                                       u8680 1EDD  
                                     u8920 1909                                       u9720 1B8E  
                                     u9640 1B3D                                       u9560 1AA0  
                                     u9800 1018                                       u9480 2D34  
                                     u7960 2660                                       u8841 2074  
                                     u8825 205F                                       u8761 1FEA  
                                     u8681 1EDC                                       u8921 1908  
                                     u9721 1B8D                                       u9641 1B3C  
                                     u9561 1A9F                                       u9801 1017  
                                     u9481 2D33                                       u8905 2BB0  
                                     u7961 265F                                       u7945 2638  
                                     u7865 2AC4                                       u8850 20A4  
                                     u8770 1FFF                                       u8690 1EF4  
                                     u8930 190F                                       u9730 1B95  
                                     u9650 1B50                                       u9570 1ABB  
                                     u9810 101E                                       u7890 25C4  
                                     u8851 20A3                                       u8595 20E8  
                                     u8771 1FFE                                       u8691 1EF3  
                                     u8931 190E                                       u9731 1B94  
                                     u9651 1B4F                                       u9635 1B25  
                                     u9571 1ABA                                       u9811 101D  
                                     u9395 2D9D                                       u9475 2D26  
                                     u7891 25C3                                       u8940 1928  
                                     u9740 1B9B                                       u9660 1B58  
                                     u9580 1AD9                                       u9900 1171  
                                     u9820 1023                                       u7980 24AA  
                                     u8780 2C8E                                       u8765 1FE7  
                                     u8941 1927                                       u8925 1905  
                                     u9741 1B9A                                       u9661 1B57  
                                     u9645 1B39                                       u9581 1AD8  
                                     u9821 1022                                       u9485 2D30  
                                     u7981 24A9                                       u8781 2C8D  
                                     u8870 2CE5                                       u8950 1975  
                                     u9750 1BA7                                       u9590 1B11  
                                     u8790 2BC4                                       u9910 1188  
                                     u9830 1042                                       u8871 2CE4  
                                     u8775 1FFB                                       u8695 1EF0  
                                     u8951 1974                                       u9751 1BA6  
                                     u9591 1B10                                       u8791 2BC3  
                                     u9831 1041                                       u9495 2D3A  
                                     u8880 2CEB                                       u8960 197B  
                                     u9760 1BB5                                       u9680 1B65  
                                     u9840 1048                                       u8881 2CEA  
                                     u8865 2CD5                                       u8961 197A  
                                     u9681 1B64                                       u9905 116D  
                                     u9841 1047                                       u8890 2D0B  
                                     u8970 1995                                       u9770 1BD0  
                                     u9850 104D                                       u8891 2D0A  
                                     u8971 1994                                       u8955 1971  
                                     u9771 1BCF                                       u9675 1B5B  
                                     u9915 1184                                       u9851 104C  
                                     u8980 19E2                                       u9780 1BEB  
                                     u9940 11B0                                       u9860 1064  
                                     u8981 19E1                                       u9781 1BEA  
                                     u9765 1BB1                                       u9941 11AF  
                                     u9925 1193                                       u9861 1063  
                                     u8990 19E8                                       u9790 1C00  
                                     u9870 1069                                       u8991 19E7  
                                     u9791 1BFF                                       u9775 1BCC  
                                     u9695 1B67                                       u9935 11A6  
                                     u9871 1068                                       u9960 11C0  
                                     _TMR0 0017                                       u8985 19DE  
                                     u9785 1BE7                                       u9961 11BF  
                                     u9970 11C5                                       u9971 11C4  
                                     u9955 11B2                                       u9980 11D9  
                                     u9981 11D8                                       u9885 10E8  
                                     u9990 11E0                                       u9991 11DF  
                                     u9895 1117                                       _WPUA 020C  
                                     _WPUB 020D                                       _WPUC 020E  
                                     _WPUE 0210                                main@integer 07E3  
                             __CFG_WRT$OFF 0000                              __CFG_FCMEN$ON 0000  
                                     abs@a 06B3                                ?_OLED_Write 06B6  
                                     _dbuf 08B0                                       _main 1C10  
                                     _dtoa 2690                                       _mode 0740  
                                     _prec 0727                           __end_of_I2C_Init 2B33  
                                     _nout 07BD                                       pad@i 06B4  
                                     pad@p 06B1                                       fsr0h 0005  
                                     fsr1h 0007                                       indf0 0000  
                                     fsr0l 0004                                       indf1 0001  
                                     fsr1l 0006                                       pad@w 06B6  
                         __end_of_I2C_Send 2A25                                       btemp 007E  
                         __end_of_I2C_Wait 2A18                           __end_of_I2C_Stop 29B4  
                            __CFG_BOREN$ON 0000                                       start 00C1  
                ??_DAC1_Load10bitInputData 0000                            ___fldiv@new_exp 06C9  
                            __CFG_MCLRE$ON 0000                       i1_HEFLASH_writeBlock 2F42  
                                    ??_abs 06B5                         __size_of_OLED_Init 0093  
                                    ??_pad 06B3                        __size_of_FLASH_read 0015  
                  __end_of_TMR0_Initialize 2A9F             __size_of_OSCILLATOR_Initialize 0008  
                                    PMCON1 0195                                      PMCON2 0196  
                            _I2C_DO_RX_ACK 0000              __end_of_OSCILLATOR_Initialize 29C3  
                            ___fltol@sign1 06DA                            __end_of___aodiv 2690  
                                    ?_main 0070                                      ?_dtoa 06BB  
                          __end_of___aomod 258B                            __end_of___fldiv 1C10  
                          __end_of___awdiv 3000                                      STR_10 3020  
                                    STR_11 3086                                      STR_12 302C  
                                    STR_13 3075                                      STR_14 3064  
                                    STR_15 3043                                      STR_16 304E  
                                    STR_17 3059                              __CFG_WDTE$OFF 0000  
                          __end_of___awmod 2E2F                            __end_of___flmul 1261  
                          __end_of___fltol 21A0                                      u10000 11E6  
                                    u10001 11E5                                      u10010 11F2  
                                    u10011 11F1                            __end_of___lldiv 2EE5  
                                    u10020 1200                                      u10100 2275  
                                    u10101 2274                                      u10030 121B  
                                    u10031 121A                                      u10040 1233  
                                    u10120 228F                                      u10041 1232  
                                    u10025 11FC                                      u10121 228E  
                                    u10050 124F                                      u10051 124E  
                                    u10035 1217                                      u10115 2283  
                                    u10140 229D                                      u10060 2232  
                                    u10300 0E80                                      u10220 1C45  
                                    u10045 122F                                      u10141 229C  
                                    u10061 2231                                      u10301 0E7F  
                                    u10221 1C44                                      u10150 22A3  
                                    u10070 2236                                      u10310 0EBD  
                                    u10230 1C67                                      u10151 22A2  
                                    u10135 2293                                      u10071 2235  
                                    u10311 0EBC                                      u10231 1C66  
                                    u10160 22A7                                      u10080 2256  
                                    u10400 13F7                                      u10320 0F1E  
                                    u10240 1C8B                                      u10161 22A6  
                                    u10081 2255                                      u10401 13F6  
                                    u10321 0F1D                                      u10241 1C89  
                                    u10170 22BB                                      u10410 1435  
                                    u10330 0F22                                      u10250 1D8E  
                                    u10411 1434                                      u10331 0F21  
                                    u10251 1D8D                                      u10180 22CA  
                                    u10500 1643                                      u10420 1472  
                                    u10340 0FB5                                      u10260 1DCB  
                                    u10181 22C9                                      u10501 1642  
                                    u10421 1471                                      u10341 0FB4  
                                    u10261 1DCA                                      u10190 22CE  
                                    u10510 164E                                      u10430 14AF  
                                    u10350 0FF2                                      u10270 0D40  
                                    u10191 22CD                                      u10175 22B7  
                                    u10095 2269                                      u10511 164D  
                                    u10431 14AE                                      u10351 0FF1  
                                    u10271 0D3F                                      u10600 1697  
                                    u10520 165D                                      u10440 159F  
                                    u10360 1326                                      u10280 0D52  
                                    u10601 1696                                      u10521 165C  
                                    u10441 159E                                      u10361 1325  
                                    u10281 0D51                                      u10610 16AD  
                                    u10530 1663                                      u10450 15DC  
                                    u10370 1358                                      u10290 0D65  
                                    u10611 16AC                                      u10531 1662  
                                    u10451 15DB                                      u10371 1357  
                                    u10291 0D64                                      u10700 1707  
                                    u10620 16B2                                      u10540 166E  
                                    u10460 160F                                      u10380 1376  
                          ___awdiv@divisor 06A0                                      u10701 1706  
                                    u10621 16B1                                      u10541 166D  
                                    u10461 160E                                      u10381 1375  
                                    u10710 171A                                      u10630 16C8  
                                    u10550 1673                                      u10470 161A  
                                    u10390 137A                                      u10711 1719  
                                    u10631 16C7                                      u10551 1672  
                                    u10471 1619                                      u10391 1379  
                                    u10375 1354                                      u10800 1777  
                                    u10720 171F                                      u10640 16DF  
                                    u10560 1677                                      u10480 1629  
                          __end_of___llmod 2DDB                                      u10801 1776  
                                    u10721 171E                                      u10641 16DE  
                                    u10561 1676                                      u10481 1628  
                                    u10810 179E                                      u10730 1733  
                                    u10650 16E4                                      u10570 167E  
                                    u10490 1634                                      u10811 179D  
                                    u10731 1732                                      u10651 16E3  
                                    u10571 167D                                      u10491 1633  
                                    u10820 17A6                                      u10740 1748  
                                    u10660 16E8                                      u10580 1684  
                                    u10821 17A5                                      u10741 1747  
                                    u10661 16E7                                      u10581 1683  
                                    u10830 17B7                                      u10750 174D  
                                    u10670 16EF                                      u10590 1691  
                                    u10831 17B5                                      u10751 174C  
                                    u10671 16EE                                      u10591 1690  
                                    u10760 1754                                      u10680 16F5  
                                    u10761 1753                                      u10681 16F4  
                                    u10770 175C                                      u10690 1702  
                                    u10771 175B                                      u10691 1701  
                                    u10907 1C7F                                      u10780 1760  
                                    u10781 175F                                      u10917 0D5B  
                                    u10790 1767                                      u10927 1825  
                                    u10791 1766                                      u10937 18A1  
                                    u10897 1C1B                            __end_of___lwdiv 2D49  
                                    i1l745 29CB                                      i1l753 2A85  
                                    i1l749 2B12                                      i1l767 2F9F  
                          ___awdiv@counter 06A5                                      _PMADR 0191  
                                    _PMDAT 0193                               vfpfcnvrt@fmt 06D9  
                                    _TRISA 008C                                      _TRISB 008D  
                                    _TRISC 008E                                      _TRISE 0090  
        __size_of_TMR0_SetInterruptHandler 0009                        ___lmul@multiplicand 06A4  
                ?_TMR0_SetInterruptHandler 06A0                                      ___ISR 0004  
                             ?_OLED_Update 0070                            __end_of__unlock 29D5  
                                    _cfont 0720                                      _flags 0729  
                           _WDT_Initialize 29A9                                      _fputc 2EE5  
                                    _fputs 2BD9                                      _speed 0768  
                                    _press 0734                                      pad@fp 06B8  
                                    _width 0002                                      _putch 1000  
                                    main@i 07E9                                      dtoa@d 06BB  
                                    dtoa@i 06D7                                      dtoa@n 06CF  
                                    dtoa@p 06C9                                      dtoa@s 06CD  
                                    dtoa@w 06CB                          __end_of_I2C_Start 29BB  
                   __size_ofi1_FLASH_erase 0019                     HEFLASH_writeBlock@data 06A6  
                   HEFLASH_writeBlock@radd 06AA                                      status 0003  
                                    wtemp0 007E                     __size_ofi1_FLASH_write 0020  
                          __end_of_sprintf 0D39                          __end_of_BIG_FONTS 0D0E  
                    _increase_btn_debounce 0763                            __initialization 00C3  
                 __size_of_ssd1306_command 0016                      ?i1_HEFLASH_writeBlock 0076  
                       __size_ofi1__unlock 0009                               __end_of_main 17FE  
                             __end_of_dtoa 2800                    __end_of_DAC1_Initialize 29DE  
                              doprnt@width 07BF                             __CFG_LPBOR$OFF 0000  
                     __size_of_FLASH_erase 001D                                     ??_main 0755  
                                   ??_dtoa 06C3                        __size_of_OLED_Write 0228  
                     __size_of_FLASH_write 002A                             __CFG_PLLEN$OFF 0000  
                   __end_of_WDT_Initialize 29AD                                     ?___ISR 0070  
                     HEFLASH_readBlock@add 06A6                                     _ADCON0 0490  
                                   _ADCON1 0491                                     _ADCON2 0492  
                                   ?_fputc 06A0                           ___llmod@dividend 06BE  
                                   ?_fputs 06A8                                     _ADRESH 048F  
                                   _ADRESL 048E                           ___awdiv@dividend 06A2  
                                   ?_width 0070                                     _ANSELA 018C  
                                   ?_putch 0070                                     _ANSELB 018D  
                                   _ANSELC 018E                                     _BORCON 009D  
                        __end_of_OLED_Init 18AB                                     _RC3PPS 0EA3  
                                   _RC4PPS 0EA4                                     i1l1029 00BF  
                                   _ODCONA 028C                                     _ODCONB 028D  
                                   _ODCONC 028E                                     i1l5046 29C3  
                                   i1l5400 2AF8                                     i1l5410 2B08  
                                   i1l5402 2AFD                                     i1l5420 2A71  
                                   i1l5412 2B09                                     i1l5404 2B01  
                                   i1l6300 2F9D                                     i1l5430 2A7A  
                                   i1l5422 2A72                                     i1l5414 2B0C  
                                   i1l5406 2B06                                     i1l5432 2A7D  
                                   i1l5424 2A77                                     i1l5416 2B11  
                                   i1l5408 2B07                                     i1l5434 2A7F  
                                   i1l5426 2A78                                     i1l5418 2A6D  
                                   i1l5436 2A84                                     i1l5428 2A79  
                                   i1l7300 005E                                     i1l7302 0064  
                                   i1l7310 007A                                     i1l6280 2F43  
                                   i1l7320 0096                                     i1l7304 0068  
                                   i1l7312 007E                                     i1l6290 2F7A  
                                   i1l6282 2F51                                     i1l7330 00B1  
                                   i1l7314 0084                                     i1l7322 009B  
                                   i1l7306 006A                                     i1l5396 2AF3  
                                   i1l6292 2F7E                                     i1l6284 2F57  
                                   i1l7332 00B5                                     i1l7324 009F  
                                   i1l7316 008A                                     i1l7308 0074  
                                   i1l5398 2AF7                                     i1l6294 2F82  
                                   i1l6286 2F5E                                     i1l7334 00BB  
                                   i1l7326 00A5                                     i1l7318 0090  
                                   i1l7270 000A                                     i1l6288 2F66  
                                   i1l6296 2F84                                     i1l7328 00AB  
                                   i1l7280 0027                                     i1l7272 000E  
                                   i1l6298 2F8A                                     i1l7290 0042  
                                   i1l7282 002D                                     i1l7274 000F  
                                   i1l7292 0048                                     i1l7284 0033  
                                   i1l7276 0019                                     i1l7268 0006  
                                   i1l7294 004E                                     i1l7286 0038  
                                   i1l7278 0023                                     i1l7296 0054  
                                   i1l7288 003E                                     i1l7298 005A  
                                   _INLVLA 038C                                     _INLVLB 038D  
                                   _INLVLC 038E                                     _FVRCON 009E  
                                   u500_20 2A84                                     u500_21 2A83  
                                   u641_25 2F47                                     u642_20 2F57  
                                   _OSCCON 009B                                     u642_21 2F56  
                                   u643_20 2F5D                                     u643_21 2F5C  
                                   u644_20 2F8A                                     u644_21 2F89  
                                   u750_20 000E                                     u750_21 000D  
                                   u751_20 0019                                     u751_21 0018  
                                   u760_20 0084                                     u752_20 0023  
                                   u760_21 0083                                     u752_21 0022  
                                   u761_20 008A                                     u753_20 0038  
                                   u761_21 0089                                     u753_21 0037  
                                   u762_20 0090                                     u754_20 003E  
                                   u762_21 008F                                     u754_21 003D  
                                   u499_20 2B11                                     u763_20 0096  
                                   u755_20 0048                                     u499_21 2B10  
                                   u763_21 0095                                     u755_21 0047  
                                   u764_20 00A5                                     u756_20 004E  
                                   u764_21 00A4                                     u756_21 004D  
                                   u765_20 00AB                                     u757_20 0054  
                                   u749_20 000A                                     u765_21 00AA  
                                   u757_21 0053                                     u749_21 0009  
                                   u766_20 00B1                                     u758_20 005A  
                                   u766_21 00B0                                     u758_21 0059  
                                   u767_20 00BB                                     u759_20 0064  
                                   u767_21 00BA                                     u759_21 0063  
                                   _WDTCON 0099                                     u801lld 24F6  
                                   u813lld 26D9                                     u807lld 2579  
                                   u790lld 25E3                           __end_of___xxtofl 22D8  
                                   u788lld 25B6                                     u797lld 267E  
                                   u799lld 24C9                              ?_OLED_SetFont 06A0  
                           __CFG_PWRTE$OFF 0000                               vfprintf@cfmt 0742  
                                   ___flge 21A0                                     ___lmul 2C2C  
                                ??___aodiv 06B0                                  ??___aomod 06B0  
                                   ___wmul 2B33                                  ??___fldiv 06BF  
                                ??___awdiv 06A4                             __CFG_STVREN$ON 0000  
                                ??___awmod 06A4                                  ??___flmul 06BF  
                                ??___fltol 06D5                         FLASH_write@address 06A0  
                                ??___lldiv 06B4                                  ??___llmod 06C2  
                                ??___lwdiv 06B3                                     _height 1800  
                                   _buffer 2000                           ?_TMR0_Initialize 0070  
                            i1_FLASH_erase 2A6D                          _UpdateScreen$2310 06D7  
                         ___awdiv@quotient 06A7                            ___awmod@divisor 06A0  
                          ___awmod@counter 06A5                    __size_of_I2C_Initialize 0009  
                                   pad@buf 06B0                              i1_FLASH_write 2AF3  
                                   dtoa@fp 06C6                                  ??__unlock 0000  
                                   _strlen 2A9F                               __pdataBANK14 0759  
                             __pdataBANK15 07C3                               __pdataBANK16 0850  
                                   fputc@c 06A0                                     fputs@c 06AC  
                      _I2C_DO_ADDRESS_NACK 0000                                     fputs@i 06AD  
                                   fputs@s 06AF                                  ?_I2C_Init 0070  
                                ?_I2C_Send 0070                                  ?_I2C_Wait 0070  
                       __size_of__Umul8_16 0024                                  ?_I2C_Stop 0070  
                          ?_WDT_Initialize 0070                    HEFLASH_writeBlock@count 06A7  
                                   putch@c 0070                          __end_ofi1__unlock 29CC  
                         __end_of_vfprintf 2C97                               ??_FLASH_read 0000  
 TMR0_SetInterruptHandler@InterruptHandler 06A0                                  ??_sprintf 06EE  
                     _fireman_set_debounce 0759                                OLED_Write@b 06D5  
                              OLED_Write@x 06B6                                OLED_Write@y 06B8  
                               ___flge@ff1 06D1                                 ___flge@ff2 06D5  
                             ___xxtofl@arg 06B3                               ___xxtofl@exp 06B2  
                        _SYSTEM_Initialize 1802                               ___xxtofl@val 06A9  
                  __end_of__initialization 0126                             ??_OLED_SetFont 06A2  
                       ?_SYSTEM_Initialize 0070                                 ___fltol@f1 06D1  
                i1HEFLASH_writeBlock@count 0077                    OLED_Update_Partial@page 06AA  
                   ??i1_HEFLASH_writeBlock 0078                             __pcstackBANK13 06A0  
                           __pcstackBANK14 0741                             __pcstackBANK15 07E3  
                  _rdBlkRegCompleteHandler 0000                main@power_led_flash_counter 07E7  
                            __end_of___ISR 00C1                             __pcstackCOMMON 0070  
                   _I2C_CallbackReturnStop 0000                        ??_SYSTEM_Initialize 0000  
                         ?_DAC1_Initialize 0070                             ?i1_FLASH_erase 0070  
                            __end_of_fputc 2F42                              __end_of_fputs 2C02  
                            __end_of_width 0004                              __end_of_putch 1001  
                       __end_of_FLASH_read 2A57                             ?i1_FLASH_write 0070  
                      OLED_DrawPixel@color 06AD                         __size_of_clearText 0022  
                        ??_ssd1306_command 0000                          _mode_btn_debounce 075F  
                               ??_I2C_Init 06A0                             _OPTION_REGbits 0097  
                               ??_I2C_Send 0000                                 ??_I2C_Wait 0000  
                               ??_I2C_Stop 0000                                    ??___ISR 007D  
                    _updateAutoRemoteDelay 0730                                    ??_fputc 06A3  
                __end_of_SYSTEM_Initialize 1818                                    ??_fputs 06A9  
    DAC1_Load10bitInputData@input10BitData 06DC                                    ??_width 0000  
                                  ??_putch 0000                       __size_of_OLED_Update 005B  
                               __pnvBANK14 0769                                 __pnvBANK15 07EB  
                             ??_OLED_Write 06BB                           _speedChangeTimer 072B  
                         _speedChangeState 072F                          i1FLASH_erase@temp 0072  
                      _I2C_DO_RX_NACK_STOP 0000                      _rd1RegCompleteHandler 0000  
                     clearText@textToClear 06A0                          __end_of__Umul8_16 2BD9  
                  HEFLASH_readBlock@buffer 06A8                      _wr1RegCompleteHandler 0000  
                    HEFLASH_readBlock@radd 06A2                                 __pmaintext 1C10  
                                  ?___flge 06D1                            _I2C_DO_TX_EMPTY 0000  
         __end_of_TMR0_SetInterruptHandler 100A                                    ?___lmul 06A0  
                         OLED_SetFont@font 06A0                         _HEFLASH_writeBlock 2059  
                                  ?___wmul 06A9                            __CFG_PPS1WAY$ON 0000  
                               __pintentry 0004                                    ?_height 0070  
                           ___lmul@product 06A8                               I2C_Send@data 06A0  
                  __size_of_ADC_Initialize 000D                                    ?_strlen 06A0  
                      ?_HEFLASH_writeBlock 06A6                         __end_of_OLED_Write 2000  
                                ?___xxtofl 06A9                         __size_of_vfpfcnvrt 00E8  
                                  _OSCSTAT 009C                                    _OSCTUNE 009A  
                                  _SSP1ADD 0212                                    _SLRCONA 030C  
                                  _SLRCONB 030D                                    _SLRCONC 030E  
                                  _SSP1BUF 0211                            _OLED_Write$2307 06C7  
                                _I2C_DO_RX 0000                                  _I2C_DO_TX 0000  
             __size_of_OLED_Update_Partial 0071                                  _DACLDbits 058D  
                        __end_of_clearText 2BB5                       ??_HEFLASH_writeBlock 06A8  
                                _I2C_Start 29B4                       _ADC_InterruptHandler 07C1  
  i2c_master_example@rd1RegCompleteHandler 0000                            ??i1_FLASH_erase 0072  
                                _BIG_FONTS 012A                            __size_of___flge 008B  
                                  ___aodiv 258B                                    ___aomod 249E  
                                  ___fldiv 1A5C                                    ___awdiv 2FA0  
                          __size_of___lmul 0034                                    ___awmod 2DDB  
                                  ___flmul 100A                                    ___fltol 212B  
                          ??i1_FLASH_write 0075                                    ___lldiv 2E8A  
                          __size_of___wmul 0020                                    ___llmod 2D90  
                               _frmn_speed 0767                                    ___lwdiv 2D0C  
                                ?_vfprintf 06E9                    __size_of_OLED_DrawPixel 00DE  
                          __size_of_height 0002                             _I2C_Initialize 29DE  
                  i1HEFLASH_writeBlock@add 007B                                    __ptext1 0D0E  
                                  __ptext2 2C60                                    __ptext3 23B6  
                                  __ptext4 2690                                    __ptext5 2000  
                                  __ptext6 2A9F                                    __ptext7 2BD9  
                                  __ptext8 2EE5                                    __ptext9 1000  
                                  __unlock 29CC                            __size_of_strlen 001B  
                    _OSCILLATOR_Initialize 29BB                               __size_of_abs 001C  
                     __end_of_OLED_SetFont 2D90                               __size_of_pad 0059  
                                  _buttons 0733                                 ??___xxtofl 06AD  
                         ___awmod@dividend 06A2                   ??_PIN_MANAGER_Initialize 0000  
               __size_of_SYSTEM_Initialize 0016                                    _sprintf 0D0E  
                                  clrloop0 29F4                                 clearText@i 06A4  
                     end_of_initialization 0126                              ?_UpdateScreen 0070  
                 ?_DAC1_Load10bitInputData 06DC                                    fputc@fp 06A2  
                                  init_ram 29FF                                    fputs@fp 06A8  
                                  initloop 2A00                      _decrease_btn_debounce 0761  
                                _OLED_Init 1818                                 ?_I2C_Start 0070  
                          ___lldiv@divisor 06AC                            ___lldiv@counter 06B9  
                        __end_of_vfpfcnvrt 249E                                    psplit$0 260065  
                                  psplit$1 650066                               OLED_Update@i 06A6  
                             OLED_Update@x 06A5                              ??_FLASH_erase 0000  
                   __end_of_I2C_Initialize 29E7                                 ??_vfprintf 06EC  
                            ??_FLASH_write 0000                                    strlen@a 06A3  
                                  strlen@s 06A4                               OLED_Write@cx 06CD  
                             OLED_Write@cy 06CF                           ??_WDT_Initialize 0000  
                 _TMR0_SetInterruptHandler 1001                                  _SSPDATPPS 0E3B  
                                _SSPCLKPPS 0E3A                          i1FLASH_write@data 0072  
                         __CFG_FOSC$INTOSC 0000                          i1FLASH_write@temp 0075  
                            ___xxtofl@sign 06B1                          __size_of_I2C_Init 0020  
                              ___fldiv@grs 06CB                                ___fldiv@rem 06C4  
                        __size_of_I2C_Send 000D                       pnum$maintext_split_1 0065  
                     pnum$maintext_split_2 0066                          __size_of_I2C_Wait 000D  
                        __size_of_I2C_Stop 0007                             ??_UpdateScreen 06D6  
                     _factory_reset_enable 0736                                  i1__unlock 29C3  
                              ___flmul@grs 06C6                            OLED_DrawPixel@x 06A9  
                          OLED_DrawPixel@y 06AB                                _I2C_DO_IDLE 0000  
                              _I2C_DO_RCEN 0000                                 ?_OLED_Init 0070  
                          _ssd1306_command 2A57                   _I2C_DO_SEND_RESTART_READ 0000  
                          ?_I2C_Initialize 0070                    _I2C_CallbackReturnReset 0000  
                            __pidataBANK14 2A32                              __pidataBANK15 2B73  
                            __pidataBANK16 2B53                             __end_of___flge 222B  
                           __end_of___lmul 2C60                                vfpfcnvrt@ap 06DA  
                              vfpfcnvrt@fp 06E8                                vfpfcnvrt@ll 06E0  
                           __end_of___wmul 2B53                             __end_of_height 1802  
                           _ADC_Initialize 2A25                     ?_OSCILLATOR_Initialize 0070  
                    HEFLASH_writeBlock@add 06AB                        __end_of_FLASH_erase 2AF3  
                           __end_of_strlen 2ABA                        start_initialization 00C3  
                        _factory_reset_dec 075D                         _line_1_update_flag 06EF  
                      __end_of_FLASH_write 2C2C                   __size_of_TMR0_Initialize 0019  
          __size_of_PIN_MANAGER_Initialize 0038                                __end_of_abs 2AD6  
          __end_of_DAC1_Load10bitInputData 29F3                                __end_of_pad 2059  
i2c_master_example@rdBlkRegCompleteHandler 0000                         UpdateScreen@i_1557 06DB  
                       UpdateScreen@i_1558 06DD                         UpdateScreen@i_1559 06DF  
                     i1FLASH_erase@address 0070                                 ?i1__unlock 0070  
                          ___llmod@divisor 06BA                     _I2C_DO_RX_NACK_RESTART 0000  
                              ??_I2C_Start 0000                            ___llmod@counter 06C3  
                        _HEFLASH_readBlock 2CCF                                vfprintf@fmt 06E9  
                                 ??___flge 06D9              __size_ofi1_HEFLASH_writeBlock 005E  
                                 ??___lmul 0000                                   ??___wmul 0000  
                       ?_HEFLASH_readBlock 06A2                     __end_of_ADC_Initialize 2A32  
                                __Umul8_16 2BB5                             _OLED_DrawPixel 22D8  
                                 ??_height 0000                      __size_of_OLED_SetFont 0047  
                      _OLED_Update_Partial 20BA                           _I2C_DO_SEND_STOP 0000  
                                 ??_strlen 06A2                               _last_buttons 0732  
                        _i2c_fsmStateTable 3000                                __pbssBANK13 06EF  
                              __pbssBANK14 0720                                __pbssBANK15 07A0  
                              __pbssBANK16 0820                                __pbssBANK17 08A0  
                      ??_HEFLASH_readBlock 06A4                                  ___fldiv@a 06B7  
                                ___fldiv@b 06BB                                __pbssBIGRAM 2000  
                 __size_of_DAC1_Initialize 0009                      _I2C_DO_SEND_ADR_WRITE 0000  
                                ___flmul@a 06BB                                  ___flmul@b 06B7  
                                ___latbits 0003                         _line_2_update_flag 073F  
                            ??_OLED_Update 06A3                              __pcstackBANK0 0000  
                         ___aodiv@dividend 06A8                          __size_of___xxtofl 00AD  
                  __end_of_ssd1306_command 2A6D                       ?_OLED_Update_Partial 0070  
                   ssd1306_command@command 06A1                  _I2C_DO_SEND_RESTART_WRITE 0000  
                              ??_OLED_Init 06A8                      _TMR0_InterruptHandler 07EB  
                __end_of_HEFLASH_readBlock 2D0C                      _rd2RegCompleteHandler 0000  
                                _decrement 0765                               _OLED_SetFont 2D49  
                         ___lwdiv@dividend 06B1                     _PIN_MANAGER_Initialize 2C97  
                                _clearText 2B93                                  _dtoa$1635 06C7  
                    _wr2RegCompleteHandler 0000                     HEFLASH_readBlock@count 06A3  
                   __end_of_OLED_DrawPixel 23B6                              I2C_Init@speed 06A1  
                                 ?___aodiv 06A0                                   ?___aomod 06A0  
                                 ?___fldiv 06B7                                   ?___awdiv 06A0  
                         ___aodiv@quotient 06B3                                   ?___awmod 06A0  
                                 ?___flmul 06B7                                   ?___fltol 06D1  
                                 ?___lldiv 06AC                                   ?___llmod 06BA  
                               ?__Umul8_16 06A0                                   ?___lwdiv 06AF  
                              _FLASH_erase 2AD6                            ?_ADC_Initialize 0070  
                             _newTextLine1 07D3                               _newTextLine2 0860  
                             _newTextLine3 0850                               _newTextLine4 07C3  
                     __end_of_UpdateScreen 1A5C                  __end_of_i2c_fsmStateTable 3020  
                                 _DAC1CON0 058E                                _FLASH_write 2C02  
                                 _DAC1REFH 0590                                   _DAC1REFL 058F  
                                _btn_count 0731                          __size_of_vfprintf 0037  
                                 ?__unlock 0070                                   _I2C_Init 2B13  
                                 _I2C_Send 2A18                                   _I2C_Wait 2A0B  
                                 _I2C_Stop 29AD                         _line_3_update_flag 073E  
                           __size_of___ISR 00BD                           ___lwdiv@quotient 06B5  
                                _dry_state 0738                                   ?_sprintf 0744  
                           __size_of_fputc 005D                             __size_of_fputs 0029  
                           __size_of_width 0002                             __size_of_putch 0001  
                    ??_OLED_Update_Partial 06A3                                ??i1__unlock 0070  
                      __end_of_OLED_Update 2E8A                                  _ext_speed 072D  
                        ??_TMR0_Initialize 06A2                             ___wmul@product 06AD  
                             _ext_ref_flag 0739                __size_of_HEFLASH_writeBlock 0061  
                                clear_ram0 29F3                                   _PIE1bits 0091  
               ??_TMR0_SetInterruptHandler 0000                                 ?_clearText 06A0  
                                 _PIR1bits 0011                                   _PIR2bits 0012  
                          FLASH_erase@temp 06A2    i2c_master_example@rd2RegCompleteHandler 0000  
                          ?_OLED_DrawPixel 06A9                           OLED_Write@rowcnt 06D1  
                                 _SSP1CON1 0215                                   _SSP1CON2 0216  
                                 _SSP1CON3 0217    i2c_master_example@wr2RegCompleteHandler 0000  
                                 _SSP1STAT 0214                      __end_ofi1_FLASH_erase 2A86  
         __size_of_DAC1_Load10bitInputData 000C                                  _textLine1 0840  
                                _textLine2 0830                                  _textLine3 08A0  
                                _textLine4 0820                                  _vfpfcnvrt 23B6  
                    __end_ofi1_FLASH_write 2B13                                _fireman_inc 075B  
                              _fireman_set 073B                                _fireman_out 073A  
                               _ADCON0bits 0490                                  _wet_state 0737  
                        ___wmul@multiplier 06A9                         _line_4_update_flag 073D  
                        ___lmul@multiplier 06A0                          ??_DAC1_Initialize 0000  
                         ?_ssd1306_command 0070                                 _I2C_Status 07A0  
                              _freeze_mode 0735                 __size_of_HEFLASH_readBlock 003D  
                         ??_I2C_Initialize 0000                                 vfprintf@ap 06EB  
                               vfprintf@fp 0741                           FLASH_write@latch 06A4  
                  ??_OSCILLATOR_Initialize 0000                                ??__Umul8_16 06A2  
                             pnum$maintext 0026                           __size_of___aodiv 0105  
                         __size_of___aomod 00ED                           __size_of___fldiv 01B4  
                         __size_of___awdiv 0060                       _I2C_DO_SEND_ADR_READ 0000  
                         __size_of___awmod 0054                           __size_of___flmul 0257  
                         __size_of___fltol 0075                           __size_of___lldiv 005B  
                         __size_of___llmod 004B                                 ?_vfpfcnvrt 06D9  
                         __size_of___lwdiv 003D                            ___aodiv@divisor 06A0  
                          ___aodiv@counter 06B1                           __size_of__unlock 0009  
                               sprintf@fmt 0746                                   ___xxtofl 222B  
                 i1HEFLASH_writeBlock@data 0076                            ___lwdiv@divisor 06AF  
                              _OLED_Update 2E2F                   i1HEFLASH_writeBlock@radd 007A  
                          ___lwdiv@counter 06B4                                   __ptext10 2ABA  
                                 __ptext11 249E                                   __ptext20 100A  
                                 __ptext12 258B                                   __ptext21 2BB5  
                                 __ptext13 2B93                                   __ptext30 1800  
                                 __ptext22 21A0                                   __ptext14 222B  
                                 __ptext31 2FA0                                   __ptext23 1A5C  
                                 __ptext15 2D0C                                   __ptext40 29D5  
                                 __ptext32 20BA                                   __ptext24 2DDB  
                                 __ptext16 2C2C                                   __ptext41 2A25  
                                 __ptext33 1802                                   __ptext25 18AB  
                                 __ptext17 2D90                                   __ptext50 2B13  
                                 __ptext42 1818                                   __ptext34 29A9  
                                 __ptext26 1DD8                                   __ptext18 2E8A  
                                 __ptext51 2059                                   __ptext43 2E2F  
                                 __ptext35 2A86                                   __ptext27 2B33  
                                 __ptext19 212B                                   __ptext60 2AF3  
                                 __ptext52 2C02                                   __ptext44 2A57  
                                 __ptext36 1001                                   __ptext28 22D8  
                                 __ptext61 2A6D                                   __ptext53 2AD6  
                                 __ptext45 29B4                                   __ptext37 2C97  
                                 __ptext29 0002                                   __ptext62 29C3  
                                 __ptext54 29CC                                   __ptext46 2A18  
                                 __ptext38 29BB                                   __ptext55 2CCF  
                                 __ptext47 2A0B                                   __ptext39 29DE  
                                 __ptext56 2A42                                   __ptext48 29AD  
                                 __ptext57 29E7                                   __ptext49 2D49  
                                 __ptext59 2F42                               _SSP1CON1bits 0215  
                             _SSP1CON2bits 0216                                 _FLASH_read 2A42  
                       FLASH_erase@address 06A0                           __size_of_sprintf 002B  
                            __size_of_main FBEE                              __size_of_dtoa 0170  
             _TMR0_DefaultInterruptHandler 0000                            OLED_Write@cbyte 06C5  
                              ??_clearText 06A2                      __size_of_UpdateScreen 01B1  
                          OLED_Write@value 06BA                                   int$flags 007E  
                                 _vfprintf 2C60                               _SSP1STATbits 0214  
                         ___aomod@dividend 06A8                                 _INTCONbits 000B  
             __end_ofi1_HEFLASH_writeBlock 2FA0                            FLASH_write@data 06A2  
                           __pstringtext10 306D                             __pstringtext11 3075  
                           __pstringtext12 307D                             __pstringtext13 3082  
                           __pstringtext14 3086                             __pstringtext15 0000  
                          FLASH_write@temp 06A5                    __size_of_WDT_Initialize 0004  
                                 intlevel1 0000                                  sprintf@ap 074E  
                             _UpdateScreen 18AB                               _DAC1CON0bits 058E  
                               _PMCON1bits 0195                                 _OLED_Write 1DD8  
                         ___lldiv@dividend 06B0                    ?_PIN_MANAGER_Initialize 0070  
                        __CFG_CLKOUTEN$OFF 0000                        _I2C_DO_SEND_RESTART 0000  
                            UpdateScreen@i 06D9                         OLED_Write@font_idx 06CB  
                         ??_ADC_Initialize 0000                             OLED_Write@cbit 06C9  
                           OLED_Write@temp 06C3                    _DAC1_Load10bitInputData 29E7  
                     i1FLASH_write@address 0070                               ?_FLASH_erase 06A0  
                          ___aomod@divisor 06A0                                ??_vfpfcnvrt 06DB  
                          ___aomod@counter 06B1                               ?_FLASH_write 06A0  
                            __pstringtext1 3000                              __pstringtext2 012A  
                            __pstringtext3 3020                              __pstringtext4 302C  
                            __pstringtext5 3038                              __pstringtext6 3043  
                            __pstringtext7 304E                              __pstringtext8 3059  
                            __pstringtext9 3064                     __Umul8_16@multiplicand 06A0  
                               _OPTION_REG 0097                                   sprintf@f 074F  
                                 sprintf@s 0744                           ___lldiv@quotient 06B5  
                          _TMR0_Initialize 2A86                              OLED_Write@cnt 06D3  
                              ?_FLASH_read 06A0                               ___aodiv@sign 06B2  
           __end_of_PIN_MANAGER_Initialize 2CCF                           ??_OLED_DrawPixel 06AE  
                       i1FLASH_write@latch 0074                       __Umul8_16@multiplier 06A8  
                             ___aomod@sign 06B2                          __Umul8_16@product 06A4  
